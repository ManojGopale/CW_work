   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l4xx_hal_rcc_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RCCEx_PLLSAI1_Config,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	RCCEx_PLLSAI1_Config:
  24              	.LVL0:
  25              	.LFB334:
  26              		.file 1 ".././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c"
   1:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
   2:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   ******************************************************************************
   3:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @file    stm32l4xx_hal_rcc_ex.c
   4:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @author  MCD Application Team
   5:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief   Extended RCC HAL module driver.
   6:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *          This file provides firmware functions to manage the following
   7:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *          functionalities RCC extended peripheral:
   8:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *           + Extended Peripheral Control functions
   9:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *           + Extended Clock management functions
  10:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *           + Extended Clock Recovery System Control functions
  11:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
  12:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   ******************************************************************************
  13:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @attention
  14:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
  15:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  16:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
  17:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  18:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * are permitted provided that the following conditions are met:
  19:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  20:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *      this list of conditions and the following disclaimer.
  21:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  22:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  23:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *      and/or other materials provided with the distribution.
  24:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  25:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *      may be used to endorse or promote products derived from this software
  26:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *      without specific prior written permission.
  27:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
  28:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  29:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  30:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  31:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  32:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  34:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  36:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  37:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  38:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
  39:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   ******************************************************************************
  40:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
  41:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  42:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /* Includes ------------------------------------------------------------------*/
  43:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #include "stm32l4xx_hal.h"
  44:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  45:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  46:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @{
  47:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
  48:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  49:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @defgroup RCCEx RCCEx
  50:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief RCC Extended HAL module driver
  51:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @{
  52:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
  53:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  54:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #ifdef HAL_RCC_MODULE_ENABLED
  55:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  56:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  57:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /* Private defines -----------------------------------------------------------*/
  58:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Private_Constants RCCEx Private Constants
  59:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  * @{
  60:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  */
  61:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define PLLSAI1_TIMEOUT_VALUE     2U    /* 2 ms (minimum Tick + 1) */
  62:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define PLLSAI2_TIMEOUT_VALUE     2U    /* 2 ms (minimum Tick + 1) */
  63:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define PLL_TIMEOUT_VALUE         2U    /* 2 ms (minimum Tick + 1) */
  64:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  65:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define DIVIDER_P_UPDATE          0U
  66:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define DIVIDER_Q_UPDATE          1U
  67:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define DIVIDER_R_UPDATE          2U
  68:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  69:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define __LSCO_CLK_ENABLE()       __HAL_RCC_GPIOA_CLK_ENABLE()
  70:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define LSCO_GPIO_PORT            GPIOA
  71:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #define LSCO_PIN                  GPIO_PIN_2
  72:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
  73:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @}
  74:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
  75:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  76:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /* Private macros ------------------------------------------------------------*/
  77:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /* Private variables ---------------------------------------------------------*/
  78:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  79:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Private_Functions RCCEx Private Functions
  80:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  * @{
  81:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  */
  82:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
  83:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  84:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *PllSai1, uint32_t Divider);
  85:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  86:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
  87:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  88:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2_SUPPORT)
  89:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  90:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** static HAL_StatusTypeDef RCCEx_PLLSAI2_Config(RCC_PLLSAI2InitTypeDef *PllSai2, uint32_t Divider);
  91:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  92:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2_SUPPORT */
  93:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  94:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI1)
  95:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  96:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** static uint32_t RCCEx_GetSAIxPeriphCLKFreq(uint32_t PeriphClk, uint32_t InputFrequency);
  97:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
  98:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI1 */
  99:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
 100:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @}
 101:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
 102:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 103:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /* Exported functions --------------------------------------------------------*/
 104:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 105:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions RCCEx Exported Functions
 106:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @{
 107:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
 108:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 109:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group1 Extended Peripheral Control functions
 110:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  *  @brief  Extended Peripheral Control functions
 111:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  *
 112:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** @verbatim
 113:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  ===============================================================================
 114:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                 ##### Extended Peripheral Control functions  #####
 115:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  ===============================================================================
 116:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     [..]
 117:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 118:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     frequencies.
 119:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     [..]
 120:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     (@) Important note: Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to
 121:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         select the RTC clock source; in this case the Backup domain will be reset in
 122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         order to modify the RTC Clock source, as consequence RTC registers (including
 123:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         the backup registers) are set to their reset values.
 124:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** @endverbatim
 126:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @{
 127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
 128:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
 129:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Initialize the RCC extended peripherals clocks according to the specified
 130:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         parameters in the RCC_PeriphCLKInitTypeDef.
 131:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit  pointer to an RCC_PeriphCLKInitTypeDef structure that
 132:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         contains a field PeriphClockSelection which can be a combination of the following value
 133:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RTC  RTC peripheral clock
 134:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_ADC  ADC peripheral clock
 135:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L462xx
 136:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1  DFSDM1 peripheral clock (only for devices with DFSDM
 137:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 138:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L486xx
 139:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1  DFSDM1 peripheral clock (only for devices with DFSDM
 140:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 141:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
 142:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1  DFSDM1 peripheral clock (only for devices with DFSDM
 143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C1  I2C1 peripheral clock
 145:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C2  I2C2 peripheral clock
 146:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C3  I2C3 peripheral clock
 147:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L462xx
 148:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C4  I2C4 peripheral clock (only for devices with I2C4)
 149:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 150:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
 151:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C4  I2C4 peripheral clock (only for devices with I2C4)
 152:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 153:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4S9xx
 154:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C4  I2C4 peripheral clock (only for devices with I2C4)
 155:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 156:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPTIM1  LPTIM1 peripheral clock
 157:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPTIM2  LPTIM2 peripheral clock
 158:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPUART1  LPUART1 peripheral clock
 159:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RNG  RNG peripheral clock
 160:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SAI1  SAI1 peripheral clock (only for devices with SAI1)
 161:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L486xx
 162:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SAI2  SAI2 peripheral clock (only for devices with SAI2)
 163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 164:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
 165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SAI2  SAI2 peripheral clock (only for devices with SAI2)
 166:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4S9xx
 168:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SAI2  SAI2 peripheral clock (only for devices with SAI2)
 169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 170:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SDMMC1  SDMMC1 peripheral clock
 171:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L443xx
 172:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SWPMI1  SWPMI1 peripheral clock (only for devices with SWPMI
 173:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 174:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L486xx
 175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SWPMI1  SWPMI1 peripheral clock (only for devices with SWPMI
 176:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 177:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
 178:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SWPMI1  SWPMI1 peripheral clock (only for devices with SWPMI
 179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 180:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART1  USART1 peripheral clock
 181:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART1 peripheral clock
 182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART3  USART1 peripheral clock
 183:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L462xx
 184:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART4  USART1 peripheral clock (only for devices with UART4)
 185:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 186:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L486xx
 187:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART4  USART1 peripheral clock (only for devices with UART4)
 188:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART5  USART1 peripheral clock (only for devices with UART5)
 189:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB  USB peripheral clock (only for devices with USB)
 190:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 191:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
 192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART4  USART1 peripheral clock (only for devices with UART4)
 193:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART5  USART1 peripheral clock (only for devices with UART5)
 194:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB  USB peripheral clock (only for devices with USB)
 195:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 196:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4S9xx
 197:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART4  USART1 peripheral clock (only for devices with UART4)
 198:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART5  USART1 peripheral clock (only for devices with UART5)
 199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB  USB peripheral clock (only for devices with USB)
 200:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1  DFSDM1 peripheral kernel clock (only for devices wit
 201:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1AUDIO  DFSDM1 peripheral audio clock (only for devices
 202:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LTDC  LTDC peripheral clock (only for devices with LTDC)
 203:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DSI  DSI peripheral clock (only for devices with DSI)
 204:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_OSPI  OctoSPI peripheral clock (only for devices with OctoSP
 205:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
 206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
 207:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to select
 208:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         the RTC clock source: in this case the access to Backup domain is enabled.
 209:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
 210:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval HAL status
 211:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
 212:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
 214:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tmpregister, tickstart;     /* no init needed */
 215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 216:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 217:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check the parameters */
 219:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI1)
 222:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 223:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- SAI1 clock source configuration ---------------------*/
 224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 225:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 226:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 227:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SAI1CLK(PeriphClkInit->Sai1ClockSelection));
 228:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     switch(PeriphClkInit->Sai1ClockSelection)
 230:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 231:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
 232:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable SAI Clock output generated form System PLL . */
 233:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 234:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 235:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
 236:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI2CLK);
 237:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 238:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI1 clock source config set later after clock selection check */
 239:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 240:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 241:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI1CLKSOURCE_PLLSAI1:  /* PLLSAI1 is used as clock source for SAI1*/
 242:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI1 input clock, parameters M, N & P configuration and clock output (PLLSAI1ClockOut) 
 243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 244:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI1 clock source config set later after clock selection check */
 245:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 246:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 247:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 248:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 249:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI1CLKSOURCE_PLLSAI2:  /* PLLSAI2 is used as clock source for SAI1*/
 250:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI2 input clock, parameters M, N & P configuration clock output (PLLSAI2ClockOut) */
 251:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 252:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI1 clock source config set later after clock selection check */
 253:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 254:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 255:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 256:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI1CLKSOURCE_PIN:      /* External clock is used as source of SAI1 clock*/
 258:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 259:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI1CLKSOURCE_HSI:      /* HSI is used as source of SAI1 clock*/
 260:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
 261:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI1 clock source config set later after clock selection check */
 262:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 263:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 264:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     default:
 265:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = HAL_ERROR;
 266:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 267:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 268:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(ret == HAL_OK)
 270:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 271:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Set the source of SAI1 clock*/
 272:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 273:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 274:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else
 275:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 276:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* set overall return value */
 277:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = ret;
 278:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 280:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 281:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI1 */
 282:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 283:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI2)
 284:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- SAI2 clock source configuration ---------------------*/
 286:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 287:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 288:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SAI2CLK(PeriphClkInit->Sai2ClockSelection));
 290:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     switch(PeriphClkInit->Sai2ClockSelection)
 292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 293:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI2CLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
 294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable SAI Clock output generated form System PLL . */
 295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI2 clock source config set later after clock selection check */
 297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 298:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI2CLKSOURCE_PLLSAI1: /* PLLSAI1 is used as clock source for SAI2*/
 300:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI1 input clock, parameters M, N & P configuration and clock output (PLLSAI1ClockOut) 
 301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 302:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI2 clock source config set later after clock selection check */
 303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 304:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 305:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI2CLKSOURCE_PLLSAI2:  /* PLLSAI2 is used as clock source for SAI2*/
 306:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI2 input clock, parameters M, N & P configuration and clock output (PLLSAI2ClockOut) 
 307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 308:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI2 clock source config set later after clock selection check */
 309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 311:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI2CLKSOURCE_PIN:      /* External clock is used as source of SAI2 clock*/
 312:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 313:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_SAI2CLKSOURCE_HSI:      /* HSI is used as source of SAI2 clock*/
 314:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
 315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI2 clock source config set later after clock selection check */
 316:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 318:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     default:
 319:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = HAL_ERROR;
 320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 321:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 323:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(ret == HAL_OK)
 324:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Set the source of SAI2 clock*/
 326:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 327:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else
 329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 330:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* set overall return value */
 331:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = ret;
 332:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 333:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 334:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI2 */
 335:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 336:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- RTC clock source configuration ----------------------*/
 337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     FlagStatus       pwrclkchanged = RESET;
 340:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 341:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check for RTC Parameters used to output RTCCLK */
 342:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 343:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Enable Power Clock */
 345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
 349:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 350:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 351:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Enable write access to Backup domain */
 352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     SET_BIT(PWR->CR1, PWR_CR1_DBP);
 353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Wait for Backup domain Write protection disable */
 355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 356:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 360:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         ret = HAL_TIMEOUT;
 362:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
 363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 364:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 366:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(ret == HAL_OK)
 367:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 368:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
 369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 370:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection
 372:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 373:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Store the content of BDCR register before the reset of Backup Domain */
 374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 375:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* RTC Clock selection can be changed only if the Backup Domain is reset */
 376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         __HAL_RCC_BACKUPRESET_FORCE();
 377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         __HAL_RCC_BACKUPRESET_RELEASE();
 378:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Restore the Content of BDCR register */
 379:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         RCC->BDCR = tmpregister;
 380:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 381:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 382:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
 383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 385:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get Start Tick*/
 386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
 387:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 388:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
 389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 393:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             ret = HAL_TIMEOUT;
 394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             break;
 395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 396:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
 397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 398:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 399:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(ret == HAL_OK)
 400:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Apply new RTC clock source selection */
 402:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 403:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else
 405:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* set overall return value */
 407:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = ret;
 408:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else
 411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 412:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* set overall return value */
 413:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = ret;
 414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 415:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Restore clock configuration if changed */
 417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(pwrclkchanged == SET)
 418:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 420:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 422:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 423:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- USART1 clock source configuration -------------------*/
 424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 425:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
 428:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the USART1 clock source */
 430:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 433:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- USART2 clock source configuration -------------------*/
 434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 437:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
 438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 439:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the USART2 clock source */
 440:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 441:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 442:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(USART3)
 444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 445:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- USART3 clock source configuration -------------------*/
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 448:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
 450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 451:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the USART3 clock source */
 452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 453:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 454:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 455:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USART3 */
 456:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(UART4)
 458:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 459:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- UART4 clock source configuration --------------------*/
 460:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 461:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 462:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 463:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));
 464:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 465:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the UART4 clock source */
 466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 468:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* UART4 */
 470:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 471:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(UART5)
 472:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 473:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- UART5 clock source configuration --------------------*/
 474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 475:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 476:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 477:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));
 478:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the UART5 clock source */
 480:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 481:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 482:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 483:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* UART5 */
 484:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 485:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- LPUART1 clock source configuration ------------------*/
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 487:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 488:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));
 490:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 491:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the LPUAR1 clock source */
 492:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 493:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 494:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 495:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- LPTIM1 clock source configuration -------------------*/
 496:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 497:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));
 499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 500:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 501:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 502:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- LPTIM2 clock source configuration -------------------*/
 503:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPTIM2CLK(PeriphClkInit->Lptim2ClockSelection));
 506:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 507:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 509:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- I2C1 clock source configuration ---------------------*/
 510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 512:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 513:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
 514:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 515:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the I2C1 clock source */
 516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 517:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 518:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 519:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(I2C2)
 520:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 521:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- I2C2 clock source configuration ---------------------*/
 522:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 523:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 524:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 525:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));
 526:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the I2C2 clock source */
 528:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 529:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 531:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C2 */
 532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 533:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- I2C3 clock source configuration ---------------------*/
 534:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 535:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 536:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 537:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));
 538:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 539:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the I2C3 clock source */
 540:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 541:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 542:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 543:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(I2C4)
 544:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 545:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- I2C4 clock source configuration ---------------------*/
 546:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 547:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 548:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 549:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));
 550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 551:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the I2C4 clock source */
 552:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 553:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 554:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 555:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C4 */
 556:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 557:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(USB_OTG_FS) || defined(USB)
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 559:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- USB clock source configuration ----------------------*/
 560:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 561:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 562:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
 563:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 564:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 565:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 566:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable PLL48M1CLK output */
 568:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 570:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else
 571:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 572:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
 573:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLLSAI1)
 574:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 575:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut
 576:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 577:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(ret != HAL_OK)
 579:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 580:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* set overall return value */
 581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           status = ret;
 582:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
 583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 584:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
 585:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 586:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 587:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 588:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USB_OTG_FS || USB */
 589:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SDMMC1)
 591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- SDMMC1 clock source configuration -------------------*/
 593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == (RCC_PERIPHCLK_SDMMC1))
 594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 595:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));
 596:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 598:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLL)   /* PLL "Q" ? */
 599:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 600:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable PLL48M1CLK output */
 601:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 602:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_SDMMCSEL)
 604:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLP) /* PLL "P" ? */
 605:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 606:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable PLLSAI3CLK output */
 607:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 608:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 609:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 610:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLSAI1)
 611:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 612:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) 
 613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 614:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(ret != HAL_OK)
 616:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 617:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* set overall return value */
 618:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = ret;
 619:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 620:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 621:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else
 622:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* nothing to do */
 624:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 625:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 627:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SDMMC1 */
 628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 629:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- RNG clock source configuration ----------------------*/
 630:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RNGCLKSOURCE(PeriphClkInit->RngClockSelection));
 633:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 636:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 637:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable PLL48M1CLK output */
 638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 639:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 640:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
 641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLLSAI1)
 642:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 643:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) 
 644:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 645:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(ret != HAL_OK)
 647:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* set overall return value */
 649:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = ret;
 650:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 651:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 652:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
 653:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else
 654:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 655:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* nothing to do */
 656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 658:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 659:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- ADC clock source configuration ----------------------*/
 660:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if !defined(STM32L412xx) && !defined(STM32L422xx)
 661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 663:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 664:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));
 665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the ADC interface clock source */
 667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 669:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
 670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 671:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 672:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI1 input clock, parameters M, N & R configuration and clock output (PLLSAI1ClockOut) 
 673:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_R_UPDATE);
 674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 675:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(ret != HAL_OK)
 676:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 677:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* set overall return value */
 678:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = ret;
 679:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 681:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
 682:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 683:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 684:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 685:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI2)
 686:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 687:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI2 input clock, parameters M, N & R configuration and clock output (PLLSAI2ClockOut) 
 688:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_R_UPDATE);
 689:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(ret != HAL_OK)
 691:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 692:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* set overall return value */
 693:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = ret;
 694:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 695:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 696:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 697:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx || STM32L496xx ||
 698:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 699:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* !STM32L412xx && !STM32L422xx */
 701:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 702:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SWPMI1)
 703:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 704:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- SWPMI1 clock source configuration -------------------*/
 705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 706:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 708:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));
 709:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the SWPMI1 clock source */
 711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 712:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 714:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SWPMI1 */
 715:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 716:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(DFSDM1_Filter0)
 717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 718:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- DFSDM1 clock source configuration -------------------*/
 719:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 721:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 722:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));
 723:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 724:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the DFSDM1 interface clock source */
 725:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 726:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 729:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- DFSDM1 audio clock source configuration -------------*/
 730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1AUDIO) == RCC_PERIPHCLK_DFSDM1AUD
 731:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 732:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 733:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_DFSDM1AUDIOCLKSOURCE(PeriphClkInit->Dfsdm1AudioClockSelection));
 734:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 735:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the DFSDM1 interface audio clock source */
 736:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
 737:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 738:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 739:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
 740:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 741:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* DFSDM1_Filter0 */
 742:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 743:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(LTDC)
 744:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 745:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- LTDC clock source configuration --------------------*/
 746:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 747:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 748:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LTDCCLKSOURCE(PeriphClkInit->LtdcClockSelection));
 750:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 751:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Disable the PLLSAI2 */
 752:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI2_DISABLE();
 753:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 754:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Get Start Tick*/
 755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
 756:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 757:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI2 is ready */
 758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 759:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 760:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 762:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         ret = HAL_TIMEOUT;
 763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
 764:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 765:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 766:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 767:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(ret == HAL_OK)
 768:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 769:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Configure the LTDC clock source */
 770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_LTDC_CONFIG(PeriphClkInit->LtdcClockSelection);
 771:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 772:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI2 input clock, parameters M, N & R configuration and clock output (PLLSAI2ClockOut) 
 773:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_R_UPDATE);
 774:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 775:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 776:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(ret != HAL_OK)
 777:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 778:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* set overall return value */
 779:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = ret;
 780:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 781:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 782:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 783:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* LTDC */
 784:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 785:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(DSI)
 786:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 787:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- DSI clock source configuration ---------------------*/
 788:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 789:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 790:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 791:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_DSICLKSOURCE(PeriphClkInit->DsiClockSelection));
 792:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 793:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the DSI clock source */
 794:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_DSI_CONFIG(PeriphClkInit->DsiClockSelection);
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 796:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(PeriphClkInit->DsiClockSelection == RCC_DSICLKSOURCE_PLLSAI2)
 797:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 798:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* PLLSAI2 input clock, parameters M, N & Q configuration and clock output (PLLSAI2ClockOut) 
 799:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_Q_UPDATE);
 800:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 801:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(ret != HAL_OK)
 802:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 803:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* set overall return value */
 804:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = ret;
 805:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 806:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 808:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 809:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* DSI */
 810:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 811:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(OCTOSPI1) || defined(OCTOSPI2)
 812:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 813:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /*-------------------------- OctoSPIx clock source configuration ----------------*/
 814:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 815:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 816:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check the parameters */
 817:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     assert_param(IS_RCC_OSPICLKSOURCE(PeriphClkInit->OspiClockSelection));
 818:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 819:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the OctoSPI clock source */
 820:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 822:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(PeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL)
 823:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 824:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable PLL48M1CLK output */
 825:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 826:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 827:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 828:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 829:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* OCTOSPI1 || OCTOSPI2 */
 830:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 831:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return status;
 832:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 833:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 834:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
 835:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal RCC configuration registers.
 836:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  PeriphClkInit  pointer to an RCC_PeriphCLKInitTypeDef structure that
 837:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         returns the configuration information for the Extended Peripherals
 838:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         clocks(SAI1, SAI2, LPTIM1, LPTIM2, I2C1, I2C2, I2C3, I2C4, LPUART,
 839:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         USART1, USART2, USART3, UART4, UART5, RTC, ADCx, DFSDMx, SWPMI1, USB, SDMMC1 and RNG).
 840:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
 841:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
 842:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 843:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
 844:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
 845:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 846:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
 847:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 848:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 849:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 850:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 |             
 851:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                                                 RCC_PERIPHCLK_RNG    |             
 852:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 853:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 854:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L431xx)
 855:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 856:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 857:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 858:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 859:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 860:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 861:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 862:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L432xx) || defined(STM32L442xx)
 863:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 864:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 |             
 865:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   |             
 866:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 867:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                                                 RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 868:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 869:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 870:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L433xx) || defined(STM32L443xx)
 871:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 872:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 874:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 875:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 876:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 877:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 878:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L451xx)
 879:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 880:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 881:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 882:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 883:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 884:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 885:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 886:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L452xx) || defined(STM32L462xx)
 887:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 888:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 889:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 890:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 891:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 892:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 893:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 894:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L471xx)
 895:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 896:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 897:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 898:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 899:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 900:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 901:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 902:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx)
 903:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 904:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 905:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 906:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 907:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 908:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 909:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 910:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L496xx) || defined(STM32L4A6xx)
 911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 912:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 913:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 914:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 915:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 916:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_RTC ;
 917:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 918:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L4R5xx) || defined(STM32L4S5xx)
 919:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 920:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 921:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 922:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 923:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 924:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_DFSDM1AUDIO | RCC_PERIPHCLK_RTC | RCC_PERIPHC
 925:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 926:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L4R7xx) || defined(STM32L4S7xx)
 927:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 928:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 929:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 930:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 931:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 932:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_DFSDM1AUDIO | RCC_PERIPHCLK_RTC | RCC_PERIPHC
 933:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 934:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(STM32L4R9xx) || defined(STM32L4S9xx)
 935:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 936:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1  | RCC_PERIPHCLK_USART2 | RCC_PERIPHCL
 937:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 938:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPTIM1  | RCC_PERIPHCLK_LPTIM2 | RCC_PERIPHCL
 939:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_SDMMC1  | RCC_PERIPHCLK_RNG    | RCC_PERIPHCL
 940:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_DFSDM1AUDIO | RCC_PERIPHCLK_RTC | RCC_PERIPHC
 941:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 942:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L431xx */
 943:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 944:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
 945:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 946:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the PLLSAI1 Clock configuration -----------------------------------------------*/
 947:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1Source = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC) >> RCC_PLLCFGR_
 949:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
 950:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1M = (READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1M) >> RCC_PL
 951:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
 952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1M = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_P
 953:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
 954:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1N = READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1N) >> RCC_PLL
 955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1P = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1P) >> RCC_P
 956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1Q = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q) >> RCC_P
 957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1R = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >> RCC_P
 958:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
 960:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 961:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 962:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 963:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the PLLSAI2 Clock configuration -----------------------------------------------*/
 964:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 965:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI2.PLLSAI2Source = PeriphClkInit->PLLSAI1.PLLSAI1Source;
 966:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
 967:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI2.PLLSAI2M = (READ_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2M) >> RCC_PL
 968:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
 969:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI2.PLLSAI2M = PeriphClkInit->PLLSAI1.PLLSAI1M;
 970:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
 971:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI2.PLLSAI2N = READ_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2N) >> RCC_PLL
 972:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI2.PLLSAI2P = ((READ_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2P) >> RCC_P
 973:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2Q_DIV_SUPPORT)
 974:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI2.PLLSAI2Q = ((READ_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2Q) >> RCC_P
 975:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2Q_DIV_SUPPORT */
 976:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI2.PLLSAI2R = ((READ_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2R)>> RCC_PL
 977:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 978:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 979:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 980:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the USART1 clock source ---------------------------------------------*/
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Usart1ClockSelection  = __HAL_RCC_GET_USART1_SOURCE();
 982:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the USART2 clock source ---------------------------------------------*/
 983:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Usart2ClockSelection  = __HAL_RCC_GET_USART2_SOURCE();
 984:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 985:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(USART3)
 986:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the USART3 clock source ---------------------------------------------*/
 987:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Usart3ClockSelection  = __HAL_RCC_GET_USART3_SOURCE();
 988:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USART3 */
 989:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 990:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(UART4)
 991:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the UART4 clock source ----------------------------------------------*/
 992:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Uart4ClockSelection   = __HAL_RCC_GET_UART4_SOURCE();
 993:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* UART4 */
 994:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 995:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(UART5)
 996:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the UART5 clock source ----------------------------------------------*/
 997:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Uart5ClockSelection   = __HAL_RCC_GET_UART5_SOURCE();
 998:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* UART5 */
 999:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1000:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the LPUART1 clock source --------------------------------------------*/
1001:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Lpuart1ClockSelection = __HAL_RCC_GET_LPUART1_SOURCE();
1002:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1003:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the I2C1 clock source -----------------------------------------------*/
1004:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->I2c1ClockSelection    = __HAL_RCC_GET_I2C1_SOURCE();
1005:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1006:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(I2C2)
1007:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****    /* Get the I2C2 clock source ----------------------------------------------*/
1008:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->I2c2ClockSelection    = __HAL_RCC_GET_I2C2_SOURCE();
1009:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C2 */
1010:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1011:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the I2C3 clock source -----------------------------------------------*/
1012:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->I2c3ClockSelection    = __HAL_RCC_GET_I2C3_SOURCE();
1013:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1014:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(I2C4)
1015:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the I2C4 clock source -----------------------------------------------*/
1016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->I2c4ClockSelection    = __HAL_RCC_GET_I2C4_SOURCE();
1017:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C4 */
1018:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1019:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the LPTIM1 clock source ---------------------------------------------*/
1020:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Lptim1ClockSelection  = __HAL_RCC_GET_LPTIM1_SOURCE();
1021:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1022:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the LPTIM2 clock source ---------------------------------------------*/
1023:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Lptim2ClockSelection  = __HAL_RCC_GET_LPTIM2_SOURCE();
1024:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1025:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI1)
1026:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the SAI1 clock source -----------------------------------------------*/
1027:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Sai1ClockSelection    = __HAL_RCC_GET_SAI1_SOURCE();
1028:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI1 */
1029:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1030:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI2)
1031:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the SAI2 clock source -----------------------------------------------*/
1032:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Sai2ClockSelection    = __HAL_RCC_GET_SAI2_SOURCE();
1033:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI2 */
1034:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1035:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the RTC clock source ------------------------------------------------*/
1036:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection     = __HAL_RCC_GET_RTC_SOURCE();
1037:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1038:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(USB_OTG_FS) || defined(USB)
1039:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the USB clock source ------------------------------------------------*/
1040:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->UsbClockSelection   = __HAL_RCC_GET_USB_SOURCE();
1041:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USB_OTG_FS || USB */
1042:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1043:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SDMMC1)
1044:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the SDMMC1 clock source ---------------------------------------------*/
1045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Sdmmc1ClockSelection   = __HAL_RCC_GET_SDMMC1_SOURCE();
1046:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SDMMC1 */
1047:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the RNG clock source ------------------------------------------------*/
1049:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->RngClockSelection   = __HAL_RCC_GET_RNG_SOURCE();
1050:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1051:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if !defined(STM32L412xx) && !defined(STM32L422xx)
1052:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the ADC clock source ------------------------------------------------*/
1053:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->AdcClockSelection     = __HAL_RCC_GET_ADC_SOURCE();
1054:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* !STM32L412xx && !STM32L422xx */
1055:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1056:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SWPMI1)
1057:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the SWPMI1 clock source ---------------------------------------------*/
1058:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Swpmi1ClockSelection  = __HAL_RCC_GET_SWPMI1_SOURCE();
1059:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SWPMI1 */
1060:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1061:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(DFSDM1_Filter0)
1062:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the DFSDM1 clock source ---------------------------------------------*/
1063:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Dfsdm1ClockSelection  = __HAL_RCC_GET_DFSDM1_SOURCE();
1064:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1065:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1066:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the DFSDM1 audio clock source ---------------------------------------*/
1067:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->Dfsdm1AudioClockSelection  = __HAL_RCC_GET_DFSDM1AUDIO_SOURCE();
1068:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
1069:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* DFSDM1_Filter0 */
1070:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1071:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(LTDC)
1072:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the LTDC clock source -----------------------------------------------*/
1073:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->LtdcClockSelection = __HAL_RCC_GET_LTDC_SOURCE();
1074:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* LTDC */
1075:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1076:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(DSI)
1077:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the DSI clock source ------------------------------------------------*/
1078:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->DsiClockSelection = __HAL_RCC_GET_DSI_SOURCE();
1079:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* DSI */
1080:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1081:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(OCTOSPI1) || defined(OCTOSPI2)
1082:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the OctoSPIclock source --------------------------------------------*/
1083:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->OspiClockSelection = __HAL_RCC_GET_OSPI_SOURCE();
1084:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* OCTOSPI1 || OCTOSPI2 */
1085:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
1086:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1087:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
1088:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency for peripherals with clock source from PLLSAIs
1089:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock identifier not managed by this API
1090:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  PeriphClk  Peripheral clock identifier
1091:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
1092:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RTC  RTC peripheral clock
1093:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_ADC  ADC peripheral clock
1094:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L462xx
1095:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1  DFSDM1 peripheral clock (only for devices with DFSDM
1096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1097:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L486xx
1098:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1  DFSDM1 peripheral clock (only for devices with DFSDM
1099:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1100:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
1101:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1  DFSDM1 peripheral clock (only for devices with DFSDM
1102:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1103:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C1  I2C1 peripheral clock
1104:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C2  I2C2 peripheral clock
1105:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C3  I2C3 peripheral clock
1106:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L462xx
1107:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C4  I2C4 peripheral clock (only for devices with I2C4)
1108:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1109:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
1110:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C4  I2C4 peripheral clock (only for devices with I2C4)
1111:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1112:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4S9xx
1113:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C4  I2C4 peripheral clock (only for devices with I2C4)
1114:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1115:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPTIM1  LPTIM1 peripheral clock
1116:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPTIM2  LPTIM2 peripheral clock
1117:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPUART1  LPUART1 peripheral clock
1118:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RNG  RNG peripheral clock
1119:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SAI1  SAI1 peripheral clock (only for devices with SAI1)
1120:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L486xx
1121:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SAI2  SAI2 peripheral clock (only for devices with SAI2)
1122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1123:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
1124:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SAI2  SAI2 peripheral clock (only for devices with SAI2)
1125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1126:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4S9xx
1127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SAI2  SAI2 peripheral clock (only for devices with SAI2)
1128:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1129:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SDMMC1  SDMMC1 peripheral clock
1130:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L443xx
1131:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SWPMI1  SWPMI1 peripheral clock (only for devices with SWPMI
1132:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1133:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L486xx
1134:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SWPMI1  SWPMI1 peripheral clock (only for devices with SWPMI
1135:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1136:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
1137:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_SWPMI1  SWPMI1 peripheral clock (only for devices with SWPMI
1138:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1139:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART1  USART1 peripheral clock
1140:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART1 peripheral clock
1141:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART3  USART1 peripheral clock
1142:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L462xx
1143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART4  UART4 peripheral clock (only for devices with UART4)
1144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB  USB peripheral clock (only for devices with USB)
1145:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1146:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L486xx
1147:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART4  UART4 peripheral clock (only for devices with UART4)
1148:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART5  UART5 peripheral clock (only for devices with UART5)
1149:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB  USB peripheral clock (only for devices with USB)
1150:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1151:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4A6xx
1152:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART4  UART4 peripheral clock (only for devices with UART4)
1153:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART5  UART5 peripheral clock (only for devices with UART5)
1154:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB  USB peripheral clock (only for devices with USB)
1155:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1156:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @if STM32L4S9xx
1157:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART4  USART1 peripheral clock (only for devices with UART4)
1158:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_UART5  USART1 peripheral clock (only for devices with UART5)
1159:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB  USB peripheral clock (only for devices with USB)
1160:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1  DFSDM1 peripheral kernel clock (only for devices wit
1161:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DFSDM1AUDIO  DFSDM1 peripheral audio clock (only for devices
1162:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LTDC  LTDC peripheral clock (only for devices with LTDC)
1163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_DSI  DSI peripheral clock (only for devices with DSI)
1164:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_OSPI  OctoSPI peripheral clock (only for devices with OctoSP
1165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   @endif
1166:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval Frequency in Hz
1167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
1168:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
1169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
1170:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
1171:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t srcclk, pll_oscsource, pllvco, plln;    /* no init needed */
1172:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SDMMC1) && defined(RCC_CCIPR2_SDMMCSEL)
1173:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t pllp;  /* no init needed */
1174:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
1175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1176:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check the parameters */
1177:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClk));
1178:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(PeriphClk == RCC_PERIPHCLK_RTC)
1180:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
1181:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Get the current RTC source */
1182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     srcclk = __HAL_RCC_GET_RTC_SOURCE();
1183:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1184:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     switch(srcclk)
1185:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
1186:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_RTCCLKSOURCE_LSE:
1187:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Check if LSE is ready */
1188:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1189:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1190:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = LSE_VALUE;
1191:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1193:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_RTCCLKSOURCE_LSI:
1194:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Check if LSI is ready */
1195:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSIRDY))
1196:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1197:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = LSI_VALUE;
1198:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1200:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_RTCCLKSOURCE_HSE_DIV32:
1201:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Check if HSE is ready */
1202:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
1203:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1204:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = HSE_VALUE / 32U;
1205:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1207:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     default:
1208:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* No clock source, frequency default init at 0 */
1209:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1210:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
1211:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
1212:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   else
1213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
1214:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Other external peripheral clock source than RTC */
1215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
1216:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1217:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Compute PLL clock input */
1218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     switch(pll_oscsource)
1219:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_MSI:   /* MSI ? */
1221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIRDY))
1222:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1223:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /*MSI frequency range in HZ*/
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> 4U)];
1225:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1226:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else
1227:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1228:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = 0U;
1229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1230:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1231:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_HSI:   /* HSI ? */
1232:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1233:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1234:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = HSI_VALUE;
1235:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1236:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else
1237:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1238:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = 0U;
1239:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1240:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1241:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_HSE:   /* HSE ? */
1242:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
1243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1244:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = HSE_VALUE;
1245:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1246:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else
1247:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1248:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = 0U;
1249:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1250:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1251:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     default:
1252:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* No source */
1253:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       pllvco = 0U;
1254:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1255:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
1256:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     switch(PeriphClk)
1258:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
1259:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI1)
1260:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1261:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_SAI1:
1262:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       frequency = RCCEx_GetSAIxPeriphCLKFreq(RCC_PERIPHCLK_SAI1, pllvco);
1263:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1264:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1265:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
1266:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1267:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI2)
1268:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_SAI2:
1270:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       frequency = RCCEx_GetSAIxPeriphCLKFreq(RCC_PERIPHCLK_SAI2, pllvco);
1271:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1272:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1273:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
1274:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1275:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(USB_OTG_FS) || defined(USB)
1276:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1277:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_USB:
1278:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USB_OTG_FS || USB */
1280:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1281:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_RNG:
1282:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1283:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SDMMC1) && !defined(RCC_CCIPR2_SDMMCSEL)
1284:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_SDMMC1:
1286:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1287:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SDMMC1 && !RCC_CCIPR2_SDMMCSEL */
1288:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = READ_BIT(RCC->CCIPR, RCC_CCIPR_CLK48SEL);
1290:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1293:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_CCIPR_CLK48SEL:   /* MSI ? */
1294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIRDY))
1295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /*MSI frequency range in HZ*/
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> 4U)];
1298:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1300:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_CCIPR_CLK48SEL_1:  /* PLL ? */
1301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLLRDY))
1302:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             if(HAL_IS_BIT_SET(RCC->PLLCFGR, RCC_PLLCFGR_PLLQEN))
1304:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
1305:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL Source) / PLLM */
1306:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos
1307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL48M1CLK) = f(VCO input) * PLLN / PLLQ */
1308:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLC
1310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
1311:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1312:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1313:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
1314:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_CCIPR_CLK48SEL_0:  /* PLLSAI1 ? */
1315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLLSAI1RDY))
1316:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             if(HAL_IS_BIT_SET(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1QEN))
1318:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
1319:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
1320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* PLLSAI1M exists: apply PLLSAI1M divider for PLLSAI1 output computation */
1321:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLLSAI1 Source) / PLLSAI1M */
1322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               pllvco = (pllvco / ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1M) >> RCC_PLLS
1323:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
1324:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL Source) / PLLM */
1325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos
1326:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
1327:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL48M2CLK) = f(VCOSAI1 input) * PLLSAI1N / PLLSAI1Q */
1328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               plln = READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1N) >> RCC_PLLSAI1CFGR_PLLSAI
1329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q)
1330:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
1331:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1332:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1333:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
1334:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_HSI48_SUPPORT)
1335:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case 0U:
1336:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CRRCR, RCC_CRRCR_HSI48RDY)) /* HSI48 ? */
1337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI48_VALUE;
1339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1340:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1341:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_HSI48_SUPPORT */
1342:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1343:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         } /* switch(srcclk) */
1346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1349:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SDMMC1) && defined(RCC_CCIPR2_SDMMCSEL)
1350:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1351:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_SDMMC1:
1352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->CCIPR2, RCC_CCIPR2_SDMMCSEL))  /* PLL "P" ? */
1354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLLRDY))
1356:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->PLLCFGR, RCC_PLLCFGR_PLLPEN))
1358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* f(PLL Source) / PLLM */
1360:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
1361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* f(PLLSAI3CLK) = f(VCO input) * PLLN / PLLP */
1362:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_Pos;
1364:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             if(pllp == 0U)
1365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
1366:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               if(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) != 0U)
1367:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               {
1368:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                 pllp = 17U;
1369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               }
1370:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               else
1371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               {
1372:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                 pllp = 7U;
1373:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               }
1374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
1375:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / pllp;
1376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1378:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1379:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else  /* 48MHz from PLL "Q" or MSI or PLLSAI1Q or HSI48 */
1380:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1381:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = READ_BIT(RCC->CCIPR, RCC_CCIPR_CLK48SEL);
1382:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1385:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_CCIPR_CLK48SEL:   /* MSI ? */
1386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIRDY))
1387:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1388:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /*MSI frequency range in HZ*/
1389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> 4U)];
1390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_CCIPR_CLK48SEL_1:  /* PLL "Q" ? */
1393:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLLRDY))
1394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             if(HAL_IS_BIT_SET(RCC->PLLCFGR, RCC_PLLCFGR_PLLQEN))
1396:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
1397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL Source) / PLLM */
1398:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos
1399:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL48M1CLK) = f(VCO input) * PLLN / PLLQ */
1400:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLC
1402:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
1403:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1405:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_CCIPR_CLK48SEL_0:  /* PLLSAI1 ? */
1406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLLSAI1RDY))
1407:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1408:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             if(HAL_IS_BIT_SET(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1QEN))
1409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
1410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLLSAI1 Source) / PLLSAI1M */
1411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               pllvco = (pllvco / ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1M) >> RCC_PLLS
1412:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL48M2CLK) = f(VCOSAI1 input) * PLLSAI1N / PLLSAI1Q */
1413:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               plln = READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1N) >> RCC_PLLSAI1CFGR_PLLSAI
1414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q)
1415:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
1416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1418:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case 0U:
1419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CRRCR, RCC_CRRCR_HSI48RDY)) /* HSI48 ? */
1420:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI48_VALUE;
1422:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1423:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1425:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         } /* switch(srcclk) */
1428:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
1430:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SDMMC1 && RCC_CCIPR2_SDMMCSEL */
1432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1433:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_USART1:
1434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current USART1 source */
1436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_USART1_SOURCE();
1437:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1439:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1440:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART1CLKSOURCE_PCLK2:
1441:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK2Freq();
1442:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART1CLKSOURCE_SYSCLK:
1444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1445:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART1CLKSOURCE_HSI:
1447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1448:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1451:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART1CLKSOURCE_LSE:
1453:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1454:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1455:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSE_VALUE;
1456:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1458:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1459:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1460:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1461:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1462:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1463:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1464:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1465:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_USART2:
1467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1468:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current USART2 source */
1469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_USART2_SOURCE();
1470:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1471:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1472:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1473:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART2CLKSOURCE_PCLK1:
1474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1475:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1476:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART2CLKSOURCE_SYSCLK:
1477:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1478:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART2CLKSOURCE_HSI:
1480:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1481:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1482:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1483:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1484:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1485:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART2CLKSOURCE_LSE:
1486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1487:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1488:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSE_VALUE;
1489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1490:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1491:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1492:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1493:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1494:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1495:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1496:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1497:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(USART3)
1500:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1501:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_USART3:
1502:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1503:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current USART3 source */
1504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_USART3_SOURCE();
1505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1506:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1507:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART3CLKSOURCE_PCLK1:
1509:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART3CLKSOURCE_SYSCLK:
1512:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1513:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1514:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART3CLKSOURCE_HSI:
1515:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1517:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1518:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1519:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1520:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_USART3CLKSOURCE_LSE:
1521:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1522:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1523:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSE_VALUE;
1524:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1525:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1526:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1528:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1529:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1531:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1533:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1534:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USART3 */
1535:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1536:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(UART4)
1537:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1538:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_UART4:
1539:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1540:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current UART4 source */
1541:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_UART4_SOURCE();
1542:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1543:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1544:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1545:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_UART4CLKSOURCE_PCLK1:
1546:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1547:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1548:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_UART4CLKSOURCE_SYSCLK:
1549:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1551:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_UART4CLKSOURCE_HSI:
1552:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1553:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1554:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1555:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1556:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1557:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_UART4CLKSOURCE_LSE:
1558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1559:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1560:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSE_VALUE;
1561:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1562:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1563:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1564:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1565:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1566:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1568:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1570:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1571:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* UART4 */
1572:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1573:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(UART5)
1574:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1575:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_UART5:
1576:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1577:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current UART5 source */
1578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_UART5_SOURCE();
1579:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1580:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1582:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_UART5CLKSOURCE_PCLK1:
1583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1584:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1585:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_UART5CLKSOURCE_SYSCLK:
1586:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1587:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1588:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_UART5CLKSOURCE_HSI:
1589:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_UART5CLKSOURCE_LSE:
1595:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1596:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSE_VALUE;
1598:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1599:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1600:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1601:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1602:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1604:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1605:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1606:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1607:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1608:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* UART5 */
1609:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1610:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_LPUART1:
1611:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1612:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current LPUART1 source */
1613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_LPUART1_SOURCE();
1614:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1616:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1617:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPUART1CLKSOURCE_PCLK1:
1618:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1619:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1620:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPUART1CLKSOURCE_SYSCLK:
1621:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1622:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPUART1CLKSOURCE_HSI:
1624:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1625:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1627:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1629:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPUART1CLKSOURCE_LSE:
1630:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSE_VALUE;
1633:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1636:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1637:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1639:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1640:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1642:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1643:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_ADC:
1644:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1645:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_ADC_SOURCE();
1646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1647:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1649:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_ADCCLKSOURCE_SYSCLK:
1650:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1651:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1652:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
1653:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_ADCCLKSOURCE_PLLSAI1:
1654:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(__HAL_RCC_GET_PLLSAI1CLKOUT_CONFIG(RCC_PLLSAI1_ADC1CLK) != 0U)
1655:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
1657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* PLLSAI1M exists: apply PLLSAI1M divider for PLLSAI1 output computation */
1658:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* f(PLLSAI1 Source) / PLLSAI1M */
1659:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllvco = (pllvco / ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1M) >> RCC_PLLSAI
1660:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
1661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* f(PLL Source) / PLLM */
1662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
1663:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
1664:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* f(PLLADC1CLK) = f(VCOSAI1 input) * PLLSAI1N / PLLSAI1R */
1665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1N) >> RCC_PLLSAI1CFGR_PLLSAI1N
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >
1667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1669:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
1670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
1671:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_ADCCLKSOURCE_PLLSAI2:
1672:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(__HAL_RCC_GET_PLLSAI2CLKOUT_CONFIG(RCC_PLLSAI2_ADC2CLK) != 0U)
1673:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
1675:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* PLLSAI2M exists: apply PLLSAI2M divider for PLLSAI2 output computation */
1676:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* f(PLLSAI2 Source) / PLLSAI2M */
1677:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllvco = (pllvco / ((READ_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2M) >> RCC_PLLSAI
1678:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
1679:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* f(PLL Source) / PLLM */
1680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
1681:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
1682:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /* f(PLLADC2CLK) = f(VCOSAI2 input) * PLLSAI2N / PLLSAI2R */
1683:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2N) >> RCC_PLLSAI2CFGR_PLLSAI2N
1684:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2R) >
1685:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1686:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1687:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx || STM32L496xx ||
1688:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1689:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1691:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1692:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1693:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1694:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1695:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1696:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(DFSDM1_Filter0)
1697:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1698:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_DFSDM1:
1699:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current DFSDM1 source */
1701:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_DFSDM1_SOURCE();
1702:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1703:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(srcclk == RCC_DFSDM1CLKSOURCE_PCLK2)
1704:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK2Freq();
1706:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         else
1708:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1709:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1712:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1714:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1715:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1716:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_DFSDM1AUDIO:
1718:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1719:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current DFSDM1 audio source */
1720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_DFSDM1AUDIO_SOURCE();
1721:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1722:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1723:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1724:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_DFSDM1AUDIOCLKSOURCE_SAI1:
1725:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = RCCEx_GetSAIxPeriphCLKFreq(RCC_PERIPHCLK_SAI1, pllvco);
1726:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_DFSDM1AUDIOCLKSOURCE_MSI:
1728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIRDY))
1729:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /*MSI frequency range in HZ*/
1731:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> 4U)];
1732:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1733:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1734:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_DFSDM1AUDIOCLKSOURCE_HSI:
1735:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1736:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1737:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1738:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1739:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1740:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1741:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1742:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1743:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1744:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1745:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1746:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1747:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1748:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
1749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1750:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* DFSDM1_Filter0 */
1751:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1752:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_I2C1:
1753:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1754:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current I2C1 source */
1755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_I2C1_SOURCE();
1756:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1757:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1759:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C1CLKSOURCE_PCLK1:
1760:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1762:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C1CLKSOURCE_SYSCLK:
1763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1764:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1765:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C1CLKSOURCE_HSI:
1766:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1767:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1768:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1769:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1771:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1772:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1773:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1774:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1775:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1776:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1777:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1778:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1779:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(I2C2)
1780:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1781:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_I2C2:
1782:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1783:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current I2C2 source */
1784:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_I2C2_SOURCE();
1785:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1786:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1787:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1788:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C2CLKSOURCE_PCLK1:
1789:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1790:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1791:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C2CLKSOURCE_SYSCLK:
1792:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1793:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1794:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C2CLKSOURCE_HSI:
1795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1796:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1797:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1798:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1799:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1800:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1801:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1802:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1803:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1804:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1805:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1806:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1808:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C2 */
1809:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1810:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_I2C3:
1811:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1812:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current I2C3 source */
1813:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_I2C3_SOURCE();
1814:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1815:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1816:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1817:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C3CLKSOURCE_PCLK1:
1818:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1819:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1820:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C3CLKSOURCE_SYSCLK:
1821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1822:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1823:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C3CLKSOURCE_HSI:
1824:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1825:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1826:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1827:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1828:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1829:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1830:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1831:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1832:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1833:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1834:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1835:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1836:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1837:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(I2C4)
1838:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1839:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_I2C4:
1840:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1841:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current I2C4 source */
1842:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_I2C4_SOURCE();
1843:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1844:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1845:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1846:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C4CLKSOURCE_PCLK1:
1847:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1848:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1849:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C4CLKSOURCE_SYSCLK:
1850:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1851:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1852:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_I2C4CLKSOURCE_HSI:
1853:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1854:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1855:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1856:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1857:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1858:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1859:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1860:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1861:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1862:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1863:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1864:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1865:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1866:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C4 */
1867:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1868:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_LPTIM1:
1869:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1870:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current LPTIM1 source */
1871:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_LPTIM1_SOURCE();
1872:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1874:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1875:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPTIM1CLKSOURCE_PCLK1:
1876:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1877:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1878:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPTIM1CLKSOURCE_LSI:
1879:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSIRDY))
1880:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1881:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSI_VALUE;
1882:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1883:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1884:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPTIM1CLKSOURCE_HSI:
1885:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1886:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1887:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1888:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1889:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1890:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPTIM1CLKSOURCE_LSE:
1891:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1892:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1893:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSE_VALUE;
1894:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1895:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1896:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1897:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1898:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1899:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1900:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1901:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1902:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1903:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1904:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_LPTIM2:
1905:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1906:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current LPTIM2 source */
1907:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        srcclk = __HAL_RCC_GET_LPTIM2_SOURCE();
1908:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1909:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1910:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPTIM2CLKSOURCE_PCLK1:
1912:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1913:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1914:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPTIM2CLKSOURCE_LSI:
1915:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSIRDY))
1916:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1917:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSI_VALUE;
1918:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1919:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1920:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPTIM2CLKSOURCE_HSI:
1921:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1922:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1923:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1924:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1925:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1926:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_LPTIM2CLKSOURCE_LSE:
1927:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY))
1928:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1929:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = LSE_VALUE;
1930:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1931:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1932:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1933:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1934:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1935:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1936:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1937:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1938:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1939:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1940:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SWPMI1)
1941:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1942:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_SWPMI1:
1943:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1944:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current SWPMI1 source */
1945:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_SWPMI1_SOURCE();
1946:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1947:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1949:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_SWPMI1CLKSOURCE_PCLK1:
1950:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1951:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_SWPMI1CLKSOURCE_HSI:
1953:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
1954:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = HSI_VALUE;
1956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1958:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
1959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
1960:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1961:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
1962:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1963:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
1964:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
1965:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1966:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SWPMI1 */
1967:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1968:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(OCTOSPI1) || defined(OCTOSPI2)
1969:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1970:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PERIPHCLK_OSPI:
1971:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
1972:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Get the current OctoSPI clock source */
1973:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_OSPI_SOURCE();
1974:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
1975:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         switch(srcclk)
1976:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
1977:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_OSPICLKSOURCE_SYSCLK:
1978:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
1979:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1980:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_OSPICLKSOURCE_MSI:
1981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIRDY))
1982:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1983:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             /*MSI frequency range in HZ*/
1984:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> 4U)];
1985:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1986:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
1987:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         case RCC_OSPICLKSOURCE_PLL:
1988:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLLRDY))
1989:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
1990:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             if(HAL_IS_BIT_SET(RCC->PLLCFGR, RCC_PLLCFGR_PLLQEN))
1991:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
1992:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL Source) / PLLM */
1993:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos
1994:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL48M1CLK) = f(VCO input) * PLLN / PLLQ */
1995:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1996:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLC
1997:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
1998:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
1999:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
2000:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         default:
2001:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           /* No clock source, frequency default init at 0 */
2002:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
2003:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
2004:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2005:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
2006:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2007:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2008:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* OCTOSPI1 || OCTOSPI2 */
2009:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2010:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     default:
2011:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2012:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2013:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2014:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2015:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return(frequency);
2016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2017:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2018:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2019:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @}
2020:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2021:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2022:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group2 Extended Clock management functions
2023:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  *  @brief  Extended Clock management functions
2024:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  *
2025:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** @verbatim
2026:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  ===============================================================================
2027:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                 ##### Extended clock management functions  #####
2028:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  ===============================================================================
2029:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     [..]
2030:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     This subsection provides a set of functions allowing to control the
2031:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     activation or deactivation of MSI PLL-mode, PLLSAI1, PLLSAI2, LSE CSS,
2032:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     Low speed clock output and clock after wake-up from STOP mode.
2033:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** @endverbatim
2034:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @{
2035:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2036:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2037:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
2038:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2039:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2040:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Enable PLLSAI1.
2041:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  PLLSAI1Init  pointer to an RCC_PLLSAI1InitTypeDef structure that
2042:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         contains the configuration information for the PLLSAI1
2043:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval HAL status
2044:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_EnablePLLSAI1(RCC_PLLSAI1InitTypeDef  *PLLSAI1Init)
2046:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2047:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
2048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
2049:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2050:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* check for PLLSAI1 Parameters used to output PLLSAI1CLK */
2051:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1SOURCE(PLLSAI1Init->PLLSAI1Source));
2052:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1M_VALUE(PLLSAI1Init->PLLSAI1M));
2053:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1N_VALUE(PLLSAI1Init->PLLSAI1N));
2054:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1P_VALUE(PLLSAI1Init->PLLSAI1P));
2055:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1Q_VALUE(PLLSAI1Init->PLLSAI1Q));
2056:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1R_VALUE(PLLSAI1Init->PLLSAI1R));
2057:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PLLSAI1Init->PLLSAI1ClockOut));
2058:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2059:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Disable the PLLSAI1 */
2060:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI1_DISABLE();
2061:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2062:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get Start Tick*/
2063:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
2064:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2065:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Wait till PLLSAI1 is ready to be updated */
2066:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
2067:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2068:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
2069:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2070:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = HAL_TIMEOUT;
2071:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2072:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2073:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2074:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2075:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(status == HAL_OK)
2076:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2077:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
2078:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI1 Multiplication factor N */
2079:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI1 Division factors M, P, Q and R */
2080:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI1_CONFIG(PLLSAI1Init->PLLSAI1M, PLLSAI1Init->PLLSAI1N, PLLSAI1Init->PLLSAI1P, P
2081:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
2082:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI1 Multiplication factor N */
2083:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI1 Division factors P, Q and R */
2084:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI1_CONFIG(PLLSAI1Init->PLLSAI1N, PLLSAI1Init->PLLSAI1P, PLLSAI1Init->PLLSAI1Q, P
2085:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
2086:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI1 Clock output(s) */
2087:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI1CLKOUT_ENABLE(PLLSAI1Init->PLLSAI1ClockOut);
2088:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2089:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Enable the PLLSAI1 again by setting PLLSAI1ON to 1*/
2090:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI1_ENABLE();
2091:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2092:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Get Start Tick*/
2093:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2094:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2095:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI1 is ready */
2096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
2097:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2098:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
2099:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2100:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = HAL_TIMEOUT;
2101:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
2102:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2103:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2104:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2105:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2106:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return status;
2107:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2108:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2109:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2110:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Disable PLLSAI1.
2111:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval HAL status
2112:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2113:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_DisablePLLSAI1(void)
2114:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2115:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
2116:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
2117:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2118:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Disable the PLLSAI1 */
2119:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI1_DISABLE();
2120:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2121:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get Start Tick*/
2122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
2123:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2124:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Wait till PLLSAI1 is ready */
2125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
2126:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
2128:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2129:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = HAL_TIMEOUT;
2130:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2131:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2132:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2133:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2134:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Disable the PLLSAI1 Clock outputs */
2135:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI1CLKOUT_DISABLE(RCC_PLLSAI1CFGR_PLLSAI1PEN|RCC_PLLSAI1CFGR_PLLSAI1QEN|RCC_PLLSAI1
2136:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2137:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Reset PLL source to save power if no PLLs on */
2138:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2_SUPPORT)
2139:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(READ_BIT(RCC->CR, (RCC_CR_PLLRDY | RCC_CR_PLLSAI2RDY)) == 0U)
2140:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2141:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
2142:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
2144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
2145:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2146:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
2147:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2148:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2_SUPPORT */
2149:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2150:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return status;
2151:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2152:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2153:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
2154:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2155:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2_SUPPORT)
2156:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2157:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2158:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Enable PLLSAI2.
2159:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  PLLSAI2Init  pointer to an RCC_PLLSAI2InitTypeDef structure that
2160:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         contains the configuration information for the PLLSAI2
2161:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval HAL status
2162:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_EnablePLLSAI2(RCC_PLLSAI2InitTypeDef  *PLLSAI2Init)
2164:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
2166:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
2167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2168:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* check for PLLSAI2 Parameters used to output PLLSAI2CLK */
2169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2SOURCE(PLLSAI2Init->PLLSAI2Source));
2170:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2M_VALUE(PLLSAI2Init->PLLSAI2M));
2171:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2N_VALUE(PLLSAI2Init->PLLSAI2N));
2172:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2P_VALUE(PLLSAI2Init->PLLSAI2P));
2173:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2Q_DIV_SUPPORT)
2174:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2Q_VALUE(PLLSAI2Init->PLLSAI2Q));
2175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2Q_DIV_SUPPORT */
2176:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2R_VALUE(PLLSAI2Init->PLLSAI2R));
2177:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2CLOCKOUT_VALUE(PLLSAI2Init->PLLSAI2ClockOut));
2178:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Disable the PLLSAI2 */
2180:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI2_DISABLE();
2181:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get Start Tick*/
2183:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
2184:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2185:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Wait till PLLSAI2 is ready to be updated */
2186:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
2187:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2188:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
2189:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2190:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = HAL_TIMEOUT;
2191:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2193:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2194:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2195:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(status == HAL_OK)
2196:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2197:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT) && defined(RCC_PLLSAI2Q_DIV_SUPPORT)
2198:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Multiplication factor N */
2199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Division factors M, P, Q and R */
2200:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI2_CONFIG(PLLSAI2Init->PLLSAI2M, PLLSAI2Init->PLLSAI2N, PLLSAI2Init->PLLSAI2P, P
2201:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
2202:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Multiplication factor N */
2203:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Division factors M, P and R */
2204:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI2_CONFIG(PLLSAI2Init->PLLSAI2M, PLLSAI2Init->PLLSAI2N, PLLSAI2Init->PLLSAI2P, P
2205:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #elif defined(RCC_PLLSAI2Q_DIV_SUPPORT)
2206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Multiplication factor N */
2207:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Division factors P, Q and R */
2208:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI2_CONFIG(PLLSAI2Init->PLLSAI2N, PLLSAI2Init->PLLSAI2P, PLLSAI2Init->PLLSAI2Q, P
2209:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
2210:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Multiplication factor N */
2211:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Division factors P and R */
2212:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI2_CONFIG(PLLSAI2Init->PLLSAI2N, PLLSAI2Init->PLLSAI2P, PLLSAI2Init->PLLSAI2R);
2213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT && RCC_PLLSAI2Q_DIV_SUPPORT */
2214:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Configure the PLLSAI2 Clock output(s) */
2215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI2CLKOUT_ENABLE(PLLSAI2Init->PLLSAI2ClockOut);
2216:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2217:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Enable the PLLSAI2 again by setting PLLSAI2ON to 1*/
2218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI2_ENABLE();
2219:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Get Start Tick*/
2221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
2222:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2223:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI2 is ready */
2224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
2225:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2226:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
2227:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2228:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = HAL_TIMEOUT;
2229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
2230:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2231:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2232:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2233:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2234:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return status;
2235:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2236:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2237:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2238:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Disable PLLISAI2.
2239:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval HAL status
2240:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2241:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_DisablePLLSAI2(void)
2242:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
2244:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
2245:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2246:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Disable the PLLSAI2 */
2247:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI2_DISABLE();
2248:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2249:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get Start Tick*/
2250:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
2251:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2252:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Wait till PLLSAI2 is ready */
2253:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
2254:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2255:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
2256:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = HAL_TIMEOUT;
2258:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2259:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2260:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2261:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2262:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Disable the PLLSAI2 Clock outputs */
2263:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2Q_DIV_SUPPORT)
2264:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI2CLKOUT_DISABLE(RCC_PLLSAI2CFGR_PLLSAI2PEN|RCC_PLLSAI2CFGR_PLLSAI2QEN|RCC_PLLSAI2
2265:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
2266:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_PLLSAI2CLKOUT_DISABLE(RCC_PLLSAI2CFGR_PLLSAI2PEN|RCC_PLLSAI2CFGR_PLLSAI2REN);
2267:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT && RCC_PLLSAI2Q_DIV_SUPPORT */
2268:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Reset PLL source to save power if no PLLs on */
2270:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(READ_BIT(RCC->CR, (RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY)) == 0U)
2271:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2272:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
2273:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2274:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2275:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return status;
2276:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2277:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2278:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2_SUPPORT */
2279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2280:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2281:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Configure the oscillator clock source for wakeup from Stop and CSS backup clock.
2282:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  WakeUpClk  Wakeup clock
2283:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
2284:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_STOP_WAKEUPCLOCK_MSI  MSI oscillator selection
2285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_STOP_WAKEUPCLOCK_HSI  HSI oscillator selection
2286:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   This function shall not be called after the Clock Security System on HSE has been
2287:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         enabled.
2288:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2290:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_WakeUpStopCLKConfig(uint32_t WakeUpClk)
2291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_STOP_WAKEUPCLOCK(WakeUpClk));
2293:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_WAKEUPSTOP_CLK_CONFIG(WakeUpClk);
2295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2298:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Configure the MSI range after standby mode.
2299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   After Standby its frequency can be selected between 4 possible values (1, 2, 4 or 8 MHz
2300:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  MSIRange  MSI range
2301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
2302:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_MSIRANGE_4  Range 4 around 1 MHz
2303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_MSIRANGE_5  Range 5 around 2 MHz
2304:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_MSIRANGE_6  Range 6 around 4 MHz (reset value)
2305:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_MSIRANGE_7  Range 7 around 8 MHz
2306:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2308:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_StandbyMSIRangeConfig(uint32_t MSIRange)
2309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_MSI_STANDBY_CLOCK_RANGE(MSIRange));
2311:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2312:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_MSI_STANDBY_RANGE_CONFIG(MSIRange);
2313:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2314:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2316:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Enable the LSE Clock Security System.
2317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   Prior to enable the LSE Clock Security System, LSE oscillator is to be enabled
2318:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         with HAL_RCC_OscConfig() and the LSE oscillator clock is to be selected as RTC
2319:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         clock with HAL_RCCEx_PeriphCLKConfig().
2320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2321:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_EnableLSECSS(void)
2323:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2324:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
2325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2326:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2327:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Disable the LSE Clock Security System.
2329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   LSE Clock Security System can only be disabled after a LSE failure detection.
2330:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2331:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2332:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_DisableLSECSS(void)
2333:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2334:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
2335:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2336:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Disable LSE CSS IT if any */
2337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_DISABLE_IT(RCC_IT_LSECSS);
2338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2340:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2341:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Enable the LSE Clock Security System Interrupt & corresponding EXTI line.
2342:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   LSE Clock Security System Interrupt is mapped on RTC EXTI line 19
2343:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_EnableLSECSS_IT(void)
2346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Enable LSE CSS */
2348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
2349:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2350:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Enable LSE CSS IT */
2351:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_ENABLE_IT(RCC_IT_LSECSS);
2352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Enable IT on EXTI Line 19 */
2354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_LSECSS_EXTI_ENABLE_IT();
2355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_LSECSS_EXTI_ENABLE_RISING_EDGE();
2356:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief Handle the RCC LSE Clock Security System interrupt request.
2360:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2362:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_LSECSS_IRQHandler(void)
2363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2364:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check RCC LSE CSSF flag  */
2365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(__HAL_RCC_GET_IT(RCC_IT_LSECSS))
2366:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2367:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* RCC LSE Clock Security System interrupt user callback */
2368:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     HAL_RCCEx_LSECSS_Callback();
2369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2370:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Clear RCC LSE CSS pending bit */
2371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_LSECSS);
2372:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2373:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2375:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  RCCEx LSE Clock Security System interrupt callback.
2377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval none
2378:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2379:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_LSECSS_Callback(void)
2380:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2381:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2382:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_LSECSS_Callback should be implemented in the user file
2383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****    */
2384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2385:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2387:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Select the Low Speed clock source to output on LSCO pin (PA2).
2388:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  LSCOSource  specifies the Low Speed clock source to output.
2389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *          This parameter can be one of the following values:
2390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_LSCOSOURCE_LSI  LSI clock selected as LSCO source
2391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *            @arg @ref RCC_LSCOSOURCE_LSE  LSE clock selected as LSCO source
2392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2393:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_EnableLSCO(uint32_t LSCOSource)
2395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2396:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitTypeDef GPIO_InitStruct;
2397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       pwrclkchanged = RESET;
2398:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       backupchanged = RESET;
2399:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2400:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check the parameters */
2401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_LSCOSOURCE(LSCOSource));
2402:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2403:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* LSCO Pin Clock Enable */
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __LSCO_CLK_ENABLE();
2405:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Configue the LSCO pin in analog mode */
2407:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitStruct.Pin = LSCO_PIN;
2408:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
2409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
2410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
2411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_GPIO_Init(LSCO_GPIO_PORT, &GPIO_InitStruct);
2412:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2413:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Update LSCOSEL clock source in Backup Domain control register */
2414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(__HAL_RCC_PWR_IS_CLK_DISABLED())
2415:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
2417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
2418:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
2420:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     HAL_PWR_EnableBkUpAccess();
2422:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     backupchanged = SET;
2423:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2425:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSCOSEL | RCC_BDCR_LSCOEN, LSCOSource | RCC_BDCR_LSCOEN);
2426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(backupchanged == SET)
2428:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     HAL_PWR_DisableBkUpAccess();
2430:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(pwrclkchanged == SET)
2432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2433:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_DISABLE();
2434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2437:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Disable the Low Speed clock output.
2439:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2440:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2441:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_DisableLSCO(void)
2442:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       pwrclkchanged = RESET;
2444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       backupchanged = RESET;
2445:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Update LSCOEN bit in Backup Domain control register */
2447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(__HAL_RCC_PWR_IS_CLK_DISABLED())
2448:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
2450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
2451:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
2453:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2454:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Enable access to the backup domain */
2455:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     HAL_PWR_EnableBkUpAccess();
2456:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     backupchanged = SET;
2457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2458:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2459:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSCOEN);
2460:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2461:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Restore previous configuration */
2462:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(backupchanged == SET)
2463:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2464:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Disable access to the backup domain */
2465:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     HAL_PWR_DisableBkUpAccess();
2466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(pwrclkchanged == SET)
2468:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_DISABLE();
2470:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2471:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2472:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2473:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Enable the PLL-mode of the MSI.
2475:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   Prior to enable the PLL-mode of the MSI for automatic hardware
2476:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         calibration LSE oscillator is to be enabled with HAL_RCC_OscConfig().
2477:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2478:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_EnableMSIPLLMode(void)
2480:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2481:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   SET_BIT(RCC->CR, RCC_CR_MSIPLLEN) ;
2482:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2483:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2484:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2485:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Disable the PLL-mode of the MSI.
2486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   PLL-mode of the MSI is automatically reset when LSE oscillator is disabled.
2487:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2488:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_DisableMSIPLLMode(void)
2490:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2491:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CR, RCC_CR_MSIPLLEN) ;
2492:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2493:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2494:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2495:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @}
2496:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2497:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(CRS)
2499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2500:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group3 Extended Clock Recovery System Control functions
2501:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  *  @brief  Extended Clock Recovery System Control functions
2502:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  *
2503:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** @verbatim
2504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  ===============================================================================
2505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                 ##### Extended Clock Recovery System Control functions  #####
2506:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  ===============================================================================
2507:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     [..]
2508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       For devices with Clock Recovery System feature (CRS), RCC Extention HAL driver can be used as
2509:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       (#) In System clock config, HSI48 needs to be enabled
2511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2512:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       (#) Enable CRS clock in IP MSP init which will use CRS functions
2513:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2514:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       (#) Call CRS functions as follows:
2515:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           (##) Prepare synchronization configuration necessary for HSI48 calibration
2516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (+++) Default values can be set for frequency Error Measurement (reload and error lim
2517:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                         and also HSI48 oscillator smooth trimming.
2518:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (+++) Macro __HAL_RCC_CRS_RELOADVALUE_CALCULATE can be also used to calculate
2519:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                         directly reload value with target and sychronization frequencies values
2520:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           (##) Call function HAL_RCCEx_CRSConfig which
2521:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (+++) Resets CRS registers to their default values.
2522:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (+++) Configures CRS registers with synchronization configuration
2523:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (+++) Enables automatic calibration and frequency error counter feature
2524:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            Note: When using USB LPM (Link Power Management) and the device is in Sleep mode, the
2525:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            periodic USB SOF will not be generated by the host. No SYNC signal will therefore be
2526:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            provided to the CRS to calibrate the HSI48 on the run. To guarantee the required clock
2527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            precision after waking up from Sleep mode, the LSE or reference clock on the GPIOs
2528:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            should be used as SYNC signal.
2529:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           (##) A polling function is provided to wait for complete synchronization
2531:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (+++) Call function HAL_RCCEx_CRSWaitSynchronization()
2532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (+++) According to CRS status, user can decide to adjust again the calibration or con
2533:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                         application if synchronization is OK
2534:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2535:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       (#) User can retrieve information related to synchronization in calling function
2536:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             HAL_RCCEx_CRSGetSynchronizationInfo()
2537:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2538:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       (#) Regarding synchronization status and synchronization information, user can try a new cali
2539:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            in changing synchronization configuration and call again HAL_RCCEx_CRSConfig.
2540:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            Note: When the SYNC event is detected during the downcounting phase (before reaching the
2541:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            it means that the actual frequency is lower than the target (and so, that the TRIM value
2542:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            incremented), while when it is detected during the upcounting phase it means that the ac
2543:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****            is higher (and that the TRIM value should be decremented).
2544:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2545:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       (#) In interrupt mode, user can resort to the available macros (__HAL_RCC_CRS_XXX_IT). Interr
2546:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           through CRS Handler (CRS_IRQn/CRS_IRQHandler)
2547:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (++) Call function HAL_RCCEx_CRSConfig()
2548:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (++) Enable CRS_IRQn (thanks to NVIC functions)
2549:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (++) Enable CRS interrupt (__HAL_RCC_CRS_ENABLE_IT)
2550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               (++) Implement CRS status management in the following user callbacks called from
2551:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    HAL_RCCEx_CRS_IRQHandler():
2552:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (+++) HAL_RCCEx_CRS_SyncOkCallback()
2553:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (+++) HAL_RCCEx_CRS_SyncWarnCallback()
2554:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (+++) HAL_RCCEx_CRS_ExpectedSyncCallback()
2555:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (+++) HAL_RCCEx_CRS_ErrorCallback()
2556:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2557:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       (#) To force a SYNC EVENT, user can use the function HAL_RCCEx_CRSSoftwareSynchronizationGene
2558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           This function can be called before calling HAL_RCCEx_CRSConfig (for instance in Systick h
2559:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2560:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** @endverbatim
2561:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  * @{
2562:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  */
2563:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2564:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2565:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Start automatic synchronization for polling mode
2566:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  pInit Pointer on RCC_CRSInitTypeDef structure
2567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2568:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_CRSConfig(RCC_CRSInitTypeDef *pInit)
2570:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2571:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t value;  /* no init needed */
2572:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2573:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check the parameters */
2574:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_SYNC_DIV(pInit->Prescaler));
2575:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_SYNC_SOURCE(pInit->Source));
2576:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_SYNC_POLARITY(pInit->Polarity));
2577:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_RELOADVALUE(pInit->ReloadValue));
2578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_ERRORLIMIT(pInit->ErrorLimitValue));
2579:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_HSI48CALIBRATION(pInit->HSI48CalibrationValue));
2580:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* CONFIGURATION */
2582:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Before configuration, reset CRS registers to their default values*/
2584:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_CRS_FORCE_RESET();
2585:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_CRS_RELEASE_RESET();
2586:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2587:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the SYNCDIV[2:0] bits according to Prescaler value */
2588:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the SYNCSRC[1:0] bits according to Source value */
2589:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the SYNCSPOL bit according to Polarity value */
2590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   value = (pInit->Prescaler | pInit->Source | pInit->Polarity);
2591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the RELOAD[15:0] bits according to ReloadValue value */
2592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   value |= pInit->ReloadValue;
2593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the FELIM[7:0] bits according to ErrorLimitValue value */
2594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   value |= (pInit->ErrorLimitValue << CRS_CFGR_FELIM_Pos);
2595:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   WRITE_REG(CRS->CFGR, value);
2596:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Adjust HSI48 oscillator smooth trimming */
2598:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the TRIM[6:0] bits for STM32L412xx/L422xx or TRIM[5:0] bits otherwise
2599:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****      according to RCC_CRS_HSI48CalibrationValue value */
2600:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_Pos));
2601:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2602:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* START AUTOMATIC SYNCHRONIZATION*/
2603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2604:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Enable Automatic trimming & Frequency error counter */
2605:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
2606:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2607:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2608:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2609:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Generate the software synchronization event
2610:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2611:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2612:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_CRSSoftwareSynchronizationGenerate(void)
2613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2614:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   SET_BIT(CRS->CR, CRS_CR_SWSYNC);
2615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2616:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2617:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2618:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Return synchronization info
2619:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  pSynchroInfo Pointer on RCC_CRSSynchroInfoTypeDef structure
2620:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2621:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2622:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_CRSGetSynchronizationInfo(RCC_CRSSynchroInfoTypeDef *pSynchroInfo)
2623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2624:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check the parameter */
2625:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(pSynchroInfo != (void *)NULL);
2626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2627:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the reload value */
2628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   pSynchroInfo->ReloadValue = (READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
2629:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2630:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get HSI48 oscillator smooth trimming */
2631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   pSynchroInfo->HSI48CalibrationValue = (READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_Pos);
2632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2633:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get Frequency error capture */
2634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   pSynchroInfo->FreqErrorCapture = (READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_Pos);
2635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2636:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get Frequency error direction */
2637:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   pSynchroInfo->FreqErrorDirection = (READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
2638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2639:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2640:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** * @brief Wait for CRS Synchronization status.
2642:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** * @param Timeout  Duration of the timeout
2643:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** * @note  Timeout is based on the maximum time to receive a SYNC event based on synchronization
2644:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** *        frequency.
2645:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** * @note    If Timeout set to HAL_MAX_DELAY, HAL_TIMEOUT will be never returned.
2646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** * @retval Combination of Synchronization status
2647:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** *          This parameter can be a combination of the following values:
2648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_TIMEOUT
2649:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_SYNCOK
2650:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_SYNCWARN
2651:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_SYNCERR
2652:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_SYNCMISS
2653:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_TRIMOVF
2654:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** */
2655:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_CRSWaitSynchronization(uint32_t Timeout)
2656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t crsstatus = RCC_CRS_NONE;
2658:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
2659:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2660:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get timeout */
2661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
2662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2663:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Wait for CRS flag or timeout detection */
2664:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   do
2665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
2667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
2669:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         crsstatus = RCC_CRS_TIMEOUT;
2671:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2672:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2673:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check CRS SYNCOK flag  */
2674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_SYNCOK))
2675:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2676:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* CRS SYNC event OK */
2677:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_SYNCOK;
2678:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2679:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Clear CRS SYNC event OK bit */
2680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_SYNCOK);
2681:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2682:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2683:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check CRS SYNCWARN flag  */
2684:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_SYNCWARN))
2685:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2686:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* CRS SYNC warning */
2687:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_SYNCWARN;
2688:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2689:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Clear CRS SYNCWARN bit */
2690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_SYNCWARN);
2691:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2692:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2693:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check CRS TRIM overflow flag  */
2694:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_TRIMOVF))
2695:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2696:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* CRS SYNC Error */
2697:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_TRIMOVF;
2698:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2699:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Clear CRS Error bit */
2700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_TRIMOVF);
2701:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2702:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2703:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check CRS Error flag  */
2704:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_SYNCERR))
2705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2706:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* CRS SYNC Error */
2707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_SYNCERR;
2708:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2709:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Clear CRS Error bit */
2710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_SYNCERR);
2711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2712:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check CRS SYNC Missed flag  */
2714:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_SYNCMISS))
2715:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2716:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* CRS SYNC Missed */
2717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_SYNCMISS;
2718:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2719:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Clear CRS SYNC Missed bit */
2720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_SYNCMISS);
2721:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2722:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2723:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check CRS Expected SYNC flag  */
2724:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_ESYNC))
2725:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2726:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* frequency error counter reached a zero value */
2727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_ESYNC);
2728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2729:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   } while(RCC_CRS_NONE == crsstatus);
2730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2731:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return crsstatus;
2732:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2733:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2734:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2735:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief Handle the Clock Recovery System interrupt request.
2736:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval None
2737:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2738:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** void HAL_RCCEx_CRS_IRQHandler(void)
2739:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2740:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t crserror = RCC_CRS_NONE;
2741:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get current IT flags and IT sources values */
2742:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t itflags = READ_REG(CRS->ISR);
2743:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t itsources = READ_REG(CRS->CR);
2744:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2745:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check CRS SYNCOK flag  */
2746:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(((itflags & RCC_CRS_FLAG_SYNCOK) != 0U) && ((itsources & RCC_CRS_IT_SYNCOK) != 0U))
2747:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2748:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Clear CRS SYNC event OK flag */
2749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
2750:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2751:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* user callback */
2752:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     HAL_RCCEx_CRS_SyncOkCallback();
2753:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2754:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check CRS SYNCWARN flag  */
2755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   else if(((itflags & RCC_CRS_FLAG_SYNCWARN) != 0U) && ((itsources & RCC_CRS_IT_SYNCWARN) != 0U))
2756:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2757:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Clear CRS SYNCWARN flag */
2758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
2759:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2760:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* user callback */
2761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     HAL_RCCEx_CRS_SyncWarnCallback();
2762:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check CRS Expected SYNC flag  */
2764:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   else if(((itflags & RCC_CRS_FLAG_ESYNC) != 0U) && ((itsources & RCC_CRS_IT_ESYNC) != 0U))
2765:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2766:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* frequency error counter reached a zero value */
2767:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
2768:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2769:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* user callback */
2770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     HAL_RCCEx_CRS_ExpectedSyncCallback();
2771:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2772:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check CRS Error flags  */
2773:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   else
2774:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2775:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(((itflags & RCC_CRS_FLAG_ERR) != 0U) && ((itsources & RCC_CRS_IT_ERR) != 0U))
2776:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2777:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((itflags & RCC_CRS_FLAG_SYNCERR) != 0U)
2778:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2779:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         crserror |= RCC_CRS_SYNCERR;
2780:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2781:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((itflags & RCC_CRS_FLAG_SYNCMISS) != 0U)
2782:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2783:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         crserror |= RCC_CRS_SYNCMISS;
2784:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2785:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((itflags & RCC_CRS_FLAG_TRIMOVF) != 0U)
2786:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2787:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         crserror |= RCC_CRS_TRIMOVF;
2788:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2789:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2790:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Clear CRS Error flags */
2791:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
2792:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2793:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* user error callback */
2794:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       HAL_RCCEx_CRS_ErrorCallback(crserror);
2795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2796:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2797:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2798:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2799:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2800:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  RCCEx Clock Recovery System SYNCOK interrupt callback.
2801:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval none
2802:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2803:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_CRS_SyncOkCallback(void)
2804:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2805:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2806:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_CRS_SyncOkCallback should be implemented in the user file
2807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****    */
2808:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2809:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2810:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2811:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  RCCEx Clock Recovery System SYNCWARN interrupt callback.
2812:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval none
2813:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2814:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_CRS_SyncWarnCallback(void)
2815:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2816:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2817:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_CRS_SyncWarnCallback should be implemented in the user file
2818:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****    */
2819:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2820:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2822:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  RCCEx Clock Recovery System Expected SYNC interrupt callback.
2823:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval none
2824:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2825:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_CRS_ExpectedSyncCallback(void)
2826:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2827:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2828:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_CRS_ExpectedSyncCallback should be implemented in the user file
2829:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****    */
2830:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2831:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2832:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2833:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  RCCEx Clock Recovery System Error interrupt callback.
2834:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  Error Combination of Error status.
2835:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         This parameter can be a combination of the following values:
2836:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *           @arg @ref RCC_CRS_SYNCERR
2837:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *           @arg @ref RCC_CRS_SYNCMISS
2838:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *           @arg @ref RCC_CRS_TRIMOVF
2839:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval none
2840:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2841:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_CRS_ErrorCallback(uint32_t Error)
2842:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
2843:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2844:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   UNUSED(Error);
2845:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2846:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2847:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_CRS_ErrorCallback should be implemented in the user file
2848:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****    */
2849:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
2850:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2851:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2852:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @}
2853:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2854:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2855:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* CRS */
2856:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2857:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2858:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @}
2859:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2860:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2861:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /** @addtogroup RCCEx_Private_Functions
2862:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  * @{
2863:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****  */
2864:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2865:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1_SUPPORT)
2866:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2867:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
2868:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Configure the parameters N & P & optionally M of PLLSAI1 and enable PLLSAI1 output cloc
2869:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  PllSai1  pointer to an RCC_PLLSAI1InitTypeDef structure that
2870:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         contains the configuration parameters N & P & optionally M as well as PLLSAI1 output cl
2871:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  Divider  divider parameter to be updated
2872:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
2873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   PLLSAI1 is temporary disable to apply new parameters
2874:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
2875:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval HAL status
2876:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
2877:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *PllSai1, uint32_t Divider)
2878:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
  27              		.loc 1 2878 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
2879:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
  31              		.loc 1 2879 3 view .LVU1
2880:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
  32              		.loc 1 2880 3 view .LVU2
2881:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2882:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* check for PLLSAI1 Parameters used to output PLLSAI1CLK */
2883:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* P, Q and R dividers are verified in each specific divider case below */
2884:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1SOURCE(PllSai1->PLLSAI1Source));
  33              		.loc 1 2884 3 view .LVU3
2885:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1M_VALUE(PllSai1->PLLSAI1M));
  34              		.loc 1 2885 3 view .LVU4
2886:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1N_VALUE(PllSai1->PLLSAI1N));
  35              		.loc 1 2886 3 view .LVU5
2887:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PllSai1->PLLSAI1ClockOut));
  36              		.loc 1 2887 3 view .LVU6
2888:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2889:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check that PLLSAI1 clock source and divider M can be applied */
2890:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
  37              		.loc 1 2890 3 view .LVU7
2878:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
  38              		.loc 1 2878 1 is_stmt 0 view .LVU8
  39 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 3, -24
  43              		.cfi_offset 4, -20
  44              		.cfi_offset 5, -16
  45              		.cfi_offset 6, -12
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48              		.loc 1 2890 6 view .LVU9
  49 0002 434B     		ldr	r3, .L33
  50 0004 DA68     		ldr	r2, [r3, #12]
  51              		.loc 1 2890 5 view .LVU10
  52 0006 12F0030F 		tst	r2, #3
2878:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
  53              		.loc 1 2878 1 view .LVU11
  54 000a 0546     		mov	r5, r0
  55 000c 0E46     		mov	r6, r1
  56 000e 0068     		ldr	r0, [r0]
  57              	.LVL1:
2878:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
  58              		.loc 1 2878 1 view .LVU12
  59 0010 1C46     		mov	r4, r3
  60              		.loc 1 2890 5 view .LVU13
  61 0012 28D0     		beq	.L2
2891:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2892:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* PLL clock source and divider M already set, check that no request for change  */
2893:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai1->PLLSAI1Source)
  62              		.loc 1 2893 5 is_stmt 1 view .LVU14
  63              		.loc 1 2893 9 is_stmt 0 view .LVU15
  64 0014 DA68     		ldr	r2, [r3, #12]
  65 0016 02F00302 		and	r2, r2, #3
  66              		.loc 1 2893 7 view .LVU16
  67 001a 8242     		cmp	r2, r0
  68 001c 3AD1     		bne	.L25
2894:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        ||
  69              		.loc 1 2894 8 view .LVU17
  70 001e 002A     		cmp	r2, #0
  71 0020 38D0     		beq	.L25
2895:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        (PllSai1->PLLSAI1Source == RCC_PLLSOURCE_NONE)
2896:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if !defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
2897:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        ||
2898:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSA
  72              		.loc 1 2898 11 view .LVU18
  73 0022 DB68     		ldr	r3, [r3, #12]
2897:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSA
  74              		.loc 1 2897 8 view .LVU19
  75 0024 6A68     		ldr	r2, [r5, #4]
  76              		.loc 1 2898 52 view .LVU20
  77 0026 C3F30213 		ubfx	r3, r3, #4, #3
  78              		.loc 1 2898 77 view .LVU21
  79 002a 0133     		adds	r3, r3, #1
2897:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSA
  80              		.loc 1 2897 8 view .LVU22
  81 002c 9342     		cmp	r3, r2
  82 002e 31D1     		bne	.L25
  83              	.LVL2:
  84              	.L4:
2899:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
2900:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       )
2901:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2902:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = HAL_ERROR;
2903:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2904:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2905:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   else
2906:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2907:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check PLLSAI1 clock source availability */
2908:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     switch(PllSai1->PLLSAI1Source)
2909:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2910:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_MSI:
2911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
2912:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2913:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = HAL_ERROR;
2914:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2915:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2916:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_HSI:
2917:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
2918:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2919:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = HAL_ERROR;
2920:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2921:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2922:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_HSE:
2923:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
2924:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2925:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
2926:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
2927:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           status = HAL_ERROR;
2928:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
2929:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2930:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2931:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     default:
2932:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = HAL_ERROR;
2933:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
2934:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2935:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2936:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(status == HAL_OK)
2937:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2938:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
2939:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Set PLLSAI1 clock source */
2940:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PllSai1->PLLSAI1Source);
2941:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
2942:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Set PLLSAI1 clock source and divider M */
2943:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai1->PLLSAI1Source | (Pll
2944:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
2945:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2946:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
2947:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(status == HAL_OK)
2949:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
2950:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Disable the PLLSAI1 */
2951:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI1_DISABLE();
  85              		.loc 1 2951 5 is_stmt 1 view .LVU23
  86 0030 2368     		ldr	r3, [r4]
  87 0032 23F08063 		bic	r3, r3, #67108864
  88 0036 2360     		str	r3, [r4]
2952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2953:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Get Start Tick*/
2954:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
  89              		.loc 1 2954 5 view .LVU24
  90              		.loc 1 2954 17 is_stmt 0 view .LVU25
  91 0038 FFF7FEFF 		bl	HAL_GetTick
  92              	.LVL3:
  93 003c 0746     		mov	r7, r0
  94              	.LVL4:
2955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI1 is ready to be updated */
2957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
  95              		.loc 1 2957 5 is_stmt 1 view .LVU26
  96              	.L8:
  97              		.loc 1 2957 10 view .LVU27
  98              		.loc 1 2957 11 is_stmt 0 view .LVU28
  99 003e 2368     		ldr	r3, [r4]
 100              		.loc 1 2957 10 view .LVU29
 101 0040 1A01     		lsls	r2, r3, #4
 102 0042 30D4     		bmi	.L9
 103              	.LVL5:
2958:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
2960:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2961:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = HAL_TIMEOUT;
2962:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
2963:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
2964:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
2965:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2966:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(status == HAL_OK)
 104              		.loc 1 2966 5 is_stmt 1 view .LVU30
2967:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
2968:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(Divider == DIVIDER_P_UPDATE)
 105              		.loc 1 2968 7 view .LVU31
 106 0044 AB68     		ldr	r3, [r5, #8]
 107 0046 1802     		lsls	r0, r3, #8
 108              		.loc 1 2968 9 is_stmt 0 view .LVU32
 109 0048 A6B3     		cbz	r6, .L17
2969:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
2970:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         assert_param(IS_RCC_PLLSAI1P_VALUE(PllSai1->PLLSAI1P));
2971:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
2972:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2973:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI1 Division factor M, P and Multiplication factor N*/
2974:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
2975:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI1CFGR,
2976:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1PDIV | RCC_PLLSAI1CFGR_PLLSAI1
2977:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
2978:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1P << RCC_PLLSAI1CFGR_PLLSAI1PDIV_Pos) |
2979:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
2980:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
2981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI1CFGR,
2982:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1P | RCC_PLLSAI1CFGR_PLLSAI1M,
2983:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
2984:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai1->PLLSAI1P >> 4U) << RCC_PLLSAI1CFGR_PLLSAI1P_Pos) |
2985:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
2986:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */
2987:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
2988:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
2989:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI1 Division factor P and Multiplication factor N*/
2990:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
2991:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI1CFGR,
2992:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1PDIV,
2993:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
2994:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1P << RCC_PLLSAI1CFGR_PLLSAI1PDIV_Pos));
2995:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
2996:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI1CFGR,
2997:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1P,
2998:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
2999:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai1->PLLSAI1P >> 4U) << RCC_PLLSAI1CFGR_PLLSAI1P_Pos));
3000:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */
3001:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3002:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
3003:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3004:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else if(Divider == DIVIDER_Q_UPDATE)
 110              		.loc 1 3004 12 is_stmt 1 view .LVU33
 111              		.loc 1 3004 14 is_stmt 0 view .LVU34
 112 004a 012E     		cmp	r6, #1
 113 004c 4CD1     		bne	.L12
3005:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3006:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         assert_param(IS_RCC_PLLSAI1Q_VALUE(PllSai1->PLLSAI1Q));
 114              		.loc 1 3006 9 is_stmt 1 view .LVU35
3007:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
3008:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI1 Division factor M, Q and Multiplication factor N*/
3009:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI1CFGR,
3010:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1Q | RCC_PLLSAI1CFGR_PLLSAI1M,
3011:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
3012:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (((PllSai1->PLLSAI1Q >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1Q_Pos) |
3013:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
3014:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3015:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI1 Division factor Q and Multiplication factor N*/
3016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI1CFGR,
 115              		.loc 1 3016 9 view .LVU36
 116 004e 2A69     		ldr	r2, [r5, #16]
 117 0050 2169     		ldr	r1, [r4, #16]
 118 0052 5208     		lsrs	r2, r2, #1
 119 0054 531E     		subs	r3, r2, #1
 120 0056 21F4C002 		bic	r2, r1, #6291456
 121 005a 22F4FE42 		bic	r2, r2, #32512
 122 005e 0243     		orrs	r2, r2, r0
 123 0060 42EA4352 		orr	r2, r2, r3, lsl #21
 124 0064 2FE0     		b	.L31
 125              	.LVL6:
 126              	.L2:
2908:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 127              		.loc 1 2908 5 view .LVU37
 128 0066 0228     		cmp	r0, #2
 129 0068 10D0     		beq	.L5
 130 006a 0328     		cmp	r0, #3
 131 006c 14D0     		beq	.L6
 132 006e 0128     		cmp	r0, #1
 133 0070 10D1     		bne	.L25
2911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 134              		.loc 1 2911 7 view .LVU38
2911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 135              		.loc 1 2911 10 is_stmt 0 view .LVU39
 136 0072 1B68     		ldr	r3, [r3]
2911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 137              		.loc 1 2911 9 view .LVU40
 138 0074 9F07     		lsls	r7, r3, #30
 139 0076 1CD5     		bpl	.L27
 140              	.LVL7:
 141              	.L7:
2943:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 142              		.loc 1 2943 7 is_stmt 1 view .LVU41
 143 0078 E368     		ldr	r3, [r4, #12]
 144 007a 6A68     		ldr	r2, [r5, #4]
 145 007c 23F07303 		bic	r3, r3, #115
 146 0080 013A     		subs	r2, r2, #1
 147 0082 1843     		orrs	r0, r0, r3
 148 0084 40EA0210 		orr	r0, r0, r2, lsl #4
 149 0088 E060     		str	r0, [r4, #12]
 150              	.LVL8:
2948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 151              		.loc 1 2948 3 view .LVU42
 152 008a D1E7     		b	.L4
 153              	.LVL9:
 154              	.L5:
2917:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 155              		.loc 1 2917 7 view .LVU43
2917:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 156              		.loc 1 2917 10 is_stmt 0 view .LVU44
 157 008c 1B68     		ldr	r3, [r3]
2917:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 158              		.loc 1 2917 9 view .LVU45
 159 008e 13F4806F 		tst	r3, #1024
 160              	.LVL10:
 161              	.L32:
2925:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 162              		.loc 1 2925 11 view .LVU46
 163 0092 F1D1     		bne	.L7
 164              	.L25:
2902:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 165              		.loc 1 2902 14 view .LVU47
 166 0094 0120     		movs	r0, #1
 167 0096 0CE0     		b	.L27
 168              	.LVL11:
 169              	.L6:
2923:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 170              		.loc 1 2923 7 is_stmt 1 view .LVU48
2923:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 171              		.loc 1 2923 10 is_stmt 0 view .LVU49
 172 0098 1A68     		ldr	r2, [r3]
2923:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 173              		.loc 1 2923 9 view .LVU50
 174 009a 9103     		lsls	r1, r2, #14
 175              	.LVL12:
2923:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 176              		.loc 1 2923 9 view .LVU51
 177 009c ECD4     		bmi	.L7
2925:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 178              		.loc 1 2925 9 is_stmt 1 view .LVU52
2925:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 179              		.loc 1 2925 12 is_stmt 0 view .LVU53
 180 009e 1B68     		ldr	r3, [r3]
2925:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 181              		.loc 1 2925 11 view .LVU54
 182 00a0 13F4802F 		tst	r3, #262144
 183 00a4 F5E7     		b	.L32
 184              	.LVL13:
 185              	.L9:
2959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 186              		.loc 1 2959 7 is_stmt 1 view .LVU55
2959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 187              		.loc 1 2959 11 is_stmt 0 view .LVU56
 188 00a6 FFF7FEFF 		bl	HAL_GetTick
 189              	.LVL14:
2959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 190              		.loc 1 2959 25 view .LVU57
 191 00aa C01B     		subs	r0, r0, r7
2959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 192              		.loc 1 2959 9 view .LVU58
 193 00ac 0228     		cmp	r0, #2
 194 00ae C6D9     		bls	.L8
 195              	.LVL15:
 196              	.L14:
2961:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
 197              		.loc 1 2961 16 view .LVU59
 198 00b0 0320     		movs	r0, #3
 199              	.L27:
3017:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1Q,
3018:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
3019:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (((PllSai1->PLLSAI1Q >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1Q_Pos));
3020:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
3021:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3022:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else
3023:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3024:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         assert_param(IS_RCC_PLLSAI1R_VALUE(PllSai1->PLLSAI1R));
3025:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
3026:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI1 Division factor M, R and Multiplication factor N*/
3027:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI1CFGR,
3028:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1R | RCC_PLLSAI1CFGR_PLLSAI1M,
3029:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
3030:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos) |
3031:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
3032:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3033:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI1 Division factor R and Multiplication factor N*/
3034:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI1CFGR,
3035:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1R,
3036:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
3037:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos));
3038:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
3039:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3040:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3041:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable the PLLSAI1 again by setting PLLSAI1ON to 1*/
3042:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI1_ENABLE();
3043:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3044:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Get Start Tick*/
3045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       tickstart = HAL_GetTick();
3046:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3047:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Wait till PLLSAI1 is ready */
3048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
3049:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3050:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
3051:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
3052:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           status = HAL_TIMEOUT;
3053:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
3054:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
3055:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3056:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3057:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(status == HAL_OK)
3058:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3059:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI1 Clock output(s) */
3060:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         __HAL_RCC_PLLSAI1CLKOUT_ENABLE(PllSai1->PLLSAI1ClockOut);
3061:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3062:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3063:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
3064:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3065:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return status;
3066:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 200              		.loc 1 3066 1 view .LVU60
 201 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 202              	.LVL16:
 203              	.L17:
2970:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
 204              		.loc 1 2970 9 is_stmt 1 view .LVU61
2991:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1PDIV,
 205              		.loc 1 2991 9 view .LVU62
 206 00b4 2369     		ldr	r3, [r4, #16]
 207 00b6 EA68     		ldr	r2, [r5, #12]
 208 00b8 40EAC262 		orr	r2, r0, r2, lsl #27
 209 00bc 23F07840 		bic	r0, r3, #-134217728
 210 00c0 20F4FE40 		bic	r0, r0, #32512
 211 00c4 0243     		orrs	r2, r2, r0
 212              	.L31:
3016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1Q,
 213              		.loc 1 3016 9 is_stmt 0 view .LVU63
 214 00c6 2261     		str	r2, [r4, #16]
 215              	.L11:
3042:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 216              		.loc 1 3042 7 is_stmt 1 view .LVU64
 217 00c8 2368     		ldr	r3, [r4]
 218 00ca 43F08063 		orr	r3, r3, #67108864
 219 00ce 2360     		str	r3, [r4]
3045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 220              		.loc 1 3045 7 view .LVU65
3045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 221              		.loc 1 3045 19 is_stmt 0 view .LVU66
 222 00d0 FFF7FEFF 		bl	HAL_GetTick
 223              	.LVL17:
 224 00d4 0646     		mov	r6, r0
 225              	.LVL18:
3048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 226              		.loc 1 3048 7 is_stmt 1 view .LVU67
 227              	.L13:
3048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 228              		.loc 1 3048 12 view .LVU68
3048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 229              		.loc 1 3048 13 is_stmt 0 view .LVU69
 230 00d6 2368     		ldr	r3, [r4]
3048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 231              		.loc 1 3048 12 view .LVU70
 232 00d8 1B01     		lsls	r3, r3, #4
 233 00da 12D5     		bpl	.L15
3057:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 234              		.loc 1 3057 7 is_stmt 1 view .LVU71
3060:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 235              		.loc 1 3060 9 view .LVU72
 236 00dc 2369     		ldr	r3, [r4, #16]
 237 00de AA69     		ldr	r2, [r5, #24]
 238 00e0 1343     		orrs	r3, r3, r2
 239 00e2 2361     		str	r3, [r4, #16]
 240 00e4 0020     		movs	r0, #0
3065:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 241              		.loc 1 3065 3 view .LVU73
3065:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 242              		.loc 1 3065 10 is_stmt 0 view .LVU74
 243 00e6 E4E7     		b	.L27
 244              	.LVL19:
 245              	.L12:
3024:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
 246              		.loc 1 3024 9 is_stmt 1 view .LVU75
3034:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1R,
 247              		.loc 1 3034 9 view .LVU76
 248 00e8 6B69     		ldr	r3, [r5, #20]
 249 00ea 2269     		ldr	r2, [r4, #16]
 250 00ec 5B08     		lsrs	r3, r3, #1
 251 00ee 591E     		subs	r1, r3, #1
 252 00f0 22F0C063 		bic	r3, r2, #100663296
 253 00f4 23F4FE43 		bic	r3, r3, #32512
 254 00f8 0343     		orrs	r3, r3, r0
 255 00fa 43EA4163 		orr	r3, r3, r1, lsl #25
 256 00fe 2361     		str	r3, [r4, #16]
 257 0100 E2E7     		b	.L11
 258              	.LVL20:
 259              	.L15:
3050:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 260              		.loc 1 3050 9 view .LVU77
3050:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 261              		.loc 1 3050 13 is_stmt 0 view .LVU78
 262 0102 FFF7FEFF 		bl	HAL_GetTick
 263              	.LVL21:
3050:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 264              		.loc 1 3050 27 view .LVU79
 265 0106 801B     		subs	r0, r0, r6
3050:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 266              		.loc 1 3050 11 view .LVU80
 267 0108 0228     		cmp	r0, #2
 268 010a E4D9     		bls	.L13
 269 010c D0E7     		b	.L14
 270              	.L34:
 271 010e 00BF     		.align	2
 272              	.L33:
 273 0110 00100240 		.word	1073876992
 274              		.cfi_endproc
 275              	.LFE334:
 277              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
 278              		.align	1
 279              		.global	HAL_RCCEx_PeriphCLKConfig
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu softvfp
 285              	HAL_RCCEx_PeriphCLKConfig:
 286              	.LVL22:
 287              	.LFB309:
 213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tmpregister, tickstart;     /* no init needed */
 288              		.loc 1 213 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 8
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 214:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 292              		.loc 1 214 3 view .LVU82
 215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 293              		.loc 1 215 3 view .LVU83
 216:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 294              		.loc 1 216 3 view .LVU84
 219:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 295              		.loc 1 219 3 view .LVU85
 224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 296              		.loc 1 224 3 view .LVU86
 213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tmpregister, tickstart;     /* no init needed */
 297              		.loc 1 213 1 is_stmt 0 view .LVU87
 298 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 299              	.LCFI1:
 300              		.cfi_def_cfa_offset 40
 301              		.cfi_offset 4, -28
 302              		.cfi_offset 5, -24
 303              		.cfi_offset 6, -20
 304              		.cfi_offset 7, -16
 305              		.cfi_offset 8, -12
 306              		.cfi_offset 9, -8
 307              		.cfi_offset 14, -4
 224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 308              		.loc 1 224 46 view .LVU88
 309 0004 0568     		ldr	r5, [r0]
 224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 310              		.loc 1 224 5 view .LVU89
 311 0006 15F40065 		ands	r5, r5, #2048
 213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tmpregister, tickstart;     /* no init needed */
 312              		.loc 1 213 1 view .LVU90
 313 000a 0446     		mov	r4, r0
 224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 314              		.loc 1 224 5 view .LVU91
 315 000c 09D0     		beq	.L36
 227:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 316              		.loc 1 227 5 is_stmt 1 view .LVU92
 229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 317              		.loc 1 229 5 view .LVU93
 229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 318              		.loc 1 229 25 is_stmt 0 view .LVU94
 319 000e 416C     		ldr	r1, [r0, #68]
 229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 320              		.loc 1 229 5 view .LVU95
 321 0010 B1F5000F 		cmp	r1, #8388608
 322 0014 32D0     		beq	.L37
 323 0016 B1F5400F 		cmp	r1, #12582912
 324 001a 34D0     		beq	.L38
 325 001c 0029     		cmp	r1, #0
 326 001e 3DD0     		beq	.L39
 327 0020 0125     		movs	r5, #1
 328              	.LVL23:
 329              	.L36:
 337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 330              		.loc 1 337 3 is_stmt 1 view .LVU96
 337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 331              		.loc 1 337 43 is_stmt 0 view .LVU97
 332 0022 2368     		ldr	r3, [r4]
 337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 333              		.loc 1 337 5 view .LVU98
 334 0024 9E03     		lsls	r6, r3, #14
 335 0026 51D5     		bpl	.L40
 336              	.LBB2:
 339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 337              		.loc 1 339 5 is_stmt 1 view .LVU99
 338              	.LVL24:
 342:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 339              		.loc 1 342 5 view .LVU100
 345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 340              		.loc 1 345 5 view .LVU101
 345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 341              		.loc 1 345 8 is_stmt 0 view .LVU102
 342 0028 AE4E     		ldr	r6, .L129
 343 002a B36D     		ldr	r3, [r6, #88]
 345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 344              		.loc 1 345 40 view .LVU103
 345 002c D800     		lsls	r0, r3, #3
 346 002e 3CD4     		bmi	.L68
 347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
 347              		.loc 1 347 7 is_stmt 1 view .LVU104
 348              	.LBB3:
 347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
 349              		.loc 1 347 7 view .LVU105
 347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
 350              		.loc 1 347 7 view .LVU106
 351 0030 B36D     		ldr	r3, [r6, #88]
 352 0032 43F08053 		orr	r3, r3, #268435456
 353 0036 B365     		str	r3, [r6, #88]
 347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
 354              		.loc 1 347 7 view .LVU107
 355 0038 B36D     		ldr	r3, [r6, #88]
 356 003a 03F08053 		and	r3, r3, #268435456
 357 003e 0193     		str	r3, [sp, #4]
 347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
 358              		.loc 1 347 7 view .LVU108
 359 0040 019B     		ldr	r3, [sp, #4]
 360              	.LBE3:
 347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
 361              		.loc 1 347 7 view .LVU109
 348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 362              		.loc 1 348 7 view .LVU110
 363              	.LVL25:
 348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 364              		.loc 1 348 21 is_stmt 0 view .LVU111
 365 0042 4FF00108 		mov	r8, #1
 366              	.LVL26:
 367              	.L41:
 352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 368              		.loc 1 352 5 is_stmt 1 view .LVU112
 369 0046 A84F     		ldr	r7, .L129+4
 370 0048 3B68     		ldr	r3, [r7]
 371 004a 43F48073 		orr	r3, r3, #256
 372 004e 3B60     		str	r3, [r7]
 355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 373              		.loc 1 355 5 view .LVU113
 355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 374              		.loc 1 355 17 is_stmt 0 view .LVU114
 375 0050 FFF7FEFF 		bl	HAL_GetTick
 376              	.LVL27:
 377 0054 8146     		mov	r9, r0
 378              	.LVL28:
 357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 379              		.loc 1 357 5 is_stmt 1 view .LVU115
 380              	.L42:
 357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 381              		.loc 1 357 10 view .LVU116
 357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 382              		.loc 1 357 11 is_stmt 0 view .LVU117
 383 0056 3B68     		ldr	r3, [r7]
 357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 384              		.loc 1 357 10 view .LVU118
 385 0058 D905     		lsls	r1, r3, #23
 386 005a 29D5     		bpl	.L44
 366:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 387              		.loc 1 366 5 is_stmt 1 view .LVU119
 366:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 388              		.loc 1 366 7 is_stmt 0 view .LVU120
 389 005c 7DBB     		cbnz	r5, .L43
 369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 390              		.loc 1 369 7 is_stmt 1 view .LVU121
 369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 391              		.loc 1 369 21 is_stmt 0 view .LVU122
 392 005e D6F89030 		ldr	r3, [r6, #144]
 393              	.LVL29:
 371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 394              		.loc 1 371 7 is_stmt 1 view .LVU123
 371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 395              		.loc 1 371 9 is_stmt 0 view .LVU124
 396 0062 13F44073 		ands	r3, r3, #768
 397              	.LVL30:
 371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 398              		.loc 1 371 9 view .LVU125
 399 0066 40F0F380 		bne	.L45
 400              	.LVL31:
 401              	.L46:
 402:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 402              		.loc 1 402 9 is_stmt 1 view .LVU126
 403 006a D6F89030 		ldr	r3, [r6, #144]
 404 006e E26D     		ldr	r2, [r4, #92]
 405 0070 23F44073 		bic	r3, r3, #768
 406 0074 1343     		orrs	r3, r3, r2
 407 0076 C6F89030 		str	r3, [r6, #144]
 408 007a 20E0     		b	.L43
 409              	.LVL32:
 410              	.L37:
 402:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 411              		.loc 1 402 9 is_stmt 0 view .LVU127
 412              	.LBE2:
 236:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 413              		.loc 1 236 7 is_stmt 1 view .LVU128
 414 007c 994A     		ldr	r2, .L129
 415 007e D368     		ldr	r3, [r2, #12]
 416 0080 43F48033 		orr	r3, r3, #65536
 417 0084 D360     		str	r3, [r2, #12]
 239:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 418              		.loc 1 239 7 view .LVU129
 269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 419              		.loc 1 269 5 view .LVU130
 420              	.LVL33:
 421              	.L38:
 272:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 422              		.loc 1 272 7 view .LVU131
 423 0086 974A     		ldr	r2, .L129
 424 0088 616C     		ldr	r1, [r4, #68]
 425 008a D2F88830 		ldr	r3, [r2, #136]
 426 008e 23F44003 		bic	r3, r3, #12582912
 427 0092 0B43     		orrs	r3, r3, r1
 428 0094 C2F88830 		str	r3, [r2, #136]
 429 0098 0025     		movs	r5, #0
 430 009a C2E7     		b	.L36
 431              	.LVL34:
 432              	.L39:
 243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI1 clock source config set later after clock selection check */
 433              		.loc 1 243 7 view .LVU132
 243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI1 clock source config set later after clock selection check */
 434              		.loc 1 243 13 is_stmt 0 view .LVU133
 435 009c 0430     		adds	r0, r0, #4
 436              	.LVL35:
 243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* SAI1 clock source config set later after clock selection check */
 437              		.loc 1 243 13 view .LVU134
 438 009e FFF7FEFF 		bl	RCCEx_PLLSAI1_Config
 439              	.LVL36:
 245:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 440              		.loc 1 245 7 is_stmt 1 view .LVU135
 269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 441              		.loc 1 269 5 view .LVU136
 269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 442              		.loc 1 269 7 is_stmt 0 view .LVU137
 443 00a2 0546     		mov	r5, r0
 444 00a4 0028     		cmp	r0, #0
 445 00a6 BCD1     		bne	.L36
 446 00a8 EDE7     		b	.L38
 447              	.LVL37:
 448              	.L68:
 449              	.LBB4:
 339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 450              		.loc 1 339 22 view .LVU138
 451 00aa 4FF00008 		mov	r8, #0
 452 00ae CAE7     		b	.L41
 453              	.LVL38:
 454              	.L44:
 359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 455              		.loc 1 359 7 is_stmt 1 view .LVU139
 359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 456              		.loc 1 359 11 is_stmt 0 view .LVU140
 457 00b0 FFF7FEFF 		bl	HAL_GetTick
 458              	.LVL39:
 359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 459              		.loc 1 359 25 view .LVU141
 460 00b4 A0EB0900 		sub	r0, r0, r9
 359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 461              		.loc 1 359 9 view .LVU142
 462 00b8 0228     		cmp	r0, #2
 463 00ba CCD9     		bls	.L42
 464              	.LVL40:
 465              	.L48:
 361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
 466              		.loc 1 361 13 view .LVU143
 467 00bc 0325     		movs	r5, #3
 468              	.LVL41:
 469              	.L43:
 417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 470              		.loc 1 417 5 is_stmt 1 view .LVU144
 417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 471              		.loc 1 417 7 is_stmt 0 view .LVU145
 472 00be B8F1000F 		cmp	r8, #0
 473 00c2 03D0     		beq	.L40
 419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 474              		.loc 1 419 7 is_stmt 1 view .LVU146
 475 00c4 B36D     		ldr	r3, [r6, #88]
 476 00c6 23F08053 		bic	r3, r3, #268435456
 477 00ca B365     		str	r3, [r6, #88]
 478              	.LVL42:
 479              	.L40:
 419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 480              		.loc 1 419 7 is_stmt 0 view .LVU147
 481              	.LBE4:
 424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 482              		.loc 1 424 3 is_stmt 1 view .LVU148
 424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 483              		.loc 1 424 21 is_stmt 0 view .LVU149
 484 00cc 2368     		ldr	r3, [r4]
 424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 485              		.loc 1 424 5 view .LVU150
 486 00ce D807     		lsls	r0, r3, #31
 487 00d0 08D5     		bpl	.L50
 427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 488              		.loc 1 427 5 is_stmt 1 view .LVU151
 430:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 489              		.loc 1 430 5 view .LVU152
 490 00d2 8449     		ldr	r1, .L129
 491 00d4 206A     		ldr	r0, [r4, #32]
 492 00d6 D1F88820 		ldr	r2, [r1, #136]
 493 00da 22F00302 		bic	r2, r2, #3
 494 00de 0243     		orrs	r2, r2, r0
 495 00e0 C1F88820 		str	r2, [r1, #136]
 496              	.L50:
 434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 497              		.loc 1 434 3 view .LVU153
 434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 498              		.loc 1 434 5 is_stmt 0 view .LVU154
 499 00e4 9907     		lsls	r1, r3, #30
 500 00e6 08D5     		bpl	.L51
 437:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 501              		.loc 1 437 5 is_stmt 1 view .LVU155
 440:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 502              		.loc 1 440 5 view .LVU156
 503 00e8 7E49     		ldr	r1, .L129
 504 00ea 606A     		ldr	r0, [r4, #36]
 505 00ec D1F88820 		ldr	r2, [r1, #136]
 506 00f0 22F00C02 		bic	r2, r2, #12
 507 00f4 0243     		orrs	r2, r2, r0
 508 00f6 C1F88820 		str	r2, [r1, #136]
 509              	.L51:
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 510              		.loc 1 446 3 view .LVU157
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 511              		.loc 1 446 5 is_stmt 0 view .LVU158
 512 00fa 5A07     		lsls	r2, r3, #29
 513 00fc 08D5     		bpl	.L52
 449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 514              		.loc 1 449 5 is_stmt 1 view .LVU159
 452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 515              		.loc 1 452 5 view .LVU160
 516 00fe 7949     		ldr	r1, .L129
 517 0100 A06A     		ldr	r0, [r4, #40]
 518 0102 D1F88820 		ldr	r2, [r1, #136]
 519 0106 22F03002 		bic	r2, r2, #48
 520 010a 0243     		orrs	r2, r2, r0
 521 010c C1F88820 		str	r2, [r1, #136]
 522              	.L52:
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 523              		.loc 1 486 3 view .LVU161
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 524              		.loc 1 486 5 is_stmt 0 view .LVU162
 525 0110 9F06     		lsls	r7, r3, #26
 526 0112 08D5     		bpl	.L53
 489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 527              		.loc 1 489 5 is_stmt 1 view .LVU163
 492:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 528              		.loc 1 492 5 view .LVU164
 529 0114 7349     		ldr	r1, .L129
 530 0116 E06A     		ldr	r0, [r4, #44]
 531 0118 D1F88820 		ldr	r2, [r1, #136]
 532 011c 22F44062 		bic	r2, r2, #3072
 533 0120 0243     		orrs	r2, r2, r0
 534 0122 C1F88820 		str	r2, [r1, #136]
 535              	.L53:
 496:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 536              		.loc 1 496 3 view .LVU165
 496:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 537              		.loc 1 496 5 is_stmt 0 view .LVU166
 538 0126 9E05     		lsls	r6, r3, #22
 539 0128 08D5     		bpl	.L54
 498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 540              		.loc 1 498 5 is_stmt 1 view .LVU167
 499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 541              		.loc 1 499 5 view .LVU168
 542 012a 6E49     		ldr	r1, .L129
 543 012c E06B     		ldr	r0, [r4, #60]
 544 012e D1F88820 		ldr	r2, [r1, #136]
 545 0132 22F44022 		bic	r2, r2, #786432
 546 0136 0243     		orrs	r2, r2, r0
 547 0138 C1F88820 		str	r2, [r1, #136]
 548              	.L54:
 503:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 549              		.loc 1 503 3 view .LVU169
 503:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 550              		.loc 1 503 5 is_stmt 0 view .LVU170
 551 013c 5805     		lsls	r0, r3, #21
 552 013e 08D5     		bpl	.L55
 505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 553              		.loc 1 505 5 is_stmt 1 view .LVU171
 506:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 554              		.loc 1 506 5 view .LVU172
 555 0140 6849     		ldr	r1, .L129
 556 0142 206C     		ldr	r0, [r4, #64]
 557 0144 D1F88820 		ldr	r2, [r1, #136]
 558 0148 22F44012 		bic	r2, r2, #3145728
 559 014c 0243     		orrs	r2, r2, r0
 560 014e C1F88820 		str	r2, [r1, #136]
 561              	.L55:
 510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 562              		.loc 1 510 3 view .LVU173
 510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 563              		.loc 1 510 5 is_stmt 0 view .LVU174
 564 0152 5906     		lsls	r1, r3, #25
 565 0154 08D5     		bpl	.L56
 513:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 566              		.loc 1 513 5 is_stmt 1 view .LVU175
 516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 567              		.loc 1 516 5 view .LVU176
 568 0156 6349     		ldr	r1, .L129
 569 0158 206B     		ldr	r0, [r4, #48]
 570 015a D1F88820 		ldr	r2, [r1, #136]
 571 015e 22F44052 		bic	r2, r2, #12288
 572 0162 0243     		orrs	r2, r2, r0
 573 0164 C1F88820 		str	r2, [r1, #136]
 574              	.L56:
 522:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 575              		.loc 1 522 3 view .LVU177
 522:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 576              		.loc 1 522 5 is_stmt 0 view .LVU178
 577 0168 1A06     		lsls	r2, r3, #24
 578 016a 08D5     		bpl	.L57
 525:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 579              		.loc 1 525 5 is_stmt 1 view .LVU179
 528:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 580              		.loc 1 528 5 view .LVU180
 581 016c 5D49     		ldr	r1, .L129
 582 016e 606B     		ldr	r0, [r4, #52]
 583 0170 D1F88820 		ldr	r2, [r1, #136]
 584 0174 22F44042 		bic	r2, r2, #49152
 585 0178 0243     		orrs	r2, r2, r0
 586 017a C1F88820 		str	r2, [r1, #136]
 587              	.L57:
 534:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 588              		.loc 1 534 3 view .LVU181
 534:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 589              		.loc 1 534 5 is_stmt 0 view .LVU182
 590 017e DF05     		lsls	r7, r3, #23
 591 0180 08D5     		bpl	.L58
 537:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 592              		.loc 1 537 5 is_stmt 1 view .LVU183
 540:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 593              		.loc 1 540 5 view .LVU184
 594 0182 5849     		ldr	r1, .L129
 595 0184 A06B     		ldr	r0, [r4, #56]
 596 0186 D1F88820 		ldr	r2, [r1, #136]
 597 018a 22F44032 		bic	r2, r2, #196608
 598 018e 0243     		orrs	r2, r2, r0
 599 0190 C1F88820 		str	r2, [r1, #136]
 600              	.L58:
 560:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 601              		.loc 1 560 3 view .LVU185
 560:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 602              		.loc 1 560 5 is_stmt 0 view .LVU186
 603 0194 9E04     		lsls	r6, r3, #18
 604 0196 0FD5     		bpl	.L59
 562:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 605              		.loc 1 562 5 is_stmt 1 view .LVU187
 563:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 606              		.loc 1 563 5 view .LVU188
 607 0198 524A     		ldr	r2, .L129
 608 019a A16C     		ldr	r1, [r4, #72]
 609 019c D2F88830 		ldr	r3, [r2, #136]
 610 01a0 23F04063 		bic	r3, r3, #201326592
 611 01a4 0B43     		orrs	r3, r3, r1
 565:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 612              		.loc 1 565 7 is_stmt 0 view .LVU189
 613 01a6 B1F1006F 		cmp	r1, #134217728
 563:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 614              		.loc 1 563 5 view .LVU190
 615 01aa C2F88830 		str	r3, [r2, #136]
 565:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 616              		.loc 1 565 5 is_stmt 1 view .LVU191
 565:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 617              		.loc 1 565 7 is_stmt 0 view .LVU192
 618 01ae 78D1     		bne	.L60
 568:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 619              		.loc 1 568 7 is_stmt 1 view .LVU193
 620 01b0 D368     		ldr	r3, [r2, #12]
 621 01b2 43F48013 		orr	r3, r3, #1048576
 622 01b6 D360     		str	r3, [r2, #12]
 623              	.LVL43:
 624              	.L59:
 593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 625              		.loc 1 593 3 view .LVU194
 593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 626              		.loc 1 593 45 is_stmt 0 view .LVU195
 627 01b8 2368     		ldr	r3, [r4]
 593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 628              		.loc 1 593 5 view .LVU196
 629 01ba 1803     		lsls	r0, r3, #12
 630 01bc 0FD5     		bpl	.L61
 595:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 631              		.loc 1 595 5 is_stmt 1 view .LVU197
 596:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 632              		.loc 1 596 5 view .LVU198
 633 01be 494A     		ldr	r2, .L129
 634 01c0 E16C     		ldr	r1, [r4, #76]
 635 01c2 D2F88830 		ldr	r3, [r2, #136]
 636 01c6 23F04063 		bic	r3, r3, #201326592
 637 01ca 0B43     		orrs	r3, r3, r1
 598:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 638              		.loc 1 598 7 is_stmt 0 view .LVU199
 639 01cc B1F1006F 		cmp	r1, #134217728
 596:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 640              		.loc 1 596 5 view .LVU200
 641 01d0 C2F88830 		str	r3, [r2, #136]
 598:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 642              		.loc 1 598 5 is_stmt 1 view .LVU201
 598:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 643              		.loc 1 598 7 is_stmt 0 view .LVU202
 644 01d4 70D1     		bne	.L62
 601:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 645              		.loc 1 601 7 is_stmt 1 view .LVU203
 646 01d6 D368     		ldr	r3, [r2, #12]
 647 01d8 43F48013 		orr	r3, r3, #1048576
 648 01dc D360     		str	r3, [r2, #12]
 649              	.LVL44:
 650              	.L61:
 624:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 651              		.loc 1 624 5 view .LVU204
 630:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 652              		.loc 1 630 3 view .LVU205
 630:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 653              		.loc 1 630 45 is_stmt 0 view .LVU206
 654 01de 2368     		ldr	r3, [r4]
 630:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 655              		.loc 1 630 5 view .LVU207
 656 01e0 5903     		lsls	r1, r3, #13
 657 01e2 0FD5     		bpl	.L63
 632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 658              		.loc 1 632 5 is_stmt 1 view .LVU208
 633:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 659              		.loc 1 633 5 view .LVU209
 660 01e4 3F4A     		ldr	r2, .L129
 661 01e6 216D     		ldr	r1, [r4, #80]
 662 01e8 D2F88830 		ldr	r3, [r2, #136]
 663 01ec 23F04063 		bic	r3, r3, #201326592
 664 01f0 0B43     		orrs	r3, r3, r1
 635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 665              		.loc 1 635 7 is_stmt 0 view .LVU210
 666 01f2 B1F1006F 		cmp	r1, #134217728
 633:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 667              		.loc 1 633 5 view .LVU211
 668 01f6 C2F88830 		str	r3, [r2, #136]
 635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 669              		.loc 1 635 5 is_stmt 1 view .LVU212
 635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 670              		.loc 1 635 7 is_stmt 0 view .LVU213
 671 01fa 68D1     		bne	.L64
 638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 672              		.loc 1 638 7 is_stmt 1 view .LVU214
 673 01fc D368     		ldr	r3, [r2, #12]
 674 01fe 43F48013 		orr	r3, r3, #1048576
 675 0202 D360     		str	r3, [r2, #12]
 676              	.LVL45:
 677              	.L63:
 656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 678              		.loc 1 656 5 view .LVU215
 661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 679              		.loc 1 661 3 view .LVU216
 661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 680              		.loc 1 661 45 is_stmt 0 view .LVU217
 681 0204 2368     		ldr	r3, [r4]
 661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 682              		.loc 1 661 5 view .LVU218
 683 0206 5A04     		lsls	r2, r3, #17
 684 0208 12D5     		bpl	.L65
 664:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 685              		.loc 1 664 5 is_stmt 1 view .LVU219
 667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 686              		.loc 1 667 5 view .LVU220
 687 020a 3649     		ldr	r1, .L129
 688 020c 626D     		ldr	r2, [r4, #84]
 689 020e D1F88830 		ldr	r3, [r1, #136]
 690 0212 23F04053 		bic	r3, r3, #805306368
 691 0216 1343     		orrs	r3, r3, r2
 670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 692              		.loc 1 670 7 is_stmt 0 view .LVU221
 693 0218 B2F1805F 		cmp	r2, #268435456
 667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 694              		.loc 1 667 5 view .LVU222
 695 021c C1F88830 		str	r3, [r1, #136]
 670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 696              		.loc 1 670 5 is_stmt 1 view .LVU223
 670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 697              		.loc 1 670 7 is_stmt 0 view .LVU224
 698 0220 06D1     		bne	.L65
 673:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 699              		.loc 1 673 7 is_stmt 1 view .LVU225
 673:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 700              		.loc 1 673 13 is_stmt 0 view .LVU226
 701 0222 0221     		movs	r1, #2
 702 0224 201D     		adds	r0, r4, #4
 703 0226 FFF7FEFF 		bl	RCCEx_PLLSAI1_Config
 704              	.LVL46:
 675:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 705              		.loc 1 675 7 is_stmt 1 view .LVU227
 675:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 706              		.loc 1 675 9 is_stmt 0 view .LVU228
 707 022a 0028     		cmp	r0, #0
 708 022c 18BF     		it	ne
 709 022e 0546     		movne	r5, r0
 710              	.LVL47:
 711              	.L65:
 705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 712              		.loc 1 705 3 is_stmt 1 view .LVU229
 705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 713              		.loc 1 705 45 is_stmt 0 view .LVU230
 714 0230 2368     		ldr	r3, [r4]
 705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 715              		.loc 1 705 5 view .LVU231
 716 0232 1B04     		lsls	r3, r3, #16
 717 0234 08D5     		bpl	.L66
 708:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 718              		.loc 1 708 5 is_stmt 1 view .LVU232
 711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 719              		.loc 1 711 5 view .LVU233
 720 0236 2B4A     		ldr	r2, .L129
 721 0238 A16D     		ldr	r1, [r4, #88]
 722 023a D2F88830 		ldr	r3, [r2, #136]
 723 023e 23F08043 		bic	r3, r3, #1073741824
 724 0242 0B43     		orrs	r3, r3, r1
 725 0244 C2F88830 		str	r3, [r2, #136]
 726              	.L66:
 831:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 727              		.loc 1 831 3 view .LVU234
 832:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 728              		.loc 1 832 1 is_stmt 0 view .LVU235
 729 0248 2846     		mov	r0, r5
 730 024a 03B0     		add	sp, sp, #12
 731              	.LCFI2:
 732              		.cfi_remember_state
 733              		.cfi_def_cfa_offset 28
 734              		@ sp needed
 735 024c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 736              	.LVL48:
 737              	.L45:
 738              	.LCFI3:
 739              		.cfi_restore_state
 740              	.LBB5:
 371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 741              		.loc 1 371 49 discriminator 1 view .LVU236
 742 0250 E26D     		ldr	r2, [r4, #92]
 743 0252 9342     		cmp	r3, r2
 744 0254 3FF409AF 		beq	.L46
 374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* RTC Clock selection can be changed only if the Backup Domain is reset */
 745              		.loc 1 374 9 is_stmt 1 view .LVU237
 374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* RTC Clock selection can be changed only if the Backup Domain is reset */
 746              		.loc 1 374 23 is_stmt 0 view .LVU238
 747 0258 D6F89020 		ldr	r2, [r6, #144]
 376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         __HAL_RCC_BACKUPRESET_RELEASE();
 748              		.loc 1 376 9 view .LVU239
 749 025c D6F89030 		ldr	r3, [r6, #144]
 750              	.LVL49:
 376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         __HAL_RCC_BACKUPRESET_RELEASE();
 751              		.loc 1 376 9 view .LVU240
 752 0260 43F48033 		orr	r3, r3, #65536
 753 0264 C6F89030 		str	r3, [r6, #144]
 377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Restore the Content of BDCR register */
 754              		.loc 1 377 9 view .LVU241
 755 0268 D6F89030 		ldr	r3, [r6, #144]
 374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* RTC Clock selection can be changed only if the Backup Domain is reset */
 756              		.loc 1 374 21 view .LVU242
 757 026c 22F44071 		bic	r1, r2, #768
 758              	.LVL50:
 376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         __HAL_RCC_BACKUPRESET_RELEASE();
 759              		.loc 1 376 9 is_stmt 1 view .LVU243
 377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Restore the Content of BDCR register */
 760              		.loc 1 377 9 view .LVU244
 761 0270 23F48033 		bic	r3, r3, #65536
 383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 762              		.loc 1 383 10 is_stmt 0 view .LVU245
 763 0274 D207     		lsls	r2, r2, #31
 377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Restore the Content of BDCR register */
 764              		.loc 1 377 9 view .LVU246
 765 0276 C6F89030 		str	r3, [r6, #144]
 379:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 766              		.loc 1 379 9 is_stmt 1 view .LVU247
 379:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 767              		.loc 1 379 19 is_stmt 0 view .LVU248
 768 027a C6F89010 		str	r1, [r6, #144]
 383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 769              		.loc 1 383 7 is_stmt 1 view .LVU249
 383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 770              		.loc 1 383 10 is_stmt 0 view .LVU250
 771 027e 7FF5F4AE 		bpl	.L46
 386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 772              		.loc 1 386 9 is_stmt 1 view .LVU251
 386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 773              		.loc 1 386 21 is_stmt 0 view .LVU252
 774 0282 FFF7FEFF 		bl	HAL_GetTick
 775              	.LVL51:
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 776              		.loc 1 391 13 view .LVU253
 777 0286 41F28839 		movw	r9, #5000
 778              	.LVL52:
 386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 779              		.loc 1 386 21 view .LVU254
 780 028a 0746     		mov	r7, r0
 781              	.LVL53:
 389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 782              		.loc 1 389 9 is_stmt 1 view .LVU255
 783              	.L47:
 389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 784              		.loc 1 389 14 view .LVU256
 389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 785              		.loc 1 389 15 is_stmt 0 view .LVU257
 786 028c D6F89030 		ldr	r3, [r6, #144]
 389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 787              		.loc 1 389 14 view .LVU258
 788 0290 9B07     		lsls	r3, r3, #30
 789 0292 3FF5EAAE 		bmi	.L46
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 790              		.loc 1 391 11 is_stmt 1 view .LVU259
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 791              		.loc 1 391 15 is_stmt 0 view .LVU260
 792 0296 FFF7FEFF 		bl	HAL_GetTick
 793              	.LVL54:
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 794              		.loc 1 391 29 view .LVU261
 795 029a C01B     		subs	r0, r0, r7
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 796              		.loc 1 391 13 view .LVU262
 797 029c 4845     		cmp	r0, r9
 798 029e F5D9     		bls	.L47
 799 02a0 0CE7     		b	.L48
 800              	.LVL55:
 801              	.L60:
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 802              		.loc 1 391 13 view .LVU263
 803              	.LBE5:
 573:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 804              		.loc 1 573 7 is_stmt 1 view .LVU264
 573:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 805              		.loc 1 573 9 is_stmt 0 view .LVU265
 806 02a2 B1F1806F 		cmp	r1, #67108864
 807 02a6 87D1     		bne	.L59
 576:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 808              		.loc 1 576 9 is_stmt 1 view .LVU266
 576:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 809              		.loc 1 576 15 is_stmt 0 view .LVU267
 810 02a8 0121     		movs	r1, #1
 811 02aa 201D     		adds	r0, r4, #4
 812 02ac FFF7FEFF 		bl	RCCEx_PLLSAI1_Config
 813              	.LVL56:
 578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 814              		.loc 1 578 9 is_stmt 1 view .LVU268
 578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 815              		.loc 1 578 11 is_stmt 0 view .LVU269
 816 02b0 0028     		cmp	r0, #0
 817 02b2 18BF     		it	ne
 818 02b4 0546     		movne	r5, r0
 819              	.LVL57:
 578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 820              		.loc 1 578 11 view .LVU270
 821 02b6 7FE7     		b	.L59
 822              	.LVL58:
 823              	.L62:
 610:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 824              		.loc 1 610 10 is_stmt 1 view .LVU271
 610:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 825              		.loc 1 610 12 is_stmt 0 view .LVU272
 826 02b8 B1F1806F 		cmp	r1, #67108864
 827 02bc 8FD1     		bne	.L61
 613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 828              		.loc 1 613 7 is_stmt 1 view .LVU273
 613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 829              		.loc 1 613 13 is_stmt 0 view .LVU274
 830 02be 0121     		movs	r1, #1
 831 02c0 201D     		adds	r0, r4, #4
 832 02c2 FFF7FEFF 		bl	RCCEx_PLLSAI1_Config
 833              	.LVL59:
 615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 834              		.loc 1 615 7 is_stmt 1 view .LVU275
 615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 835              		.loc 1 615 9 is_stmt 0 view .LVU276
 836 02c6 0028     		cmp	r0, #0
 837 02c8 18BF     		it	ne
 838 02ca 0546     		movne	r5, r0
 839              	.LVL60:
 615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 840              		.loc 1 615 9 view .LVU277
 841 02cc 87E7     		b	.L61
 842              	.LVL61:
 843              	.L64:
 641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 844              		.loc 1 641 10 is_stmt 1 view .LVU278
 641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 845              		.loc 1 641 12 is_stmt 0 view .LVU279
 846 02ce B1F1806F 		cmp	r1, #67108864
 847 02d2 97D1     		bne	.L63
 644:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 848              		.loc 1 644 7 is_stmt 1 view .LVU280
 644:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 849              		.loc 1 644 13 is_stmt 0 view .LVU281
 850 02d4 0121     		movs	r1, #1
 851 02d6 201D     		adds	r0, r4, #4
 852 02d8 FFF7FEFF 		bl	RCCEx_PLLSAI1_Config
 853              	.LVL62:
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 854              		.loc 1 646 7 is_stmt 1 view .LVU282
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 855              		.loc 1 646 9 is_stmt 0 view .LVU283
 856 02dc 0028     		cmp	r0, #0
 857 02de 18BF     		it	ne
 858 02e0 0546     		movne	r5, r0
 859              	.LVL63:
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 860              		.loc 1 646 9 view .LVU284
 861 02e2 8FE7     		b	.L63
 862              	.L130:
 863              		.align	2
 864              	.L129:
 865 02e4 00100240 		.word	1073876992
 866 02e8 00700040 		.word	1073770496
 867              		.cfi_endproc
 868              	.LFE309:
 870              		.section	.text.HAL_RCCEx_GetPeriphCLKConfig,"ax",%progbits
 871              		.align	1
 872              		.global	HAL_RCCEx_GetPeriphCLKConfig
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu softvfp
 878              	HAL_RCCEx_GetPeriphCLKConfig:
 879              	.LVL64:
 880              	.LFB310:
 843:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
 881              		.loc 1 843 1 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 872:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 886              		.loc 1 872 3 view .LVU286
 872:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_LPUART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCL
 887              		.loc 1 872 39 is_stmt 0 view .LVU287
 888 0000 394B     		ldr	r3, .L132
 889 0002 0360     		str	r3, [r0]
 948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
 890              		.loc 1 948 3 is_stmt 1 view .LVU288
 948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
 891              		.loc 1 948 42 is_stmt 0 view .LVU289
 892 0004 394B     		ldr	r3, .L132+4
 893 0006 DA68     		ldr	r2, [r3, #12]
 948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
 894              		.loc 1 948 85 view .LVU290
 895 0008 02F00302 		and	r2, r2, #3
 948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
 896              		.loc 1 948 40 view .LVU291
 897 000c 4260     		str	r2, [r0, #4]
 952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
 898              		.loc 1 952 3 is_stmt 1 view .LVU292
 952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
 899              		.loc 1 952 38 is_stmt 0 view .LVU293
 900 000e DA68     		ldr	r2, [r3, #12]
 952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
 901              		.loc 1 952 79 view .LVU294
 902 0010 C2F30212 		ubfx	r2, r2, #4, #3
 952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
 903              		.loc 1 952 104 view .LVU295
 904 0014 0132     		adds	r2, r2, #1
 952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
 905              		.loc 1 952 35 view .LVU296
 906 0016 8260     		str	r2, [r0, #8]
 954:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1P = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1P) >> RCC_P
 907              		.loc 1 954 3 is_stmt 1 view .LVU297
 954:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1P = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1P) >> RCC_P
 908              		.loc 1 954 37 is_stmt 0 view .LVU298
 909 0018 1A69     		ldr	r2, [r3, #16]
 954:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1P = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1P) >> RCC_P
 910              		.loc 1 954 90 view .LVU299
 911 001a C2F30622 		ubfx	r2, r2, #8, #7
 954:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1P = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1P) >> RCC_P
 912              		.loc 1 954 35 view .LVU300
 913 001e C260     		str	r2, [r0, #12]
 955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1Q = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q) >> RCC_P
 914              		.loc 1 955 3 is_stmt 1 view .LVU301
 955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1Q = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q) >> RCC_P
 915              		.loc 1 955 39 is_stmt 0 view .LVU302
 916 0020 1A69     		ldr	r2, [r3, #16]
 955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1Q = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q) >> RCC_P
 917              		.loc 1 955 125 view .LVU303
 918 0022 520B     		lsrs	r2, r2, #13
 919 0024 02F01002 		and	r2, r2, #16
 955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1Q = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q) >> RCC_P
 920              		.loc 1 955 132 view .LVU304
 921 0028 0732     		adds	r2, r2, #7
 955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1Q = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q) >> RCC_P
 922              		.loc 1 955 35 view .LVU305
 923 002a 0261     		str	r2, [r0, #16]
 956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1R = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >> RCC_P
 924              		.loc 1 956 3 is_stmt 1 view .LVU306
 956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1R = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >> RCC_P
 925              		.loc 1 956 39 is_stmt 0 view .LVU307
 926 002c 1A69     		ldr	r2, [r3, #16]
 956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1R = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >> RCC_P
 927              		.loc 1 956 92 view .LVU308
 928 002e C2F34152 		ubfx	r2, r2, #21, #2
 956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1R = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >> RCC_P
 929              		.loc 1 956 125 view .LVU309
 930 0032 0132     		adds	r2, r2, #1
 956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1R = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >> RCC_P
 931              		.loc 1 956 131 view .LVU310
 932 0034 5200     		lsls	r2, r2, #1
 956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   PeriphClkInit->PLLSAI1.PLLSAI1R = ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >> RCC_P
 933              		.loc 1 956 35 view .LVU311
 934 0036 4261     		str	r2, [r0, #20]
 957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 935              		.loc 1 957 3 is_stmt 1 view .LVU312
 957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 936              		.loc 1 957 39 is_stmt 0 view .LVU313
 937 0038 1A69     		ldr	r2, [r3, #16]
 957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 938              		.loc 1 957 92 view .LVU314
 939 003a C2F34162 		ubfx	r2, r2, #25, #2
 957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 940              		.loc 1 957 125 view .LVU315
 941 003e 0132     		adds	r2, r2, #1
 957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 942              		.loc 1 957 131 view .LVU316
 943 0040 5200     		lsls	r2, r2, #1
 957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 944              		.loc 1 957 35 view .LVU317
 945 0042 8261     		str	r2, [r0, #24]
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the USART2 clock source ---------------------------------------------*/
 946              		.loc 1 981 3 is_stmt 1 view .LVU318
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the USART2 clock source ---------------------------------------------*/
 947              		.loc 1 981 42 is_stmt 0 view .LVU319
 948 0044 D3F88820 		ldr	r2, [r3, #136]
 949 0048 02F00302 		and	r2, r2, #3
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get the USART2 clock source ---------------------------------------------*/
 950              		.loc 1 981 40 view .LVU320
 951 004c 0262     		str	r2, [r0, #32]
 983:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 952              		.loc 1 983 3 is_stmt 1 view .LVU321
 983:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 953              		.loc 1 983 42 is_stmt 0 view .LVU322
 954 004e D3F88820 		ldr	r2, [r3, #136]
 955 0052 02F00C02 		and	r2, r2, #12
 983:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 956              		.loc 1 983 40 view .LVU323
 957 0056 4262     		str	r2, [r0, #36]
 987:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USART3 */
 958              		.loc 1 987 3 is_stmt 1 view .LVU324
 987:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USART3 */
 959              		.loc 1 987 42 is_stmt 0 view .LVU325
 960 0058 D3F88820 		ldr	r2, [r3, #136]
 961 005c 02F03002 		and	r2, r2, #48
 987:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USART3 */
 962              		.loc 1 987 40 view .LVU326
 963 0060 8262     		str	r2, [r0, #40]
1001:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 964              		.loc 1 1001 3 is_stmt 1 view .LVU327
1001:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 965              		.loc 1 1001 42 is_stmt 0 view .LVU328
 966 0062 D3F88820 		ldr	r2, [r3, #136]
 967 0066 02F44062 		and	r2, r2, #3072
1001:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 968              		.loc 1 1001 40 view .LVU329
 969 006a C262     		str	r2, [r0, #44]
1004:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 970              		.loc 1 1004 3 is_stmt 1 view .LVU330
1004:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 971              		.loc 1 1004 42 is_stmt 0 view .LVU331
 972 006c D3F88820 		ldr	r2, [r3, #136]
 973 0070 02F44052 		and	r2, r2, #12288
1004:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 974              		.loc 1 1004 40 view .LVU332
 975 0074 0263     		str	r2, [r0, #48]
1008:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C2 */
 976              		.loc 1 1008 3 is_stmt 1 view .LVU333
1008:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C2 */
 977              		.loc 1 1008 42 is_stmt 0 view .LVU334
 978 0076 D3F88820 		ldr	r2, [r3, #136]
 979 007a 02F44042 		and	r2, r2, #49152
1008:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* I2C2 */
 980              		.loc 1 1008 40 view .LVU335
 981 007e 4263     		str	r2, [r0, #52]
1012:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 982              		.loc 1 1012 3 is_stmt 1 view .LVU336
1012:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 983              		.loc 1 1012 42 is_stmt 0 view .LVU337
 984 0080 D3F88820 		ldr	r2, [r3, #136]
 985 0084 02F44032 		and	r2, r2, #196608
1012:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 986              		.loc 1 1012 40 view .LVU338
 987 0088 8263     		str	r2, [r0, #56]
1020:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 988              		.loc 1 1020 3 is_stmt 1 view .LVU339
1020:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 989              		.loc 1 1020 42 is_stmt 0 view .LVU340
 990 008a D3F88820 		ldr	r2, [r3, #136]
 991 008e 02F44022 		and	r2, r2, #786432
1020:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 992              		.loc 1 1020 40 view .LVU341
 993 0092 C263     		str	r2, [r0, #60]
1023:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 994              		.loc 1 1023 3 is_stmt 1 view .LVU342
1023:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 995              		.loc 1 1023 42 is_stmt 0 view .LVU343
 996 0094 D3F88820 		ldr	r2, [r3, #136]
 997 0098 02F44012 		and	r2, r2, #3145728
1023:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 998              		.loc 1 1023 40 view .LVU344
 999 009c 0264     		str	r2, [r0, #64]
1027:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI1 */
 1000              		.loc 1 1027 3 is_stmt 1 view .LVU345
1027:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI1 */
 1001              		.loc 1 1027 42 is_stmt 0 view .LVU346
 1002 009e D3F88820 		ldr	r2, [r3, #136]
 1003 00a2 02F44002 		and	r2, r2, #12582912
1027:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI1 */
 1004              		.loc 1 1027 40 view .LVU347
 1005 00a6 4264     		str	r2, [r0, #68]
1036:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1006              		.loc 1 1036 3 is_stmt 1 view .LVU348
1036:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1007              		.loc 1 1036 42 is_stmt 0 view .LVU349
 1008 00a8 D3F89020 		ldr	r2, [r3, #144]
 1009 00ac 02F44072 		and	r2, r2, #768
1036:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1010              		.loc 1 1036 40 view .LVU350
 1011 00b0 C265     		str	r2, [r0, #92]
1040:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USB_OTG_FS || USB */
 1012              		.loc 1 1040 3 is_stmt 1 view .LVU351
1040:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USB_OTG_FS || USB */
 1013              		.loc 1 1040 40 is_stmt 0 view .LVU352
 1014 00b2 D3F88820 		ldr	r2, [r3, #136]
 1015 00b6 02F04062 		and	r2, r2, #201326592
1040:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* USB_OTG_FS || USB */
 1016              		.loc 1 1040 38 view .LVU353
 1017 00ba 8264     		str	r2, [r0, #72]
1045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SDMMC1 */
 1018              		.loc 1 1045 3 is_stmt 1 view .LVU354
1045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SDMMC1 */
 1019              		.loc 1 1045 43 is_stmt 0 view .LVU355
 1020 00bc D3F88820 		ldr	r2, [r3, #136]
 1021 00c0 02F04062 		and	r2, r2, #201326592
1045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SDMMC1 */
 1022              		.loc 1 1045 41 view .LVU356
 1023 00c4 C264     		str	r2, [r0, #76]
1049:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1024              		.loc 1 1049 3 is_stmt 1 view .LVU357
1049:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1025              		.loc 1 1049 40 is_stmt 0 view .LVU358
 1026 00c6 D3F88820 		ldr	r2, [r3, #136]
 1027 00ca 02F04062 		and	r2, r2, #201326592
1049:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1028              		.loc 1 1049 38 view .LVU359
 1029 00ce 0265     		str	r2, [r0, #80]
1053:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* !STM32L412xx && !STM32L422xx */
 1030              		.loc 1 1053 3 is_stmt 1 view .LVU360
1053:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* !STM32L412xx && !STM32L422xx */
 1031              		.loc 1 1053 42 is_stmt 0 view .LVU361
 1032 00d0 D3F88820 		ldr	r2, [r3, #136]
 1033 00d4 02F04052 		and	r2, r2, #805306368
1053:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* !STM32L412xx && !STM32L422xx */
 1034              		.loc 1 1053 40 view .LVU362
 1035 00d8 4265     		str	r2, [r0, #84]
1058:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SWPMI1 */
 1036              		.loc 1 1058 3 is_stmt 1 view .LVU363
1058:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SWPMI1 */
 1037              		.loc 1 1058 42 is_stmt 0 view .LVU364
 1038 00da D3F88830 		ldr	r3, [r3, #136]
 1039 00de 03F08043 		and	r3, r3, #1073741824
1058:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SWPMI1 */
 1040              		.loc 1 1058 40 view .LVU365
 1041 00e2 8365     		str	r3, [r0, #88]
1085:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1042              		.loc 1 1085 1 view .LVU366
 1043 00e4 7047     		bx	lr
 1044              	.L133:
 1045 00e6 00BF     		.align	2
 1046              	.L132:
 1047 00e8 E7EF0E00 		.word	978919
 1048 00ec 00100240 		.word	1073876992
 1049              		.cfi_endproc
 1050              	.LFE310:
 1052              		.section	.text.HAL_RCCEx_GetPeriphCLKFreq,"ax",%progbits
 1053              		.align	1
 1054              		.global	HAL_RCCEx_GetPeriphCLKFreq
 1055              		.syntax unified
 1056              		.thumb
 1057              		.thumb_func
 1058              		.fpu softvfp
 1060              	HAL_RCCEx_GetPeriphCLKFreq:
 1061              	.LVL65:
 1062              	.LFB311:
1169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
 1063              		.loc 1 1169 1 is_stmt 1 view -0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
1170:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t srcclk, pll_oscsource, pllvco, plln;    /* no init needed */
 1068              		.loc 1 1170 3 view .LVU368
1171:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SDMMC1) && defined(RCC_CCIPR2_SDMMCSEL)
 1069              		.loc 1 1171 3 view .LVU369
1177:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1070              		.loc 1 1177 3 view .LVU370
1179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1071              		.loc 1 1179 3 view .LVU371
1179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1072              		.loc 1 1179 5 is_stmt 0 view .LVU372
 1073 0000 B0F5003F 		cmp	r0, #131072
1169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
 1074              		.loc 1 1169 1 view .LVU373
 1075 0004 10B4     		push	{r4}
 1076              	.LCFI4:
 1077              		.cfi_def_cfa_offset 4
 1078              		.cfi_offset 4, -4
 1079 0006 C44B     		ldr	r3, .L360
1179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1080              		.loc 1 1179 5 view .LVU374
 1081 0008 1DD1     		bne	.L135
1182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1082              		.loc 1 1182 5 is_stmt 1 view .LVU375
1182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1083              		.loc 1 1182 14 is_stmt 0 view .LVU376
 1084 000a D3F89020 		ldr	r2, [r3, #144]
1182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1085              		.loc 1 1182 12 view .LVU377
 1086 000e 02F44072 		and	r2, r2, #768
 1087              	.LVL66:
1184:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1088              		.loc 1 1184 5 is_stmt 1 view .LVU378
 1089 0012 B2F5007F 		cmp	r2, #512
 1090 0016 00F0AF81 		beq	.L195
 1091 001a B2F5407F 		cmp	r2, #768
 1092 001e 0AD0     		beq	.L137
 1093 0020 B2F5807F 		cmp	r2, #256
 1094              	.L343:
1184:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1095              		.loc 1 1184 5 is_stmt 0 view .LVU379
 1096 0024 3BD1     		bne	.L203
 1097              	.L196:
1927:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1098              		.loc 1 1927 11 is_stmt 1 view .LVU380
1927:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1099              		.loc 1 1927 14 is_stmt 0 view .LVU381
 1100 0026 D3F89000 		ldr	r0, [r3, #144]
 1101              	.LVL67:
1190:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1102              		.loc 1 1190 19 view .LVU382
 1103 002a 10F00200 		ands	r0, r0, #2
 1104 002e 18BF     		it	ne
 1105 0030 4FF40040 		movne	r0, #32768
 1106 0034 05E0     		b	.L134
 1107              	.LVL68:
 1108              	.L137:
1202:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1109              		.loc 1 1202 7 is_stmt 1 view .LVU383
1202:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1110              		.loc 1 1202 10 is_stmt 0 view .LVU384
 1111 0036 1868     		ldr	r0, [r3]
 1112              	.LVL69:
1204:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1113              		.loc 1 1204 19 view .LVU385
 1114 0038 10F40030 		ands	r0, r0, #131072
 1115 003c 18BF     		it	ne
 1116 003e 4FF46130 		movne	r0, #230400
 1117              	.LVL70:
 1118              	.L134:
2016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1119              		.loc 1 2016 1 view .LVU386
 1120 0042 10BC     		pop	{r4}
 1121              	.LCFI5:
 1122              		.cfi_remember_state
 1123              		.cfi_restore 4
 1124              		.cfi_def_cfa_offset 0
 1125 0044 7047     		bx	lr
 1126              	.LVL71:
 1127              	.L135:
 1128              	.LCFI6:
 1129              		.cfi_restore_state
1215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1130              		.loc 1 1215 5 is_stmt 1 view .LVU387
1215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1131              		.loc 1 1215 21 is_stmt 0 view .LVU388
 1132 0046 DA68     		ldr	r2, [r3, #12]
1215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1133              		.loc 1 1215 19 view .LVU389
 1134 0048 02F00302 		and	r2, r2, #3
 1135              	.LVL72:
1218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1136              		.loc 1 1218 5 is_stmt 1 view .LVU390
 1137 004c 022A     		cmp	r2, #2
 1138 004e 28D0     		beq	.L139
 1139 0050 032A     		cmp	r2, #3
 1140 0052 2DD0     		beq	.L140
 1141 0054 012A     		cmp	r2, #1
 1142 0056 32D1     		bne	.L198
1221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1143              		.loc 1 1221 7 view .LVU391
1221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1144              		.loc 1 1221 10 is_stmt 0 view .LVU392
 1145 0058 1A68     		ldr	r2, [r3]
 1146              	.LVL73:
1221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1147              		.loc 1 1221 9 view .LVU393
 1148 005a 12F00202 		ands	r2, r2, #2
 1149 005e 0CD0     		beq	.L141
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1150              		.loc 1 1224 9 is_stmt 1 view .LVU394
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1151              		.loc 1 1224 33 is_stmt 0 view .LVU395
 1152 0060 1A68     		ldr	r2, [r3]
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1153              		.loc 1 1224 16 view .LVU396
 1154 0062 AE49     		ldr	r1, .L360+4
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1155              		.loc 1 1224 59 view .LVU397
 1156 0064 1207     		lsls	r2, r2, #28
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1157              		.loc 1 1224 33 view .LVU398
 1158 0066 4BBF     		itete	mi
 1159 0068 1A68     		ldrmi	r2, [r3]
 1160 006a D3F89420 		ldrpl	r2, [r3, #148]
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1161              		.loc 1 1224 59 view .LVU399
 1162 006e C2F30312 		ubfxmi	r2, r2, #4, #4
 1163 0072 C2F30322 		ubfxpl	r2, r2, #8, #4
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1164              		.loc 1 1224 16 view .LVU400
 1165 0076 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1166              	.LVL74:
 1167              	.L141:
1257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1168              		.loc 1 1257 5 is_stmt 1 view .LVU401
 1169 007a B0F5807F 		cmp	r0, #256
 1170 007e 00F06381 		beq	.L144
 1171 0082 2ED8     		bhi	.L145
 1172 0084 2028     		cmp	r0, #32
 1173 0086 00F02481 		beq	.L146
 1174 008a 1AD8     		bhi	.L147
 1175 008c 0228     		cmp	r0, #2
 1176 008e 00F00281 		beq	.L148
 1177 0092 0428     		cmp	r0, #4
 1178 0094 00F01081 		beq	.L149
 1179 0098 0128     		cmp	r0, #1
 1180 009a 00F0ED80 		beq	.L150
 1181              	.LVL75:
 1182              	.L203:
1257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1183              		.loc 1 1257 5 is_stmt 0 view .LVU402
 1184 009e 0020     		movs	r0, #0
 1185              	.LVL76:
2015:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 1186              		.loc 1 2015 3 is_stmt 1 view .LVU403
2015:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 1187              		.loc 1 2015 9 is_stmt 0 view .LVU404
 1188 00a0 CFE7     		b	.L134
 1189              	.LVL77:
 1190              	.L139:
1232:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1191              		.loc 1 1232 7 is_stmt 1 view .LVU405
1232:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1192              		.loc 1 1232 10 is_stmt 0 view .LVU406
 1193 00a2 1A68     		ldr	r2, [r3]
 1194              	.LVL78:
1234:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1195              		.loc 1 1234 16 view .LVU407
 1196 00a4 9E49     		ldr	r1, .L360+8
 1197 00a6 12F48062 		ands	r2, r2, #1024
 1198 00aa 18BF     		it	ne
 1199 00ac 0A46     		movne	r2, r1
 1200 00ae E4E7     		b	.L141
 1201              	.LVL79:
 1202              	.L140:
1242:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1203              		.loc 1 1242 7 is_stmt 1 view .LVU408
1242:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1204              		.loc 1 1242 10 is_stmt 0 view .LVU409
 1205 00b0 1A68     		ldr	r2, [r3]
 1206              	.LVL80:
1244:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1207              		.loc 1 1244 16 view .LVU410
 1208 00b2 12F40032 		ands	r2, r2, #131072
 1209 00b6 18BF     		it	ne
 1210 00b8 4FF4E102 		movne	r2, #7372800
 1211 00bc DDE7     		b	.L141
 1212              	.LVL81:
 1213              	.L198:
1218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1214              		.loc 1 1218 5 view .LVU411
 1215 00be 0022     		movs	r2, #0
 1216              	.LVL82:
1218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1217              		.loc 1 1218 5 view .LVU412
 1218 00c0 DBE7     		b	.L141
 1219              	.LVL83:
 1220              	.L147:
1257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1221              		.loc 1 1257 5 view .LVU413
 1222 00c2 4028     		cmp	r0, #64
 1223 00c4 00F03081 		beq	.L151
 1224 00c8 8028     		cmp	r0, #128
 1225 00ca E8D1     		bne	.L203
1784:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1226              		.loc 1 1784 9 is_stmt 1 view .LVU414
1784:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1227              		.loc 1 1784 18 is_stmt 0 view .LVU415
 1228 00cc D3F88820 		ldr	r2, [r3, #136]
 1229              	.LVL84:
1784:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1230              		.loc 1 1784 16 view .LVU416
 1231 00d0 02F44042 		and	r2, r2, #49152
 1232              	.LVL85:
1786:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1233              		.loc 1 1786 9 is_stmt 1 view .LVU417
 1234 00d4 B2F5804F 		cmp	r2, #16384
 1235 00d8 00F0E980 		beq	.L174
 1236 00dc B2F5004F 		cmp	r2, #32768
 1237 00e0 2BE1     		b	.L358
 1238              	.LVL86:
 1239              	.L145:
1257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1240              		.loc 1 1257 5 is_stmt 0 view .LVU418
 1241 00e2 B0F5006F 		cmp	r0, #2048
 1242 00e6 4FD0     		beq	.L153
 1243 00e8 16D8     		bhi	.L154
 1244 00ea B0F5007F 		cmp	r0, #512
 1245 00ee 00F03581 		beq	.L155
 1246 00f2 B0F5806F 		cmp	r0, #1024
 1247 00f6 D2D1     		bne	.L203
1907:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1248              		.loc 1 1907 8 is_stmt 1 view .LVU419
1907:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1249              		.loc 1 1907 17 is_stmt 0 view .LVU420
 1250 00f8 D3F88820 		ldr	r2, [r3, #136]
 1251              	.LVL87:
1907:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1252              		.loc 1 1907 15 view .LVU421
 1253 00fc 02F44012 		and	r2, r2, #3145728
 1254              	.LVL88:
1909:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1255              		.loc 1 1909 9 is_stmt 1 view .LVU422
 1256 0100 B2F5001F 		cmp	r2, #2097152
 1257 0104 00F04A81 		beq	.L337
 1258 0108 00F24181 		bhi	.L194
 1259 010c 002A     		cmp	r2, #0
 1260 010e 00F01881 		beq	.L177
 1261 0112 B2F5801F 		cmp	r2, #1048576
 1262 0116 2DE1     		b	.L347
 1263              	.LVL89:
 1264              	.L154:
1257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1265              		.loc 1 1257 5 is_stmt 0 view .LVU423
 1266 0118 B0F5004F 		cmp	r0, #32768
 1267 011c 00F03A81 		beq	.L157
 1268 0120 10D8     		bhi	.L158
 1269 0122 B0F5005F 		cmp	r0, #8192
 1270 0126 13D0     		beq	.L159
 1271 0128 B0F5804F 		cmp	r0, #16384
 1272 012c B7D1     		bne	.L203
1645:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1273              		.loc 1 1645 9 is_stmt 1 view .LVU424
1645:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1274              		.loc 1 1645 18 is_stmt 0 view .LVU425
 1275 012e D3F88810 		ldr	r1, [r3, #136]
1645:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1276              		.loc 1 1645 16 view .LVU426
 1277 0132 01F04051 		and	r1, r1, #805306368
 1278              	.LVL90:
1647:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1279              		.loc 1 1647 9 is_stmt 1 view .LVU427
 1280 0136 B1F1805F 		cmp	r1, #268435456
 1281 013a 00F0D980 		beq	.L185
 1282 013e B1F1405F 		cmp	r1, #805306368
 1283 0142 B2E0     		b	.L351
 1284              	.LVL91:
 1285              	.L158:
1257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1286              		.loc 1 1257 5 is_stmt 0 view .LVU428
 1287 0144 B0F5802F 		cmp	r0, #262144
 1288 0148 02D0     		beq	.L159
 1289 014a B0F5002F 		cmp	r0, #524288
 1290 014e A6D1     		bne	.L203
 1291              	.L159:
1289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1292              		.loc 1 1289 9 is_stmt 1 view .LVU429
1289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1293              		.loc 1 1289 18 is_stmt 0 view .LVU430
 1294 0150 D3F88810 		ldr	r1, [r3, #136]
1289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1295              		.loc 1 1289 16 view .LVU431
 1296 0154 01F04061 		and	r1, r1, #201326592
 1297              	.LVL92:
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1298              		.loc 1 1291 9 is_stmt 1 view .LVU432
 1299 0158 B1F1006F 		cmp	r1, #134217728
 1300 015c 68D0     		beq	.L166
 1301 015e 4FD8     		bhi	.L167
 1302 0160 0029     		cmp	r1, #0
 1303 0162 00F08180 		beq	.L168
 1304 0166 B1F1806F 		cmp	r1, #67108864
 1305 016a 98D1     		bne	.L203
1315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1306              		.loc 1 1315 11 view .LVU433
1315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1307              		.loc 1 1315 14 is_stmt 0 view .LVU434
 1308 016c 1868     		ldr	r0, [r3]
 1309              	.LVL93:
1315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1310              		.loc 1 1315 13 view .LVU435
 1311 016e 10F00060 		ands	r0, r0, #134217728
 1312 0172 3FF466AF 		beq	.L134
1317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
 1313              		.loc 1 1317 13 is_stmt 1 view .LVU436
1317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
 1314              		.loc 1 1317 16 is_stmt 0 view .LVU437
 1315 0176 1869     		ldr	r0, [r3, #16]
1317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
 1316              		.loc 1 1317 15 view .LVU438
 1317 0178 10F48010 		ands	r0, r0, #1048576
 1318 017c 3FF461AF 		beq	.L134
1325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1319              		.loc 1 1325 15 is_stmt 1 view .LVU439
1325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1320              		.loc 1 1325 36 is_stmt 0 view .LVU440
 1321 0180 D968     		ldr	r1, [r3, #12]
 1322              	.LVL94:
1328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q)
 1323              		.loc 1 1328 15 is_stmt 1 view .LVU441
1328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q)
 1324              		.loc 1 1328 22 is_stmt 0 view .LVU442
 1325 0182 1C69     		ldr	r4, [r3, #16]
 1326              	.LVL95:
1329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
 1327              		.loc 1 1329 15 is_stmt 1 view .LVU443
1329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
 1328              		.loc 1 1329 48 is_stmt 0 view .LVU444
 1329 0184 1869     		ldr	r0, [r3, #16]
 1330 0186 60E0     		b	.L341
 1331              	.LVL96:
 1332              	.L153:
1262:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 1333              		.loc 1 1262 7 is_stmt 1 view .LVU445
 1334              	.LBB8:
 1335              	.LBI8:
3067:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3068:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1_SUPPORT */
3069:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3070:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2_SUPPORT)
3071:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3072:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** /**
3073:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @brief  Configure the parameters N & P & optionally M of PLLSAI2 and enable PLLSAI2 output cloc
3074:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  PllSai2  pointer to an RCC_PLLSAI2InitTypeDef structure that
3075:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *         contains the configuration parameters N & P & optionally M as well as PLLSAI2 output cl
3076:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @param  Divider  divider parameter to be updated
3077:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
3078:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @note   PLLSAI2 is temporary disable to apply new parameters
3079:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   *
3080:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   * @retval HAL status
3081:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   */
3082:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** static HAL_StatusTypeDef RCCEx_PLLSAI2_Config(RCC_PLLSAI2InitTypeDef *PllSai2, uint32_t Divider)
3083:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
3084:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
3085:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
3086:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3087:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* check for PLLSAI2 Parameters used to output PLLSAI2CLK */
3088:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* P, Q and R dividers are verified in each specific divider case below */
3089:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2SOURCE(PllSai2->PLLSAI2Source));
3090:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2M_VALUE(PllSai2->PLLSAI2M));
3091:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2N_VALUE(PllSai2->PLLSAI2N));
3092:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI2CLOCKOUT_VALUE(PllSai2->PLLSAI2ClockOut));
3093:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3094:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check that PLLSAI2 clock source and divider M can be applied */
3095:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
3096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
3097:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* PLL clock source and divider M already set, check that no request for change  */
3098:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai2->PLLSAI2Source)
3099:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        ||
3100:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        (PllSai2->PLLSAI2Source == RCC_PLLSOURCE_NONE)
3101:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if !defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
3102:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        ||
3103:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****        (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai2->PLLSA
3104:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
3105:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       )
3106:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3107:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = HAL_ERROR;
3108:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3109:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
3110:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   else
3111:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
3112:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Check PLLSAI2 clock source availability */
3113:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     switch(PllSai2->PLLSAI2Source)
3114:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3115:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_MSI:
3116:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
3117:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3118:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = HAL_ERROR;
3119:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3120:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
3121:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_HSI:
3122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
3123:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3124:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = HAL_ERROR;
3125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3126:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
3127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     case RCC_PLLSOURCE_HSE:
3128:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
3129:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3130:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
3131:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
3132:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           status = HAL_ERROR;
3133:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
3134:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3135:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
3136:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     default:
3137:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       status = HAL_ERROR;
3138:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
3139:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3140:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3141:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(status == HAL_OK)
3142:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
3144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Set PLLSAI2 clock source */
3145:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PllSai2->PLLSAI2Source);
3146:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3147:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Set PLLSAI2 clock source and divider M */
3148:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai2->PLLSAI2Source | (Pll
3149:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
3150:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3151:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
3152:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3153:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(status == HAL_OK)
3154:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
3155:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Disable the PLLSAI2 */
3156:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     __HAL_RCC_PLLSAI2_DISABLE();
3157:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3158:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Get Start Tick*/
3159:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
3160:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3161:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Wait till PLLSAI2 is ready to be updated */
3162:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
3163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3164:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
3165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3166:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         status = HAL_TIMEOUT;
3167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         break;
3168:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3170:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3171:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(status == HAL_OK)
3172:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3173:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(Divider == DIVIDER_P_UPDATE)
3174:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         assert_param(IS_RCC_PLLSAI2P_VALUE(PllSai2->PLLSAI2P));
3176:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
3177:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3178:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI2 Division factor M, P and Multiplication factor N*/
3179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2P_DIV_2_31_SUPPORT)
3180:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI2CFGR,
3181:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2PDIV | RCC_PLLSAI2CFGR_PLLSAI2
3182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
3183:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2P << RCC_PLLSAI2CFGR_PLLSAI2PDIV_Pos) |
3184:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai2->PLLSAI2M - 1U) << RCC_PLLSAI2CFGR_PLLSAI2M_Pos));
3185:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3186:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI2CFGR,
3187:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2P | RCC_PLLSAI2CFGR_PLLSAI2M,
3188:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
3189:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai2->PLLSAI2P >> 4U) << RCC_PLLSAI2CFGR_PLLSAI2P_Pos) |
3190:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai2->PLLSAI2M - 1U) << RCC_PLLSAI2CFGR_PLLSAI2M_Pos));
3191:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2P_DIV_2_31_SUPPORT */
3192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3193:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3194:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI2 Division factor P and Multiplication factor N*/
3195:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2P_DIV_2_31_SUPPORT)
3196:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI2CFGR,
3197:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2PDIV,
3198:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
3199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2P << RCC_PLLSAI2CFGR_PLLSAI2PDIV_Pos));
3200:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3201:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI2CFGR,
3202:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2P,
3203:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
3204:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai2->PLLSAI2P >> 4U) << RCC_PLLSAI2CFGR_PLLSAI2P_Pos));
3205:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2P_DIV_2_31_SUPPORT */
3206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3207:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
3208:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3209:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2Q_DIV_SUPPORT)
3210:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else if(Divider == DIVIDER_Q_UPDATE)
3211:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3212:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         assert_param(IS_RCC_PLLSAI2Q_VALUE(PllSai2->PLLSAI2Q));
3213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
3214:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI2 Division factor M, Q and Multiplication factor N*/
3215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI2CFGR,
3216:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2Q | RCC_PLLSAI2CFGR_PLLSAI2M,
3217:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
3218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (((PllSai2->PLLSAI2Q >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2Q_Pos) |
3219:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai2->PLLSAI2M - 1U) << RCC_PLLSAI2CFGR_PLLSAI2M_Pos));
3220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI2 Division factor Q and Multiplication factor N*/
3222:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI2CFGR,
3223:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2Q,
3224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
3225:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (((PllSai2->PLLSAI2Q >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2Q_Pos));
3226:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
3227:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3228:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2Q_DIV_SUPPORT */
3229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else
3230:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3231:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         assert_param(IS_RCC_PLLSAI2R_VALUE(PllSai2->PLLSAI2R));
3232:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
3233:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI2 Division factor M, R and Multiplication factor N*/
3234:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI2CFGR,
3235:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2R | RCC_PLLSAI2CFGR_PLLSAI2M,
3236:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
3237:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (((PllSai2->PLLSAI2R >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2R_Pos) |
3238:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    ((PllSai2->PLLSAI2M - 1U) << RCC_PLLSAI2CFGR_PLLSAI2M_Pos));
3239:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3240:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI2 Division factor R and Multiplication factor N*/
3241:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         MODIFY_REG(RCC->PLLSAI2CFGR,
3242:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2R,
3243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
3244:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****                    (((PllSai2->PLLSAI2R >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2R_Pos));
3245:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
3246:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3247:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3248:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Enable the PLLSAI2 again by setting PLLSAI2ON to 1*/
3249:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       __HAL_RCC_PLLSAI2_ENABLE();
3250:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3251:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Get Start Tick*/
3252:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       tickstart = HAL_GetTick();
3253:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3254:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Wait till PLLSAI2 is ready */
3255:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
3256:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
3258:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
3259:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           status = HAL_TIMEOUT;
3260:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
3261:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
3262:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3263:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3264:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(status == HAL_OK)
3265:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3266:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* Configure the PLLSAI2 Clock output(s) */
3267:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         __HAL_RCC_PLLSAI2CLKOUT_ENABLE(PllSai2->PLLSAI2ClockOut);
3268:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3270:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
3271:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3272:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   return status;
3273:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
3274:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3275:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI2_SUPPORT */
3276:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3277:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI1)
3278:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** static uint32_t RCCEx_GetSAIxPeriphCLKFreq(uint32_t PeriphClk, uint32_t InputFrequency)
 1336              		.loc 1 3279 17 view .LVU446
 1337              	.LBB9:
3280:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** {
3281:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
 1338              		.loc 1 3281 3 view .LVU447
3282:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t srcclk = 0U;
 1339              		.loc 1 3282 3 view .LVU448
3283:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t pllvco, plln;    /* no init needed */
 1340              		.loc 1 3283 3 view .LVU449
3284:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLP_SUPPORT)
3285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t pllp = 0U;
 1341              		.loc 1 3285 3 view .LVU450
3286:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLP_SUPPORT */
3287:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3288:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Handle SAIs */
3289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(PeriphClk == RCC_PERIPHCLK_SAI1)
 1342              		.loc 1 3289 3 view .LVU451
3290:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
3291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     srcclk = __HAL_RCC_GET_SAI1_SOURCE();
 1343              		.loc 1 3291 5 view .LVU452
 1344              		.loc 1 3291 14 is_stmt 0 view .LVU453
 1345 0188 D3F88810 		ldr	r1, [r3, #136]
 1346              		.loc 1 3291 12 view .LVU454
 1347 018c 01F44001 		and	r1, r1, #12582912
 1348              	.LVL97:
3292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(srcclk == RCC_SAI1CLKSOURCE_PIN)
 1349              		.loc 1 3292 5 is_stmt 1 view .LVU455
 1350              		.loc 1 3292 7 is_stmt 0 view .LVU456
 1351 0190 B1F5400F 		cmp	r1, #12582912
 1352 0194 00F00781 		beq	.L199
 1353              	.LVL98:
3293:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       frequency = EXTERNAL_SAI1_CLOCK_VALUE;
3295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     /* Else, PLL clock output to check below */
3297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
3298:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI2)
3299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   else
3300:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
3301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(PeriphClk == RCC_PERIPHCLK_SAI2)
3302:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_SAI2_SOURCE();
3304:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(srcclk == RCC_SAI2CLKSOURCE_PIN)
3305:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3306:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = EXTERNAL_SAI2_CLOCK_VALUE;
3307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3308:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       /* Else, PLL clock output to check below */
3309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
3311:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* SAI2 */
3312:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3313:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   if(frequency == 0U)
3314:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
3315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pllvco = InputFrequency;
 1354              		.loc 1 3315 5 is_stmt 1 view .LVU457
3316:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(SAI2)
3318:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if((srcclk == RCC_SAI1CLKSOURCE_PLL) || (srcclk == RCC_SAI2CLKSOURCE_PLL))
3319:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLL_SAI3CLK) != 0U)
3321:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLL Source) / PLLM */
3323:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U
3324:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI3CLK) = f(VCO input) * PLLN / PLLP */
3325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
3326:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
3327:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllp = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_Pos;
3328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
3329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(pllp == 0U)
3330:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
3331:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) != 0U)
3332:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
3333:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = 17U;
3334:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
3335:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           else
3336:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
3337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = 7U;
3338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
3339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
3340:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = (pllvco * plln) / pllp;
3341:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3342:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3343:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else if(srcclk == 0U)  /* RCC_SAI1CLKSOURCE_PLLSAI1 || RCC_SAI2CLKSOURCE_PLLSAI1 */
3344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(__HAL_RCC_GET_PLLSAI1CLKOUT_CONFIG(RCC_PLLSAI1_SAI1CLK) != 0U)
3346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
3348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* PLLSAI1M exists: apply PLLSAI1M divider for PLLSAI1 output computation */
3349:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI1 Source) / PLLSAI1M */
3350:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = (pllvco / ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1M) >> RCC_PLLSAI1CFG
3351:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLL Source) / PLLM */
3353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U
3354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
3355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI1CLK) = f(VCOSAI1 input) * PLLSAI1N / PLLSAI1P */
3356:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         plln = READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1N) >> RCC_PLLSAI1CFGR_PLLSAI1N_Pos
3357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
3358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllp = READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1PDIV) >> RCC_PLLSAI1CFGR_PLLSAI1PD
3359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
3360:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(pllp == 0U)
3361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
3362:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1P) != 0U)
3363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
3364:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = 17U;
3365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
3366:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           else
3367:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
3368:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = 7U;
3369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
3370:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
3371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = (pllvco * plln) / pllp;
3372:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3373:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
3375:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else if((srcclk == RCC_SAI1CLKSOURCE_HSI) || (srcclk == RCC_SAI2CLKSOURCE_HSI))
3376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
3378:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3379:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = HSI_VALUE;
3380:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3381:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3382:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
3383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
3384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3385:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     if(srcclk == RCC_SAI1CLKSOURCE_PLL)
 1355              		.loc 1 3385 5 view .LVU458
 1356              		.loc 1 3385 7 is_stmt 0 view .LVU459
 1357 0198 B1F5000F 		cmp	r1, #8388608
 1358 019c 1AD1     		bne	.L161
3386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3387:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLL_SAI2CLK) != 0U)
 1359              		.loc 1 3387 7 is_stmt 1 view .LVU460
 1360              		.loc 1 3387 10 is_stmt 0 view .LVU461
 1361 019e D968     		ldr	r1, [r3, #12]
 1362              		.loc 1 3387 9 view .LVU462
 1363 01a0 CC03     		lsls	r4, r1, #15
 1364 01a2 40F1FB80 		bpl	.L337
3388:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLL Source) / PLLM */
3390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U
 1365              		.loc 1 3390 9 is_stmt 1 view .LVU463
 1366              		.loc 1 3390 30 is_stmt 0 view .LVU464
 1367 01a6 D868     		ldr	r0, [r3, #12]
 1368              	.LVL99:
3391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI2CLK) = f(VCO input) * PLLN / PLLP */
3392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 1369              		.loc 1 3392 16 view .LVU465
 1370 01a8 DC68     		ldr	r4, [r3, #12]
3393:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
3394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllp = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_Pos;
 1371              		.loc 1 3394 16 view .LVU466
 1372 01aa D968     		ldr	r1, [r3, #12]
3390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI2CLK) = f(VCO input) * PLLN / PLLP */
 1373              		.loc 1 3390 71 view .LVU467
 1374 01ac C0F30210 		ubfx	r0, r0, #4, #3
3395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
3396:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(pllp == 0U)
 1375              		.loc 1 3396 11 view .LVU468
 1376 01b0 C90E     		lsrs	r1, r1, #27
3390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI2CLK) = f(VCO input) * PLLN / PLLP */
 1377              		.loc 1 3390 96 view .LVU469
 1378 01b2 00F10100 		add	r0, r0, #1
3392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
 1379              		.loc 1 3392 14 view .LVU470
 1380 01b6 C4F30624 		ubfx	r4, r4, #8, #7
3390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI2CLK) = f(VCO input) * PLLN / PLLP */
 1381              		.loc 1 3390 16 view .LVU471
 1382 01ba B2FBF0F2 		udiv	r2, r2, r0
 1383              	.LVL100:
3392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
 1384              		.loc 1 3392 9 is_stmt 1 view .LVU472
3394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1385              		.loc 1 3394 9 view .LVU473
 1386              		.loc 1 3396 9 view .LVU474
 1387              		.loc 1 3396 11 is_stmt 0 view .LVU475
 1388 01be 05D1     		bne	.L165
3397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
3398:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) != 0U)
 1389              		.loc 1 3398 11 is_stmt 1 view .LVU476
 1390              		.loc 1 3398 14 is_stmt 0 view .LVU477
 1391 01c0 DB68     		ldr	r3, [r3, #12]
 1392              	.L340:
3399:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
3400:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = 17U;
3401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
3402:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           else
3403:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
3404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = 7U;
3405:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
3406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
3407:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = (pllvco * plln) / pllp;
3408:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else if(HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
3410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* HSI automatically selected as clock source if PLLs not enabled */
3412:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = HSI_VALUE;
3413:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       else
3415:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* No clock source, frequency default init at 0 */
3417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
3418:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
3419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     else if(srcclk == RCC_SAI1CLKSOURCE_PLLSAI1)
3420:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
3421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       if(__HAL_RCC_GET_PLLSAI1CLKOUT_CONFIG(RCC_PLLSAI1_SAI1CLK) != 0U)
3422:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
3423:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
3424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* PLLSAI1M exists: apply PLLSAI1M divider for PLLSAI1 output computation */
3425:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI1 Source) / PLLSAI1M */
3426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = (pllvco / ((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1M) >> RCC_PLLSAI1CFG
3427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #else
3428:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLL Source) / PLLM */
3429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U
3430:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
3431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         /* f(PLLSAI1CLK) = f(VCOSAI1 input) * PLLSAI1N / PLLSAI1P */
3432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         plln = READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1N) >> RCC_PLLSAI1CFGR_PLLSAI1N_Pos
3433:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
3434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         pllp = READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1PDIV) >> RCC_PLLSAI1CFGR_PLLSAI1PD
3435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
3436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         if(pllp == 0U)
3437:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
3438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           if(READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1P) != 0U)
3439:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
3440:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = 17U;
3441:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
3442:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           else
3443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
3444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             pllp = 7U;
 1393              		.loc 1 3444 18 view .LVU478
 1394 01c2 13F4003F 		tst	r3, #131072
 1395 01c6 14BF     		ite	ne
 1396 01c8 1121     		movne	r1, #17
 1397 01ca 0721     		moveq	r1, #7
 1398              	.L165:
 1399              	.LVL101:
3445:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
3446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         }
3447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         frequency = (pllvco * plln) / pllp;
 1400              		.loc 1 3447 9 is_stmt 1 view .LVU479
 1401              		.loc 1 3447 29 is_stmt 0 view .LVU480
 1402 01cc 6243     		muls	r2, r4, r2
 1403              	.LVL102:
 1404              		.loc 1 3447 19 view .LVU481
 1405 01ce B2FBF1F0 		udiv	r0, r2, r1
 1406              	.LVL103:
 1407              		.loc 1 3447 19 view .LVU482
 1408 01d2 36E7     		b	.L134
 1409              	.LVL104:
 1410              	.L161:
3419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1411              		.loc 1 3419 10 is_stmt 1 view .LVU483
3419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1412              		.loc 1 3419 12 is_stmt 0 view .LVU484
 1413 01d4 0029     		cmp	r1, #0
 1414 01d6 7FF462AF 		bne	.L203
3421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1415              		.loc 1 3421 7 is_stmt 1 view .LVU485
3421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1416              		.loc 1 3421 10 is_stmt 0 view .LVU486
 1417 01da 1969     		ldr	r1, [r3, #16]
3421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1418              		.loc 1 3421 9 view .LVU487
 1419 01dc C803     		lsls	r0, r1, #15
 1420              	.LVL105:
3421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1421              		.loc 1 3421 9 view .LVU488
 1422 01de 40F1DD80 		bpl	.L337
3429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1423              		.loc 1 3429 9 is_stmt 1 view .LVU489
3429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1424              		.loc 1 3429 30 is_stmt 0 view .LVU490
 1425 01e2 D868     		ldr	r0, [r3, #12]
3432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
 1426              		.loc 1 3432 16 view .LVU491
 1427 01e4 1C69     		ldr	r4, [r3, #16]
3434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1428              		.loc 1 3434 16 view .LVU492
 1429 01e6 1969     		ldr	r1, [r3, #16]
3429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1430              		.loc 1 3429 71 view .LVU493
 1431 01e8 C0F30210 		ubfx	r0, r0, #4, #3
3436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1432              		.loc 1 3436 11 view .LVU494
 1433 01ec C90E     		lsrs	r1, r1, #27
3429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1434              		.loc 1 3429 96 view .LVU495
 1435 01ee 00F10100 		add	r0, r0, #1
3432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
 1436              		.loc 1 3432 14 view .LVU496
 1437 01f2 C4F30624 		ubfx	r4, r4, #8, #7
3429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1438              		.loc 1 3429 16 view .LVU497
 1439 01f6 B2FBF0F2 		udiv	r2, r2, r0
 1440              	.LVL106:
3432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
 1441              		.loc 1 3432 9 is_stmt 1 view .LVU498
3434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1442              		.loc 1 3434 9 view .LVU499
3436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1443              		.loc 1 3436 9 view .LVU500
3436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1444              		.loc 1 3436 11 is_stmt 0 view .LVU501
 1445 01fa E7D1     		bne	.L165
3438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1446              		.loc 1 3438 11 is_stmt 1 view .LVU502
3438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1447              		.loc 1 3438 14 is_stmt 0 view .LVU503
 1448 01fc 1B69     		ldr	r3, [r3, #16]
 1449 01fe E0E7     		b	.L340
 1450              	.LVL107:
 1451              	.L167:
3438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1452              		.loc 1 3438 14 view .LVU504
 1453              	.LBE9:
 1454              	.LBE8:
 1455 0200 B1F1406F 		cmp	r1, #201326592
 1456 0204 7FF44BAF 		bne	.L203
1294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1457              		.loc 1 1294 11 is_stmt 1 view .LVU505
1294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1458              		.loc 1 1294 14 is_stmt 0 view .LVU506
 1459 0208 1868     		ldr	r0, [r3]
 1460              	.LVL108:
1294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1461              		.loc 1 1294 13 view .LVU507
 1462 020a 10F00200 		ands	r0, r0, #2
 1463 020e 3FF418AF 		beq	.L134
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1464              		.loc 1 1297 13 is_stmt 1 view .LVU508
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1465              		.loc 1 1297 40 is_stmt 0 view .LVU509
 1466 0212 1A68     		ldr	r2, [r3]
 1467              	.LVL109:
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1468              		.loc 1 1297 66 view .LVU510
 1469 0214 1107     		lsls	r1, r2, #28
 1470              	.LVL110:
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1471              		.loc 1 1297 40 view .LVU511
 1472 0216 4CBF     		ite	mi
 1473 0218 1B68     		ldrmi	r3, [r3]
 1474 021a D3F89430 		ldrpl	r3, [r3, #148]
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1475              		.loc 1 1297 23 view .LVU512
 1476 021e 3F4A     		ldr	r2, .L360+4
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1477              		.loc 1 1297 66 view .LVU513
 1478 0220 4CBF     		ite	mi
 1479 0222 C3F30313 		ubfxmi	r3, r3, #4, #4
 1480 0226 C3F30323 		ubfxpl	r3, r3, #8, #4
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1481              		.loc 1 1297 23 view .LVU514
 1482 022a 52F82300 		ldr	r0, [r2, r3, lsl #2]
 1483              	.LVL111:
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1484              		.loc 1 1297 23 view .LVU515
 1485 022e 08E7     		b	.L134
 1486              	.LVL112:
 1487              	.L166:
1301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1488              		.loc 1 1301 11 is_stmt 1 view .LVU516
1301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1489              		.loc 1 1301 14 is_stmt 0 view .LVU517
 1490 0230 1868     		ldr	r0, [r3]
 1491              	.LVL113:
1301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1492              		.loc 1 1301 13 view .LVU518
 1493 0232 10F00070 		ands	r0, r0, #33554432
 1494 0236 3FF404AF 		beq	.L134
1303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
 1495              		.loc 1 1303 13 is_stmt 1 view .LVU519
1303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
 1496              		.loc 1 1303 16 is_stmt 0 view .LVU520
 1497 023a D868     		ldr	r0, [r3, #12]
1303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             {
 1498              		.loc 1 1303 15 view .LVU521
 1499 023c 10F48010 		ands	r0, r0, #1048576
 1500 0240 3FF4FFAE 		beq	.L134
1306:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL48M1CLK) = f(VCO input) * PLLN / PLLQ */
 1501              		.loc 1 1306 15 is_stmt 1 view .LVU522
1306:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               /* f(PLL48M1CLK) = f(VCO input) * PLLN / PLLQ */
 1502              		.loc 1 1306 36 is_stmt 0 view .LVU523
 1503 0244 D968     		ldr	r1, [r3, #12]
 1504              	.LVL114:
1308:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLC
 1505              		.loc 1 1308 15 is_stmt 1 view .LVU524
1308:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLC
 1506              		.loc 1 1308 22 is_stmt 0 view .LVU525
 1507 0246 DC68     		ldr	r4, [r3, #12]
 1508              	.LVL115:
1309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
 1509              		.loc 1 1309 15 is_stmt 1 view .LVU526
1309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
 1510              		.loc 1 1309 48 is_stmt 0 view .LVU527
 1511 0248 D868     		ldr	r0, [r3, #12]
 1512              	.LVL116:
 1513              	.L341:
1325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1514              		.loc 1 1325 77 view .LVU528
 1515 024a C1F30213 		ubfx	r3, r1, #4, #3
1325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1516              		.loc 1 1325 102 view .LVU529
 1517 024e 0133     		adds	r3, r3, #1
1325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1518              		.loc 1 1325 22 view .LVU530
 1519 0250 B2FBF3F2 		udiv	r2, r2, r3
1328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****               frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1Q)
 1520              		.loc 1 1328 20 view .LVU531
 1521 0254 C4F30623 		ubfx	r3, r4, #8, #7
1329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
 1522              		.loc 1 1329 35 view .LVU532
 1523 0258 5A43     		muls	r2, r3, r2
1329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             }
 1524              		.loc 1 1329 101 view .LVU533
 1525 025a C0F34150 		ubfx	r0, r0, #21, #2
 1526              	.L339:
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1527              		.loc 1 1666 132 view .LVU534
 1528 025e 0130     		adds	r0, r0, #1
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1529              		.loc 1 1666 138 view .LVU535
 1530 0260 4000     		lsls	r0, r0, #1
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1531              		.loc 1 1666 23 view .LVU536
 1532 0262 B2FBF0F0 		udiv	r0, r2, r0
 1533              	.LVL117:
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1534              		.loc 1 1666 23 view .LVU537
 1535 0266 ECE6     		b	.L134
 1536              	.LVL118:
 1537              	.L168:
1336:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1538              		.loc 1 1336 11 is_stmt 1 view .LVU538
1336:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1539              		.loc 1 1336 14 is_stmt 0 view .LVU539
 1540 0268 D3F89800 		ldr	r0, [r3, #152]
 1541              	.LVL119:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1542              		.loc 1 1338 23 view .LVU540
 1543 026c 2D4B     		ldr	r3, .L360+12
 1544 026e 10F00200 		ands	r0, r0, #2
 1545              	.LVL120:
 1546              	.L338:
 1547              	.LBB12:
 1548              	.LBB10:
3412:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1549              		.loc 1 3412 19 view .LVU541
 1550 0272 18BF     		it	ne
 1551 0274 1846     		movne	r0, r3
 1552              	.LBE10:
 1553              	.LBE12:
 1554 0276 E4E6     		b	.L134
 1555              	.LVL121:
 1556              	.L150:
1436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1557              		.loc 1 1436 9 is_stmt 1 view .LVU542
1436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1558              		.loc 1 1436 18 is_stmt 0 view .LVU543
 1559 0278 D3F88820 		ldr	r2, [r3, #136]
 1560              	.LVL122:
1436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1561              		.loc 1 1436 16 view .LVU544
 1562 027c 02F00302 		and	r2, r2, #3
 1563              	.LVL123:
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1564              		.loc 1 1438 9 is_stmt 1 view .LVU545
 1565 0280 022A     		cmp	r2, #2
 1566 0282 00F08B80 		beq	.L337
 1567 0286 032A     		cmp	r2, #3
 1568 0288 3FF4CDAE 		beq	.L196
 1569 028c 012A     		cmp	r2, #1
 1570 028e 0ED0     		beq	.L174
1441:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
 1571              		.loc 1 1441 11 view .LVU546
2016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1572              		.loc 1 2016 1 is_stmt 0 view .LVU547
 1573 0290 10BC     		pop	{r4}
 1574              	.LCFI7:
 1575              		.cfi_remember_state
 1576              		.cfi_restore 4
 1577              		.cfi_def_cfa_offset 0
1441:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
 1578              		.loc 1 1441 23 view .LVU548
 1579 0292 FFF7FEBF 		b	HAL_RCC_GetPCLK2Freq
 1580              	.LVL124:
 1581              	.L148:
 1582              	.LCFI8:
 1583              		.cfi_restore_state
1469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1584              		.loc 1 1469 9 is_stmt 1 view .LVU549
1469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1585              		.loc 1 1469 18 is_stmt 0 view .LVU550
 1586 0296 D3F88820 		ldr	r2, [r3, #136]
 1587              	.LVL125:
1469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1588              		.loc 1 1469 16 view .LVU551
 1589 029a 02F00C02 		and	r2, r2, #12
 1590              	.LVL126:
1471:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1591              		.loc 1 1471 9 is_stmt 1 view .LVU552
 1592 029e 082A     		cmp	r2, #8
 1593 02a0 7CD0     		beq	.L337
 1594 02a2 07D8     		bhi	.L176
 1595 02a4 002A     		cmp	r2, #0
 1596 02a6 4CD0     		beq	.L177
 1597 02a8 042A     		cmp	r2, #4
 1598              	.LVL127:
 1599              	.L351:
1471:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1600              		.loc 1 1471 9 is_stmt 0 view .LVU553
 1601 02aa 7FF4F8AE 		bne	.L203
 1602              	.L174:
1444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
 1603              		.loc 1 1444 11 is_stmt 1 view .LVU554
2016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1604              		.loc 1 2016 1 is_stmt 0 view .LVU555
 1605 02ae 10BC     		pop	{r4}
 1606              	.LCFI9:
 1607              		.cfi_remember_state
 1608              		.cfi_restore 4
 1609              		.cfi_def_cfa_offset 0
1444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
 1610              		.loc 1 1444 23 view .LVU556
 1611 02b0 FFF7FEBF 		b	HAL_RCC_GetSysClockFreq
 1612              	.LVL128:
 1613              	.L176:
 1614              	.LCFI10:
 1615              		.cfi_restore_state
1444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
 1616              		.loc 1 1444 23 view .LVU557
 1617 02b4 0C2A     		cmp	r2, #12
 1618 02b6 B5E6     		b	.L343
 1619              	.LVL129:
 1620              	.L149:
1504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1621              		.loc 1 1504 9 is_stmt 1 view .LVU558
1504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1622              		.loc 1 1504 18 is_stmt 0 view .LVU559
 1623 02b8 D3F88820 		ldr	r2, [r3, #136]
 1624              	.LVL130:
1504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1625              		.loc 1 1504 16 view .LVU560
 1626 02bc 02F03002 		and	r2, r2, #48
 1627              	.LVL131:
1506:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1628              		.loc 1 1506 9 is_stmt 1 view .LVU561
 1629 02c0 202A     		cmp	r2, #32
 1630 02c2 6BD0     		beq	.L337
 1631 02c4 03D8     		bhi	.L180
 1632 02c6 002A     		cmp	r2, #0
 1633 02c8 3BD0     		beq	.L177
 1634 02ca 102A     		cmp	r2, #16
 1635 02cc EDE7     		b	.L351
 1636              	.L180:
 1637 02ce 302A     		cmp	r2, #48
 1638 02d0 A8E6     		b	.L343
 1639              	.LVL132:
 1640              	.L146:
1613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1641              		.loc 1 1613 9 view .LVU562
1613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1642              		.loc 1 1613 18 is_stmt 0 view .LVU563
 1643 02d2 D3F88820 		ldr	r2, [r3, #136]
 1644              	.LVL133:
1613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1645              		.loc 1 1613 16 view .LVU564
 1646 02d6 02F44062 		and	r2, r2, #3072
 1647              	.LVL134:
1615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1648              		.loc 1 1615 9 is_stmt 1 view .LVU565
 1649 02da B2F5006F 		cmp	r2, #2048
 1650 02de 5DD0     		beq	.L337
 1651 02e0 03D8     		bhi	.L183
 1652 02e2 72B3     		cbz	r2, .L177
 1653 02e4 B2F5806F 		cmp	r2, #1024
 1654 02e8 DFE7     		b	.L351
 1655              	.L183:
 1656 02ea B2F5406F 		cmp	r2, #3072
 1657 02ee 99E6     		b	.L343
 1658              	.LVL135:
 1659              	.L185:
1654:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1660              		.loc 1 1654 11 view .LVU566
1654:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1661              		.loc 1 1654 14 is_stmt 0 view .LVU567
 1662 02f0 1869     		ldr	r0, [r3, #16]
 1663              	.LVL136:
1654:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1664              		.loc 1 1654 13 view .LVU568
 1665 02f2 10F08070 		ands	r0, r0, #16777216
 1666 02f6 3FF4A4AE 		beq	.L134
1662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1667              		.loc 1 1662 13 is_stmt 1 view .LVU569
1662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1668              		.loc 1 1662 34 is_stmt 0 view .LVU570
 1669 02fa DC68     		ldr	r4, [r3, #12]
 1670              	.LVL137:
1665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >
 1671              		.loc 1 1665 13 is_stmt 1 view .LVU571
1665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >
 1672              		.loc 1 1665 20 is_stmt 0 view .LVU572
 1673 02fc 1969     		ldr	r1, [r3, #16]
 1674              	.LVL138:
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1675              		.loc 1 1666 13 is_stmt 1 view .LVU573
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1676              		.loc 1 1666 46 is_stmt 0 view .LVU574
 1677 02fe 1869     		ldr	r0, [r3, #16]
1662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1678              		.loc 1 1662 75 view .LVU575
 1679 0300 C4F30213 		ubfx	r3, r4, #4, #3
1662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1680              		.loc 1 1662 100 view .LVU576
 1681 0304 0133     		adds	r3, r3, #1
1662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif
 1682              		.loc 1 1662 20 view .LVU577
 1683 0306 B2FBF3F2 		udiv	r2, r2, r3
 1684              	.LVL139:
1665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / (((READ_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1R) >
 1685              		.loc 1 1665 18 view .LVU578
 1686 030a C1F30623 		ubfx	r3, r1, #8, #7
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1687              		.loc 1 1666 33 view .LVU579
 1688 030e 5A43     		muls	r2, r3, r2
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1689              		.loc 1 1666 99 view .LVU580
 1690 0310 C0F34160 		ubfx	r0, r0, #25, #2
 1691 0314 A3E7     		b	.L339
 1692              	.L361:
 1693 0316 00BF     		.align	2
 1694              	.L360:
 1695 0318 00100240 		.word	1073876992
 1696 031c 00000000 		.word	MSIRangeTable
 1697 0320 0024F400 		.word	16000000
 1698 0324 006CDC02 		.word	48000000
 1699              	.LVL140:
 1700              	.L151:
1755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1701              		.loc 1 1755 9 is_stmt 1 view .LVU581
1755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1702              		.loc 1 1755 18 is_stmt 0 view .LVU582
 1703 0328 D3F88820 		ldr	r2, [r3, #136]
 1704              	.LVL141:
1755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1705              		.loc 1 1755 16 view .LVU583
 1706 032c 02F44052 		and	r2, r2, #12288
 1707              	.LVL142:
1757:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1708              		.loc 1 1757 9 is_stmt 1 view .LVU584
 1709 0330 B2F5805F 		cmp	r2, #4096
 1710 0334 BBD0     		beq	.L174
 1711 0336 B2F5005F 		cmp	r2, #8192
 1712              	.L358:
1757:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1713              		.loc 1 1757 9 is_stmt 0 view .LVU585
 1714 033a 2FD0     		beq	.L337
 1715 033c 002A     		cmp	r2, #0
 1716 033e 7FF4AEAE 		bne	.L203
 1717              	.LVL143:
 1718              	.L177:
1474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
 1719              		.loc 1 1474 11 is_stmt 1 view .LVU586
2016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1720              		.loc 1 2016 1 is_stmt 0 view .LVU587
 1721 0342 10BC     		pop	{r4}
 1722              	.LCFI11:
 1723              		.cfi_remember_state
 1724              		.cfi_restore 4
 1725              		.cfi_def_cfa_offset 0
1474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           break;
 1726              		.loc 1 1474 23 view .LVU588
 1727 0344 FFF7FEBF 		b	HAL_RCC_GetPCLK1Freq
 1728              	.LVL144:
 1729              	.L144:
 1730              	.LCFI12:
 1731              		.cfi_restore_state
1813:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1732              		.loc 1 1813 9 is_stmt 1 view .LVU589
1813:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1733              		.loc 1 1813 18 is_stmt 0 view .LVU590
 1734 0348 D3F88820 		ldr	r2, [r3, #136]
 1735              	.LVL145:
1813:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1736              		.loc 1 1813 16 view .LVU591
 1737 034c 02F44032 		and	r2, r2, #196608
 1738              	.LVL146:
1815:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1739              		.loc 1 1815 9 is_stmt 1 view .LVU592
 1740 0350 B2F5803F 		cmp	r2, #65536
 1741 0354 ABD0     		beq	.L174
 1742 0356 B2F5003F 		cmp	r2, #131072
 1743 035a EEE7     		b	.L358
 1744              	.LVL147:
 1745              	.L155:
1871:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1746              		.loc 1 1871 9 view .LVU593
1871:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1747              		.loc 1 1871 18 is_stmt 0 view .LVU594
 1748 035c D3F88820 		ldr	r2, [r3, #136]
 1749              	.LVL148:
1871:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1750              		.loc 1 1871 16 view .LVU595
 1751 0360 02F44022 		and	r2, r2, #786432
 1752              	.LVL149:
1873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1753              		.loc 1 1873 9 is_stmt 1 view .LVU596
 1754 0364 B2F5002F 		cmp	r2, #524288
 1755 0368 18D0     		beq	.L337
 1756 036a 0DD8     		bhi	.L190
 1757 036c 002A     		cmp	r2, #0
 1758 036e E8D0     		beq	.L177
 1759 0370 B2F5802F 		cmp	r2, #262144
 1760              	.L347:
1873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1761              		.loc 1 1873 9 is_stmt 0 view .LVU597
 1762 0374 7FF493AE 		bne	.L203
 1763              	.L195:
1915:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1764              		.loc 1 1915 11 is_stmt 1 view .LVU598
1915:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1765              		.loc 1 1915 14 is_stmt 0 view .LVU599
 1766 0378 D3F89400 		ldr	r0, [r3, #148]
 1767              	.LVL150:
1881:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1768              		.loc 1 1881 23 view .LVU600
 1769 037c 10F00200 		ands	r0, r0, #2
 1770 0380 18BF     		it	ne
 1771 0382 4FF4FA40 		movne	r0, #32000
 1772 0386 5CE6     		b	.L134
 1773              	.LVL151:
 1774              	.L190:
1881:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1775              		.loc 1 1881 23 view .LVU601
 1776 0388 B2F5402F 		cmp	r2, #786432
 1777 038c 4AE6     		b	.L343
 1778              	.L194:
1881:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           }
 1779              		.loc 1 1881 23 view .LVU602
 1780 038e B2F5401F 		cmp	r2, #3145728
 1781 0392 47E6     		b	.L343
 1782              	.LVL152:
 1783              	.L157:
1945:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1784              		.loc 1 1945 9 is_stmt 1 view .LVU603
1945:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1785              		.loc 1 1945 18 is_stmt 0 view .LVU604
 1786 0394 D3F88820 		ldr	r2, [r3, #136]
 1787              	.LVL153:
1947:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1788              		.loc 1 1947 9 is_stmt 1 view .LVU605
 1789 0398 5200     		lsls	r2, r2, #1
 1790              	.LVL154:
1947:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****         {
 1791              		.loc 1 1947 9 is_stmt 0 view .LVU606
 1792 039a D2D5     		bpl	.L177
 1793              	.LVL155:
 1794              	.L337:
1953:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1795              		.loc 1 1953 11 is_stmt 1 view .LVU607
1953:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****           {
 1796              		.loc 1 1953 14 is_stmt 0 view .LVU608
 1797 039c 1868     		ldr	r0, [r3]
 1798              	.LBB13:
 1799              	.LBB11:
3412:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 1800              		.loc 1 3412 19 view .LVU609
 1801 039e 034B     		ldr	r3, .L362
 1802 03a0 10F48060 		ands	r0, r0, #1024
 1803 03a4 65E7     		b	.L338
 1804              	.LVL156:
 1805              	.L199:
3294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 1806              		.loc 1 3294 17 view .LVU610
 1807 03a6 4BF68030 		movw	r0, #48000
 1808              	.LVL157:
3294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 1809              		.loc 1 3294 17 view .LVU611
 1810 03aa 4AE6     		b	.L134
 1811              	.L363:
 1812              		.align	2
 1813              	.L362:
 1814 03ac 0024F400 		.word	16000000
 1815              	.LBE11:
 1816              	.LBE13:
 1817              		.cfi_endproc
 1818              	.LFE311:
 1820              		.section	.text.HAL_RCCEx_EnablePLLSAI1,"ax",%progbits
 1821              		.align	1
 1822              		.global	HAL_RCCEx_EnablePLLSAI1
 1823              		.syntax unified
 1824              		.thumb
 1825              		.thumb_func
 1826              		.fpu softvfp
 1828              	HAL_RCCEx_EnablePLLSAI1:
 1829              	.LVL158:
 1830              	.LFB312:
2046:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 1831              		.loc 1 2046 1 is_stmt 1 view -0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
2047:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1835              		.loc 1 2047 3 view .LVU613
2048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1836              		.loc 1 2048 3 view .LVU614
2051:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1M_VALUE(PLLSAI1Init->PLLSAI1M));
 1837              		.loc 1 2051 3 view .LVU615
2052:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1N_VALUE(PLLSAI1Init->PLLSAI1N));
 1838              		.loc 1 2052 3 view .LVU616
2053:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1P_VALUE(PLLSAI1Init->PLLSAI1P));
 1839              		.loc 1 2053 3 view .LVU617
2054:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1Q_VALUE(PLLSAI1Init->PLLSAI1Q));
 1840              		.loc 1 2054 3 view .LVU618
2055:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1R_VALUE(PLLSAI1Init->PLLSAI1R));
 1841              		.loc 1 2055 3 view .LVU619
2056:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PLLSAI1Init->PLLSAI1ClockOut));
 1842              		.loc 1 2056 3 view .LVU620
2057:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1843              		.loc 1 2057 3 view .LVU621
2060:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1844              		.loc 1 2060 3 view .LVU622
2046:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 1845              		.loc 1 2046 1 is_stmt 0 view .LVU623
 1846 0000 70B5     		push	{r4, r5, r6, lr}
 1847              	.LCFI13:
 1848              		.cfi_def_cfa_offset 16
 1849              		.cfi_offset 4, -16
 1850              		.cfi_offset 5, -12
 1851              		.cfi_offset 6, -8
 1852              		.cfi_offset 14, -4
2060:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1853              		.loc 1 2060 3 view .LVU624
 1854 0002 1C4C     		ldr	r4, .L375
 1855 0004 2368     		ldr	r3, [r4]
 1856 0006 23F08063 		bic	r3, r3, #67108864
 1857 000a 2360     		str	r3, [r4]
2063:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1858              		.loc 1 2063 3 is_stmt 1 view .LVU625
2046:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 1859              		.loc 1 2046 1 is_stmt 0 view .LVU626
 1860 000c 0546     		mov	r5, r0
2063:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1861              		.loc 1 2063 15 view .LVU627
 1862 000e FFF7FEFF 		bl	HAL_GetTick
 1863              	.LVL159:
2063:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1864              		.loc 1 2063 15 view .LVU628
 1865 0012 0646     		mov	r6, r0
 1866              	.LVL160:
2066:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1867              		.loc 1 2066 3 is_stmt 1 view .LVU629
 1868              	.L365:
2066:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1869              		.loc 1 2066 8 view .LVU630
2066:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1870              		.loc 1 2066 9 is_stmt 0 view .LVU631
 1871 0014 2368     		ldr	r3, [r4]
2066:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1872              		.loc 1 2066 8 view .LVU632
 1873 0016 1A01     		lsls	r2, r3, #4
 1874 0018 1BD4     		bmi	.L367
2075:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1875              		.loc 1 2075 3 is_stmt 1 view .LVU633
2084:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
 1876              		.loc 1 2084 5 view .LVU634
 1877 001a D5E90223 		ldrd	r2, r3, [r5, #8]
 1878 001e DB06     		lsls	r3, r3, #27
 1879 0020 43EA0223 		orr	r3, r3, r2, lsl #8
 1880 0024 2A69     		ldr	r2, [r5, #16]
 1881 0026 5208     		lsrs	r2, r2, #1
 1882 0028 013A     		subs	r2, r2, #1
 1883 002a 43EA4253 		orr	r3, r3, r2, lsl #21
 1884 002e 6A69     		ldr	r2, [r5, #20]
 1885 0030 5208     		lsrs	r2, r2, #1
 1886 0032 013A     		subs	r2, r2, #1
 1887 0034 43EA4263 		orr	r3, r3, r2, lsl #25
 1888 0038 2361     		str	r3, [r4, #16]
2087:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1889              		.loc 1 2087 5 view .LVU635
 1890 003a 2369     		ldr	r3, [r4, #16]
 1891 003c AA69     		ldr	r2, [r5, #24]
 1892 003e 1343     		orrs	r3, r3, r2
 1893 0040 2361     		str	r3, [r4, #16]
2090:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1894              		.loc 1 2090 5 view .LVU636
 1895 0042 2368     		ldr	r3, [r4]
 1896 0044 43F08063 		orr	r3, r3, #67108864
 1897 0048 2360     		str	r3, [r4]
2093:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1898              		.loc 1 2093 5 view .LVU637
2093:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1899              		.loc 1 2093 17 is_stmt 0 view .LVU638
 1900 004a FFF7FEFF 		bl	HAL_GetTick
 1901              	.LVL161:
 1902 004e 0546     		mov	r5, r0
 1903              	.LVL162:
2096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1904              		.loc 1 2096 5 is_stmt 1 view .LVU639
2096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1905              		.loc 1 2096 10 is_stmt 0 view .LVU640
 1906 0050 0BE0     		b	.L371
 1907              	.LVL163:
 1908              	.L367:
2068:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1909              		.loc 1 2068 5 is_stmt 1 view .LVU641
2068:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1910              		.loc 1 2068 9 is_stmt 0 view .LVU642
 1911 0052 FFF7FEFF 		bl	HAL_GetTick
 1912              	.LVL164:
2068:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1913              		.loc 1 2068 23 view .LVU643
 1914 0056 801B     		subs	r0, r0, r6
2068:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1915              		.loc 1 2068 7 view .LVU644
 1916 0058 0228     		cmp	r0, #2
 1917 005a DBD9     		bls	.L365
 1918              	.LVL165:
 1919              	.L369:
2070:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 1920              		.loc 1 2070 14 view .LVU645
 1921 005c 0320     		movs	r0, #3
 1922              	.L373:
2107:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1923              		.loc 1 2107 1 view .LVU646
 1924 005e 70BD     		pop	{r4, r5, r6, pc}
 1925              	.LVL166:
 1926              	.L370:
2098:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1927              		.loc 1 2098 7 is_stmt 1 view .LVU647
2098:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1928              		.loc 1 2098 11 is_stmt 0 view .LVU648
 1929 0060 FFF7FEFF 		bl	HAL_GetTick
 1930              	.LVL167:
2098:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1931              		.loc 1 2098 25 view .LVU649
 1932 0064 401B     		subs	r0, r0, r5
2098:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 1933              		.loc 1 2098 9 view .LVU650
 1934 0066 0228     		cmp	r0, #2
 1935 0068 F8D8     		bhi	.L369
 1936              	.L371:
2096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1937              		.loc 1 2096 10 is_stmt 1 view .LVU651
2096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1938              		.loc 1 2096 11 is_stmt 0 view .LVU652
 1939 006a 2368     		ldr	r3, [r4]
2096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 1940              		.loc 1 2096 10 view .LVU653
 1941 006c 1B01     		lsls	r3, r3, #4
 1942 006e F7D5     		bpl	.L370
 1943 0070 0020     		movs	r0, #0
2106:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 1944              		.loc 1 2106 3 is_stmt 1 view .LVU654
2106:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 1945              		.loc 1 2106 10 is_stmt 0 view .LVU655
 1946 0072 F4E7     		b	.L373
 1947              	.L376:
 1948              		.align	2
 1949              	.L375:
 1950 0074 00100240 		.word	1073876992
 1951              		.cfi_endproc
 1952              	.LFE312:
 1954              		.section	.text.HAL_RCCEx_DisablePLLSAI1,"ax",%progbits
 1955              		.align	1
 1956              		.global	HAL_RCCEx_DisablePLLSAI1
 1957              		.syntax unified
 1958              		.thumb
 1959              		.thumb_func
 1960              		.fpu softvfp
 1962              	HAL_RCCEx_DisablePLLSAI1:
 1963              	.LFB313:
2114:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 1964              		.loc 1 2114 1 is_stmt 1 view -0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
 1967              		@ frame_needed = 0, uses_anonymous_args = 0
2115:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1968              		.loc 1 2115 3 view .LVU657
2116:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1969              		.loc 1 2116 3 view .LVU658
 1970              	.LVL168:
2119:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1971              		.loc 1 2119 3 view .LVU659
2114:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 1972              		.loc 1 2114 1 is_stmt 0 view .LVU660
 1973 0000 38B5     		push	{r3, r4, r5, lr}
 1974              	.LCFI14:
 1975              		.cfi_def_cfa_offset 16
 1976              		.cfi_offset 3, -16
 1977              		.cfi_offset 4, -12
 1978              		.cfi_offset 5, -8
 1979              		.cfi_offset 14, -4
2119:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1980              		.loc 1 2119 3 view .LVU661
 1981 0002 104C     		ldr	r4, .L383
 1982 0004 2368     		ldr	r3, [r4]
 1983 0006 23F08063 		bic	r3, r3, #67108864
 1984 000a 2360     		str	r3, [r4]
2122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1985              		.loc 1 2122 3 is_stmt 1 view .LVU662
2122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 1986              		.loc 1 2122 15 is_stmt 0 view .LVU663
 1987 000c FFF7FEFF 		bl	HAL_GetTick
 1988              	.LVL169:
 1989 0010 0546     		mov	r5, r0
 1990              	.LVL170:
2125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1991              		.loc 1 2125 3 is_stmt 1 view .LVU664
 1992              	.L378:
2125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1993              		.loc 1 2125 8 view .LVU665
2125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1994              		.loc 1 2125 9 is_stmt 0 view .LVU666
 1995 0012 2068     		ldr	r0, [r4]
2125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 1996              		.loc 1 2125 8 view .LVU667
 1997 0014 10F00060 		ands	r0, r0, #134217728
 1998 0018 0DD1     		bne	.L380
 1999              	.L379:
 2000              	.LVL171:
2135:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2001              		.loc 1 2135 3 is_stmt 1 view .LVU668
 2002 001a 2369     		ldr	r3, [r4, #16]
 2003 001c 23F08873 		bic	r3, r3, #17825792
 2004 0020 23F48033 		bic	r3, r3, #65536
 2005 0024 2361     		str	r3, [r4, #16]
2144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2006              		.loc 1 2144 3 view .LVU669
2144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2007              		.loc 1 2144 6 is_stmt 0 view .LVU670
 2008 0026 2368     		ldr	r3, [r4]
2144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2009              		.loc 1 2144 5 view .LVU671
 2010 0028 9B01     		lsls	r3, r3, #6
2146:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2011              		.loc 1 2146 5 is_stmt 1 view .LVU672
 2012 002a 5EBF     		ittt	pl
 2013 002c E368     		ldrpl	r3, [r4, #12]
 2014 002e 23F00303 		bicpl	r3, r3, #3
 2015 0032 E360     		strpl	r3, [r4, #12]
2150:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2016              		.loc 1 2150 3 view .LVU673
2151:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2017              		.loc 1 2151 1 is_stmt 0 view .LVU674
 2018 0034 38BD     		pop	{r3, r4, r5, pc}
 2019              	.LVL172:
 2020              	.L380:
2127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2021              		.loc 1 2127 5 is_stmt 1 view .LVU675
2127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2022              		.loc 1 2127 9 is_stmt 0 view .LVU676
 2023 0036 FFF7FEFF 		bl	HAL_GetTick
 2024              	.LVL173:
2127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2025              		.loc 1 2127 23 view .LVU677
 2026 003a 401B     		subs	r0, r0, r5
2127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2027              		.loc 1 2127 7 view .LVU678
 2028 003c 0228     		cmp	r0, #2
 2029 003e E8D9     		bls	.L378
2129:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       break;
 2030              		.loc 1 2129 14 view .LVU679
 2031 0040 0320     		movs	r0, #3
 2032 0042 EAE7     		b	.L379
 2033              	.L384:
 2034              		.align	2
 2035              	.L383:
 2036 0044 00100240 		.word	1073876992
 2037              		.cfi_endproc
 2038              	.LFE313:
 2040              		.section	.text.HAL_RCCEx_WakeUpStopCLKConfig,"ax",%progbits
 2041              		.align	1
 2042              		.global	HAL_RCCEx_WakeUpStopCLKConfig
 2043              		.syntax unified
 2044              		.thumb
 2045              		.thumb_func
 2046              		.fpu softvfp
 2048              	HAL_RCCEx_WakeUpStopCLKConfig:
 2049              	.LVL174:
 2050              	.LFB314:
2291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_STOP_WAKEUPCLOCK(WakeUpClk));
 2051              		.loc 1 2291 1 is_stmt 1 view -0
 2052              		.cfi_startproc
 2053              		@ args = 0, pretend = 0, frame = 0
 2054              		@ frame_needed = 0, uses_anonymous_args = 0
 2055              		@ link register save eliminated.
2292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2056              		.loc 1 2292 3 view .LVU681
2294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2057              		.loc 1 2294 3 view .LVU682
 2058 0000 034A     		ldr	r2, .L386
 2059 0002 9368     		ldr	r3, [r2, #8]
 2060 0004 23F40043 		bic	r3, r3, #32768
 2061 0008 0343     		orrs	r3, r3, r0
 2062 000a 9360     		str	r3, [r2, #8]
2295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2063              		.loc 1 2295 1 is_stmt 0 view .LVU683
 2064 000c 7047     		bx	lr
 2065              	.L387:
 2066 000e 00BF     		.align	2
 2067              	.L386:
 2068 0010 00100240 		.word	1073876992
 2069              		.cfi_endproc
 2070              	.LFE314:
 2072              		.section	.text.HAL_RCCEx_StandbyMSIRangeConfig,"ax",%progbits
 2073              		.align	1
 2074              		.global	HAL_RCCEx_StandbyMSIRangeConfig
 2075              		.syntax unified
 2076              		.thumb
 2077              		.thumb_func
 2078              		.fpu softvfp
 2080              	HAL_RCCEx_StandbyMSIRangeConfig:
 2081              	.LVL175:
 2082              	.LFB315:
2309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_MSI_STANDBY_CLOCK_RANGE(MSIRange));
 2083              		.loc 1 2309 1 is_stmt 1 view -0
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 0
 2086              		@ frame_needed = 0, uses_anonymous_args = 0
 2087              		@ link register save eliminated.
2310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2088              		.loc 1 2310 3 view .LVU685
2312:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2089              		.loc 1 2312 3 view .LVU686
 2090 0000 044A     		ldr	r2, .L389
 2091 0002 D2F89430 		ldr	r3, [r2, #148]
 2092 0006 23F47063 		bic	r3, r3, #3840
 2093 000a 43EA0013 		orr	r3, r3, r0, lsl #4
 2094 000e C2F89430 		str	r3, [r2, #148]
2313:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2095              		.loc 1 2313 1 is_stmt 0 view .LVU687
 2096 0012 7047     		bx	lr
 2097              	.L390:
 2098              		.align	2
 2099              	.L389:
 2100 0014 00100240 		.word	1073876992
 2101              		.cfi_endproc
 2102              	.LFE315:
 2104              		.section	.text.HAL_RCCEx_EnableLSECSS,"ax",%progbits
 2105              		.align	1
 2106              		.global	HAL_RCCEx_EnableLSECSS
 2107              		.syntax unified
 2108              		.thumb
 2109              		.thumb_func
 2110              		.fpu softvfp
 2112              	HAL_RCCEx_EnableLSECSS:
 2113              	.LFB316:
2323:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
 2114              		.loc 1 2323 1 is_stmt 1 view -0
 2115              		.cfi_startproc
 2116              		@ args = 0, pretend = 0, frame = 0
 2117              		@ frame_needed = 0, uses_anonymous_args = 0
 2118              		@ link register save eliminated.
2324:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2119              		.loc 1 2324 3 view .LVU689
 2120 0000 034A     		ldr	r2, .L392
 2121 0002 D2F89030 		ldr	r3, [r2, #144]
 2122 0006 43F02003 		orr	r3, r3, #32
 2123 000a C2F89030 		str	r3, [r2, #144]
2325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2124              		.loc 1 2325 1 is_stmt 0 view .LVU690
 2125 000e 7047     		bx	lr
 2126              	.L393:
 2127              		.align	2
 2128              	.L392:
 2129 0010 00100240 		.word	1073876992
 2130              		.cfi_endproc
 2131              	.LFE316:
 2133              		.section	.text.HAL_RCCEx_DisableLSECSS,"ax",%progbits
 2134              		.align	1
 2135              		.global	HAL_RCCEx_DisableLSECSS
 2136              		.syntax unified
 2137              		.thumb
 2138              		.thumb_func
 2139              		.fpu softvfp
 2141              	HAL_RCCEx_DisableLSECSS:
 2142              	.LFB317:
2333:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
 2143              		.loc 1 2333 1 is_stmt 1 view -0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 0
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 2147              		@ link register save eliminated.
2334:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2148              		.loc 1 2334 3 view .LVU692
 2149 0000 054B     		ldr	r3, .L395
 2150 0002 D3F89020 		ldr	r2, [r3, #144]
 2151 0006 22F02002 		bic	r2, r2, #32
 2152 000a C3F89020 		str	r2, [r3, #144]
2337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2153              		.loc 1 2337 3 view .LVU693
 2154 000e 9A69     		ldr	r2, [r3, #24]
 2155 0010 22F40072 		bic	r2, r2, #512
 2156 0014 9A61     		str	r2, [r3, #24]
2338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2157              		.loc 1 2338 1 is_stmt 0 view .LVU694
 2158 0016 7047     		bx	lr
 2159              	.L396:
 2160              		.align	2
 2161              	.L395:
 2162 0018 00100240 		.word	1073876992
 2163              		.cfi_endproc
 2164              	.LFE317:
 2166              		.section	.text.HAL_RCCEx_EnableLSECSS_IT,"ax",%progbits
 2167              		.align	1
 2168              		.global	HAL_RCCEx_EnableLSECSS_IT
 2169              		.syntax unified
 2170              		.thumb
 2171              		.thumb_func
 2172              		.fpu softvfp
 2174              	HAL_RCCEx_EnableLSECSS_IT:
 2175              	.LFB318:
2346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Enable LSE CSS */
 2176              		.loc 1 2346 1 is_stmt 1 view -0
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 0
 2179              		@ frame_needed = 0, uses_anonymous_args = 0
 2180              		@ link register save eliminated.
2348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2181              		.loc 1 2348 3 view .LVU696
 2182 0000 0A4B     		ldr	r3, .L398
 2183 0002 D3F89020 		ldr	r2, [r3, #144]
 2184 0006 42F02002 		orr	r2, r2, #32
 2185 000a C3F89020 		str	r2, [r3, #144]
2351:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2186              		.loc 1 2351 3 view .LVU697
 2187 000e 9A69     		ldr	r2, [r3, #24]
 2188 0010 42F40072 		orr	r2, r2, #512
 2189 0014 9A61     		str	r2, [r3, #24]
2354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_LSECSS_EXTI_ENABLE_RISING_EDGE();
 2190              		.loc 1 2354 3 view .LVU698
 2191 0016 A3F58633 		sub	r3, r3, #68608
 2192 001a 1A68     		ldr	r2, [r3]
 2193 001c 42F40022 		orr	r2, r2, #524288
 2194 0020 1A60     		str	r2, [r3]
2355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2195              		.loc 1 2355 3 view .LVU699
 2196 0022 9A68     		ldr	r2, [r3, #8]
 2197 0024 42F40022 		orr	r2, r2, #524288
 2198 0028 9A60     		str	r2, [r3, #8]
2356:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2199              		.loc 1 2356 1 is_stmt 0 view .LVU700
 2200 002a 7047     		bx	lr
 2201              	.L399:
 2202              		.align	2
 2203              	.L398:
 2204 002c 00100240 		.word	1073876992
 2205              		.cfi_endproc
 2206              	.LFE318:
 2208              		.section	.text.HAL_RCCEx_LSECSS_Callback,"ax",%progbits
 2209              		.align	1
 2210              		.weak	HAL_RCCEx_LSECSS_Callback
 2211              		.syntax unified
 2212              		.thumb
 2213              		.thumb_func
 2214              		.fpu softvfp
 2216              	HAL_RCCEx_LSECSS_Callback:
 2217              	.LFB320:
2380:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 2218              		.loc 1 2380 1 is_stmt 1 view -0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 0
 2221              		@ frame_needed = 0, uses_anonymous_args = 0
 2222              		@ link register save eliminated.
2384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2223              		.loc 1 2384 1 view .LVU702
 2224 0000 7047     		bx	lr
 2225              		.cfi_endproc
 2226              	.LFE320:
 2228              		.section	.text.HAL_RCCEx_LSECSS_IRQHandler,"ax",%progbits
 2229              		.align	1
 2230              		.global	HAL_RCCEx_LSECSS_IRQHandler
 2231              		.syntax unified
 2232              		.thumb
 2233              		.thumb_func
 2234              		.fpu softvfp
 2236              	HAL_RCCEx_LSECSS_IRQHandler:
 2237              	.LFB319:
2363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check RCC LSE CSSF flag  */
 2238              		.loc 1 2363 1 view -0
 2239              		.cfi_startproc
 2240              		@ args = 0, pretend = 0, frame = 0
 2241              		@ frame_needed = 0, uses_anonymous_args = 0
2365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2242              		.loc 1 2365 3 view .LVU704
2363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check RCC LSE CSSF flag  */
 2243              		.loc 1 2363 1 is_stmt 0 view .LVU705
 2244 0000 10B5     		push	{r4, lr}
 2245              	.LCFI15:
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 4, -8
 2248              		.cfi_offset 14, -4
2365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2249              		.loc 1 2365 6 view .LVU706
 2250 0002 054C     		ldr	r4, .L406
 2251 0004 E369     		ldr	r3, [r4, #28]
2365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2252              		.loc 1 2365 5 view .LVU707
 2253 0006 9B05     		lsls	r3, r3, #22
 2254 0008 04D5     		bpl	.L401
2368:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2255              		.loc 1 2368 5 is_stmt 1 view .LVU708
 2256 000a FFF7FEFF 		bl	HAL_RCCEx_LSECSS_Callback
 2257              	.LVL176:
2371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2258              		.loc 1 2371 5 view .LVU709
 2259 000e 4FF40073 		mov	r3, #512
 2260 0012 2362     		str	r3, [r4, #32]
 2261              	.L401:
2373:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2262              		.loc 1 2373 1 is_stmt 0 view .LVU710
 2263 0014 10BD     		pop	{r4, pc}
 2264              	.L407:
 2265 0016 00BF     		.align	2
 2266              	.L406:
 2267 0018 00100240 		.word	1073876992
 2268              		.cfi_endproc
 2269              	.LFE319:
 2271              		.section	.text.HAL_RCCEx_EnableLSCO,"ax",%progbits
 2272              		.align	1
 2273              		.global	HAL_RCCEx_EnableLSCO
 2274              		.syntax unified
 2275              		.thumb
 2276              		.thumb_func
 2277              		.fpu softvfp
 2279              	HAL_RCCEx_EnableLSCO:
 2280              	.LVL177:
 2281              	.LFB321:
2395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2282              		.loc 1 2395 1 is_stmt 1 view -0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 32
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
2396:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       pwrclkchanged = RESET;
 2286              		.loc 1 2396 3 view .LVU712
2397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       backupchanged = RESET;
 2287              		.loc 1 2397 3 view .LVU713
2398:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2288              		.loc 1 2398 3 view .LVU714
2401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2289              		.loc 1 2401 3 view .LVU715
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2290              		.loc 1 2404 3 view .LVU716
 2291              	.LBB14:
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2292              		.loc 1 2404 3 view .LVU717
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2293              		.loc 1 2404 3 view .LVU718
 2294              	.LBE14:
2395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2295              		.loc 1 2395 1 is_stmt 0 view .LVU719
 2296 0000 70B5     		push	{r4, r5, r6, lr}
 2297              	.LCFI16:
 2298              		.cfi_def_cfa_offset 16
 2299              		.cfi_offset 4, -16
 2300              		.cfi_offset 5, -12
 2301              		.cfi_offset 6, -8
 2302              		.cfi_offset 14, -4
 2303              	.LBB15:
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2304              		.loc 1 2404 3 view .LVU720
 2305 0002 214C     		ldr	r4, .L415
 2306 0004 E36C     		ldr	r3, [r4, #76]
 2307 0006 43F00103 		orr	r3, r3, #1
 2308 000a E364     		str	r3, [r4, #76]
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2309              		.loc 1 2404 3 is_stmt 1 view .LVU721
 2310 000c E36C     		ldr	r3, [r4, #76]
 2311              	.LBE15:
2395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2312              		.loc 1 2395 1 is_stmt 0 view .LVU722
 2313 000e 88B0     		sub	sp, sp, #32
 2314              	.LCFI17:
 2315              		.cfi_def_cfa_offset 48
 2316              	.LBB16:
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2317              		.loc 1 2404 3 view .LVU723
 2318 0010 03F00103 		and	r3, r3, #1
 2319 0014 0193     		str	r3, [sp, #4]
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2320              		.loc 1 2404 3 is_stmt 1 view .LVU724
 2321 0016 019B     		ldr	r3, [sp, #4]
 2322              	.LBE16:
2404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2323              		.loc 1 2404 3 view .LVU725
2407:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 2324              		.loc 1 2407 3 view .LVU726
2408:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 2325              		.loc 1 2408 24 is_stmt 0 view .LVU727
 2326 0018 0422     		movs	r2, #4
 2327 001a 0323     		movs	r3, #3
 2328 001c CDE90323 		strd	r2, r3, [sp, #12]
2409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2329              		.loc 1 2409 3 is_stmt 1 view .LVU728
2411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2330              		.loc 1 2411 3 is_stmt 0 view .LVU729
 2331 0020 03A9     		add	r1, sp, #12
2410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_GPIO_Init(LSCO_GPIO_PORT, &GPIO_InitStruct);
 2332              		.loc 1 2410 24 view .LVU730
 2333 0022 0223     		movs	r3, #2
2395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 2334              		.loc 1 2395 1 view .LVU731
 2335 0024 0646     		mov	r6, r0
2410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_GPIO_Init(LSCO_GPIO_PORT, &GPIO_InitStruct);
 2336              		.loc 1 2410 24 view .LVU732
 2337 0026 0025     		movs	r5, #0
2411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2338              		.loc 1 2411 3 view .LVU733
 2339 0028 4FF09040 		mov	r0, #1207959552
 2340              	.LVL178:
2410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   HAL_GPIO_Init(LSCO_GPIO_PORT, &GPIO_InitStruct);
 2341              		.loc 1 2410 24 view .LVU734
 2342 002c CDE90553 		strd	r5, r3, [sp, #20]
2411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2343              		.loc 1 2411 3 is_stmt 1 view .LVU735
 2344 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 2345              	.LVL179:
2414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2346              		.loc 1 2414 3 view .LVU736
2414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2347              		.loc 1 2414 6 is_stmt 0 view .LVU737
 2348 0034 A36D     		ldr	r3, [r4, #88]
2414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2349              		.loc 1 2414 5 view .LVU738
 2350 0036 D900     		lsls	r1, r3, #3
 2351 0038 09D4     		bmi	.L409
2416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2352              		.loc 1 2416 5 is_stmt 1 view .LVU739
 2353              	.LBB17:
2416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2354              		.loc 1 2416 5 view .LVU740
2416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2355              		.loc 1 2416 5 view .LVU741
 2356 003a A36D     		ldr	r3, [r4, #88]
 2357 003c 43F08053 		orr	r3, r3, #268435456
 2358 0040 A365     		str	r3, [r4, #88]
2416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2359              		.loc 1 2416 5 view .LVU742
 2360 0042 A36D     		ldr	r3, [r4, #88]
 2361 0044 03F08053 		and	r3, r3, #268435456
 2362 0048 0293     		str	r3, [sp, #8]
2416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2363              		.loc 1 2416 5 view .LVU743
 2364 004a 029B     		ldr	r3, [sp, #8]
 2365              	.LBE17:
2416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2366              		.loc 1 2416 5 view .LVU744
2417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2367              		.loc 1 2417 5 view .LVU745
 2368              	.LVL180:
2417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2369              		.loc 1 2417 19 is_stmt 0 view .LVU746
 2370 004c 0125     		movs	r5, #1
 2371              	.LVL181:
 2372              	.L409:
2419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2373              		.loc 1 2419 3 is_stmt 1 view .LVU747
2419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2374              		.loc 1 2419 6 is_stmt 0 view .LVU748
 2375 004e 0F4B     		ldr	r3, .L415+4
 2376 0050 1B68     		ldr	r3, [r3]
2419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2377              		.loc 1 2419 5 view .LVU749
 2378 0052 DB05     		lsls	r3, r3, #23
 2379 0054 16D4     		bmi	.L414
2421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     backupchanged = SET;
 2380              		.loc 1 2421 5 is_stmt 1 view .LVU750
 2381 0056 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 2382              	.LVL182:
2422:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2383              		.loc 1 2422 5 view .LVU751
2422:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2384              		.loc 1 2422 19 is_stmt 0 view .LVU752
 2385 005a 0122     		movs	r2, #1
 2386              	.LVL183:
 2387              	.L410:
2425:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2388              		.loc 1 2425 3 is_stmt 1 view .LVU753
 2389 005c D4F89030 		ldr	r3, [r4, #144]
 2390 0060 23F04073 		bic	r3, r3, #50331648
 2391 0064 43EA0600 		orr	r0, r3, r6
 2392 0068 40F08070 		orr	r0, r0, #16777216
 2393 006c C4F89000 		str	r0, [r4, #144]
2427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2394              		.loc 1 2427 3 view .LVU754
2427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2395              		.loc 1 2427 5 is_stmt 0 view .LVU755
 2396 0070 0AB1     		cbz	r2, .L411
 2397              	.LVL184:
2429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2398              		.loc 1 2429 5 is_stmt 1 view .LVU756
 2399 0072 FFF7FEFF 		bl	HAL_PWR_DisableBkUpAccess
 2400              	.LVL185:
 2401              	.L411:
2431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2402              		.loc 1 2431 3 view .LVU757
2431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2403              		.loc 1 2431 5 is_stmt 0 view .LVU758
 2404 0076 1DB1     		cbz	r5, .L408
2433:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2405              		.loc 1 2433 5 is_stmt 1 view .LVU759
 2406 0078 A36D     		ldr	r3, [r4, #88]
 2407 007a 23F08053 		bic	r3, r3, #268435456
 2408 007e A365     		str	r3, [r4, #88]
 2409              	.L408:
2435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2410              		.loc 1 2435 1 is_stmt 0 view .LVU760
 2411 0080 08B0     		add	sp, sp, #32
 2412              	.LCFI18:
 2413              		.cfi_remember_state
 2414              		.cfi_def_cfa_offset 16
 2415              		@ sp needed
 2416 0082 70BD     		pop	{r4, r5, r6, pc}
 2417              	.LVL186:
 2418              	.L414:
 2419              	.LCFI19:
 2420              		.cfi_restore_state
2398:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2421              		.loc 1 2398 20 view .LVU761
 2422 0084 0022     		movs	r2, #0
 2423 0086 E9E7     		b	.L410
 2424              	.L416:
 2425              		.align	2
 2426              	.L415:
 2427 0088 00100240 		.word	1073876992
 2428 008c 00700040 		.word	1073770496
 2429              		.cfi_endproc
 2430              	.LFE321:
 2432              		.section	.text.HAL_RCCEx_DisableLSCO,"ax",%progbits
 2433              		.align	1
 2434              		.global	HAL_RCCEx_DisableLSCO
 2435              		.syntax unified
 2436              		.thumb
 2437              		.thumb_func
 2438              		.fpu softvfp
 2440              	HAL_RCCEx_DisableLSCO:
 2441              	.LFB322:
2442:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       pwrclkchanged = RESET;
 2442              		.loc 1 2442 1 is_stmt 1 view -0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 8
 2445              		@ frame_needed = 0, uses_anonymous_args = 0
2443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       backupchanged = RESET;
 2446              		.loc 1 2443 3 view .LVU763
 2447              	.LVL187:
2444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2448              		.loc 1 2444 3 view .LVU764
2447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2449              		.loc 1 2447 3 view .LVU765
2442:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       pwrclkchanged = RESET;
 2450              		.loc 1 2442 1 is_stmt 0 view .LVU766
 2451 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2452              	.LCFI20:
 2453              		.cfi_def_cfa_offset 24
 2454              		.cfi_offset 4, -12
 2455              		.cfi_offset 5, -8
 2456              		.cfi_offset 14, -4
2447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2457              		.loc 1 2447 6 view .LVU767
 2458 0002 144C     		ldr	r4, .L424
 2459 0004 A36D     		ldr	r3, [r4, #88]
2447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2460              		.loc 1 2447 5 view .LVU768
 2461 0006 DA00     		lsls	r2, r3, #3
 2462 0008 20D4     		bmi	.L422
2449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2463              		.loc 1 2449 5 is_stmt 1 view .LVU769
 2464              	.LBB18:
2449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2465              		.loc 1 2449 5 view .LVU770
2449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2466              		.loc 1 2449 5 view .LVU771
 2467 000a A36D     		ldr	r3, [r4, #88]
 2468 000c 43F08053 		orr	r3, r3, #268435456
 2469 0010 A365     		str	r3, [r4, #88]
2449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2470              		.loc 1 2449 5 view .LVU772
 2471 0012 A36D     		ldr	r3, [r4, #88]
 2472 0014 03F08053 		and	r3, r3, #268435456
 2473 0018 0193     		str	r3, [sp, #4]
2449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2474              		.loc 1 2449 5 view .LVU773
 2475 001a 019B     		ldr	r3, [sp, #4]
 2476              	.LBE18:
2449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 2477              		.loc 1 2449 5 view .LVU774
2450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2478              		.loc 1 2450 5 view .LVU775
 2479              	.LVL188:
2450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2480              		.loc 1 2450 19 is_stmt 0 view .LVU776
 2481 001c 0125     		movs	r5, #1
 2482              	.LVL189:
 2483              	.L418:
2452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2484              		.loc 1 2452 3 is_stmt 1 view .LVU777
2452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2485              		.loc 1 2452 6 is_stmt 0 view .LVU778
 2486 001e 0E4B     		ldr	r3, .L424+4
 2487 0020 1B68     		ldr	r3, [r3]
2452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2488              		.loc 1 2452 5 view .LVU779
 2489 0022 DB05     		lsls	r3, r3, #23
 2490 0024 14D4     		bmi	.L423
2455:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     backupchanged = SET;
 2491              		.loc 1 2455 5 is_stmt 1 view .LVU780
 2492 0026 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 2493              	.LVL190:
2456:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2494              		.loc 1 2456 5 view .LVU781
2456:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2495              		.loc 1 2456 19 is_stmt 0 view .LVU782
 2496 002a 0122     		movs	r2, #1
 2497              	.LVL191:
 2498              	.L419:
2459:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2499              		.loc 1 2459 3 is_stmt 1 view .LVU783
 2500 002c D4F89030 		ldr	r3, [r4, #144]
 2501 0030 23F08073 		bic	r3, r3, #16777216
 2502 0034 C4F89030 		str	r3, [r4, #144]
2462:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2503              		.loc 1 2462 3 view .LVU784
2462:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2504              		.loc 1 2462 5 is_stmt 0 view .LVU785
 2505 0038 0AB1     		cbz	r2, .L420
 2506              	.LVL192:
2465:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2507              		.loc 1 2465 5 is_stmt 1 view .LVU786
 2508 003a FFF7FEFF 		bl	HAL_PWR_DisableBkUpAccess
 2509              	.LVL193:
 2510              	.L420:
2467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2511              		.loc 1 2467 3 view .LVU787
2467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2512              		.loc 1 2467 5 is_stmt 0 view .LVU788
 2513 003e 1DB1     		cbz	r5, .L417
2469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 2514              		.loc 1 2469 5 is_stmt 1 view .LVU789
 2515 0040 A36D     		ldr	r3, [r4, #88]
 2516 0042 23F08053 		bic	r3, r3, #268435456
 2517 0046 A365     		str	r3, [r4, #88]
 2518              	.L417:
2471:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2519              		.loc 1 2471 1 is_stmt 0 view .LVU790
 2520 0048 03B0     		add	sp, sp, #12
 2521              	.LCFI21:
 2522              		.cfi_remember_state
 2523              		.cfi_def_cfa_offset 12
 2524              		@ sp needed
 2525 004a 30BD     		pop	{r4, r5, pc}
 2526              	.LVL194:
 2527              	.L422:
 2528              	.LCFI22:
 2529              		.cfi_restore_state
2443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   FlagStatus       backupchanged = RESET;
 2530              		.loc 1 2443 20 view .LVU791
 2531 004c 0025     		movs	r5, #0
 2532 004e E6E7     		b	.L418
 2533              	.LVL195:
 2534              	.L423:
2444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2535              		.loc 1 2444 20 view .LVU792
 2536 0050 0022     		movs	r2, #0
 2537 0052 EBE7     		b	.L419
 2538              	.L425:
 2539              		.align	2
 2540              	.L424:
 2541 0054 00100240 		.word	1073876992
 2542 0058 00700040 		.word	1073770496
 2543              		.cfi_endproc
 2544              	.LFE322:
 2546              		.section	.text.HAL_RCCEx_EnableMSIPLLMode,"ax",%progbits
 2547              		.align	1
 2548              		.global	HAL_RCCEx_EnableMSIPLLMode
 2549              		.syntax unified
 2550              		.thumb
 2551              		.thumb_func
 2552              		.fpu softvfp
 2554              	HAL_RCCEx_EnableMSIPLLMode:
 2555              	.LFB323:
2480:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   SET_BIT(RCC->CR, RCC_CR_MSIPLLEN) ;
 2556              		.loc 1 2480 1 is_stmt 1 view -0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 0
 2559              		@ frame_needed = 0, uses_anonymous_args = 0
 2560              		@ link register save eliminated.
2481:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2561              		.loc 1 2481 3 view .LVU794
 2562 0000 024A     		ldr	r2, .L427
 2563 0002 1368     		ldr	r3, [r2]
 2564 0004 43F00403 		orr	r3, r3, #4
 2565 0008 1360     		str	r3, [r2]
2482:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2566              		.loc 1 2482 1 is_stmt 0 view .LVU795
 2567 000a 7047     		bx	lr
 2568              	.L428:
 2569              		.align	2
 2570              	.L427:
 2571 000c 00100240 		.word	1073876992
 2572              		.cfi_endproc
 2573              	.LFE323:
 2575              		.section	.text.HAL_RCCEx_DisableMSIPLLMode,"ax",%progbits
 2576              		.align	1
 2577              		.global	HAL_RCCEx_DisableMSIPLLMode
 2578              		.syntax unified
 2579              		.thumb
 2580              		.thumb_func
 2581              		.fpu softvfp
 2583              	HAL_RCCEx_DisableMSIPLLMode:
 2584              	.LFB324:
2490:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->CR, RCC_CR_MSIPLLEN) ;
 2585              		.loc 1 2490 1 is_stmt 1 view -0
 2586              		.cfi_startproc
 2587              		@ args = 0, pretend = 0, frame = 0
 2588              		@ frame_needed = 0, uses_anonymous_args = 0
 2589              		@ link register save eliminated.
2491:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2590              		.loc 1 2491 3 view .LVU797
 2591 0000 024A     		ldr	r2, .L430
 2592 0002 1368     		ldr	r3, [r2]
 2593 0004 23F00403 		bic	r3, r3, #4
 2594 0008 1360     		str	r3, [r2]
2492:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2595              		.loc 1 2492 1 is_stmt 0 view .LVU798
 2596 000a 7047     		bx	lr
 2597              	.L431:
 2598              		.align	2
 2599              	.L430:
 2600 000c 00100240 		.word	1073876992
 2601              		.cfi_endproc
 2602              	.LFE324:
 2604              		.section	.text.HAL_RCCEx_CRSConfig,"ax",%progbits
 2605              		.align	1
 2606              		.global	HAL_RCCEx_CRSConfig
 2607              		.syntax unified
 2608              		.thumb
 2609              		.thumb_func
 2610              		.fpu softvfp
 2612              	HAL_RCCEx_CRSConfig:
 2613              	.LVL196:
 2614              	.LFB325:
2570:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t value;  /* no init needed */
 2615              		.loc 1 2570 1 is_stmt 1 view -0
 2616              		.cfi_startproc
 2617              		@ args = 0, pretend = 0, frame = 0
 2618              		@ frame_needed = 0, uses_anonymous_args = 0
 2619              		@ link register save eliminated.
2571:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2620              		.loc 1 2571 3 view .LVU800
2574:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_SYNC_SOURCE(pInit->Source));
 2621              		.loc 1 2574 3 view .LVU801
2575:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_SYNC_POLARITY(pInit->Polarity));
 2622              		.loc 1 2575 3 view .LVU802
2576:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_RELOADVALUE(pInit->ReloadValue));
 2623              		.loc 1 2576 3 view .LVU803
2577:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_ERRORLIMIT(pInit->ErrorLimitValue));
 2624              		.loc 1 2577 3 view .LVU804
2578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_HSI48CALIBRATION(pInit->HSI48CalibrationValue));
 2625              		.loc 1 2578 3 view .LVU805
2579:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2626              		.loc 1 2579 3 view .LVU806
2584:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   __HAL_RCC_CRS_RELEASE_RESET();
 2627              		.loc 1 2584 3 view .LVU807
 2628 0000 104B     		ldr	r3, .L433
 2629 0002 9A6B     		ldr	r2, [r3, #56]
 2630 0004 42F08072 		orr	r2, r2, #16777216
 2631 0008 9A63     		str	r2, [r3, #56]
2585:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2632              		.loc 1 2585 3 view .LVU808
 2633 000a 9A6B     		ldr	r2, [r3, #56]
 2634 000c 22F08072 		bic	r2, r2, #16777216
 2635 0010 9A63     		str	r2, [r3, #56]
2590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the RELOAD[15:0] bits according to ReloadValue value */
 2636              		.loc 1 2590 3 view .LVU809
2590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the RELOAD[15:0] bits according to ReloadValue value */
 2637              		.loc 1 2590 29 is_stmt 0 view .LVU810
 2638 0012 D0E90032 		ldrd	r3, r2, [r0]
 2639 0016 1343     		orrs	r3, r3, r2
2590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the RELOAD[15:0] bits according to ReloadValue value */
 2640              		.loc 1 2590 9 view .LVU811
 2641 0018 8268     		ldr	r2, [r0, #8]
 2642 001a 1343     		orrs	r3, r3, r2
 2643              	.LVL197:
2592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the FELIM[7:0] bits according to ErrorLimitValue value */
 2644              		.loc 1 2592 3 is_stmt 1 view .LVU812
2592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Set the FELIM[7:0] bits according to ErrorLimitValue value */
 2645              		.loc 1 2592 9 is_stmt 0 view .LVU813
 2646 001c C268     		ldr	r2, [r0, #12]
 2647 001e 1343     		orrs	r3, r3, r2
 2648              	.LVL198:
2594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   WRITE_REG(CRS->CFGR, value);
 2649              		.loc 1 2594 3 is_stmt 1 view .LVU814
2594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   WRITE_REG(CRS->CFGR, value);
 2650              		.loc 1 2594 36 is_stmt 0 view .LVU815
 2651 0020 0269     		ldr	r2, [r0, #16]
2594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   WRITE_REG(CRS->CFGR, value);
 2652              		.loc 1 2594 9 view .LVU816
 2653 0022 43EA0243 		orr	r3, r3, r2, lsl #16
 2654              	.LVL199:
2595:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2655              		.loc 1 2595 3 is_stmt 1 view .LVU817
 2656 0026 084A     		ldr	r2, .L433+4
 2657 0028 5360     		str	r3, [r2, #4]
2600:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2658              		.loc 1 2600 3 view .LVU818
 2659 002a 1368     		ldr	r3, [r2]
 2660              	.LVL200:
2600:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2661              		.loc 1 2600 3 is_stmt 0 view .LVU819
 2662 002c 4169     		ldr	r1, [r0, #20]
 2663 002e 23F47C53 		bic	r3, r3, #16128
 2664 0032 43EA0123 		orr	r3, r3, r1, lsl #8
 2665 0036 1360     		str	r3, [r2]
 2666              	.LVL201:
2605:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2667              		.loc 1 2605 3 is_stmt 1 view .LVU820
 2668 0038 1368     		ldr	r3, [r2]
 2669 003a 43F06003 		orr	r3, r3, #96
 2670 003e 1360     		str	r3, [r2]
2606:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2671              		.loc 1 2606 1 is_stmt 0 view .LVU821
 2672 0040 7047     		bx	lr
 2673              	.L434:
 2674 0042 00BF     		.align	2
 2675              	.L433:
 2676 0044 00100240 		.word	1073876992
 2677 0048 00600040 		.word	1073766400
 2678              		.cfi_endproc
 2679              	.LFE325:
 2681              		.section	.text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate,"ax",%progbits
 2682              		.align	1
 2683              		.global	HAL_RCCEx_CRSSoftwareSynchronizationGenerate
 2684              		.syntax unified
 2685              		.thumb
 2686              		.thumb_func
 2687              		.fpu softvfp
 2689              	HAL_RCCEx_CRSSoftwareSynchronizationGenerate:
 2690              	.LFB326:
2613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   SET_BIT(CRS->CR, CRS_CR_SWSYNC);
 2691              		.loc 1 2613 1 is_stmt 1 view -0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 0
 2694              		@ frame_needed = 0, uses_anonymous_args = 0
 2695              		@ link register save eliminated.
2614:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2696              		.loc 1 2614 3 view .LVU823
 2697 0000 024A     		ldr	r2, .L436
 2698 0002 1368     		ldr	r3, [r2]
 2699 0004 43F08003 		orr	r3, r3, #128
 2700 0008 1360     		str	r3, [r2]
2615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2701              		.loc 1 2615 1 is_stmt 0 view .LVU824
 2702 000a 7047     		bx	lr
 2703              	.L437:
 2704              		.align	2
 2705              	.L436:
 2706 000c 00600040 		.word	1073766400
 2707              		.cfi_endproc
 2708              	.LFE326:
 2710              		.section	.text.HAL_RCCEx_CRSGetSynchronizationInfo,"ax",%progbits
 2711              		.align	1
 2712              		.global	HAL_RCCEx_CRSGetSynchronizationInfo
 2713              		.syntax unified
 2714              		.thumb
 2715              		.thumb_func
 2716              		.fpu softvfp
 2718              	HAL_RCCEx_CRSGetSynchronizationInfo:
 2719              	.LVL202:
 2720              	.LFB327:
2623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Check the parameter */
 2721              		.loc 1 2623 1 is_stmt 1 view -0
 2722              		.cfi_startproc
 2723              		@ args = 0, pretend = 0, frame = 0
 2724              		@ frame_needed = 0, uses_anonymous_args = 0
 2725              		@ link register save eliminated.
2625:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2726              		.loc 1 2625 3 view .LVU826
2628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2727              		.loc 1 2628 3 view .LVU827
2628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2728              		.loc 1 2628 32 is_stmt 0 view .LVU828
 2729 0000 074B     		ldr	r3, .L439
 2730 0002 5A68     		ldr	r2, [r3, #4]
 2731 0004 92B2     		uxth	r2, r2
2628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2732              		.loc 1 2628 29 view .LVU829
 2733 0006 0260     		str	r2, [r0]
2631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2734              		.loc 1 2631 3 is_stmt 1 view .LVU830
2631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2735              		.loc 1 2631 42 is_stmt 0 view .LVU831
 2736 0008 1A68     		ldr	r2, [r3]
2631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2737              		.loc 1 2631 73 view .LVU832
 2738 000a C2F30522 		ubfx	r2, r2, #8, #6
2631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2739              		.loc 1 2631 39 view .LVU833
 2740 000e 4260     		str	r2, [r0, #4]
2634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2741              		.loc 1 2634 3 is_stmt 1 view .LVU834
2634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2742              		.loc 1 2634 37 is_stmt 0 view .LVU835
 2743 0010 9A68     		ldr	r2, [r3, #8]
2634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2744              		.loc 1 2634 71 view .LVU836
 2745 0012 120C     		lsrs	r2, r2, #16
2634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2746              		.loc 1 2634 34 view .LVU837
 2747 0014 8260     		str	r2, [r0, #8]
2637:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2748              		.loc 1 2637 3 is_stmt 1 view .LVU838
2637:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2749              		.loc 1 2637 39 is_stmt 0 view .LVU839
 2750 0016 9B68     		ldr	r3, [r3, #8]
 2751 0018 03F40043 		and	r3, r3, #32768
2637:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** }
 2752              		.loc 1 2637 36 view .LVU840
 2753 001c C360     		str	r3, [r0, #12]
2638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2754              		.loc 1 2638 1 view .LVU841
 2755 001e 7047     		bx	lr
 2756              	.L440:
 2757              		.align	2
 2758              	.L439:
 2759 0020 00600040 		.word	1073766400
 2760              		.cfi_endproc
 2761              	.LFE327:
 2763              		.section	.text.HAL_RCCEx_CRSWaitSynchronization,"ax",%progbits
 2764              		.align	1
 2765              		.global	HAL_RCCEx_CRSWaitSynchronization
 2766              		.syntax unified
 2767              		.thumb
 2768              		.thumb_func
 2769              		.fpu softvfp
 2771              	HAL_RCCEx_CRSWaitSynchronization:
 2772              	.LVL203:
 2773              	.LFB328:
2656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t crsstatus = RCC_CRS_NONE;
 2774              		.loc 1 2656 1 is_stmt 1 view -0
 2775              		.cfi_startproc
 2776              		@ args = 0, pretend = 0, frame = 0
 2777              		@ frame_needed = 0, uses_anonymous_args = 0
2657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t tickstart;
 2778              		.loc 1 2657 3 view .LVU843
2658:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2779              		.loc 1 2658 3 view .LVU844
2661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2780              		.loc 1 2661 3 view .LVU845
2656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t crsstatus = RCC_CRS_NONE;
 2781              		.loc 1 2656 1 is_stmt 0 view .LVU846
 2782 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2783              	.LCFI23:
 2784              		.cfi_def_cfa_offset 24
 2785              		.cfi_offset 4, -24
 2786              		.cfi_offset 5, -20
 2787              		.cfi_offset 6, -16
 2788              		.cfi_offset 7, -12
 2789              		.cfi_offset 8, -8
 2790              		.cfi_offset 14, -4
2656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t crsstatus = RCC_CRS_NONE;
 2791              		.loc 1 2656 1 view .LVU847
 2792 0004 0646     		mov	r6, r0
2661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2793              		.loc 1 2661 15 view .LVU848
 2794 0006 FFF7FEFF 		bl	HAL_GetTick
 2795              	.LVL204:
2674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2796              		.loc 1 2674 8 view .LVU849
 2797 000a 214C     		ldr	r4, .L473
2661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2798              		.loc 1 2661 15 view .LVU850
 2799 000c 0746     		mov	r7, r0
 2800              	.LVL205:
2661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2801              		.loc 1 2661 15 view .LVU851
 2802 000e 2546     		mov	r5, r4
2680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2803              		.loc 1 2680 7 view .LVU852
 2804 0010 4FF00108 		mov	r8, #1
 2805              	.LVL206:
 2806              	.L451:
2664:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 2807              		.loc 1 2664 3 is_stmt 1 view .LVU853
2666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2808              		.loc 1 2666 5 view .LVU854
2666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2809              		.loc 1 2666 7 is_stmt 0 view .LVU855
 2810 0014 701C     		adds	r0, r6, #1
 2811 0016 31D1     		bne	.L442
 2812              	.L444:
2670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 2813              		.loc 1 2670 19 view .LVU856
 2814 0018 0020     		movs	r0, #0
 2815              	.L443:
 2816              	.LVL207:
2674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2817              		.loc 1 2674 5 is_stmt 1 view .LVU857
2674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2818              		.loc 1 2674 8 is_stmt 0 view .LVU858
 2819 001a A368     		ldr	r3, [r4, #8]
2674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2820              		.loc 1 2674 7 view .LVU859
 2821 001c D907     		lsls	r1, r3, #31
2677:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2822              		.loc 1 2677 7 is_stmt 1 view .LVU860
2680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2823              		.loc 1 2680 7 is_stmt 0 view .LVU861
 2824 001e 48BF     		it	mi
 2825 0020 C4F80C80 		strmi	r8, [r4, #12]
2684:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2826              		.loc 1 2684 8 view .LVU862
 2827 0024 AB68     		ldr	r3, [r5, #8]
2677:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2828              		.loc 1 2677 17 view .LVU863
 2829 0026 48BF     		it	mi
 2830 0028 40F00200 		orrmi	r0, r0, #2
 2831              	.LVL208:
2680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2832              		.loc 1 2680 7 is_stmt 1 view .LVU864
2680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2833              		.loc 1 2680 7 view .LVU865
2680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2834              		.loc 1 2680 7 view .LVU866
2680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2835              		.loc 1 2680 7 view .LVU867
2684:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2836              		.loc 1 2684 5 view .LVU868
2684:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2837              		.loc 1 2684 7 is_stmt 0 view .LVU869
 2838 002c 9A07     		lsls	r2, r3, #30
2687:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2839              		.loc 1 2687 7 is_stmt 1 view .LVU870
2690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2840              		.loc 1 2690 7 is_stmt 0 view .LVU871
 2841 002e 44BF     		itt	mi
 2842 0030 0223     		movmi	r3, #2
 2843 0032 EB60     		strmi	r3, [r5, #12]
2694:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2844              		.loc 1 2694 8 view .LVU872
 2845 0034 A368     		ldr	r3, [r4, #8]
2687:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2846              		.loc 1 2687 17 view .LVU873
 2847 0036 48BF     		it	mi
 2848 0038 40F00400 		orrmi	r0, r0, #4
 2849              	.LVL209:
2690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2850              		.loc 1 2690 7 is_stmt 1 view .LVU874
2690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2851              		.loc 1 2690 7 view .LVU875
2690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2852              		.loc 1 2690 7 view .LVU876
2690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2853              		.loc 1 2690 7 view .LVU877
2694:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2854              		.loc 1 2694 5 view .LVU878
2694:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2855              		.loc 1 2694 7 is_stmt 0 view .LVU879
 2856 003c 5B05     		lsls	r3, r3, #21
2697:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2857              		.loc 1 2697 7 is_stmt 1 view .LVU880
2700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2858              		.loc 1 2700 7 is_stmt 0 view .LVU881
 2859 003e 44BF     		itt	mi
 2860 0040 0423     		movmi	r3, #4
 2861 0042 E360     		strmi	r3, [r4, #12]
2704:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2862              		.loc 1 2704 8 view .LVU882
 2863 0044 AB68     		ldr	r3, [r5, #8]
2697:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2864              		.loc 1 2697 17 view .LVU883
 2865 0046 48BF     		it	mi
 2866 0048 40F02000 		orrmi	r0, r0, #32
 2867              	.LVL210:
2700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2868              		.loc 1 2700 7 is_stmt 1 view .LVU884
2700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2869              		.loc 1 2700 7 view .LVU885
2700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2870              		.loc 1 2700 7 view .LVU886
2700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2871              		.loc 1 2700 7 view .LVU887
2704:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2872              		.loc 1 2704 5 view .LVU888
2704:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2873              		.loc 1 2704 7 is_stmt 0 view .LVU889
 2874 004c D905     		lsls	r1, r3, #23
2707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2875              		.loc 1 2707 7 is_stmt 1 view .LVU890
2710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2876              		.loc 1 2710 7 is_stmt 0 view .LVU891
 2877 004e 44BF     		itt	mi
 2878 0050 0423     		movmi	r3, #4
 2879 0052 EB60     		strmi	r3, [r5, #12]
2714:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2880              		.loc 1 2714 8 view .LVU892
 2881 0054 A368     		ldr	r3, [r4, #8]
2707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2882              		.loc 1 2707 17 view .LVU893
 2883 0056 48BF     		it	mi
 2884 0058 40F00800 		orrmi	r0, r0, #8
 2885              	.LVL211:
2710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2886              		.loc 1 2710 7 is_stmt 1 view .LVU894
2710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2887              		.loc 1 2710 7 view .LVU895
2710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2888              		.loc 1 2710 7 view .LVU896
2710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2889              		.loc 1 2710 7 view .LVU897
2714:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2890              		.loc 1 2714 5 view .LVU898
2714:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2891              		.loc 1 2714 7 is_stmt 0 view .LVU899
 2892 005c 9A05     		lsls	r2, r3, #22
2717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2893              		.loc 1 2717 7 is_stmt 1 view .LVU900
2720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2894              		.loc 1 2720 7 is_stmt 0 view .LVU901
 2895 005e 44BF     		itt	mi
 2896 0060 0423     		movmi	r3, #4
 2897 0062 E360     		strmi	r3, [r4, #12]
2724:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2898              		.loc 1 2724 8 view .LVU902
 2899 0064 AB68     		ldr	r3, [r5, #8]
2717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2900              		.loc 1 2717 17 view .LVU903
 2901 0066 48BF     		it	mi
 2902 0068 40F01000 		orrmi	r0, r0, #16
 2903              	.LVL212:
2720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2904              		.loc 1 2720 7 is_stmt 1 view .LVU904
2720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2905              		.loc 1 2720 7 view .LVU905
2720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2906              		.loc 1 2720 7 view .LVU906
2720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2907              		.loc 1 2720 7 view .LVU907
2724:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2908              		.loc 1 2724 5 view .LVU908
2724:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 2909              		.loc 1 2724 7 is_stmt 0 view .LVU909
 2910 006c 1B07     		lsls	r3, r3, #28
2727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2911              		.loc 1 2727 7 is_stmt 1 view .LVU910
2727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2912              		.loc 1 2727 7 view .LVU911
2727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2913              		.loc 1 2727 7 view .LVU912
 2914 006e 44BF     		itt	mi
 2915 0070 0823     		movmi	r3, #8
 2916 0072 EB60     		strmi	r3, [r5, #12]
2727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 2917              		.loc 1 2727 7 view .LVU913
2729:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2918              		.loc 1 2729 10 view .LVU914
2729:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2919              		.loc 1 2729 3 is_stmt 0 view .LVU915
 2920 0074 0028     		cmp	r0, #0
 2921 0076 CDD0     		beq	.L451
2732:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 2922              		.loc 1 2732 1 view .LVU916
 2923 0078 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2924              	.LVL213:
 2925              	.L442:
2668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 2926              		.loc 1 2668 7 is_stmt 1 view .LVU917
2668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 2927              		.loc 1 2668 12 is_stmt 0 view .LVU918
 2928 007c FFF7FEFF 		bl	HAL_GetTick
 2929              	.LVL214:
2668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 2930              		.loc 1 2668 26 view .LVU919
 2931 0080 C01B     		subs	r0, r0, r7
2668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 2932              		.loc 1 2668 9 view .LVU920
 2933 0082 B042     		cmp	r0, r6
 2934 0084 01D8     		bhi	.L452
2668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 2935              		.loc 1 2668 50 discriminator 1 view .LVU921
 2936 0086 002E     		cmp	r6, #0
 2937 0088 C6D1     		bne	.L444
 2938              	.L452:
2670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 2939              		.loc 1 2670 19 view .LVU922
 2940 008a 0120     		movs	r0, #1
 2941 008c C5E7     		b	.L443
 2942              	.L474:
 2943 008e 00BF     		.align	2
 2944              	.L473:
 2945 0090 00600040 		.word	1073766400
 2946              		.cfi_endproc
 2947              	.LFE328:
 2949              		.section	.text.HAL_RCCEx_CRS_SyncOkCallback,"ax",%progbits
 2950              		.align	1
 2951              		.weak	HAL_RCCEx_CRS_SyncOkCallback
 2952              		.syntax unified
 2953              		.thumb
 2954              		.thumb_func
 2955              		.fpu softvfp
 2957              	HAL_RCCEx_CRS_SyncOkCallback:
 2958              	.LFB337:
 2959              		.cfi_startproc
 2960              		@ args = 0, pretend = 0, frame = 0
 2961              		@ frame_needed = 0, uses_anonymous_args = 0
 2962              		@ link register save eliminated.
 2963 0000 7047     		bx	lr
 2964              		.cfi_endproc
 2965              	.LFE337:
 2967              		.section	.text.HAL_RCCEx_CRS_SyncWarnCallback,"ax",%progbits
 2968              		.align	1
 2969              		.weak	HAL_RCCEx_CRS_SyncWarnCallback
 2970              		.syntax unified
 2971              		.thumb
 2972              		.thumb_func
 2973              		.fpu softvfp
 2975              	HAL_RCCEx_CRS_SyncWarnCallback:
 2976              	.LFB339:
 2977              		.cfi_startproc
 2978              		@ args = 0, pretend = 0, frame = 0
 2979              		@ frame_needed = 0, uses_anonymous_args = 0
 2980              		@ link register save eliminated.
 2981 0000 7047     		bx	lr
 2982              		.cfi_endproc
 2983              	.LFE339:
 2985              		.section	.text.HAL_RCCEx_CRS_ExpectedSyncCallback,"ax",%progbits
 2986              		.align	1
 2987              		.weak	HAL_RCCEx_CRS_ExpectedSyncCallback
 2988              		.syntax unified
 2989              		.thumb
 2990              		.thumb_func
 2991              		.fpu softvfp
 2993              	HAL_RCCEx_CRS_ExpectedSyncCallback:
 2994              	.LFB341:
 2995              		.cfi_startproc
 2996              		@ args = 0, pretend = 0, frame = 0
 2997              		@ frame_needed = 0, uses_anonymous_args = 0
 2998              		@ link register save eliminated.
 2999 0000 7047     		bx	lr
 3000              		.cfi_endproc
 3001              	.LFE341:
 3003              		.section	.text.HAL_RCCEx_CRS_ErrorCallback,"ax",%progbits
 3004              		.align	1
 3005              		.weak	HAL_RCCEx_CRS_ErrorCallback
 3006              		.syntax unified
 3007              		.thumb
 3008              		.thumb_func
 3009              		.fpu softvfp
 3011              	HAL_RCCEx_CRS_ErrorCallback:
 3012              	.LVL215:
 3013              	.LFB333:
2842:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 3014              		.loc 1 2842 1 is_stmt 1 view -0
 3015              		.cfi_startproc
 3016              		@ args = 0, pretend = 0, frame = 0
 3017              		@ frame_needed = 0, uses_anonymous_args = 0
 3018              		@ link register save eliminated.
2844:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3019              		.loc 1 2844 3 view .LVU924
2849:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3020              		.loc 1 2849 1 is_stmt 0 view .LVU925
 3021 0000 7047     		bx	lr
 3022              		.cfi_endproc
 3023              	.LFE333:
 3025              		.section	.text.HAL_RCCEx_CRS_IRQHandler,"ax",%progbits
 3026              		.align	1
 3027              		.global	HAL_RCCEx_CRS_IRQHandler
 3028              		.syntax unified
 3029              		.thumb
 3030              		.thumb_func
 3031              		.fpu softvfp
 3033              	HAL_RCCEx_CRS_IRQHandler:
 3034              	.LFB329:
2739:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t crserror = RCC_CRS_NONE;
 3035              		.loc 1 2739 1 is_stmt 1 view -0
 3036              		.cfi_startproc
 3037              		@ args = 0, pretend = 0, frame = 0
 3038              		@ frame_needed = 0, uses_anonymous_args = 0
2740:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   /* Get current IT flags and IT sources values */
 3039              		.loc 1 2740 3 view .LVU927
 3040              	.LVL216:
2742:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t itsources = READ_REG(CRS->CR);
 3041              		.loc 1 2742 3 view .LVU928
2742:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t itsources = READ_REG(CRS->CR);
 3042              		.loc 1 2742 12 is_stmt 0 view .LVU929
 3043 0000 1B49     		ldr	r1, .L519
2739:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t crserror = RCC_CRS_NONE;
 3044              		.loc 1 2739 1 view .LVU930
 3045 0002 08B5     		push	{r3, lr}
 3046              	.LCFI24:
 3047              		.cfi_def_cfa_offset 8
 3048              		.cfi_offset 3, -8
 3049              		.cfi_offset 14, -4
2742:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   uint32_t itsources = READ_REG(CRS->CR);
 3050              		.loc 1 2742 12 view .LVU931
 3051 0004 8B68     		ldr	r3, [r1, #8]
 3052              	.LVL217:
2743:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3053              		.loc 1 2743 3 is_stmt 1 view .LVU932
2743:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3054              		.loc 1 2743 12 is_stmt 0 view .LVU933
 3055 0006 0A68     		ldr	r2, [r1]
 3056              	.LVL218:
2746:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3057              		.loc 1 2746 3 is_stmt 1 view .LVU934
2746:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3058              		.loc 1 2746 5 is_stmt 0 view .LVU935
 3059 0008 D807     		lsls	r0, r3, #31
 3060 000a 06D5     		bpl	.L480
2746:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3061              		.loc 1 2746 46 discriminator 1 view .LVU936
 3062 000c D007     		lsls	r0, r2, #31
 3063 000e 04D5     		bpl	.L480
2749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3064              		.loc 1 2749 5 is_stmt 1 view .LVU937
 3065 0010 0123     		movs	r3, #1
 3066              	.LVL219:
2749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3067              		.loc 1 2749 5 is_stmt 0 view .LVU938
 3068 0012 CB60     		str	r3, [r1, #12]
2752:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 3069              		.loc 1 2752 5 is_stmt 1 view .LVU939
 3070 0014 FFF7FEFF 		bl	HAL_RCCEx_CRS_SyncOkCallback
 3071              	.LVL220:
 3072              	.L479:
2797:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3073              		.loc 1 2797 1 is_stmt 0 view .LVU940
 3074 0018 08BD     		pop	{r3, pc}
 3075              	.LVL221:
 3076              	.L480:
2755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3077              		.loc 1 2755 8 is_stmt 1 view .LVU941
2755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3078              		.loc 1 2755 10 is_stmt 0 view .LVU942
 3079 001a 9807     		lsls	r0, r3, #30
 3080 001c 07D5     		bpl	.L482
2755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3081              		.loc 1 2755 53 discriminator 1 view .LVU943
 3082 001e 9107     		lsls	r1, r2, #30
 3083 0020 05D5     		bpl	.L482
2758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3084              		.loc 1 2758 5 is_stmt 1 view .LVU944
 3085 0022 134B     		ldr	r3, .L519
 3086              	.LVL222:
2758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3087              		.loc 1 2758 5 is_stmt 0 view .LVU945
 3088 0024 0222     		movs	r2, #2
 3089              	.LVL223:
2758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3090              		.loc 1 2758 5 view .LVU946
 3091 0026 DA60     		str	r2, [r3, #12]
2761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 3092              		.loc 1 2761 5 is_stmt 1 view .LVU947
 3093 0028 FFF7FEFF 		bl	HAL_RCCEx_CRS_SyncWarnCallback
 3094              	.LVL224:
 3095 002c F4E7     		b	.L479
 3096              	.LVL225:
 3097              	.L482:
2764:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3098              		.loc 1 2764 8 view .LVU948
2764:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3099              		.loc 1 2764 10 is_stmt 0 view .LVU949
 3100 002e 1807     		lsls	r0, r3, #28
 3101 0030 07D5     		bpl	.L483
2764:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   {
 3102              		.loc 1 2764 50 discriminator 1 view .LVU950
 3103 0032 1107     		lsls	r1, r2, #28
 3104 0034 05D5     		bpl	.L483
2767:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3105              		.loc 1 2767 5 is_stmt 1 view .LVU951
 3106 0036 0E4B     		ldr	r3, .L519
 3107              	.LVL226:
2767:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3108              		.loc 1 2767 5 is_stmt 0 view .LVU952
 3109 0038 0822     		movs	r2, #8
 3110              	.LVL227:
2767:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3111              		.loc 1 2767 5 view .LVU953
 3112 003a DA60     		str	r2, [r3, #12]
2770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****   }
 3113              		.loc 1 2770 5 is_stmt 1 view .LVU954
 3114 003c FFF7FEFF 		bl	HAL_RCCEx_CRS_ExpectedSyncCallback
 3115              	.LVL228:
 3116 0040 EAE7     		b	.L479
 3117              	.LVL229:
 3118              	.L483:
2775:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 3119              		.loc 1 2775 5 view .LVU955
2775:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 3120              		.loc 1 2775 7 is_stmt 0 view .LVU956
 3121 0042 5807     		lsls	r0, r3, #29
 3122 0044 E8D5     		bpl	.L479
2775:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     {
 3123              		.loc 1 2775 45 discriminator 1 view .LVU957
 3124 0046 5107     		lsls	r1, r2, #29
 3125 0048 E6D5     		bpl	.L479
2777:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 3126              		.loc 1 2777 7 is_stmt 1 view .LVU958
2779:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 3127              		.loc 1 2779 18 is_stmt 0 view .LVU959
 3128 004a 13F48070 		ands	r0, r3, #256
 3129 004e 18BF     		it	ne
 3130 0050 0820     		movne	r0, #8
 3131              	.LVL230:
2781:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 3132              		.loc 1 2781 7 is_stmt 1 view .LVU960
2781:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 3133              		.loc 1 2781 9 is_stmt 0 view .LVU961
 3134 0052 9A05     		lsls	r2, r3, #22
 3135              	.LVL231:
2783:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 3136              		.loc 1 2783 9 is_stmt 1 view .LVU962
2783:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 3137              		.loc 1 2783 18 is_stmt 0 view .LVU963
 3138 0054 48BF     		it	mi
 3139 0056 40F01000 		orrmi	r0, r0, #16
 3140              	.LVL232:
2785:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 3141              		.loc 1 2785 7 is_stmt 1 view .LVU964
2785:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       {
 3142              		.loc 1 2785 9 is_stmt 0 view .LVU965
 3143 005a 5B05     		lsls	r3, r3, #21
 3144              	.LVL233:
2787:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 3145              		.loc 1 2787 9 is_stmt 1 view .LVU966
2791:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3146              		.loc 1 2791 7 is_stmt 0 view .LVU967
 3147 005c 044B     		ldr	r3, .L519
 3148 005e 4FF00402 		mov	r2, #4
2787:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****       }
 3149              		.loc 1 2787 18 view .LVU968
 3150 0062 48BF     		it	mi
 3151 0064 40F02000 		orrmi	r0, r0, #32
 3152              	.LVL234:
2791:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3153              		.loc 1 2791 7 is_stmt 1 view .LVU969
 3154 0068 DA60     		str	r2, [r3, #12]
2794:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c ****     }
 3155              		.loc 1 2794 7 view .LVU970
 3156 006a FFF7FEFF 		bl	HAL_RCCEx_CRS_ErrorCallback
 3157              	.LVL235:
2797:.././hal/stm32l4/Src/stm32l4xx_hal_rcc_ex.c **** 
 3158              		.loc 1 2797 1 is_stmt 0 view .LVU971
 3159 006e D3E7     		b	.L479
 3160              	.L520:
 3161              		.align	2
 3162              	.L519:
 3163 0070 00600040 		.word	1073766400
 3164              		.cfi_endproc
 3165              	.LFE329:
 3167              		.text
 3168              	.Letext0:
 3169              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3170              		.file 3 ".././hal/stm32l4/CMSIS/Include/core_cm4.h"
 3171              		.file 4 ".././hal/stm32l4/system_stm32l4xx.h"
 3172              		.file 5 ".././hal/stm32l4/stm32l443xx.h"
 3173              		.file 6 ".././hal/stm32l4/stm32l4xx.h"
 3174              		.file 7 ".././hal/stm32l4/Inc/stm32l4xx_hal_def.h"
 3175              		.file 8 ".././hal/stm32l4/Inc/stm32l4xx_hal_rcc_ex.h"
 3176              		.file 9 ".././hal/stm32l4/Inc/stm32l4xx_hal_gpio.h"
 3177              		.file 10 ".././hal/stm32l4/Inc/stm32l4xx_hal.h"
 3178              		.file 11 ".././hal/stm32l4/Inc/stm32l4xx_hal_pwr.h"
 3179              		.file 12 ".././hal/stm32l4/Inc/stm32l4xx_hal_rcc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rcc_ex.c
     /tmp/ccAD4p8X.s:16     .text.RCCEx_PLLSAI1_Config:0000000000000000 $t
     /tmp/ccAD4p8X.s:23     .text.RCCEx_PLLSAI1_Config:0000000000000000 RCCEx_PLLSAI1_Config
     /tmp/ccAD4p8X.s:273    .text.RCCEx_PLLSAI1_Config:0000000000000110 $d
     /tmp/ccAD4p8X.s:278    .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 $t
     /tmp/ccAD4p8X.s:285    .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/ccAD4p8X.s:865    .text.HAL_RCCEx_PeriphCLKConfig:00000000000002e4 $d
     /tmp/ccAD4p8X.s:871    .text.HAL_RCCEx_GetPeriphCLKConfig:0000000000000000 $t
     /tmp/ccAD4p8X.s:878    .text.HAL_RCCEx_GetPeriphCLKConfig:0000000000000000 HAL_RCCEx_GetPeriphCLKConfig
     /tmp/ccAD4p8X.s:1047   .text.HAL_RCCEx_GetPeriphCLKConfig:00000000000000e8 $d
     /tmp/ccAD4p8X.s:1053   .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000000 $t
     /tmp/ccAD4p8X.s:1060   .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000000 HAL_RCCEx_GetPeriphCLKFreq
     /tmp/ccAD4p8X.s:1695   .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000318 $d
     /tmp/ccAD4p8X.s:1703   .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000328 $t
     /tmp/ccAD4p8X.s:1814   .text.HAL_RCCEx_GetPeriphCLKFreq:00000000000003ac $d
     /tmp/ccAD4p8X.s:1821   .text.HAL_RCCEx_EnablePLLSAI1:0000000000000000 $t
     /tmp/ccAD4p8X.s:1828   .text.HAL_RCCEx_EnablePLLSAI1:0000000000000000 HAL_RCCEx_EnablePLLSAI1
     /tmp/ccAD4p8X.s:1950   .text.HAL_RCCEx_EnablePLLSAI1:0000000000000074 $d
     /tmp/ccAD4p8X.s:1955   .text.HAL_RCCEx_DisablePLLSAI1:0000000000000000 $t
     /tmp/ccAD4p8X.s:1962   .text.HAL_RCCEx_DisablePLLSAI1:0000000000000000 HAL_RCCEx_DisablePLLSAI1
     /tmp/ccAD4p8X.s:2036   .text.HAL_RCCEx_DisablePLLSAI1:0000000000000044 $d
     /tmp/ccAD4p8X.s:2041   .text.HAL_RCCEx_WakeUpStopCLKConfig:0000000000000000 $t
     /tmp/ccAD4p8X.s:2048   .text.HAL_RCCEx_WakeUpStopCLKConfig:0000000000000000 HAL_RCCEx_WakeUpStopCLKConfig
     /tmp/ccAD4p8X.s:2068   .text.HAL_RCCEx_WakeUpStopCLKConfig:0000000000000010 $d
     /tmp/ccAD4p8X.s:2073   .text.HAL_RCCEx_StandbyMSIRangeConfig:0000000000000000 $t
     /tmp/ccAD4p8X.s:2080   .text.HAL_RCCEx_StandbyMSIRangeConfig:0000000000000000 HAL_RCCEx_StandbyMSIRangeConfig
     /tmp/ccAD4p8X.s:2100   .text.HAL_RCCEx_StandbyMSIRangeConfig:0000000000000014 $d
     /tmp/ccAD4p8X.s:2105   .text.HAL_RCCEx_EnableLSECSS:0000000000000000 $t
     /tmp/ccAD4p8X.s:2112   .text.HAL_RCCEx_EnableLSECSS:0000000000000000 HAL_RCCEx_EnableLSECSS
     /tmp/ccAD4p8X.s:2129   .text.HAL_RCCEx_EnableLSECSS:0000000000000010 $d
     /tmp/ccAD4p8X.s:2134   .text.HAL_RCCEx_DisableLSECSS:0000000000000000 $t
     /tmp/ccAD4p8X.s:2141   .text.HAL_RCCEx_DisableLSECSS:0000000000000000 HAL_RCCEx_DisableLSECSS
     /tmp/ccAD4p8X.s:2162   .text.HAL_RCCEx_DisableLSECSS:0000000000000018 $d
     /tmp/ccAD4p8X.s:2167   .text.HAL_RCCEx_EnableLSECSS_IT:0000000000000000 $t
     /tmp/ccAD4p8X.s:2174   .text.HAL_RCCEx_EnableLSECSS_IT:0000000000000000 HAL_RCCEx_EnableLSECSS_IT
     /tmp/ccAD4p8X.s:2204   .text.HAL_RCCEx_EnableLSECSS_IT:000000000000002c $d
     /tmp/ccAD4p8X.s:2209   .text.HAL_RCCEx_LSECSS_Callback:0000000000000000 $t
     /tmp/ccAD4p8X.s:2216   .text.HAL_RCCEx_LSECSS_Callback:0000000000000000 HAL_RCCEx_LSECSS_Callback
     /tmp/ccAD4p8X.s:2229   .text.HAL_RCCEx_LSECSS_IRQHandler:0000000000000000 $t
     /tmp/ccAD4p8X.s:2236   .text.HAL_RCCEx_LSECSS_IRQHandler:0000000000000000 HAL_RCCEx_LSECSS_IRQHandler
     /tmp/ccAD4p8X.s:2267   .text.HAL_RCCEx_LSECSS_IRQHandler:0000000000000018 $d
     /tmp/ccAD4p8X.s:2272   .text.HAL_RCCEx_EnableLSCO:0000000000000000 $t
     /tmp/ccAD4p8X.s:2279   .text.HAL_RCCEx_EnableLSCO:0000000000000000 HAL_RCCEx_EnableLSCO
     /tmp/ccAD4p8X.s:2427   .text.HAL_RCCEx_EnableLSCO:0000000000000088 $d
     /tmp/ccAD4p8X.s:2433   .text.HAL_RCCEx_DisableLSCO:0000000000000000 $t
     /tmp/ccAD4p8X.s:2440   .text.HAL_RCCEx_DisableLSCO:0000000000000000 HAL_RCCEx_DisableLSCO
     /tmp/ccAD4p8X.s:2541   .text.HAL_RCCEx_DisableLSCO:0000000000000054 $d
     /tmp/ccAD4p8X.s:2547   .text.HAL_RCCEx_EnableMSIPLLMode:0000000000000000 $t
     /tmp/ccAD4p8X.s:2554   .text.HAL_RCCEx_EnableMSIPLLMode:0000000000000000 HAL_RCCEx_EnableMSIPLLMode
     /tmp/ccAD4p8X.s:2571   .text.HAL_RCCEx_EnableMSIPLLMode:000000000000000c $d
     /tmp/ccAD4p8X.s:2576   .text.HAL_RCCEx_DisableMSIPLLMode:0000000000000000 $t
     /tmp/ccAD4p8X.s:2583   .text.HAL_RCCEx_DisableMSIPLLMode:0000000000000000 HAL_RCCEx_DisableMSIPLLMode
     /tmp/ccAD4p8X.s:2600   .text.HAL_RCCEx_DisableMSIPLLMode:000000000000000c $d
     /tmp/ccAD4p8X.s:2605   .text.HAL_RCCEx_CRSConfig:0000000000000000 $t
     /tmp/ccAD4p8X.s:2612   .text.HAL_RCCEx_CRSConfig:0000000000000000 HAL_RCCEx_CRSConfig
     /tmp/ccAD4p8X.s:2676   .text.HAL_RCCEx_CRSConfig:0000000000000044 $d
     /tmp/ccAD4p8X.s:2682   .text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate:0000000000000000 $t
     /tmp/ccAD4p8X.s:2689   .text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate:0000000000000000 HAL_RCCEx_CRSSoftwareSynchronizationGenerate
     /tmp/ccAD4p8X.s:2706   .text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate:000000000000000c $d
     /tmp/ccAD4p8X.s:2711   .text.HAL_RCCEx_CRSGetSynchronizationInfo:0000000000000000 $t
     /tmp/ccAD4p8X.s:2718   .text.HAL_RCCEx_CRSGetSynchronizationInfo:0000000000000000 HAL_RCCEx_CRSGetSynchronizationInfo
     /tmp/ccAD4p8X.s:2759   .text.HAL_RCCEx_CRSGetSynchronizationInfo:0000000000000020 $d
     /tmp/ccAD4p8X.s:2764   .text.HAL_RCCEx_CRSWaitSynchronization:0000000000000000 $t
     /tmp/ccAD4p8X.s:2771   .text.HAL_RCCEx_CRSWaitSynchronization:0000000000000000 HAL_RCCEx_CRSWaitSynchronization
     /tmp/ccAD4p8X.s:2945   .text.HAL_RCCEx_CRSWaitSynchronization:0000000000000090 $d
     /tmp/ccAD4p8X.s:2950   .text.HAL_RCCEx_CRS_SyncOkCallback:0000000000000000 $t
     /tmp/ccAD4p8X.s:2957   .text.HAL_RCCEx_CRS_SyncOkCallback:0000000000000000 HAL_RCCEx_CRS_SyncOkCallback
     /tmp/ccAD4p8X.s:2968   .text.HAL_RCCEx_CRS_SyncWarnCallback:0000000000000000 $t
     /tmp/ccAD4p8X.s:2975   .text.HAL_RCCEx_CRS_SyncWarnCallback:0000000000000000 HAL_RCCEx_CRS_SyncWarnCallback
     /tmp/ccAD4p8X.s:2986   .text.HAL_RCCEx_CRS_ExpectedSyncCallback:0000000000000000 $t
     /tmp/ccAD4p8X.s:2993   .text.HAL_RCCEx_CRS_ExpectedSyncCallback:0000000000000000 HAL_RCCEx_CRS_ExpectedSyncCallback
     /tmp/ccAD4p8X.s:3004   .text.HAL_RCCEx_CRS_ErrorCallback:0000000000000000 $t
     /tmp/ccAD4p8X.s:3011   .text.HAL_RCCEx_CRS_ErrorCallback:0000000000000000 HAL_RCCEx_CRS_ErrorCallback
     /tmp/ccAD4p8X.s:3026   .text.HAL_RCCEx_CRS_IRQHandler:0000000000000000 $t
     /tmp/ccAD4p8X.s:3033   .text.HAL_RCCEx_CRS_IRQHandler:0000000000000000 HAL_RCCEx_CRS_IRQHandler
     /tmp/ccAD4p8X.s:3163   .text.HAL_RCCEx_CRS_IRQHandler:0000000000000070 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
MSIRangeTable
HAL_RCC_GetPCLK1Freq
HAL_GPIO_Init
HAL_PWR_EnableBkUpAccess
HAL_PWR_DisableBkUpAccess
