   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l4xx_hal_cryp_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.CRYP_WaitOnCCFlag,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	CRYP_WaitOnCCFlag:
  24              	.LVL0:
  25              	.LFB333:
  26              		.file 1 ".././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c"
   1:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
   2:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ******************************************************************************
   3:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @file    stm32l4xx_hal_cryp_ex.c
   4:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @author  MCD Application Team
   5:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief   CRYPEx HAL module driver.
   6:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *          This file provides firmware functions to manage the extended
   7:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *          functionalities of the Cryptography (CRYP) peripheral.
   8:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *
   9:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ******************************************************************************
  10:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @attention
  11:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *
  12:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  13:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *
  14:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  15:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * are permitted provided that the following conditions are met:
  16:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *      this list of conditions and the following disclaimer.
  18:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  20:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *      and/or other materials provided with the distribution.
  21:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *      may be used to endorse or promote products derived from this software
  23:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *      without specific prior written permission.
  24:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *
  25:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *
  36:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ******************************************************************************
  37:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
  38:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  39:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /* Includes ------------------------------------------------------------------*/
  40:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #include "stm32l4xx_hal.h"
  41:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  42:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #ifdef HAL_CRYP_MODULE_ENABLED
  43:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  44:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES)
  45:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  46:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  47:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @{
  48:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
  49:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  50:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @defgroup CRYPEx CRYPEx
  51:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief CRYP Extended HAL module driver
  52:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @{
  53:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
  54:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  55:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /* Private typedef -----------------------------------------------------------*/
  56:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /* Private define ------------------------------------------------------------*/
  57:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @defgroup CRYPEx_Private_Constants CRYPEx Private Constants
  58:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @{
  59:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
  60:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #define CRYP_CCF_TIMEOUTVALUE                      22000  /*!< CCF flag raising time-out value */
  61:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #define CRYP_BUSY_TIMEOUTVALUE                     22000  /*!< BUSY flag reset time-out value  */
  62:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  63:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #define CRYP_POLLING_OFF                             0x0  /*!< No polling when padding */
  64:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #define CRYP_POLLING_ON                              0x1  /*!< Polling when padding    */
  65:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  66:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
  67:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #define AES_POSITION_CR_NPBLB     (uint32_t)POSITION_VAL(AES_CR_NPBLB)    /*!< Required left shift 
  68:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
  69:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
  70:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @}
  71:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
  72:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  73:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /* Private macro -------------------------------------------------------------*/
  74:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /* Private variables ---------------------------------------------------------*/
  75:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /* Private function prototypes -----------------------------------------------*/
  76:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @defgroup CRYPEx_Private_Functions CRYPEx Private Functions
  77:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  * @{
  78:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  */
  79:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static HAL_StatusTypeDef CRYP_ProcessData(CRYP_HandleTypeDef *hcryp, uint8_t* Input, uint16_t Ileng
  80:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static HAL_StatusTypeDef CRYP_ReadKey(CRYP_HandleTypeDef *hcryp, uint8_t* Output, uint32_t Timeout)
  81:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_SetDMAConfig(CRYP_HandleTypeDef *hcryp, uint32_t inputaddr, uint16_t Size, uint32_
  82:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Authentication_SetDMAConfig(CRYP_HandleTypeDef *hcryp, uint32_t inputaddr, uint16_
  83:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Authentication_DMAInCplt(DMA_HandleTypeDef *hdma);
  84:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Authentication_DMAError(DMA_HandleTypeDef *hdma);
  85:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Authentication_DMAOutCplt(DMA_HandleTypeDef *hdma);
  86:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static HAL_StatusTypeDef CRYP_WaitOnCCFlag(CRYP_HandleTypeDef const * const hcryp, uint32_t Timeout
  87:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static HAL_StatusTypeDef CRYP_WaitOnBusyFlagReset(CRYP_HandleTypeDef const * const hcryp, uint32_t 
  88:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_DMAInCplt(DMA_HandleTypeDef *hdma);
  89:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_DMAOutCplt(DMA_HandleTypeDef *hdma);
  90:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_DMAError(DMA_HandleTypeDef *hdma);
  91:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Padding(CRYP_HandleTypeDef *hcryp, uint32_t difflength, uint32_t polling);
  92:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
  93:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @}
  94:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
  95:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  96:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /* Exported functions ---------------------------------------------------------*/
  97:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
  98:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @defgroup CRYPEx_Exported_Functions CRYPEx Exported Functions
  99:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @{
 100:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 101:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 102:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 103:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @defgroup CRYPEx_Exported_Functions_Group1 Extended callback function
 104:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  *  @brief    Extended callback functions.
 105:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  *
 106:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** @verbatim
 107:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  ===============================================================================
 108:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****                  ##### Extended callback functions #####
 109:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  ===============================================================================
 110:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     [..]  This section provides callback function:
 111:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       (+) Computation completed.
 112:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 113:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** @endverbatim
 114:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @{
 115:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 116:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 117:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 118:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
 119:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Computation completed callbacks.
 120:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
 121:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module
 122:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
 123:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 124:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** __weak void HAL_CRYPEx_ComputationCpltCallback(CRYP_HandleTypeDef *hcryp)
 125:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 126:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Prevent unused argument(s) compilation warning */
 127:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   UNUSED(hcryp);
 128:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 129:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 130:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             the HAL_CRYPEx_ComputationCpltCallback can be implemented in the user file
 131:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****    */
 132:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 133:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 134:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
 135:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @}
 136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 137:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 138:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @defgroup CRYPEx_Exported_Functions_Group2 AES extended processing functions
 139:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  *  @brief   Extended processing functions.
 140:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  *
 141:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** @verbatim
 142:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ==============================================================================
 143:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****                       ##### AES extended processing functions #####
 144:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ==============================================================================
 145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     [..]  This section provides functions allowing to:
 146:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       (+) Encrypt plaintext or decrypt cipher text using AES algorithm in different chaining modes.
 147:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           Functions are generic (handles ECB, CBC and CTR and all modes) and are only differentiate
 148:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           based on the processing type. Three processing types are available:
 149:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (++) Polling mode
 150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (++) Interrupt mode
 151:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (++) DMA mode
 152:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       (+) Generate and authentication tag in addition to encrypt/decrypt a plain/cipher text using 
 153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           algorithm in different chaining modes.
 154:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           Functions are generic (handles GCM, GMAC, CMAC and CCM when applicable) and process only 
 155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           so that steps can be skipped if so required. Functions are only differentiated based on t
 156:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           Three processing types are available:
 157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (++) Polling mode
 158:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (++) Interrupt mode
 159:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (++) DMA mode
 160:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 161:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** @endverbatim
 162:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @{
 163:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 164:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 165:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
 166:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Carry out in polling mode the ciphering or deciphering operation according to
 167:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         hcryp->Init structure fields, all operating modes (encryption, key derivation and/or de
 168:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         chaining modes ECB, CBC and CTR are managed by this function in polling mode.
 169:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
 170:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module
 171:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pInputData: Pointer to the plain text in case of encryption or cipher text in case of d
 172:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     or key derivation+decryption.
 173:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     Parameter is meaningless in case of key derivation.
 174:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Size: Length of the input data buffer in bytes, must be a multiple of 16.
 175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *               Parameter is meaningless in case of key derivation.
 176:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pOutputData: Pointer to the cipher text in case of encryption or plain text in case of
 177:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     decryption/key derivation+decryption, or pointer to the derivative keys in
 178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     case of key derivation only.
 179:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Timeout: Specify Timeout value
 180:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
 181:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** HAL_StatusTypeDef HAL_CRYPEx_AES(CRYP_HandleTypeDef *hcryp, uint8_t *pInputData, uint16_t Size, uin
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 184:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->State == HAL_CRYP_STATE_READY)
 186:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 187:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Check parameters setting */
 188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_KEYDERIVATION)
 189:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (pOutputData == NULL)
 191:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 192:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 193:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 194:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 195:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
 196:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 197:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((pInputData == NULL) || (pOutputData == NULL) || (Size == 0U))
 198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 199:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 200:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 201:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 202:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 203:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Locked */
 204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_LOCK(hcryp);
 205:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 206:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Change the CRYP state */
 207:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_BUSY;
 208:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 209:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Call CRYP_ReadKey() API if the operating mode is set to
 210:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        key derivation, CRYP_ProcessData() otherwise  */
 211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_KEYDERIVATION)
 212:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 213:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if(CRYP_ReadKey(hcryp, pOutputData, Timeout) != HAL_OK)
 214:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 215:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 216:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 218:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
 219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 220:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if(CRYP_ProcessData(hcryp, pInputData, Size, pOutputData, Timeout) != HAL_OK)
 221:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 223:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 224:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 225:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 226:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* If the state has not been set to SUSPENDED, set it to
 227:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        READY, otherwise keep it as it is */
 228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->State != HAL_CRYP_STATE_SUSPENDED)
 229:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
 231:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 232:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 233:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Unlocked */
 234:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
 235:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 236:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_OK;
 237:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   else
 239:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 240:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_BUSY;
 241:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 242:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 243:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 244:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 245:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 246:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
 247:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Carry out in interrupt mode the ciphering or deciphering operation according to
 248:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         hcryp->Init structure fields, all operating modes (encryption, key derivation and/or de
 249:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         chaining modes ECB, CBC and CTR are managed by this function in interrupt mode.
 250:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
 251:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module
 252:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pInputData: Pointer to the plain text in case of encryption or cipher text in case of d
 253:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     or key derivation+decryption.
 254:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     Parameter is meaningless in case of key derivation.
 255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Size: Length of the input data buffer in bytes, must be a multiple of 16.
 256:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *               Parameter is meaningless in case of key derivation.
 257:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pOutputData: Pointer to the cipher text in case of encryption or plain text in case of
 258:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     decryption/key derivation+decryption, or pointer to the derivative keys in
 259:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     case of key derivation only.
 260:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
 261:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 262:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** HAL_StatusTypeDef HAL_CRYPEx_AES_IT(CRYP_HandleTypeDef *hcryp,  uint8_t *pInputData, uint16_t Size,
 263:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 265:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if(hcryp->State == HAL_CRYP_STATE_READY)
 267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 268:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Check parameters setting */
 269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_KEYDERIVATION)
 270:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 271:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (pOutputData == NULL)
 272:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 273:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 274:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 275:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 276:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
 277:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 278:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((pInputData == NULL) || (pOutputData == NULL) || (Size == 0U))
 279:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 280:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 281:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 282:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 283:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Locked */
 284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_LOCK(hcryp);
 285:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 286:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* If operating mode is not limited to key derivation only,
 287:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        get the buffers addresses and sizes */
 288:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.OperatingMode != CRYP_ALGOMODE_KEYDERIVATION)
 289:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 290:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 291:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount = Size;
 292:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr = pInputData;
 293:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypOutBuffPtr = pOutputData;
 294:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypOutCount = Size;
 295:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 296:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
 297:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 298:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* For key derivation, set output buffer only
 299:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         (will point at derivated key) */
 300:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypOutBuffPtr = pOutputData;
 301:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 302:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 303:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Change the CRYP state */
 304:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_BUSY;
 305:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 306:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Process Unlocked */
 307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
 308:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 309:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Enable Computation Complete Flag and Error Interrupts */
 310:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_CRYP_ENABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
 311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 312:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 313:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* If operating mode is key derivation only, the input data have
 314:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        already been entered during the initialization process. For
 315:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        the other operating modes, they are fed to the CRYP hardware
 316:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        block at this point. */
 317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.OperatingMode != CRYP_ALGOMODE_KEYDERIVATION)
 318:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 319:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Initiate the processing under interrupt in entering
 320:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          the first input data */
 321:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr = (uint32_t)hcryp->pCrypInBuffPtr;
 322:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Increment/decrement instance pointer/counter */
 323:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr += 16;
 324:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount -= 16U;
 325:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Write the first input block in the Data Input register */
 326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 327:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 328:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 329:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 330:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 331:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 333:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 334:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 335:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Return function status */
 336:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_OK;
 337:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 338:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   else
 339:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 340:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_BUSY;
 341:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 342:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 343:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 344:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 345:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 346:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 347:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 348:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
 349:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Carry out in DMA mode the ciphering or deciphering operation according to
 350:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         hcryp->Init structure fields.
 351:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
 352:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module
 353:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pInputData: Pointer to the plain text in case of encryption or cipher text in case of d
 354:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     or key derivation+decryption.
 355:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Size: Length of the input data buffer in bytes, must be a multiple of 16.
 356:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pOutputData: Pointer to the cipher text in case of encryption or plain text in case of
 357:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                     decryption/key derivation+decryption.
 358:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Chaining modes ECB, CBC and CTR are managed by this function in DMA mode.
 359:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Supported operating modes are encryption, decryption and key derivation with decryption
 360:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   No DMA channel is provided for key derivation only and therefore, access to AES_KEYRx
 361:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         registers must be done by software.
 362:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   This API is not applicable to key derivation only; for such a mode, access to AES_KEYRx
 363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         registers must be done by software thru HAL_CRYPEx_AES() or HAL_CRYPEx_AES_IT() APIs.
 364:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   pInputData and pOutputData buffers must be 32-bit aligned to ensure a correct DMA trans
 365:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
 366:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 367:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** HAL_StatusTypeDef HAL_CRYPEx_AES_DMA(CRYP_HandleTypeDef *hcryp,  uint8_t *pInputData, uint16_t Size
 368:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 370:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr;
 371:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->State == HAL_CRYP_STATE_READY)
 373:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 374:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Check parameters setting */
 375:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_KEYDERIVATION)
 376:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 377:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* no DMA channel is provided for key derivation operating mode,
 378:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          access to AES_KEYRx registers must be done by software */
 379:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return  HAL_ERROR;
 380:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 381:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
 382:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((pInputData == NULL) || (pOutputData == NULL) || (Size == 0U))
 384:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 385:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 386:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 387:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 388:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 389:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 390:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Locked */
 391:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_LOCK(hcryp);
 392:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 393:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr  = (uint32_t)pInputData;
 394:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr = (uint32_t)pOutputData;
 395:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 396:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Change the CRYP state */
 397:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_BUSY;
 398:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 399:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Set the input and output addresses and start DMA transfer */
 400:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     CRYP_SetDMAConfig(hcryp, inputaddr, Size, outputaddr);
 401:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 402:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Unlocked */
 403:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
 404:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 405:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Return function status */
 406:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_OK;
 407:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 408:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   else
 409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 410:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_BUSY;
 411:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 412:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 413:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 414:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 415:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 416:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 417:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 418:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 419:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
 420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Carry out in polling mode the authentication tag generation as well as the ciphering or
 421:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         operation according to hcryp->Init structure fields.
 422:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
 423:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module
 424:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pInputData:
 425:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to payload data in GCM or CCM payload phase,
 426:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to B0 block in CMAC header phase,
 427:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to C block in CMAC final phase.
 428:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init, header and final phases.
 429:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Size:
 430:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of the input payload data buffer in bytes in GCM or CCM payload phase,
 431:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of B0 block (in bytes) in CMAC header phase,
 432:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of C block (in bytes) in CMAC final phase.
 433:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init and header phases.
 434:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of CCM final phase.
 435:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is message length in bytes in case of GCM final phase.
 436:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter must be set to zero in case of GMAC final phase.
 437:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pOutputData:
 438:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to plain or cipher text in GCM/CCM payload phase,
 439:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to authentication tag in GCM/GMAC/CCM/CMAC final phase.
 440:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init and header phases.
 441:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of CMAC header phase.
 442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Timeout: Specify Timeout value
 443:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Supported operating modes are encryption and decryption, supported chaining modes are G
 444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Phases are singly processed according to hcryp->Init.GCMCMACPhase so that steps in thes
 445:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         can be skipped by the user if so required.
 446:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
 447:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 448:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** HAL_StatusTypeDef HAL_CRYPEx_AES_Auth(CRYP_HandleTypeDef *hcryp, uint8_t *pInputData, uint64_t Size
 449:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 450:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 451:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr         ;
 452:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr        ;
 453:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t tagaddr           ;
 454:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t headerlength      ;
 455:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t inputlength       ;
 456:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t payloadlength     ;
 457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength     = 0;
 458:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 459:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->State == HAL_CRYP_STATE_READY)
 461:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 462:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* input/output parameters check */
 463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.GCMCMACPhase == CRYP_INIT_PHASE)
 464:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 465:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* No processing required */
 466:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 467:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_HEADER_PHASE)
 468:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 469:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (((hcryp->Init.Header != NULL) && (hcryp->Init.HeaderSize == 0U)) ||
 470:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 471:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 472:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 473:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
 475:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CCM)
 476:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
 477:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
 478:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 479:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 480:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* In case of CMAC or CCM (when applicable) header phase resumption, we can have pInputData
 481:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (((pInputData != NULL) && (Size == 0U)) || ((pInputData == NULL) && (Size != 0U)))
 482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 483:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return  HAL_ERROR;
 484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 485:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 486:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 487:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE)
 488:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (((pInputData == NULL) && (Size != 0U)) || \
 490:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((pInputData != NULL) && (Size == 0U)) || \
 491:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((pInputData != NULL) && (Size != 0U) && (pOutputData == NULL)))
 492:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 493:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 494:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 495:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 496:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_FINAL_PHASE)
 497:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 498:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (pOutputData == NULL)
 499:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 500:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 501:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 502:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
 503:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC) && (pInputData == NULL))
 504:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 505:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 506:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 507:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 508:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 509:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
 510:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 511:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Unspecified Phase */
 512:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return  HAL_ERROR;
 513:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 514:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 515:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 516:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Locked */
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_LOCK(hcryp);
 518:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 519:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Change the CRYP state */
 520:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_BUSY;
 521:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 522:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==============================================*/
 523:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC (or CCM when applicable) init phase */
 524:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==============================================*/
 525:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* In case of init phase, the input data (Key and Initialization Vector) have
 526:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        already been entered during the initialization process. Therefore, the
 527:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        API just waits for the CCF flag to be set. */
 528:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.GCMCMACPhase == CRYP_INIT_PHASE)
 529:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 530:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* just wait for hash computation */
 531:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if(CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 532:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 533:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
 534:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
 535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 536:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 538:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear CCF Flag */
 539:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 540:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the initialization phase is over */
 541:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Phase = HAL_CRYP_PHASE_INIT_OVER;
 542:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 543:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*=======================================================*/
 544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC or (CCM / CMAC when applicable) header phase */
 545:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*=======================================================*/
 546:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_HEADER_PHASE)
 547:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 548:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
 549:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Set header phase; for GCM or GMAC, set data-byte at this point */
 550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_GCM_GMAC)
 551:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 552:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH|AES_CR_DATATYPE, CRYP_HEADER_PHASE|hcryp->Init
 553:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 554:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
 555:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 556:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 557:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_HEADER_PHASE);
 558:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 559:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 560:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Enable the Peripheral */
 561:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_ENABLE(hcryp);
 562:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 563:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
 564:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* in case of CMAC, enter B0 block in header phase, before the header itself. */
 565:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* If Size = 0 (possible case of resumption after CMAC header phase suspension),
 566:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          skip these steps and go directly to header buffer feeding to the HW */
 567:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC) && (Size != 0U))
 568:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 569:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         uint64_t index_test;
 570:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr = (uint32_t)pInputData;
 571:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         for(index=0U ; (index < Size); index += 16U)
 573:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Write the Input block in the Data Input register */
 575:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 576:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 577:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 578:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 579:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 581:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 582:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 583:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if(CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 585:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 586:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->State = HAL_CRYP_STATE_READY;
 587:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             __HAL_UNLOCK(hcryp);
 588:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             return HAL_TIMEOUT;
 589:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 590:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Clear CCF Flag */
 591:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 592:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 593:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* If the suspension flag has been raised and if the processing is not about
 594:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            to end, suspend processing */
 595:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           index_test = (uint64_t)index + 16U;
 596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_test < Size))
 597:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 598:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* reset SuspendRequest */
 599:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->SuspendRequest = HAL_CRYP_SUSPEND_NONE;
 600:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Change the CRYP state */
 601:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->State = HAL_CRYP_STATE_SUSPENDED;
 602:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Mark that the header phase is over */
 603:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->Phase = HAL_CRYP_PHASE_HEADER_SUSPENDED;
 604:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 605:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            /* Save current reading and writing locations of Input and Output buffers */
 606:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
 607:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            /* Save the total number of bytes (B blocks + header) that remain to be
 608:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               processed at this point */
 609:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            hcryp->CrypInCount     =  (uint32_t) (hcryp->Init.HeaderSize + Size - index_test);
 610:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 611:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            /* Process Unlocked */
 612:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             __HAL_UNLOCK(hcryp);
 613:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 614:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             return HAL_OK;
 615:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 616:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         } /* for(index=0; (index < Size); index += 16) */
 617:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 618:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* !defined(AES_CR_NPBLB) */
 619:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 620:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Enter header */
 621:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr = (uint32_t)hcryp->Init.Header;
 622:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Local variable headerlength is a number of bytes multiple of 128 bits,
 623:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          remaining header data (if any) are handled after this loop */
 624:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       headerlength =  (((hcryp->Init.HeaderSize)/16U)*16U) ;
 625:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.HeaderSize % 16U) != 0U)
 626:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = (uint32_t) (hcryp->Init.HeaderSize - headerlength);
 628:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 629:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < headerlength; index += 16U)
 630:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 631:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         uint64_t index_temp;
 632:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the Input block in the Data Input register */
 633:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 634:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 635:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 637:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 638:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 640:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 641:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if(CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 643:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 644:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
 645:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 646:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 647:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 648:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear CCF Flag */
 649:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 650:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 651:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* If the suspension flag has been raised and if the processing is not about
 652:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          to end, suspend processing */
 653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         index_temp = (uint64_t)index + 16U;
 654:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_temp < headerlength))
 655:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 656:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* reset SuspendRequest */
 657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->SuspendRequest = HAL_CRYP_SUSPEND_NONE;
 658:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state */
 659:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_SUSPENDED;
 660:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 661:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Phase = HAL_CRYP_PHASE_HEADER_SUSPENDED;
 662:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 663:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          /* Save current reading and writing locations of Input and Output buffers */
 664:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
 665:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          /* Save the total number of bytes that remain to be processed at this point */
 666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount =  (uint32_t) (hcryp->Init.HeaderSize - index_temp);
 667:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 668:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          /* Process Unlocked */
 669:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 670:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 671:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_OK;
 672:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 673:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 674:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 675:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Case header length is not a multiple of 16 bytes */
 676:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (difflength != 0U)
 677:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 678:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
 679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Padding(hcryp, difflength, CRYP_POLLING_ON);
 680:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 681:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 682:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the header phase is over */
 683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Phase = HAL_CRYP_PHASE_HEADER_OVER;
 684:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 685:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*============================================*/
 686:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM (or CCM when applicable) payload phase */
 687:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*============================================*/
 688:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE)
 689:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 690:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_PAYLOAD_PHASE);
 692:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 693:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* if the header phase has been bypassed, AES must be enabled again */
 694:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Phase == HAL_CRYP_PHASE_INIT_OVER)
 695:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 696:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_ENABLE(hcryp);
 697:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 698:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 699:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr  = (uint32_t)pInputData;
 700:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr = (uint32_t)pOutputData;
 701:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 702:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Enter payload */
 703:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Specific handling to manage payload last block size less than 128 bits */
 704:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((Size % 16U) != 0U)
 705:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 706:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         payloadlength = (Size/16U) * 16U;
 707:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = (uint32_t) (Size - payloadlength);
 708:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         addhoc_process = 1;
 709:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 710:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
 711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 712:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         payloadlength = Size;
 713:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 714:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 715:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Feed payload */
 716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < payloadlength; index += 16U)
 717:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 718:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         uint64_t index_temp;
 719:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the Input block in the Data Input register */
 720:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 721:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 722:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 723:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 724:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 725:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 726:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 727:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 728:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if(CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 730:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 731:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
 732:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 733:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 734:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 735:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 736:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear CCF Flag */
 737:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 738:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 739:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Retrieve output data: read the output block
 740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            from the Data Output Register */
 741:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 742:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 743:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 744:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 746:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 748:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 749:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 750:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* If the suspension flag has been raised and if the processing is not about
 751:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          to end, suspend processing */
 752:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         index_temp = (uint64_t)index + 16U;
 753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_temp < payloadlength))
 754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 755:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* no flag waiting under IRQ handling */
 756:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_ENCRYPT)
 757:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 758:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Ensure that Busy flag is reset */
 759:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             if(CRYP_WaitOnBusyFlagReset(hcryp, CRYP_BUSY_TIMEOUTVALUE) != HAL_OK)
 760:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             {
 761:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               hcryp->State = HAL_CRYP_STATE_READY;
 762:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               __HAL_UNLOCK(hcryp);
 763:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               return HAL_TIMEOUT;
 764:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             }
 765:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 766:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* reset SuspendRequest */
 767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->SuspendRequest = HAL_CRYP_SUSPEND_NONE;
 768:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state */
 769:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_SUSPENDED;
 770:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 771:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Phase = HAL_CRYP_PHASE_HEADER_SUSPENDED;
 772:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 773:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Save current reading and writing locations of Input and Output buffers */
 774:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr =  (uint8_t *)outputaddr;
 775:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
 776:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Save the number of bytes that remain to be processed at this point */
 777:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount     =  (uint32_t) (Size - index_temp);
 778:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 779:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Process Unlocked */
 780:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 781:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 782:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_OK;
 783:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 784:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 785:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 786:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 787:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Additional processing to manage GCM(/CCM) encryption and decryption cases when
 788:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          payload last block size less than 128 bits */
 789:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (addhoc_process == 1U)
 790:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 791:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 792:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
 793:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypOutBuffPtr =  (uint8_t *)outputaddr;
 794:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Padding(hcryp, difflength, CRYP_POLLING_ON);
 795:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 796:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       } /* (addhoc_process == 1) */
 797:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 798:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the payload phase is over */
 799:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Phase = HAL_CRYP_PHASE_PAYLOAD_OVER;
 800:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 801:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==================================*/
 802:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC/CCM or CMAC final phase */
 803:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==================================*/
 804:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
 805:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 806:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr = (uint32_t)pOutputData;
 807:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 808:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
 809:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      /* By default, clear NPBLB field */
 810:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       CLEAR_BIT(hcryp->Instance->CR, AES_CR_NPBLB);
 811:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 813:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_FINAL_PHASE);
 814:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 815:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* if the header and payload phases have been bypassed, AES must be enabled again */
 816:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Phase == HAL_CRYP_PHASE_INIT_OVER)
 817:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 818:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_ENABLE(hcryp);
 819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 820:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_GCM_GMAC)
 822:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         headerlength = hcryp->Init.HeaderSize * 8U; /* Header length in bits */
 824:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* input length in bits */
 825:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 826:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
 827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if(hcryp->Init.DataType == CRYP_DATATYPE_1B)
 828:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)(headerlength>>32));
 830:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
 831:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)(inputlength>>32));
 832:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
 833:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 834:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_8B)
 835:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 836:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(headerlength>>32));
 837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
 838:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
 839:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
 840:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 841:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_16B)
 842:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 843:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)(headerlength>>32), 16);
 844:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
 845:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)(inputlength>>32), 16);
 846:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
 847:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 848:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_32B)
 849:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 850:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength>>32);
 851:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
 852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
 853:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
 854:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 855:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
 856:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 857:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Unspecified Data Type */
 858:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          return  HAL_ERROR;
 859:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 860:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
 861:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(headerlength>>32);
 862:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(headerlength);
 863:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
 864:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(inputlength);
 865:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 866:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 867:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
 868:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
 869:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 870:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr  = (uint32_t)pInputData;
 871:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter the last block made of a 128-bit value formatted
 872:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            from the original B0 packet. */
 873:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 874:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 875:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 876:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 877:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 878:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 879:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 880:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 881:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
 882:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 883:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          /* Unspecified Chaining Mode */
 884:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          return  HAL_ERROR;
 885:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        }
 886:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 887:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 888:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 889:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if(CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 890:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 891:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
 892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 893:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 894:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 895:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 896:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Read the Auth TAG in the Data Out register */
 897:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 898:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 899:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 900:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 901:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 902:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 903:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 904:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 905:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 906:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear CCF Flag */
 907:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the final phase is over */
 909:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Phase = HAL_CRYP_PHASE_FINAL_OVER;
 910:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable the Peripheral */
 911:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_DISABLE(hcryp);
 912:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 913:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 914:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Change the CRYP state */
 915:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_READY;
 916:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 917:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Unlocked */
 918:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
 919:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 920:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_OK;
 921:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 922:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   else
 923:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 924:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_BUSY;
 925:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 926:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 927:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 928:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 929:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 930:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 931:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
 932:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Carry out in interrupt mode the authentication tag generation as well as the ciphering 
 933:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         operation according to hcryp->Init structure fields.
 934:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
 935:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module
 936:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pInputData:
 937:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to payload data in GCM or CCM payload phase,
 938:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to B0 block in CMAC header phase,
 939:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to C block in CMAC final phase.
 940:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init, header and final phases.
 941:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Size:
 942:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of the input payload data buffer in bytes in GCM or CCM payload phase,
 943:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of B0 block (in bytes) in CMAC header phase,
 944:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of C block (in bytes) in CMAC final phase.
 945:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init and header phases.
 946:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of CCM final phase.
 947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is message length in bytes in case of GCM final phase.
 948:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter must be set to zero in case of GMAC final phase.
 949:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pOutputData:
 950:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to plain or cipher text in GCM/CCM payload phase,
 951:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to authentication tag in GCM/GMAC/CCM/CMAC final phase.
 952:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init and header phases.
 953:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of CMAC header phase.
 954:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Supported operating modes are encryption and decryption, supported chaining modes are G
 955:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Phases are singly processed according to hcryp->Init.GCMCMACPhase so that steps in thes
 956:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         can be skipped by the user if so required.
 957:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
 958:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
 959:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** HAL_StatusTypeDef HAL_CRYPEx_AES_Auth_IT(CRYP_HandleTypeDef *hcryp, uint8_t *pInputData, uint64_t S
 960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 961:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 962:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr         ;
 963:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t headerlength      ;
 964:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t inputlength       ;
 965:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 966:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 967:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength     = 0;
 968:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflengthmod4 = 0;
 969:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask[4][3];
 970:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 971:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask_index = hcryp->Init.DataType >> AES_CR_DATATYPE_Pos;
 972:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[0][0] = 0xFF000000U;  mask[0][1] = 0xFFFF0000U;  mask[0][2] = 0xFFFFFF00U;  /* 32-bit data *
 974:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 975:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 976:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 977:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 978:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->State == HAL_CRYP_STATE_READY)
 979:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 980:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* input/output parameters check */
 981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.GCMCMACPhase == CRYP_INIT_PHASE)
 982:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* No processing required */
 984:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 985:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_HEADER_PHASE)
 986:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 987:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (((hcryp->Init.Header != NULL) && (hcryp->Init.HeaderSize == 0U)) ||
 988:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 989:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 990:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
 991:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 992:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
 993:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CCM)
 994:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
 995:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
 996:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 997:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 998:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* In case of CMAC or CCM header phase resumption, we can have pInputData = NULL and  Size 
 999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (((pInputData != NULL) && (Size == 0U)) || ((pInputData == NULL) && (Size != 0U)))
1000:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1001:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return  HAL_ERROR;
1002:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1003:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1004:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1005:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE)
1006:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1007:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((pInputData != NULL) && (Size != 0U) && (pOutputData == NULL))
1008:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1009:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1010:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1011:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1012:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_FINAL_PHASE)
1013:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1014:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (pOutputData == NULL)
1015:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1016:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1017:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1018:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC) && (pInputData == NULL))
1020:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1021:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1022:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1023:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1024:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1025:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
1026:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1027:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Unspecified Phase */
1028:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return  HAL_ERROR;
1029:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      }
1030:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1031:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1032:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Locked */
1033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_LOCK(hcryp);
1034:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1035:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Change the CRYP state */
1036:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_BUSY;
1037:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1038:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Unlocked */
1039:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
1040:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1041:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Enable Computation Complete Flag and Error Interrupts */
1042:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_CRYP_ENABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
1043:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1044:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1045:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1046:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==============================================*/
1047:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC (or CCM when applicable) init phase */
1048:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==============================================*/
1049:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.GCMCMACPhase == CRYP_INIT_PHASE)
1050:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1051:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* In case of init phase, the input data (Key and Initialization Vector) have
1052:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        already been entered during the initialization process. Therefore, the
1053:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        software just waits for the CCF interrupt to be raised and which will
1054:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        be handled by CRYP_AES_Auth_IT() API. */
1055:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1056:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*===================================*/
1057:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC/CCM or CMAC header phase */
1058:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*===================================*/
1059:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_HEADER_PHASE)
1060:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1061:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1062:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
1063:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CCM)
1064:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
1065:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
1066:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1067:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1068:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* In case of CMAC, B blocks are first entered, before the header.
1069:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            Therefore, B blocks and the header are entered back-to-back
1070:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            as if it was only one single block.
1071:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            However, in case of resumption after suspension, if all the
1072:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            B blocks have been entered (in that case, Size = 0), only the
1073:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            remainder of the non-processed header bytes are entered. */
1074:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if (Size != 0U)
1075:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
1076:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->CrypInCount = (uint32_t)(Size + hcryp->Init.HeaderSize);
1077:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->pCrypInBuffPtr = pInputData;
1078:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
1079:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           else
1080:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
1081:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->CrypInCount = (uint32_t)hcryp->Init.HeaderSize;
1082:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->pCrypInBuffPtr = hcryp->Init.Header;
1083:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
1084:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1085:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1086:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1087:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Get the header addresses and sizes */
1088:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount = (uint32_t)hcryp->Init.HeaderSize;
1089:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypInBuffPtr = hcryp->Init.Header;
1090:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1091:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1092:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr = (uint32_t)hcryp->pCrypInBuffPtr;
1093:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1094:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1095:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1096:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Set header phase; for GCM or GMAC, set data-byte at this point */
1097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_GCM_GMAC)
1098:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1099:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH|AES_CR_DATATYPE, CRYP_HEADER_PHASE|hcryp->Init
1100:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1101:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1102:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1103:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1104:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_HEADER_PHASE);
1105:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1106:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1107:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Enable the Peripheral */
1108:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_ENABLE(hcryp);
1109:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1110:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Increment/decrement instance pointer/counter */
1111:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->CrypInCount == 0U)
1112:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1113:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Case of no header */
1114:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
1115:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
1116:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Phase = HAL_CRYP_PHASE_HEADER_OVER;
1117:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
1118:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1119:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else if (hcryp->CrypInCount < 16U)
1120:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1121:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount = 0;
1122:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         addhoc_process = 1;
1123:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = (uint32_t) (hcryp->Init.HeaderSize);
1124:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflengthmod4 = difflength%4U;
1125:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1126:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1127:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1128:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypInBuffPtr += 16;
1129:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount -= 16U;
1130:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1131:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1132:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1133:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
1134:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CCM)
1135:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
1136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
1137:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1138:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1139:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->CrypInCount == hcryp->Init.HeaderSize)
1140:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1141:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* All B blocks will have been entered after the next
1142:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              four DINR writing, so point at header buffer for
1143:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              the next iteration */
1144:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr = hcryp->Init.Header;
1145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1146:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1147:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1148:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Enter header first block to initiate the process
1149:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          in the Data Input register */
1150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (addhoc_process == 0U)
1151:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1152:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Header has size equal or larger than 128 bits */
1153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1154:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1156:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
1158:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1159:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1160:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1161:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1162:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1163:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Header has size less than 128 bits */
1164:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter complete words when possible */
1165:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         for(index=0U ; index < (difflength/4U); index ++)
1166:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1167:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Write the Input block in the Data Input register */
1168:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1169:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
1170:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1171:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter incomplete word padded with zeroes if applicable
1172:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (case of header length not a multiple of 32-bits) */
1173:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (difflengthmod4 != 0U)
1174:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = ((*(uint32_t*)(inputaddr)) & mask[mask_index][difflengthmod4-1U])
1176:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1177:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Pad with zero-words to reach 128-bit long block and wrap-up header feeding to the IP */
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         for(index=0U; index < (4U - ((difflength+3U)/4U)); index ++)
1179:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1180:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = 0;
1181:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1184:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*============================================*/
1186:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM (or CCM when applicable) payload phase */
1187:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*============================================*/
1188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE)
1189:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Get the buffer addresses and sizes */
1191:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount = (uint32_t)Size;
1192:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr = pInputData;
1193:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypOutBuffPtr = pOutputData;
1194:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypOutCount = (uint32_t)Size;
1195:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1196:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr = (uint32_t)hcryp->pCrypInBuffPtr;
1197:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_PAYLOAD_PHASE);
1199:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1200:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* if the header phase has been bypassed, AES must be enabled again */
1201:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Phase == HAL_CRYP_PHASE_INIT_OVER)
1202:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1203:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_ENABLE(hcryp);
1204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1205:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1206:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* No payload case */
1207:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (pInputData == NULL)
1208:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1209:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
1210:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
1211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Phase = HAL_CRYP_PHASE_PAYLOAD_OVER;
1212:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
1213:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
1214:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1215:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
1216:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1218:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      /* Specific handling to manage payload size less than 128 bits */
1219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (Size < 16U)
1220:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1221:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = (uint32_t) (Size);
1222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
1223:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* In case of GCM encryption or CCM decryption, specify the number of padding
1224:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            bytes in last block of payload */
1225:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (READ_BIT(hcryp->Instance->CR, AES_CR_GCMPH) == CRYP_PAYLOAD_PHASE)
1226:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1227:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           uint32_t cr_temp = hcryp->Instance->CR;
1228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1229:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if (((cr_temp & (AES_CR_CHMOD|AES_CR_MODE)) == (CRYP_CHAINMODE_AES_GCM_GMAC|CRYP_ALGOMODE
1230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            ||  ((cr_temp & (AES_CR_CHMOD|AES_CR_MODE)) == (CRYP_CHAINMODE_AES_CCM|CRYP_ALGOMODE_DEC
1231:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
1232:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Set NPBLB field in writing the number of padding bytes
1233:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****                for the last block of payload */
1234:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             MODIFY_REG(hcryp->Instance->CR, AES_CR_NPBLB, (16U - difflength) << AES_POSITION_CR_NPB
1235:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
1236:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1237:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
1238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Software workaround applied to GCM encryption only */
1239:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_ENCRYPT)
1240:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1241:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the mode configured in CHMOD bits of CR register to select CTR mode */
1242:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_CRYP_SET_CHAININGMODE(hcryp, CRYP_CHAINMODE_AES_CTR);
1243:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1244:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1245:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1246:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1247:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Set hcryp->CrypInCount to 0 (no more data to enter) */
1248:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount = 0;
1249:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1250:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /*  Insert the last block (which size is inferior to 128 bits) padded with zeroes,
1251:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             to have a complete block of 128 bits */
1252:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflengthmod4 = difflength%4U;
1253:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /*  Insert the last block (which size is inferior to 128 bits) padded with zeroes
1254:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             to have a complete block of 128 bits */
1255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         for(index=0U; index < (difflength/4U); index ++)
1256:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1257:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Write the Input block in the Data Input register */
1258:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1259:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
1260:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1261:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* If required, manage input data size not multiple of 32 bits */
1262:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (difflengthmod4 != 0U)
1263:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = ((*(uint32_t*)(inputaddr)) & mask[mask_index][difflengthmod4-1U])
1265:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Wrap-up in padding with zero-words if applicable */
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         for(index=0U; index < (4U - ((difflength+3U)/4U)); index ++)
1268:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = 0;
1270:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1271:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1272:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1273:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1274:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Increment/decrement instance pointer/counter */
1275:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypInBuffPtr += 16;
1276:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount -= 16U;
1277:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1278:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter payload first block to initiate the process
1279:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            in the Data Input register */
1280:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1281:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1282:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1283:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
1285:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1286:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1287:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1288:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1289:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==================================*/
1290:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC/CCM or CMAC final phase */
1291:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==================================*/
1292:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
1293:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1294:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        hcryp->pCrypOutBuffPtr = pOutputData;
1295:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1296:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
1297:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      /* By default, clear NPBLB field */
1298:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       CLEAR_BIT(hcryp->Instance->CR, AES_CR_NPBLB);
1299:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1300:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1301:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_FINAL_PHASE);
1302:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1303:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* if the header and payload phases have been bypassed, AES must be enabled again */
1304:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Phase == HAL_CRYP_PHASE_INIT_OVER)
1305:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1306:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_ENABLE(hcryp);
1307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1308:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1309:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_GCM_GMAC)
1310:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         headerlength = hcryp->Init.HeaderSize * 8U; /* Header length in bits */
1312:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* Input length in bits */
1313:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
1314:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            of bits in the payload on 64 bits as well */
1315:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1316:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if(hcryp->Init.DataType == CRYP_DATATYPE_1B)
1318:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1319:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)((headerlength)>>32));
1320:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
1321:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)((inputlength)>>32));
1322:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
1323:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1324:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_8B)
1325:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(headerlength>>32));
1327:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
1328:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
1329:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
1330:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1331:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_16B)
1332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1333:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)((headerlength)>>32), 16);
1334:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
1335:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)((inputlength)>>32), 16);
1336:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
1337:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1338:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_32B)
1339:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1340:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength>>32);
1341:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
1342:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
1343:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
1344:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1345:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
1346:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1347:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Unspecified Data Type */
1348:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return  HAL_ERROR;
1349:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1350:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
1351:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(headerlength>>32);
1352:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(headerlength);
1353:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
1354:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(inputlength);
1355:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1356:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1357:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1358:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
1359:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1360:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr  = (uint32_t)pInputData;
1361:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter the last block made of a 128-bit value formatted
1362:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            from the original B0 packet. */
1363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1364:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1365:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1366:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1367:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
1368:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1370:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1371:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1373:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Unspecified Chaining Mode */
1374:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1375:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1376:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1377:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1378:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1379:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_OK;
1380:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
1381:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   else
1382:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
1383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_BUSY;
1384:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
1385:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
1386:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1387:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1388:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1389:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1390:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
1391:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Carry out in DMA mode the authentication tag generation as well as the ciphering or dec
1392:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         operation according to hcryp->Init structure fields.
1393:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
1394:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module
1395:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pInputData:
1396:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to payload data in GCM or CCM payload phase,
1397:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to B0 block in CMAC header phase,
1398:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to C block in CMAC final phase.
1399:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init, header and final phases.
1400:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Size:
1401:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of the input payload data buffer in bytes in GCM or CCM payload phase,
1402:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of B0 block (in bytes) in CMAC header phase,
1403:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - length of C block (in bytes) in CMAC final phase.
1404:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init and header phases.
1405:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of CCM final phase.
1406:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is message length in bytes in case of GCM final phase.
1407:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter must be set to zero in case of GMAC final phase.
1408:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  pOutputData:
1409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to plain or cipher text in GCM/CCM payload phase,
1410:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - pointer to authentication tag in GCM/GMAC/CCM/CMAC final phase.
1411:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of GCM/GMAC/CCM init and header phases.
1412:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         - Parameter is meaningless in case of CMAC header phase.
1413:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Supported operating modes are encryption and decryption, supported chaining modes are G
1414:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Phases are singly processed according to hcryp->Init.GCMCMACPhase so that steps in thes
1415:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         can be skipped by the user if so required.
1416:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   pInputData and pOutputData buffers must be 32-bit aligned to ensure a correct DMA trans
1417:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
1418:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
1419:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** HAL_StatusTypeDef HAL_CRYPEx_AES_Auth_DMA(CRYP_HandleTypeDef *hcryp, uint8_t *pInputData, uint64_t 
1420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
1421:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      ;
1422:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr     ;
1423:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t tagaddr        ;
1424:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t headerlength   ;
1425:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t inputlength    ;
1426:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t payloadlength  ;
1427:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1428:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1429:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->State == HAL_CRYP_STATE_READY)
1430:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
1431:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* input/output parameters check */
1432:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.GCMCMACPhase == CRYP_INIT_PHASE)
1433:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1434:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* No processing required */
1435:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1436:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_HEADER_PHASE)
1437:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1438:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.Header != NULL) && (hcryp->Init.HeaderSize == 0U))
1439:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1440:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1441:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
1443:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CCM)
1444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1445:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* In case of CMAC or CCM header phase resumption, we can have pInputData = NULL and  Size 
1446:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (((pInputData != NULL) && (Size == 0U)) || ((pInputData == NULL) && (Size != 0U)))
1447:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1448:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return  HAL_ERROR;
1449:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1450:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1451:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
1452:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
1453:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1454:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if ((pInputData == NULL) || (Size == 0U))
1455:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1456:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return  HAL_ERROR;
1457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1458:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1459:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1461:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE)
1462:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((pInputData != NULL) && (Size != 0U) && (pOutputData == NULL))
1464:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1465:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1466:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1467:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1468:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_FINAL_PHASE)
1469:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1470:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (pOutputData == NULL)
1471:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1472:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1473:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1475:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC) && (pInputData == NULL))
1476:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1477:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1478:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1479:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1480:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1481:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
1482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1483:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Unspecified Phase */
1484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return  HAL_ERROR;
1485:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1486:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1487:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1488:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Locked */
1489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_LOCK(hcryp);
1490:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1491:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Change the CRYP state */
1492:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_BUSY;
1493:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1494:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==============================================*/
1495:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC (or CCM when applicable) init phase */
1496:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==============================================*/
1497:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* In case of init phase, the input data (Key and Initialization Vector) have
1498:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        already been entered during the initialization process. No DMA transfer is
1499:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        required at that point therefore, the software just waits for the CCF flag
1500:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        to be raised. */
1501:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.GCMCMACPhase == CRYP_INIT_PHASE)
1502:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1503:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* just wait for hash computation */
1504:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if(CRYP_WaitOnCCFlag(hcryp, CRYP_CCF_TIMEOUTVALUE) != HAL_OK)
1505:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1506:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
1507:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
1508:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
1509:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1510:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1511:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear CCF Flag */
1512:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
1513:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the initialization phase is over */
1514:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Phase = HAL_CRYP_PHASE_INIT_OVER;
1515:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
1516:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1517:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*====================================*/
1518:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC/ CCM or CMAC header phase */
1519:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*====================================*/
1520:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_HEADER_PHASE)
1521:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1522:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1523:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Set header phase; for GCM or GMAC, set data-byte at this point */
1524:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_GCM_GMAC)
1525:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1526:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH|AES_CR_DATATYPE, CRYP_HEADER_PHASE|hcryp->Init
1527:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1528:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1529:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1530:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1531:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_HEADER_PHASE);
1532:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1533:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1534:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Enable the CRYP peripheral */
1535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_ENABLE(hcryp);
1536:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1538:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* enter first B0 block in polling mode (no DMA transfer for B0) */
1539:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
1540:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1541:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr  = (uint32_t)pInputData;
1542:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1543:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1545:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1546:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
1547:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1548:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1549:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if(CRYP_WaitOnCCFlag(hcryp, CRYP_CCF_TIMEOUTVALUE) != HAL_OK)
1551:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1552:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
1553:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
1554:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
1555:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1556:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear CCF Flag */
1557:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
1558:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1559:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1560:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1561:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* No header case */
1562:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.Header == NULL)
1563:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1564:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
1565:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
1566:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Phase = HAL_CRYP_PHASE_HEADER_OVER;
1567:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
1568:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
1569:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1570:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
1571:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1573:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr = (uint32_t)hcryp->Init.Header;
1574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.HeaderSize % 16U) != 0U)
1575:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1576:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1577:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->Init.HeaderSize < 16U)
1578:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1579:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
1580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           CRYP_Padding(hcryp, (uint32_t) (hcryp->Init.HeaderSize), CRYP_POLLING_OFF);
1581:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1582:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
1583:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
1584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Phase = HAL_CRYP_PHASE_HEADER_OVER;
1585:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1586:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* CCF flag indicating header phase AES processing completion
1587:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              will be checked at the start of the next phase:
1588:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             - payload phase (GCM / CCM when applicable)
1589:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             - final phase (GMAC or CMAC when applicable).  */
1590:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1591:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
1592:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1593:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Local variable headerlength is a number of bytes multiple of 128 bits,
1594:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             remaining header data (if any) are handled after this loop */
1595:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           headerlength =  (((hcryp->Init.HeaderSize)/16U)*16U) ;
1596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Store the ending transfer point */
1597:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr = hcryp->Init.Header + headerlength;
1598:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = (uint32_t)(hcryp->Init.HeaderSize - headerlength); /* remainder */
1599:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1600:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Set the input and output addresses and start DMA transfer */
1601:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* (incomplete DMA transfer, will be wrapped up after completion of
1602:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              the first one (initiated here) with data padding */
1603:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           CRYP_Authentication_SetDMAConfig(hcryp, inputaddr, (uint16_t)headerlength, 0);
1604:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1605:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1606:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1607:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1608:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount = 0;
1609:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Set the input address and start DMA transfer */
1610:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Authentication_SetDMAConfig(hcryp, inputaddr, (uint16_t)hcryp->Init.HeaderSize, 0);
1611:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1612:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1613:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*============================================*/
1614:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM (or CCM when applicable) payload phase */
1615:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*============================================*/
1616:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE)
1617:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1618:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Coming from header phase, wait for CCF flag to be raised
1619:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if header present and fed to the IP in the previous phase */
1620:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.Header != NULL)
1621:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1622:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if(CRYP_WaitOnCCFlag(hcryp, CRYP_CCF_TIMEOUTVALUE) != HAL_OK)
1623:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1624:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
1625:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
1626:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
1627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1628:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1629:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1630:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1631:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enable the Peripheral since wasn't in header phase (no header case) */
1632:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_ENABLE(hcryp);
1633:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1634:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear CCF Flag */
1635:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
1636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1637:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_PAYLOAD_PHASE);
1638:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* No payload case */
1640:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (pInputData == NULL)
1641:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
1643:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
1644:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Phase = HAL_CRYP_PHASE_PAYLOAD_OVER;
1645:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
1646:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
1647:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1648:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
1649:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1650:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1651:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1652:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Specific handling to manage payload size less than 128 bits */
1653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((Size % 16U) != 0U)
1654:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1655:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr  = (uint32_t)pInputData;
1656:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr = (uint32_t)pOutputData;
1657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (Size < 16U)
1658:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1659:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Block is now entered in polling mode, no actual gain in resorting to DMA */
1660:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
1661:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr =  (uint8_t *)outputaddr;
1662:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1663:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           CRYP_Padding(hcryp, (uint32_t)Size, CRYP_POLLING_ON);
1664:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1665:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state to ready */
1666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
1667:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the payload phase is over */
1668:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Phase = HAL_CRYP_PHASE_PAYLOAD_OVER;
1669:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1670:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Call output data transfer complete callback */
1671:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
1672:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->OutCpltCallback(hcryp);
1673:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
1674:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           HAL_CRYP_OutCpltCallback(hcryp);
1675:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
1676:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1677:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
1678:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           payloadlength = (Size/16U) * 16U;
1680:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1681:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Store the ending transfer points */
1682:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr = pInputData;
1683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr += payloadlength;
1684:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr = pOutputData;
1685:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr += payloadlength;
1686:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = (uint32_t)(Size - payloadlength); /* remainder */
1687:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1688:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Set the input and output addresses and start DMA transfer */
1689:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* (incomplete DMA transfer, will be wrapped up with data padding
1690:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              after completion of the one initiated here) */
1691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           CRYP_Authentication_SetDMAConfig(hcryp, inputaddr, (uint16_t)payloadlength, outputaddr);
1692:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1693:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1694:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1695:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1696:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount = 0;
1697:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr  = (uint32_t)pInputData;
1698:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr = (uint32_t)pOutputData;
1699:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1700:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Set the input and output addresses and start DMA transfer */
1701:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Authentication_SetDMAConfig(hcryp, inputaddr, (uint16_t)Size, outputaddr);
1702:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1703:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1704:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==================================*/
1705:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC/CCM or CMAC final phase */
1706:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*==================================*/
1707:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
1708:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1709:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* If coming from header phase (GMAC or CMAC case when applicable),
1710:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          wait for CCF flag to be raised */
1711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (READ_BIT(hcryp->Instance->CR, AES_CR_GCMPH) == CRYP_HEADER_PHASE)
1712:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1713:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if(CRYP_WaitOnCCFlag(hcryp, CRYP_CCF_TIMEOUTVALUE) != HAL_OK)
1714:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1715:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
1716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
1717:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
1718:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1719:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear CCF Flag */
1720:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
1721:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1722:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1723:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr = (uint32_t)pOutputData;
1724:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1725:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
1726:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      /* By default, clear NPBLB field */
1727:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       CLEAR_BIT(hcryp->Instance->CR, AES_CR_NPBLB);
1728:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_FINAL_PHASE);
1730:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1731:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* if the header and payload phases have been bypassed, AES must be enabled again */
1732:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Phase == HAL_CRYP_PHASE_INIT_OVER)
1733:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1734:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_ENABLE(hcryp);
1735:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1736:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1737:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_GCM_GMAC)
1738:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1739:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         headerlength = hcryp->Init.HeaderSize * 8U; /* Header length in bits */
1740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;  /* input length in bits */
1741:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
1742:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            of bits in the payload on 64 bits as well */
1743:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1744:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if(hcryp->Init.DataType == CRYP_DATATYPE_1B)
1745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1746:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)(headerlength>>32));
1747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
1748:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)(inputlength>>32));
1749:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
1750:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1751:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_8B)
1752:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(headerlength>>32));
1754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
1755:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
1756:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
1757:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1758:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_16B)
1759:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1760:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)(headerlength>>32), 16);
1761:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
1762:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)(inputlength>>32), 16);
1763:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
1764:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1765:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else if(hcryp->Init.DataType == CRYP_DATATYPE_32B)
1766:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength>>32);
1768:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
1769:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
1770:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
1771:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1772:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
1773:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
1774:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Unspecified Data Type */
1775:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return  HAL_ERROR;
1776:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
1777:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
1778:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(headerlength>>32);
1779:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(headerlength);
1780:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
1781:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = (uint32_t)(inputlength);
1782:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1783:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1784:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
1785:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
1786:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1787:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
1788:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1789:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr  = (uint32_t)pInputData;
1790:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter the last block made of a 128-bit value formatted
1791:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            from the original B0 packet. */
1792:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1793:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1794:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1795:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1796:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
1797:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
1798:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
1799:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1800:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
1801:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1802:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Unspecified Chaining Mode */
1803:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return  HAL_ERROR;
1804:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1805:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
1806:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1807:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* No DMA transfer is required at that point therefore, the software
1808:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          just waits for the CCF flag to be raised. */
1809:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if(CRYP_WaitOnCCFlag(hcryp, CRYP_CCF_TIMEOUTVALUE) != HAL_OK)
1810:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
1811:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
1812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
1813:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
1814:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
1815:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1816:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Read the Auth TAG in the IN FIFO */
1817:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
1818:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
1819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
1820:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
1821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
1822:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
1823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
1824:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1825:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear CCF Flag */
1826:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
1827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1828:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the final phase is over */
1829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Phase = HAL_CRYP_PHASE_FINAL_OVER;
1830:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
1831:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable the Peripheral */
1832:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_DISABLE(hcryp);
1833:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1834:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1835:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1836:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Process Unlocked */
1837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
1838:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1839:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_OK;
1840:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
1841:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   else
1842:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
1843:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_BUSY;
1844:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
1845:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
1846:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1847:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
1848:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @}
1849:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
1850:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1851:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @defgroup CRYPEx_Exported_Functions_Group3 AES suspension/resumption functions
1852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  *  @brief   Extended processing functions.
1853:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****  *
1854:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** @verbatim
1855:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ==============================================================================
1856:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****                     ##### AES extended suspension and resumption functions #####
1857:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ==============================================================================
1858:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     [..]  This section provides functions allowing to:
1859:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       (+) save in memory the Initialization Vector, the Key registers, the Control register or
1860:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           the Suspend registers when a process is suspended by a higher priority message
1861:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       (+) write back in CRYP hardware block the saved values listed above when the suspended
1862:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           lower priority message processing is resumed.
1863:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1864:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** @endverbatim
1865:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @{
1866:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
1867:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1868:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1869:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
1870:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  In case of message processing suspension, read the Initialization Vector.
1871:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
1872:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
1873:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Output: Pointer to the buffer containing the saved Initialization Vector.
1874:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   This value has to be stored for reuse by writing the AES_IVRx registers
1875:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         as soon as the interrupted processing has to be resumed.
1876:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         Applicable to all chaining modes.
1877:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   AES must be disabled when reading or resetting the IV values.
1878:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
1879:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
1880:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_Read_IVRegisters(CRYP_HandleTypeDef *hcryp, uint8_t* Output)
1881:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
1882:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
1883:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1884:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->IVR3);
1885:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1886:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->IVR2);
1887:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1888:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->IVR1);
1889:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1890:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->IVR0);
1891:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
1892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1893:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
1894:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  In case of message processing resumption, rewrite the Initialization
1895:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         Vector in the AES_IVRx registers.
1896:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
1897:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
1898:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Input: Pointer to the buffer containing the saved Initialization Vector to
1899:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         write back in the CRYP hardware block.
1900:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Applicable to all chaining modes.
1901:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   AES must be disabled when reading or resetting the IV values.
1902:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
1903:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
1904:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_Write_IVRegisters(CRYP_HandleTypeDef *hcryp, uint8_t* Input)
1905:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
1906:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t ivaddr = (uint32_t)Input;
1907:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->IVR3 = __REV(*(uint32_t*)(ivaddr));
1909:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1910:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->IVR2 = __REV(*(uint32_t*)(ivaddr));
1911:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1912:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->IVR1 = __REV(*(uint32_t*)(ivaddr));
1913:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1914:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->IVR0 = __REV(*(uint32_t*)(ivaddr));
1915:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
1916:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1917:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1918:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
1919:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  In case of message GCM/GMAC (CCM/CMAC when applicable) processing suspension,
1920:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         read the Suspend Registers.
1921:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
1922:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
1923:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Output: Pointer to the buffer containing the saved Suspend Registers.
1924:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   These values have to be stored for reuse by writing back the AES_SUSPxR registers
1925:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         as soon as the interrupted processing has to be resumed.
1926:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
1927:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
1928:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_Read_SuspendRegisters(CRYP_HandleTypeDef *hcryp, uint8_t* Output)
1929:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
1930:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
1931:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1932:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* In case of GCM payload phase encryption, check that suspension can be carried out */
1933:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (READ_BIT(hcryp->Instance->CR, (AES_CR_GCMPH|AES_CR_MODE)) == (CRYP_PAYLOAD_PHASE|CRYP_ALGOMOD
1934:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
1935:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Ensure that Busy flag is reset */
1936:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if(CRYP_WaitOnBusyFlagReset(hcryp, CRYP_BUSY_TIMEOUTVALUE) != HAL_OK)
1937:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
1938:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->ErrorCode |= HAL_CRYP_BUSY_ERROR;
1939:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_ERROR;
1940:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1941:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Process Unlocked */
1942:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_UNLOCK(hcryp);
1943:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1944:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
1945:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->ErrorCallback(hcryp);
1946:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
1947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       HAL_CRYP_ErrorCallback(hcryp);
1948:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
1949:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return ;
1950:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
1951:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
1952:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1953:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP7R);
1954:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1955:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP6R);
1956:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1957:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP5R);
1958:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1959:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP4R);
1960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1961:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP3R);
1962:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1963:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP2R);
1964:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1965:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP1R);
1966:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
1967:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP0R);
1968:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
1969:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1970:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
1971:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  In case of message GCM/GMAC (CCM/CMAC when applicable) processing resumption, rewrite t
1972:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         Registers in the AES_SUSPxR registers.
1973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
1974:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
1975:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Input: Pointer to the buffer containing the saved suspend registers to
1976:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         write back in the CRYP hardware block.
1977:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
1978:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
1979:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_Write_SuspendRegisters(CRYP_HandleTypeDef *hcryp, uint8_t* Input)
1980:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
1981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t ivaddr = (uint32_t)Input;
1982:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
1983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP7R = __REV(*(uint32_t*)(ivaddr));
1984:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1985:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP6R = __REV(*(uint32_t*)(ivaddr));
1986:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1987:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP5R = __REV(*(uint32_t*)(ivaddr));
1988:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1989:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP4R = __REV(*(uint32_t*)(ivaddr));
1990:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1991:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP3R = __REV(*(uint32_t*)(ivaddr));
1992:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1993:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP2R = __REV(*(uint32_t*)(ivaddr));
1994:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1995:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP1R = __REV(*(uint32_t*)(ivaddr));
1996:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
1997:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP0R = __REV(*(uint32_t*)(ivaddr));
1998:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
1999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2000:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2001:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2002:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  In case of message GCM/GMAC (CCM/CMAC when applicable) processing suspension, read the 
2003:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2004:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2005:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Output: Pointer to the buffer containing the saved Key Registers.
2006:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  KeySize: Indicates the key size (128 or 256 bits).
2007:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   These values have to be stored for reuse by writing back the AES_KEYRx registers
2008:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         as soon as the interrupted processing has to be resumed.
2009:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2010:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2011:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_Read_KeyRegisters(CRYP_HandleTypeDef *hcryp, uint8_t* Output, uint32_t KeySize)
2012:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2013:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t keyaddr = (uint32_t)Output;
2014:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2015:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (KeySize == CRYP_KEYSIZE_256B)
2016:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2017:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR7);
2018:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR6);
2020:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2021:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR5);
2022:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2023:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR4);
2024:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2025:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2026:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2027:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR3);
2028:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
2029:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR2);
2030:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
2031:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR1);
2032:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
2033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR0);
2034:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2035:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2036:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2037:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  In case of message GCM/GMAC (CCM/CMAC when applicable) processing resumption, rewrite t
2038:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         Registers in the AES_KEYRx registers.
2039:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2040:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2041:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Input: Pointer to the buffer containing the saved key registers to
2042:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         write back in the CRYP hardware block.
2043:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  KeySize: Indicates the key size (128 or 256 bits)
2044:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2045:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2046:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_Write_KeyRegisters(CRYP_HandleTypeDef *hcryp, uint8_t* Input, uint32_t KeySize)
2047:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2048:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t keyaddr = (uint32_t)Input;
2049:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2050:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (KeySize == CRYP_KEYSIZE_256B)
2051:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2052:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR7 = __REV(*(uint32_t*)(keyaddr));
2053:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2054:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR6 = __REV(*(uint32_t*)(keyaddr));
2055:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2056:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR5 = __REV(*(uint32_t*)(keyaddr));
2057:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2058:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR4 = __REV(*(uint32_t*)(keyaddr));
2059:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2060:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2061:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2062:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR3 = __REV(*(uint32_t*)(keyaddr));
2063:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2064:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR2 = __REV(*(uint32_t*)(keyaddr));
2065:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2066:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR1 = __REV(*(uint32_t*)(keyaddr));
2067:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
2068:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR0 = __REV(*(uint32_t*)(keyaddr));
2069:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2070:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2071:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2072:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2073:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  In case of message GCM/GMAC (CCM/CMAC when applicable) processing suspension, read the 
2074:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2075:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2076:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Output: Pointer to the buffer containing the saved Control Register.
2077:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   This values has to be stored for reuse by writing back the AES_CR register
2078:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         as soon as the interrupted processing has to be resumed.
2079:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2080:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2081:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_Read_ControlRegister(CRYP_HandleTypeDef *hcryp, uint8_t* Output)
2082:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2083:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(void *)(Output) = hcryp->Instance->CR;                           /* Derogation Misra
2084:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2085:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2086:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2087:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  In case of message GCM/GMAC (CCM/CMAC when applicable) processing resumption, rewrite t
2088:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         Registers in the AES_CR register.
2089:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2090:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2091:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Input: Pointer to the buffer containing the saved Control Register to
2092:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         write back in the CRYP hardware block.
2093:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2094:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2095:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_Write_ControlRegister(CRYP_HandleTypeDef *hcryp, uint8_t* Input)
2096:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->CR = *(uint32_t*)(void *)(Input);                            /* Derogation Misra
2098:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* At the same time, set handle state back to READY to be able to resume the AES calculations
2099:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      without the processing APIs returning HAL_BUSY when called. */
2100:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->State        = HAL_CRYP_STATE_READY;
2101:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2102:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2103:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2104:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Request CRYP processing suspension when in polling or interruption mode.
2105:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2106:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2107:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Set the handle field SuspendRequest to the appropriate value so that
2108:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the on-going CRYP processing is suspended as soon as the required
2109:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         conditions are met.
2110:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   It is advised not to suspend the CRYP processing when the DMA controller
2111:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         is managing the data transfer
2112:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2113:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2114:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** void HAL_CRYPEx_ProcessSuspend(CRYP_HandleTypeDef *hcryp)
2115:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2116:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set Handle Suspend Request field */
2117:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->SuspendRequest = HAL_CRYP_SUSPEND;
2118:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2119:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2120:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2121:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @}
2122:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2123:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2124:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2125:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @}
2126:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2127:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2128:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /** @addtogroup CRYPEx_Private_Functions
2129:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @{
2130:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2131:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2132:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2133:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  DMA CRYP Input Data process complete callback
2134:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         for GCM, GMAC, CCM or CMAC chaining modes.
2135:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   Specific setting of hcryp fields are required only
2136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         in the case of header phase where no output data DMA
2137:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         transfer is on-going (only input data transfer is enabled
2138:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         in such a case).
2139:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hdma: DMA handle.
2140:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2141:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2142:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Authentication_DMAInCplt(DMA_HandleTypeDef *hdma)
2143:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2144:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength;
2145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
2146:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2147:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Disable the DMA transfer for input request  */
2148:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CLEAR_BIT(hcryp->Instance->CR, AES_CR_DMAINEN);
2149:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->Init.GCMCMACPhase == CRYP_HEADER_PHASE)
2151:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2152:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->CrypInCount != 0U)
2154:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Last block is now entered in polling mode, no actual gain in resorting to DMA */
2156:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       difflength = hcryp->CrypInCount;
2157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount = 0;
2158:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2159:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       CRYP_Padding(hcryp, difflength, CRYP_POLLING_OFF);
2160:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2161:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_READY;
2162:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Mark that the header phase is over */
2163:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Phase = HAL_CRYP_PHASE_HEADER_OVER;
2164:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2165:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* CCF flag indicating header phase AES processing completion
2166:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      will be checked at the start of the next phase:
2167:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      - payload phase (GCM or CCM when applicable)
2168:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      - final phase (GMAC or CMAC).
2169:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     This allows to avoid the Wait on Flag within the IRQ handling.  */
2170:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2171:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Call input data transfer complete callback */
2172:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2173:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->InCpltCallback(hcryp);
2174:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   HAL_CRYP_InCpltCallback(hcryp);
2176:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2177:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2179:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2180:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  DMA CRYP Output Data process complete callback
2181:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         for GCM, GMAC, CCM or CMAC chaining modes.
2182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   This callback is called only in the payload phase.
2183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hdma: DMA handle.
2184:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2186:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Authentication_DMAOutCplt(DMA_HandleTypeDef *hdma)
2187:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength;
2189:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
2190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2191:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Disable the DMA transfer for output request */
2192:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CLEAR_BIT(hcryp->Instance->CR, AES_CR_DMAOUTEN);
2193:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2194:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Clear CCF Flag */
2195:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2196:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2197:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Initiate additional transfer to wrap-up data feeding to the IP */
2198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->CrypInCount != 0U)
2199:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2200:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Last block is now entered in polling mode, no actual gain in resorting to DMA */
2201:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     difflength = hcryp->CrypInCount;
2202:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->CrypInCount = 0;
2203:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     CRYP_Padding(hcryp, difflength, CRYP_POLLING_ON);
2205:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2206:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2207:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Change the CRYP state to ready */
2208:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->State = HAL_CRYP_STATE_READY;
2209:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Mark that the payload phase is over */
2210:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Phase = HAL_CRYP_PHASE_PAYLOAD_OVER;
2211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2212:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Call output data transfer complete callback */
2213:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2214:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->OutCpltCallback(hcryp);
2215:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2216:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   HAL_CRYP_OutCpltCallback(hcryp);
2217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2218:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2220:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2221:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  DMA CRYP communication error callback
2222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         for GCM, GMAC, CCM or CMAC chaining modes.
2223:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hdma: DMA handle
2224:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2225:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2226:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Authentication_DMAError(DMA_HandleTypeDef *hdma)
2227:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
2229:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->State= HAL_CRYP_STATE_ERROR;
2231:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->ErrorCode |= HAL_CRYP_DMA_ERROR;
2232:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2233:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->ErrorCallback(hcryp);
2234:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2235:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   HAL_CRYP_ErrorCallback(hcryp);
2236:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2237:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Clear Error Flag */
2238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_ERR_CLEAR);
2239:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2240:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2241:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2242:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2243:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2244:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Handle CRYP block input/output data handling under interruption
2245:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         for GCM, GMAC, CCM  or CMAC chaining modes.
2246:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @note   The function is called under interruption only, once
2247:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         interruptions have been enabled by HAL_CRYPEx_AES_Auth_IT().
2248:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2249:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module
2250:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
2251:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2252:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** HAL_StatusTypeDef CRYP_AES_Auth_IT(CRYP_HandleTypeDef *hcryp)
2253:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2254:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr         ;
2255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr        ;
2256:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
2257:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
2258:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength     = 0;
2259:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflengthmod4 = 0;
2260:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask[4][3]        ;
2261:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask_index = hcryp->Init.DataType >> AES_CR_DATATYPE_Pos;
2262:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t intermediate_data[4] = {0};
2263:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[0][0] = 0xFF000000U;  mask[0][1] = 0xFFFF0000U;  mask[0][2] = 0xFFFFFF00U;  /* 32-bit data *
2265:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
2266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
2267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
2268:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if(hcryp->State == HAL_CRYP_STATE_BUSY)
2270:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2271:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*===========================*/
2272:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC(/CCM) init phase */
2273:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*===========================*/
2274:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.GCMCMACPhase == CRYP_INIT_PHASE)
2275:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2276:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear Computation Complete Flag */
2277:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2278:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable Computation Complete Flag and Errors Interrupts */
2279:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_DISABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
2280:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Change the CRYP state */
2281:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
2282:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2283:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the initialization phase is over */
2284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Phase = HAL_CRYP_PHASE_INIT_OVER;
2285:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2286:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Process Unlocked */
2287:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_UNLOCK(hcryp);
2288:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Call computation complete callback */
2289:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2290:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CompCpltCallback(hcryp);
2291:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2292:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       HAL_CRYPEx_ComputationCpltCallback(hcryp);
2293:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2294:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_OK;
2295:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2296:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*========================================*/
2297:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC (or CCM or CMAC) header phase */
2298:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*========================================*/
2299:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_HEADER_PHASE)
2300:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2301:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Check if all input header data have been entered */
2302:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->CrypInCount == 0U)
2303:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2304:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear Computation Complete Flag */
2305:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2306:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
2307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_DISABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
2308:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Change the CRYP state */
2309:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
2310:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Mark that the header phase is over */
2311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Phase = HAL_CRYP_PHASE_HEADER_OVER;
2312:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2313:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Process Unlocked */
2314:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
2315:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2316:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Call computation complete callback */
2317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2318:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CompCpltCallback(hcryp);
2319:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2320:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         HAL_CRYPEx_ComputationCpltCallback(hcryp);
2321:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2322:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2323:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
2324:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2325:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* If suspension flag has been raised, suspend processing */
2326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else if (hcryp->SuspendRequest == HAL_CRYP_SUSPEND)
2327:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2328:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear CCF Flag */
2329:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2330:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2331:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* reset SuspendRequest */
2332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->SuspendRequest = HAL_CRYP_SUSPEND_NONE;
2333:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
2334:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_DISABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
2335:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Change the CRYP state */
2336:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_SUSPENDED;
2337:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is suspended */
2338:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Phase = HAL_CRYP_PHASE_HEADER_SUSPENDED;
2339:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2340:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Process Unlocked */
2341:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
2342:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2343:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
2344:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2345:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else /* Carry on feeding input data to the CRYP hardware block */
2346:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2347:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear Computation Complete Flag */
2348:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2349:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Get the last Input data address */
2350:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr = (uint32_t)hcryp->pCrypInBuffPtr;
2351:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2352:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Increment/decrement instance pointer/counter */
2353:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->CrypInCount < 16U)
2354:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2355:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           difflength = hcryp->CrypInCount;
2356:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = 0;
2357:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           addhoc_process = 1;
2358:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           difflengthmod4 = difflength%4U;
2359:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2360:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
2361:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2362:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr += 16;
2363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount -= 16U;
2364:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2365:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2366:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
2367:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CCM)
2368:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_CMAC)
2370:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
2371:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if (hcryp->CrypInCount == hcryp->Init.HeaderSize)
2373:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2374:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* All B blocks will have been entered after the next
2375:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               four DINR writing, so point at header buffer for
2376:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               the next iteration */
2377:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->pCrypInBuffPtr = hcryp->Init.Header;
2378:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2379:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2380:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2381:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the Input block in the Data Input register */
2382:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (addhoc_process == 0U)
2383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2384:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2385:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
2386:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2387:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
2388:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
2389:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
2390:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2391:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2392:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
2393:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2394:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Header remainder has size less than 128 bits */
2395:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Enter complete words when possible */
2396:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           for(index=0U ; index < (difflength/4U); index ++)
2397:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2398:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Write the Input block in the Data Input register */
2399:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2400:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             inputaddr+=4U;
2401:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2402:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Enter incomplete word padded with zeroes if applicable
2403:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             (case of header length not a multiple of 32-bits) */
2404:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if (difflengthmod4 != 0U)
2405:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2406:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->Instance->DINR = ((*(uint32_t*)(inputaddr)) & mask[mask_index][difflengthmod4-1U
2407:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2408:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Pad with zero-words to reach 128-bit long block and wrap-up header feeding to the IP *
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           for(index=0U; index < (4U - ((difflength+3U)/4U)); index ++)
2410:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2411:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->Instance->DINR = 0;
2412:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2413:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2414:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2415:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
2416:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2417:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2418:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*=======================*/
2419:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/CCM payload phase */
2420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*=======================*/
2421:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE)
2422:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2423:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Get the last output data address */
2424:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr = (uint32_t)hcryp->pCrypOutBuffPtr;
2425:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2426:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      /* Specific handling to manage payload size less than 128 bits
2427:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         when GCM (or CCM when applicable) encryption or decryption is selected.
2428:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         Check here if the last block output data are read */
2429:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
2430:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->CrypOutCount < 16U)                                && \
2431:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (hcryp->CrypOutCount > 0U))
2432:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2433:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.ChainingMode == CRYP_CHAINMODE_AES_GCM_GMAC) && \
2434:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (hcryp->CrypOutCount < 16U)                                && \
2435:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (hcryp->CrypOutCount > 0U))
2436:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
2437:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2438:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = hcryp->CrypOutCount;
2439:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflengthmod4 = difflength%4U;
2440:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypOutCount = 0;   /* mark that no more output data will be needed */
2441:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Retrieve intermediate data */
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         for(index=0U ; index < 4U; index ++)
2443:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           intermediate_data[index] = hcryp->Instance->DOUTR;
2445:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2446:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Retrieve last words of cyphered data */
2447:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* First, retrieve complete output words */
2448:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         for(index=0U ; index < (difflength/4U); index ++)
2449:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2450:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = intermediate_data[index];
2451:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
2452:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2453:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Next, retrieve partial output word if applicable;
2454:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            at the same time, start masking intermediate data
2455:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            with a mask of zeros of same size than the padding
2456:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            applied to the last block of payload */
2457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (difflengthmod4 != 0U)
2458:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2459:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           intermediate_data[difflength/4U] &= mask[mask_index][difflengthmod4-1U];
2460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = intermediate_data[difflength/4U];
2461:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2462:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
2464:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_ENCRYPT)
2465:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2466:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change again CHMOD configuration to GCM mode */
2467:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_CRYP_SET_CHAININGMODE(hcryp, CRYP_CHAINMODE_AES_GCM_GMAC);
2468:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2469:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Select FINAL phase */
2470:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_FINAL_PHASE);
2471:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2472:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Before inserting the intermediate data, carry on masking operation
2473:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              with a mask of zeros of same size than the padding applied to the last block of payloa
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           for(index=0U ; index < (4U - ((difflength+3U)/4U)); index ++)
2475:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2476:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             intermediate_data[((difflength+3U)/4U)+index] = 0;
2477:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2478:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2479:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Insert intermediate data to trigger an additional DOUTR reading round */
2480:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Clear Computation Complete Flag before entering new block */
2481:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           for(index=0U ; index < 4U; index ++)
2483:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->Instance->DINR = intermediate_data[index];
2485:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2486:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2487:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
2488:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
2489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2490:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Payload phase is now over */
2491:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Clear Computation Complete Flag */
2492:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2493:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Disable Computation Complete Flag and Errors Interrupts */
2494:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_CRYP_DISABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
2495:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state */
2496:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->State = HAL_CRYP_STATE_READY;
2497:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the payload phase is over */
2498:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Phase = HAL_CRYP_PHASE_PAYLOAD_OVER;
2499:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2500:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Process Unlocked */
2501:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
2502:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2503:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Call computation complete callback */
2504:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2505:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CompCpltCallback(hcryp);
2506:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2507:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           HAL_CRYPEx_ComputationCpltCallback(hcryp);
2508:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2509:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2510:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
2511:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2512:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else
2513:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2514:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->CrypOutCount != 0U)
2515:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2516:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Usual case (different than GCM/CCM last block < 128 bits ciphering) */
2517:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Retrieve the last block available from the CRYP hardware block:
2518:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             read the output block from the Data Output Register */
2519:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2520:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
2521:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2522:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
2523:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2524:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
2525:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2526:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2527:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Increment/decrement instance pointer/counter */
2528:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr += 16;
2529:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypOutCount -= 16U;
2530:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2531:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
2532:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
2533:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2534:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Software work-around: additional DOUTR reading round to discard the data */
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           for(index=0U ; index < 4U; index ++)
2536:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             intermediate_data[index] = hcryp->Instance->DOUTR;
2538:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2539:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2540:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
2541:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2542:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2543:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Check if all output text has been retrieved */
2544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if (hcryp->CrypOutCount == 0U)
2545:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2546:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear Computation Complete Flag */
2547:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2548:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
2549:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_DISABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
2550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Change the CRYP state */
2551:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
2552:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Mark that the payload phase is over */
2553:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Phase = HAL_CRYP_PHASE_PAYLOAD_OVER;
2554:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2555:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Process Unlocked */
2556:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
2557:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2558:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Call computation complete callback */
2559:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2560:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CompCpltCallback(hcryp);
2561:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2562:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         HAL_CRYPEx_ComputationCpltCallback(hcryp);
2563:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2564:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2565:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
2566:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2567:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* If suspension flag has been raised, suspend processing */
2568:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else if (hcryp->SuspendRequest == HAL_CRYP_SUSPEND)
2569:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2570:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear CCF Flag */
2571:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2573:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* reset SuspendRequest */
2574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->SuspendRequest = HAL_CRYP_SUSPEND_NONE;
2575:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
2576:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_DISABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
2577:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Change the CRYP state */
2578:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_SUSPENDED;
2579:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the payload phase is suspended */
2580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Phase = HAL_CRYP_PHASE_PAYLOAD_SUSPENDED;
2581:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2582:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Process Unlocked */
2583:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
2584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2585:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
2586:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2587:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       else /* Output data are still expected, carry on feeding the CRYP
2588:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****                hardware block with input data */
2589:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2590:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Clear Computation Complete Flag */
2591:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2592:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Get the last Input data address */
2593:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr = (uint32_t)hcryp->pCrypInBuffPtr;
2594:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2595:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Usual input data feeding case */
2596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (hcryp->CrypInCount < 16U)
2597:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2598:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           difflength = (uint32_t) (hcryp->CrypInCount);
2599:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           difflengthmod4 = difflength%4U;
2600:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = 0;
2601:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2602:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
2603:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* In case of GCM encryption or CCM decryption, specify the number of padding
2604:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              bytes in last block of payload */
2605:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2606:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             uint32_t cr_temp = hcryp->Instance->CR;
2607:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2608:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             if (((cr_temp & (AES_CR_CHMOD|AES_CR_MODE)) == (CRYP_CHAINMODE_AES_GCM_GMAC|CRYP_ALGOMO
2609:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              ||  ((cr_temp & (AES_CR_CHMOD|AES_CR_MODE)) == (CRYP_CHAINMODE_AES_CCM|CRYP_ALGOMODE_D
2610:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             {
2611:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               /* Set NPBLB field in writing the number of padding bytes
2612:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               for the last block of payload */
2613:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               MODIFY_REG(hcryp->Instance->CR, AES_CR_NPBLB, (16U - difflength) << AES_POSITION_CR_N
2614:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****              }
2615:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2616:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2617:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Software workaround applied to GCM encryption only */
2618:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_ENCRYPT)
2619:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2620:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Change the mode configured in CHMOD bits of CR register to select CTR mode */
2621:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             __HAL_CRYP_SET_CHAININGMODE(hcryp, CRYP_CHAINMODE_AES_CTR);
2622:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2623:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
2624:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2625:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /*  Insert the last block (which size is inferior to 128 bits) padded with zeroes
2626:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               to have a complete block of 128 bits */
2627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           for(index=0U ; index < (difflength/4U); index ++)
2628:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2629:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Write the Input block in the Data Input register */
2630:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2631:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             inputaddr+=4U;
2632:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2633:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* If required, manage input data size not multiple of 32 bits */
2634:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if (difflengthmod4 != 0U)
2635:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->Instance->DINR = ((*(uint32_t*)(inputaddr)) & mask[mask_index][difflengthmod4-1U
2637:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2638:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Wrap-up in padding with zero-words if applicable */
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           for(index=0U ; index < (4U - ((difflength+3U)/4U)); index ++)
2640:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
2641:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->Instance->DINR = 0;
2642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
2643:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2644:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2645:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         else
2646:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
2647:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr += 16;
2648:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount -= 16U;
2649:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2650:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Write the Input block in the Data Input register */
2651:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2652:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
2653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2654:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
2655:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
2656:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
2657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2658:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
2659:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2660:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2661:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
2662:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2663:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2664:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*=======================================*/
2665:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* GCM/GMAC (or CCM or CMAC) final phase */
2666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /*=======================================*/
2667:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else if (hcryp->Init.GCMCMACPhase == CRYP_FINAL_PHASE)
2668:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2669:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear Computation Complete Flag */
2670:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2671:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2672:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Get the last output data address */
2673:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr = (uint32_t)hcryp->pCrypOutBuffPtr;
2674:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2675:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Retrieve the last expected data from the CRYP hardware block:
2676:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          read the output block from the Data Output Register */
2677:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2678:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
2679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2680:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
2681:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2682:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
2683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2684:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2685:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable Computation Complete Flag and Errors Interrupts */
2686:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_DISABLE_IT(hcryp, CRYP_IT_CCFIE|CRYP_IT_ERRIE);
2687:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Change the CRYP state */
2688:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
2689:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the header phase is over */
2690:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Phase = HAL_CRYP_PHASE_FINAL_OVER;
2691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2692:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable the Peripheral */
2693:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_DISABLE(hcryp);
2694:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Process Unlocked */
2695:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        __HAL_UNLOCK(hcryp);
2696:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2697:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Call computation complete callback */
2698:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2699:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CompCpltCallback(hcryp);
2700:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2701:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       HAL_CRYPEx_ComputationCpltCallback(hcryp);
2702:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2703:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2704:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_OK;
2705:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2706:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     else
2707:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2708:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear Computation Complete Flag */
2709:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2710:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_ERROR;
2711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_UNLOCK(hcryp);
2712:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_ERROR;
2713:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2714:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2715:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   else
2716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2717:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_BUSY;
2718:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2719:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2720:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2721:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2722:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2723:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2724:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Set the DMA configuration and start the DMA transfer
2725:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         for GCM, GMAC, CCM  or CMAC chaining modes.
2726:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2727:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2728:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  inputaddr: Address of the Input buffer.
2729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Size: Size of the Input buffer un bytes, must be a multiple of 16.
2730:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  outputaddr: Address of the Output buffer, null pointer when no output DMA stream
2731:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         has to be configured.
2732:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2733:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2734:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Authentication_SetDMAConfig(CRYP_HandleTypeDef *hcryp, uint32_t inputaddr, uint16_
2735:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2736:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2737:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the input CRYP DMA transfer complete callback */
2738:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->hdmain->XferCpltCallback = CRYP_Authentication_DMAInCplt;
2739:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
2740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->hdmain->XferErrorCallback = CRYP_Authentication_DMAError;
2741:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2742:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (outputaddr != 0U)
2743:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2744:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Set the output CRYP DMA transfer complete callback */
2745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->hdmaout->XferCpltCallback = CRYP_Authentication_DMAOutCplt;
2746:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Set the DMA error callback */
2747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->hdmaout->XferErrorCallback = CRYP_Authentication_DMAError;
2748:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2749:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2750:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enable the CRYP peripheral */
2751:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   __HAL_CRYP_ENABLE(hcryp);
2752:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enable the DMA input stream */
2754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (HAL_DMA_Start_IT(hcryp->hdmain, inputaddr, (uint32_t)&hcryp->Instance->DINR, ((uint32_t)Size)
2755:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2756:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2757:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->ErrorCallback(hcryp);
2758:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2759:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     HAL_CRYP_ErrorCallback(hcryp);
2760:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2761:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2762:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2763:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enable the DMA input request */
2764:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   SET_BIT(hcryp->Instance->CR, AES_CR_DMAINEN);
2765:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2766:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (outputaddr != 0U)
2768:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2769:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Enable the DMA output stream */
2770:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (HAL_DMA_Start_IT(hcryp->hdmaout, (uint32_t)&hcryp->Instance->DOUTR, outputaddr, ((uint32_t)
2771:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2772:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2773:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->ErrorCallback(hcryp);
2774:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2775:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       HAL_CRYP_ErrorCallback(hcryp);
2776:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2777:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2778:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2779:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Enable the DMA output request */
2780:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     SET_BIT(hcryp->Instance->CR, AES_CR_DMAOUTEN);
2781:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2782:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2783:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2784:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2785:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2786:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2787:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Write/read input/output data in polling mode.
2788:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2789:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2790:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Input: Pointer to the Input buffer.
2791:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Ilength: Length of the Input buffer in bytes, must be a multiple of 16.
2792:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Output: Pointer to the returned buffer.
2793:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Timeout: Specify Timeout value.
2794:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
2795:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2796:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static HAL_StatusTypeDef CRYP_ProcessData(CRYP_HandleTypeDef *hcryp, uint8_t* Input, uint16_t Ileng
2797:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2798:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index;
2799:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr  = (uint32_t)Input;
2800:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
2801:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2802:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2803:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   for(index=0U ; (index < Ilength); index += 16U)
2804:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2805:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Write the Input block in the Data Input register */
2806:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2807:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
2808:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2809:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
2810:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
2811:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
2812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
2813:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
2814:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2815:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Wait for CCF flag to be raised */
2816:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if(CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
2817:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2818:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
2819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_UNLOCK(hcryp);
2820:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_TIMEOUT;
2821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2822:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Clear CCF Flag */
2824:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2825:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2826:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Read the Output block from the Data Output Register */
2827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2828:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2830:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2831:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2832:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2833:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
2834:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2835:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2836:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* If the suspension flag has been raised and if the processing is not about
2837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        to end, suspend processing */
2838:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && ((index+16U) < Ilength))
2839:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2840:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Reset SuspendRequest */
2841:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->SuspendRequest = HAL_CRYP_SUSPEND_NONE;
2842:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2843:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Save current reading and writing locations of Input and Output buffers */
2844:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypOutBuffPtr =  (uint8_t *)outputaddr;
2845:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
2846:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Save the number of bytes that remain to be processed at this point */
2847:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount     =  Ilength - (index+16U);
2848:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2849:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Change the CRYP state */
2850:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_SUSPENDED;
2851:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_OK;
2853:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2854:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2855:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2856:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2857:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Return function status */
2858:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   return HAL_OK;
2859:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2860:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2861:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2862:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2863:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2864:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2865:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2866:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2867:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Read derivative key in polling mode when CRYP hardware block is set
2868:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         in key derivation operating mode (mode 2).
2869:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2870:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2871:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Output: Pointer to the returned buffer.
2872:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Timeout: Specify Timeout value.
2873:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
2874:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2875:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static HAL_StatusTypeDef CRYP_ReadKey(CRYP_HandleTypeDef *hcryp, uint8_t* Output, uint32_t Timeout)
2876:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2877:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
2878:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2879:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Wait for CCF flag to be raised */
2880:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if(CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
2881:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2882:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->State = HAL_CRYP_STATE_READY;
2883:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
2884:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_TIMEOUT;
2885:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2886:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Clear CCF Flag */
2887:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
2888:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2889:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Read the derivative key from the AES_KEYRx registers */
2890:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->Init.KeySize == CRYP_KEYSIZE_256B)
2891:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR7);
2893:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2894:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR6);
2895:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2896:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR5);
2897:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2898:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR4);
2899:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2900:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2901:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2902:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR3);
2903:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2904:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR2);
2905:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2906:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR1);
2907:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
2908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR0);
2909:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2910:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2911:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Return function status */
2912:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   return HAL_OK;
2913:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2914:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2915:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2916:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Set the DMA configuration and start the DMA transfer.
2917:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2918:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2919:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  inputaddr: Address of the Input buffer.
2920:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Size: Size of the Input buffer in bytes, must be a multiple of 16.
2921:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  outputaddr: Address of the Output buffer.
2922:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
2923:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2924:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_SetDMAConfig(CRYP_HandleTypeDef *hcryp, uint32_t inputaddr, uint16_t Size, uint32_
2925:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
2926:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the CRYP DMA transfer complete callback */
2927:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->hdmain->XferCpltCallback = CRYP_DMAInCplt;
2928:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
2929:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->hdmain->XferErrorCallback = CRYP_DMAError;
2930:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2931:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the CRYP DMA transfer complete callback */
2932:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->hdmaout->XferCpltCallback = CRYP_DMAOutCplt;
2933:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
2934:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->hdmaout->XferErrorCallback = CRYP_DMAError;
2935:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2936:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enable the DMA input stream */
2937:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (HAL_DMA_Start_IT(hcryp->hdmain, inputaddr, (uint32_t)&hcryp->Instance->DINR, ((uint32_t)Size)
2938:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2939:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2940:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->ErrorCallback(hcryp);
2941:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2942:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     HAL_CRYP_ErrorCallback(hcryp);
2943:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2944:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2945:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2946:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enable the DMA output stream */
2947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (HAL_DMA_Start_IT(hcryp->hdmaout, (uint32_t)&hcryp->Instance->DOUTR, outputaddr, ((uint32_t)Si
2948:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2949:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
2950:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->ErrorCallback(hcryp);
2951:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
2952:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     HAL_CRYP_ErrorCallback(hcryp);
2953:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
2954:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2955:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2956:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enable In and Out DMA requests */
2957:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   SET_BIT(hcryp->Instance->CR, (AES_CR_DMAINEN | AES_CR_DMAOUTEN));
2958:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2959:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enable the CRYP peripheral */
2960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   __HAL_CRYP_ENABLE(hcryp);
2961:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
2962:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2963:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2964:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2965:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Handle CRYP hardware block Timeout when waiting for CCF flag to be raised.
2966:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2967:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2968:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Timeout: Timeout duration.
2969:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
2970:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2971:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static HAL_StatusTypeDef CRYP_WaitOnCCFlag(CRYP_HandleTypeDef const * const hcryp, uint32_t Timeout
2972:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
  27              		.loc 1 2972 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
2973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t tickstart;
  31              		.loc 1 2973 3 view .LVU1
2974:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2975:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Get timeout */
2976:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   tickstart = HAL_GetTick();
  32              		.loc 1 2976 3 view .LVU2
2972:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t tickstart;
  33              		.loc 1 2972 1 is_stmt 0 view .LVU3
  34 0000 70B5     		push	{r4, r5, r6, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
2972:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t tickstart;
  41              		.loc 1 2972 1 view .LVU4
  42 0002 0646     		mov	r6, r0
  43 0004 0C46     		mov	r4, r1
  44              		.loc 1 2976 15 view .LVU5
  45 0006 FFF7FEFF 		bl	HAL_GetTick
  46              	.LVL1:
  47              		.loc 1 2976 15 view .LVU6
  48 000a 0546     		mov	r5, r0
  49              	.LVL2:
2977:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2978:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   while(HAL_IS_BIT_CLR(hcryp->Instance->SR, AES_SR_CCF))
  50              		.loc 1 2978 3 is_stmt 1 view .LVU7
  51              	.L2:
  52              		.loc 1 2978 9 is_stmt 0 view .LVU8
  53 000c 3268     		ldr	r2, [r6]
  54              	.L3:
  55              		.loc 1 2978 8 is_stmt 1 view .LVU9
  56              		.loc 1 2978 9 is_stmt 0 view .LVU10
  57 000e 5368     		ldr	r3, [r2, #4]
  58              		.loc 1 2978 8 view .LVU11
  59 0010 DB07     		lsls	r3, r3, #31
  60 0012 01D5     		bpl	.L5
2979:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
2980:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Check for the Timeout */
2981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if(Timeout != HAL_MAX_DELAY)
2982:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
2983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if((HAL_GetTick() - tickstart ) > Timeout)
2984:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
2985:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
2986:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
2987:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
2988:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
2989:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   return HAL_OK;
  61              		.loc 1 2989 10 view .LVU12
  62 0014 0020     		movs	r0, #0
  63              	.L4:
2990:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
  64              		.loc 1 2990 1 view .LVU13
  65 0016 70BD     		pop	{r4, r5, r6, pc}
  66              	.LVL3:
  67              	.L5:
2981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
  68              		.loc 1 2981 5 is_stmt 1 view .LVU14
2981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
  69              		.loc 1 2981 7 is_stmt 0 view .LVU15
  70 0018 611C     		adds	r1, r4, #1
  71 001a F8D0     		beq	.L3
2983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
  72              		.loc 1 2983 7 is_stmt 1 view .LVU16
2983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
  73              		.loc 1 2983 11 is_stmt 0 view .LVU17
  74 001c FFF7FEFF 		bl	HAL_GetTick
  75              	.LVL4:
2983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
  76              		.loc 1 2983 25 view .LVU18
  77 0020 401B     		subs	r0, r0, r5
2983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
  78              		.loc 1 2983 9 view .LVU19
  79 0022 A042     		cmp	r0, r4
  80 0024 F2D9     		bls	.L2
2985:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
  81              		.loc 1 2985 16 view .LVU20
  82 0026 0320     		movs	r0, #3
  83 0028 F5E7     		b	.L4
  84              		.cfi_endproc
  85              	.LFE333:
  87              		.section	.text.CRYP_Padding,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu softvfp
  94              	CRYP_Padding:
  95              	.LVL5:
  96              	.LFB338:
2991:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
2992:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
2993:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Wait for Busy Flag to be reset during a GCM payload encryption process suspension.
2994:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
2995:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
2996:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  Timeout: Timeout duration.
2997:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval HAL status
2998:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
2999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static HAL_StatusTypeDef CRYP_WaitOnBusyFlagReset(CRYP_HandleTypeDef const * const hcryp, uint32_t 
3000:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
3001:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t tickstart;
3002:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3003:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Get timeout */
3004:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   tickstart = HAL_GetTick();
3005:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3006:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   while(HAL_IS_BIT_SET(hcryp->Instance->SR, AES_SR_BUSY))
3007:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
3008:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Check for the Timeout */
3009:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if(Timeout != HAL_MAX_DELAY)
3010:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
3011:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if((HAL_GetTick() - tickstart ) > Timeout)
3012:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
3013:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
3014:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
3015:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
3016:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
3017:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   return HAL_OK;
3018:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
3019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3020:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3021:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
3022:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  DMA CRYP Input Data process complete callback.
3023:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hdma: DMA handle.
3024:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
3025:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
3026:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_DMAInCplt(DMA_HandleTypeDef *hdma)
3027:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
3028:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
3029:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3030:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Disable the DMA transfer for input request  */
3031:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CLEAR_BIT(hcryp->Instance->CR, AES_CR_DMAINEN);
3032:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Call input data transfer complete callback */
3034:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
3035:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->InCpltCallback(hcryp);
3036:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
3037:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   HAL_CRYP_InCpltCallback(hcryp);
3038:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
3039:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
3040:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3041:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
3042:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  DMA CRYP Output Data process complete callback.
3043:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hdma: DMA handle.
3044:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
3045:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
3046:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_DMAOutCplt(DMA_HandleTypeDef *hdma)
3047:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
3048:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
3049:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3050:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Disable the DMA transfer for output request */
3051:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CLEAR_BIT(hcryp->Instance->CR, AES_CR_DMAOUTEN);
3052:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3053:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Clear CCF Flag */
3054:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
3055:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3056:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Disable CRYP */
3057:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   __HAL_CRYP_DISABLE(hcryp);
3058:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3059:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Change the CRYP state to ready */
3060:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->State = HAL_CRYP_STATE_READY;
3061:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3062:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Call output data transfer complete callback */
3063:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
3064:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->OutCpltCallback(hcryp);
3065:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
3066:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   HAL_CRYP_OutCpltCallback(hcryp);
3067:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
3068:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
3069:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3070:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
3071:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  DMA CRYP communication error callback.
3072:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hdma: DMA handle.
3073:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
3074:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
3075:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_DMAError(DMA_HandleTypeDef *hdma)
3076:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
3077:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
3078:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3079:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->State= HAL_CRYP_STATE_ERROR;
3080:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->ErrorCode |= HAL_CRYP_DMA_ERROR;
3081:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
3082:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->ErrorCallback(hcryp);
3083:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
3084:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   HAL_CRYP_ErrorCallback(hcryp);
3085:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
3086:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Clear Error Flag */
3087:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_ERR_CLEAR);
3088:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
3089:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3090:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** /**
3091:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @brief  Last header or payload block padding when size is not a multiple of 128 bits.
3092:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  hcryp: pointer to a CRYP_HandleTypeDef structure that contains
3093:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *         the configuration information for CRYP module.
3094:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  difflength: size remainder after having fed all complete 128-bit blocks.
3095:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @param  polling: specifies whether or not polling on CCF must be done after having
3096:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *                  entered a complete block.
3097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   * @retval None
3098:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   */
3099:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** static void CRYP_Padding(CRYP_HandleTypeDef *hcryp, uint32_t difflength, uint32_t polling)
3100:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
  97              		.loc 1 3100 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 64
 100              		@ frame_needed = 0, uses_anonymous_args = 0
3101:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index;
 101              		.loc 1 3101 3 view .LVU22
3102:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflengthmod4 = difflength%4U;
 102              		.loc 1 3102 3 view .LVU23
3100:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index;
 103              		.loc 1 3100 1 is_stmt 0 view .LVU24
 104 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 105              	.LCFI1:
 106              		.cfi_def_cfa_offset 36
 107              		.cfi_offset 4, -36
 108              		.cfi_offset 5, -32
 109              		.cfi_offset 6, -28
 110              		.cfi_offset 7, -24
 111              		.cfi_offset 8, -20
 112              		.cfi_offset 9, -16
 113              		.cfi_offset 10, -12
 114              		.cfi_offset 11, -8
 115              		.cfi_offset 14, -4
 116 0004 91B0     		sub	sp, sp, #68
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 104
3103:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      = (uint32_t)hcryp->pCrypInBuffPtr;
3104:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr     = (uint32_t)hcryp->pCrypOutBuffPtr;
3105:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask[4][3];
3106:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask_index = hcryp->Init.DataType >> AES_CR_DATATYPE_Pos;
 119              		.loc 1 3106 12 view .LVU25
 120 0006 8568     		ldr	r5, [r0, #8]
3104:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask[4][3];
 121              		.loc 1 3104 44 view .LVU26
 122 0008 D0E90E7A 		ldrd	r7, r10, [r0, #56]
3100:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index;
 123              		.loc 1 3100 1 view .LVU27
 124 000c 0446     		mov	r4, r0
 125 000e 0E46     		mov	r6, r1
 126 0010 9346     		mov	fp, r2
3102:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      = (uint32_t)hcryp->pCrypInBuffPtr;
 127              		.loc 1 3102 12 view .LVU28
 128 0012 01F00309 		and	r9, r1, #3
 129              	.LVL6:
3103:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      = (uint32_t)hcryp->pCrypInBuffPtr;
 130              		.loc 1 3103 3 is_stmt 1 view .LVU29
3105:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask_index = hcryp->Init.DataType >> AES_CR_DATATYPE_Pos;
 131              		.loc 1 3105 3 view .LVU30
 132              		.loc 1 3106 3 view .LVU31
3107:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3108:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t intermediate_data[4] = {0};
 133              		.loc 1 3108 12 is_stmt 0 view .LVU32
 134 0016 1022     		movs	r2, #16
 135              	.LVL7:
 136              		.loc 1 3108 12 view .LVU33
 137 0018 0021     		movs	r1, #0
 138              	.LVL8:
 139              		.loc 1 3108 12 view .LVU34
 140 001a 6846     		mov	r0, sp
 141              	.LVL9:
 142              		.loc 1 3108 12 view .LVU35
 143 001c FFF7FEFF 		bl	memset
 144              	.LVL10:
3109:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3110:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[0][0] = 0xFF000000U;  mask[0][1] = 0xFFFF0000U;  mask[0][2] = 0xFFFFFF00U;  /* 32-bit data *
 145              		.loc 1 3110 14 view .LVU36
 146 0020 4FF07F43 		mov	r3, #-16777216
 147 0024 0493     		str	r3, [sp, #16]
 148              		.loc 1 3110 41 view .LVU37
 149 0026 03F57F03 		add	r3, r3, #16711680
3111:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 150              		.loc 1 3111 14 view .LVU38
 151 002a 6FF0FF02 		mvn	r2, #255
3110:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 152              		.loc 1 3110 41 view .LVU39
 153 002e 0593     		str	r3, [sp, #20]
 154              		.loc 1 3111 14 view .LVU40
 155 0030 4FF47F43 		mov	r3, #65280
 156 0034 CDE90623 		strd	r2, r3, [sp, #24]
 157              		.loc 1 3111 68 view .LVU41
 158 0038 4FF6FF73 		movw	r3, #65535
 159 003c 6FF47F02 		mvn	r2, #16711680
 160 0040 CDE90832 		strd	r3, r2, [sp, #32]
3112:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 161              		.loc 1 3112 14 view .LVU42
 162 0044 FF21     		movs	r1, #255
 163              		.loc 1 3112 68 view .LVU43
 164 0046 6FF07F42 		mvn	r2, #-16777216
 165              		.loc 1 3112 41 view .LVU44
 166 004a CDE90A13 		strd	r1, r3, [sp, #40]
3113:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 167              		.loc 1 3113 68 view .LVU45
 168 004e CDE90E32 		strd	r3, r2, [sp, #56]
3114:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3115:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
3116:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* In case of GCM encryption or CCM decryption, specify the number of padding
3117:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      bytes in last block of payload */
3118:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      if (READ_BIT(hcryp->Instance->CR,AES_CR_GCMPH) == CRYP_PAYLOAD_PHASE)
3119:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      {
3120:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        uint32_t cr_temp = hcryp->Instance->CR;
3121:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3122:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        if (((cr_temp & (AES_CR_CHMOD|AES_CR_MODE)) == (CRYP_CHAINMODE_AES_GCM_GMAC|CRYP_ALGOMODE_EN
3123:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        ||  ((cr_temp & (AES_CR_CHMOD|AES_CR_MODE)) == (CRYP_CHAINMODE_AES_CCM|CRYP_ALGOMODE_DECRYPT
3124:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        {
3125:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          /* Set NPBLB field in writing the number of padding bytes
3126:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             for the last block of payload */
3127:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          MODIFY_REG(hcryp->Instance->CR, AES_CR_NPBLB, (16U - difflength) << AES_POSITION_CR_NPBLB)
3128:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        }
3129:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****      }
3130:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
3131:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Software workaround applied to GCM encryption only */
3132:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if ((hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE) &&
 169              		.loc 1 3132 6 view .LVU46
 170 0052 E369     		ldr	r3, [r4, #28]
 171 0054 B3F5804F 		cmp	r3, #16384
3113:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 172              		.loc 1 3113 14 view .LVU47
 173 0058 CDE90C21 		strd	r2, r1, [sp, #48]
3106:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 174              		.loc 1 3106 12 view .LVU48
 175 005c 4FEA5505 		lsr	r5, r5, #1
 176              	.LVL11:
3108:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 177              		.loc 1 3108 3 is_stmt 1 view .LVU49
3110:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 178              		.loc 1 3110 3 view .LVU50
3110:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 179              		.loc 1 3110 30 view .LVU51
3110:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 180              		.loc 1 3110 57 view .LVU52
3111:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 181              		.loc 1 3111 30 view .LVU53
3112:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 182              		.loc 1 3112 3 view .LVU54
3112:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 183              		.loc 1 3112 57 view .LVU55
3113:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 184              		.loc 1 3113 30 view .LVU56
 185              		.loc 1 3132 3 view .LVU57
 186              		.loc 1 3132 6 is_stmt 0 view .LVU58
 187 0060 0AD1     		bne	.L10
 188              		.loc 1 3132 56 discriminator 1 view .LVU59
 189 0062 2369     		ldr	r3, [r4, #16]
 190 0064 43B9     		cbnz	r3, .L10
3133:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       (hcryp->Init.OperatingMode == CRYP_ALGOMODE_ENCRYPT))
3134:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
3135:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Change the mode configured in CHMOD bits of CR register to select CTR mode */
3136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_CRYP_SET_CHAININGMODE(hcryp, CRYP_CHAINMODE_AES_CTR);
 191              		.loc 1 3136 5 is_stmt 1 view .LVU60
 192 0066 2268     		ldr	r2, [r4]
 193 0068 1368     		ldr	r3, [r2]
 194 006a 23F48033 		bic	r3, r3, #65536
 195 006e 23F06003 		bic	r3, r3, #96
 196 0072 43F04003 		orr	r3, r3, #64
 197 0076 1360     		str	r3, [r2]
 198              	.L10:
 199 0078 26F00308 		bic	r8, r6, #3
 200 007c 08EB0703 		add	r3, r8, r7
 201              	.L11:
 202              	.LVL12:
3137:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
3138:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
3139:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3140:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Wrap-up entering header or payload data */
3141:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enter complete words when possible */
3142:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   for(index=0U ; index < (difflength/4U); index ++)
 203              		.loc 1 3142 18 discriminator 1 view .LVU61
 204              		.loc 1 3142 3 is_stmt 0 discriminator 1 view .LVU62
 205 0080 9F42     		cmp	r7, r3
 206 0082 40F08D80 		bne	.L12
3143:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
3144:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Write the Input block in the Data Input register */
3145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
3146:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
3147:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
3148:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Enter incomplete word padded with zeroes if applicable
3149:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     (case of header length not a multiple of 32-bits) */
3150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (difflengthmod4 != 0U)
 207              		.loc 1 3150 3 is_stmt 1 view .LVU63
 208              		.loc 1 3150 6 is_stmt 0 view .LVU64
 209 0086 B9F1000F 		cmp	r9, #0
 210 008a 0DD0     		beq	.L13
3151:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
3152:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR = ((*(uint32_t*)(inputaddr)) & mask[mask_index][difflengthmod4-1U]);
 211              		.loc 1 3152 5 is_stmt 1 view .LVU65
 212              		.loc 1 3152 74 is_stmt 0 view .LVU66
 213 008c 09F1FF31 		add	r1, r9, #-1
 214 0090 05EB4503 		add	r3, r5, r5, lsl #1
 215 0094 0B44     		add	r3, r3, r1
 216 0096 10A9     		add	r1, sp, #64
 217 0098 01EB8303 		add	r3, r1, r3, lsl #2
 218              		.loc 1 3152 56 view .LVU67
 219 009c 3968     		ldr	r1, [r7]
 220 009e 53F8303C 		ldr	r3, [r3, #-48]
 221              		.loc 1 3152 10 view .LVU68
 222 00a2 2268     		ldr	r2, [r4]
 223              		.loc 1 3152 56 view .LVU69
 224 00a4 0B40     		ands	r3, r3, r1
 225              		.loc 1 3152 27 view .LVU70
 226 00a6 9360     		str	r3, [r2, #8]
 227              	.L13:
3153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
3154:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Pad with zero-words to reach 128-bit long block and wrap-up header feeding to the IP */
3155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   for(index=0U ; index < (4U - ((difflength+3U)/4U)); index ++)
 228              		.loc 1 3155 44 discriminator 1 view .LVU71
 229 00a8 0336     		adds	r6, r6, #3
 230              	.LVL13:
 231              		.loc 1 3155 48 discriminator 1 view .LVU72
 232 00aa B608     		lsrs	r6, r6, #2
 233              	.LVL14:
 234              		.loc 1 3155 30 discriminator 1 view .LVU73
 235 00ac 0027     		movs	r7, #0
 236              	.LVL15:
 237              		.loc 1 3155 30 discriminator 1 view .LVU74
 238 00ae C6F10403 		rsb	r3, r6, #4
3156:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
3157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR = 0;
 239              		.loc 1 3157 27 discriminator 1 view .LVU75
 240 00b2 3946     		mov	r1, r7
 241              	.L14:
 242              	.LVL16:
3155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 243              		.loc 1 3155 18 is_stmt 1 discriminator 1 view .LVU76
3155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 244              		.loc 1 3155 3 is_stmt 0 discriminator 1 view .LVU77
 245 00b4 BB42     		cmp	r3, r7
 246 00b6 78D1     		bne	.L15
3158:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
3159:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3160:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (polling == (uint32_t)CRYP_POLLING_ON)
 247              		.loc 1 3160 3 is_stmt 1 view .LVU78
 248              		.loc 1 3160 6 is_stmt 0 view .LVU79
 249 00b8 BBF1010F 		cmp	fp, #1
 250 00bc 12D1     		bne	.L16
3161:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
3162:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if(CRYP_WaitOnCCFlag(hcryp, CRYP_CCF_TIMEOUTVALUE) != HAL_OK)
 251              		.loc 1 3162 5 is_stmt 1 view .LVU80
 252              		.loc 1 3162 8 is_stmt 0 view .LVU81
 253 00be 45F2F051 		movw	r1, #22000
 254 00c2 2046     		mov	r0, r4
 255 00c4 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 256              	.LVL17:
 257              		.loc 1 3162 7 view .LVU82
 258 00c8 38B1     		cbz	r0, .L17
3163:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
3164:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
 259              		.loc 1 3164 9 is_stmt 1 view .LVU83
3165:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
 260              		.loc 1 3165 9 is_stmt 0 view .LVU84
 261 00ca 0023     		movs	r3, #0
3164:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
 262              		.loc 1 3164 22 view .LVU85
 263 00cc 84F855B0 		strb	fp, [r4, #85]
 264              		.loc 1 3165 9 is_stmt 1 view .LVU86
 265              		.loc 1 3165 9 view .LVU87
 266 00d0 84F85430 		strb	r3, [r4, #84]
 267              		.loc 1 3165 9 view .LVU88
3166:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
3167:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->ErrorCallback(hcryp);
3168:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #else
3169:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        HAL_CRYP_ErrorCallback(hcryp);
 268              		.loc 1 3169 8 view .LVU89
 269 00d4 2046     		mov	r0, r4
 270 00d6 FFF7FEFF 		bl	HAL_CRYP_ErrorCallback
 271              	.LVL18:
 272              	.L17:
3170:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
3171:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
3172:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3173:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Clear CCF Flag */
3174:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 273              		.loc 1 3174 5 view .LVU90
 274 00da 2268     		ldr	r2, [r4]
 275 00dc 1368     		ldr	r3, [r2]
 276 00de 43F08003 		orr	r3, r3, #128
 277 00e2 1360     		str	r3, [r2]
 278              	.L16:
3175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
3176:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3177:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* if payload */
3178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE)
 279              		.loc 1 3178 3 view .LVU91
 280              		.loc 1 3178 6 is_stmt 0 view .LVU92
 281 00e4 E369     		ldr	r3, [r4, #28]
 282 00e6 B3F5804F 		cmp	r3, #16384
 283 00ea 56D1     		bne	.L9
3179:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
3180:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3181:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Retrieve intermediate data */
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     for(index=0U ; index < 4U; index ++)
3183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
3184:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       intermediate_data[index] = hcryp->Instance->DOUTR;
 284              		.loc 1 3184 39 view .LVU93
 285 00ec 2368     		ldr	r3, [r4]
 286              	.LVL19:
 287              		.loc 1 3184 7 is_stmt 1 view .LVU94
 288              		.loc 1 3184 49 is_stmt 0 view .LVU95
 289 00ee DA68     		ldr	r2, [r3, #12]
 290              		.loc 1 3184 32 view .LVU96
 291 00f0 0092     		str	r2, [sp]
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 292              		.loc 1 3182 32 is_stmt 1 view .LVU97
 293              	.LVL20:
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 294              		.loc 1 3182 20 view .LVU98
 295              		.loc 1 3184 7 view .LVU99
 296              		.loc 1 3184 49 is_stmt 0 view .LVU100
 297 00f2 DA68     		ldr	r2, [r3, #12]
 298              		.loc 1 3184 32 view .LVU101
 299 00f4 0192     		str	r2, [sp, #4]
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 300              		.loc 1 3182 32 is_stmt 1 view .LVU102
 301              	.LVL21:
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 302              		.loc 1 3182 20 view .LVU103
 303              		.loc 1 3184 7 view .LVU104
 304              		.loc 1 3184 49 is_stmt 0 view .LVU105
 305 00f6 DA68     		ldr	r2, [r3, #12]
 306              		.loc 1 3184 32 view .LVU106
 307 00f8 0292     		str	r2, [sp, #8]
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 308              		.loc 1 3182 32 is_stmt 1 view .LVU107
 309              	.LVL22:
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 310              		.loc 1 3182 20 view .LVU108
 311              		.loc 1 3184 7 view .LVU109
 312              		.loc 1 3184 49 is_stmt 0 view .LVU110
 313 00fa DA68     		ldr	r2, [r3, #12]
 314              		.loc 1 3184 32 view .LVU111
 315 00fc 0392     		str	r2, [sp, #12]
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 316              		.loc 1 3182 32 is_stmt 1 view .LVU112
 317              	.LVL23:
3182:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 318              		.loc 1 3182 20 view .LVU113
 319 00fe 0AEB0801 		add	r1, r10, r8
 320 0102 6A46     		mov	r2, sp
 321              	.LVL24:
 322              	.L20:
3185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
3186:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Retrieve last words of cyphered data */
3187:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* First, retrieve complete output words */
3188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     for(index=0U ; index < (difflength/4U); index ++)
 323              		.loc 1 3188 20 discriminator 1 view .LVU114
 324              		.loc 1 3188 5 is_stmt 0 discriminator 1 view .LVU115
 325 0104 8A45     		cmp	r10, r1
 326 0106 54D1     		bne	.L21
3189:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
3190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = intermediate_data[index];
3191:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
3192:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
3193:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Next, retrieve partial output word if applicable;
3194:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        at the same time, start masking intermediate data
3195:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        with a mask of zeros of same size than the padding
3196:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        applied to the last block of payload */
3197:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (difflengthmod4 != 0U)
 327              		.loc 1 3197 5 is_stmt 1 view .LVU116
 328              		.loc 1 3197 8 is_stmt 0 view .LVU117
 329 0108 B9F1000F 		cmp	r9, #0
 330 010c 11D0     		beq	.L22
3198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
3199:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       intermediate_data[difflength/4U] &= mask[mask_index][difflengthmod4-1U];
 331              		.loc 1 3199 7 is_stmt 1 view .LVU118
 332              		.loc 1 3199 59 is_stmt 0 view .LVU119
 333 010e 05EB4505 		add	r5, r5, r5, lsl #1
 334              	.LVL25:
 335              		.loc 1 3199 59 view .LVU120
 336 0112 09F1FF39 		add	r9, r9, #-1
 337              	.LVL26:
 338              		.loc 1 3199 59 view .LVU121
 339 0116 10AA     		add	r2, sp, #64
 340 0118 4D44     		add	r5, r5, r9
 341              		.loc 1 3199 40 view .LVU122
 342 011a 9044     		add	r8, r8, r2
 343              		.loc 1 3199 59 view .LVU123
 344 011c 02EB8505 		add	r5, r2, r5, lsl #2
 345              		.loc 1 3199 40 view .LVU124
 346 0120 58F8401C 		ldr	r1, [r8, #-64]
 347 0124 55F8302C 		ldr	r2, [r5, #-48]
 348 0128 0A40     		ands	r2, r2, r1
 349 012a 48F8402C 		str	r2, [r8, #-64]
3200:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = intermediate_data[difflength/4U];
 350              		.loc 1 3200 7 is_stmt 1 view .LVU125
 351              		.loc 1 3200 32 is_stmt 0 view .LVU126
 352 012e CAF80020 		str	r2, [r10]
 353              	.LVL27:
 354              	.L22:
3201:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
3202:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3203:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if !defined(AES_CR_NPBLB)
3205:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Software workaround applied to GCM encryption only,
3206:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        applicable for AES IP v2 version (where NPBLB is not defined) */
3207:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_ENCRYPT)
 355              		.loc 1 3207 5 is_stmt 1 view .LVU127
 356              		.loc 1 3207 20 is_stmt 0 view .LVU128
 357 0132 2169     		ldr	r1, [r4, #16]
 358              		.loc 1 3207 8 view .LVU129
 359 0134 0029     		cmp	r1, #0
 360 0136 30D1     		bne	.L9
3208:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
3209:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Change again CHMOD configuration to GCM mode */
3210:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_SET_CHAININGMODE(hcryp, CRYP_CHAINMODE_AES_GCM_GMAC);
 361              		.loc 1 3210 7 is_stmt 1 view .LVU130
 362 0138 1A68     		ldr	r2, [r3]
 363 013a 22F48032 		bic	r2, r2, #65536
 364 013e 22F06002 		bic	r2, r2, #96
 365 0142 42F06002 		orr	r2, r2, #96
 366 0146 1A60     		str	r2, [r3]
3211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3212:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Select FINAL phase */
3213:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_FINAL_PHASE);
 367              		.loc 1 3213 7 view .LVU131
 368 0148 1A68     		ldr	r2, [r3]
 369 014a 42F4C042 		orr	r2, r2, #24576
 370 014e 1A60     		str	r2, [r3]
3214:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3215:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Before inserting the intermediate data, carry on masking operation
3216:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          with a mask of zeros of same size than the padding applied to the last block of payload */
3217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < (4U - ((difflength+3U)/4U)); index ++)
 371              		.loc 1 3217 7 view .LVU132
 372              	.LVL28:
 373              		.loc 1 3217 7 is_stmt 0 view .LVU133
 374 0150 0DEB8606 		add	r6, sp, r6, lsl #2
3218:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
3219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         intermediate_data[((difflength+3U)/4U)+index] = 0;
 375              		.loc 1 3219 55 view .LVU134
 376 0154 0A46     		mov	r2, r1
 377              	.LVL29:
 378              	.L24:
3217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 379              		.loc 1 3217 22 is_stmt 1 discriminator 1 view .LVU135
3217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 380              		.loc 1 3217 7 is_stmt 0 discriminator 1 view .LVU136
 381 0156 8F42     		cmp	r7, r1
 382 0158 30D1     		bne	.L25
 383              	.LVL30:
3220:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
3221:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Insert intermediate data */
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 384              		.loc 1 3222 22 is_stmt 1 view .LVU137
3223:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
3224:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = intermediate_data[index];
 385              		.loc 1 3224 9 view .LVU138
 386              		.loc 1 3224 50 is_stmt 0 view .LVU139
 387 015a 009A     		ldr	r2, [sp]
 388              		.loc 1 3224 31 view .LVU140
 389 015c 9A60     		str	r2, [r3, #8]
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 390              		.loc 1 3222 34 is_stmt 1 view .LVU141
 391              	.LVL31:
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 392              		.loc 1 3222 22 view .LVU142
 393              		.loc 1 3224 9 view .LVU143
 394              		.loc 1 3224 50 is_stmt 0 view .LVU144
 395 015e 019A     		ldr	r2, [sp, #4]
 396              		.loc 1 3224 31 view .LVU145
 397 0160 9A60     		str	r2, [r3, #8]
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 398              		.loc 1 3222 34 is_stmt 1 view .LVU146
 399              	.LVL32:
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 400              		.loc 1 3222 22 view .LVU147
 401              		.loc 1 3224 9 view .LVU148
 402              		.loc 1 3224 50 is_stmt 0 view .LVU149
 403 0162 029A     		ldr	r2, [sp, #8]
 404              		.loc 1 3224 31 view .LVU150
 405 0164 9A60     		str	r2, [r3, #8]
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 406              		.loc 1 3222 34 is_stmt 1 view .LVU151
 407              	.LVL33:
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 408              		.loc 1 3222 22 view .LVU152
 409              		.loc 1 3224 9 view .LVU153
 410              		.loc 1 3224 50 is_stmt 0 view .LVU154
 411 0166 039A     		ldr	r2, [sp, #12]
 412              		.loc 1 3224 31 view .LVU155
 413 0168 9A60     		str	r2, [r3, #8]
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 414              		.loc 1 3222 34 is_stmt 1 view .LVU156
 415              	.LVL34:
3222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 416              		.loc 1 3222 22 view .LVU157
3225:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
3226:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3227:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /*  Wait for completion, and read data on DOUT. This data is to discard. */
3228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if(CRYP_WaitOnCCFlag(hcryp, CRYP_CCF_TIMEOUTVALUE) != HAL_OK)
 417              		.loc 1 3228 7 view .LVU158
 418              		.loc 1 3228 10 is_stmt 0 view .LVU159
 419 016a 45F2F051 		movw	r1, #22000
 420 016e 2046     		mov	r0, r4
 421 0170 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 422              	.LVL35:
 423              		.loc 1 3228 9 view .LVU160
 424 0174 40B1     		cbz	r0, .L26
3229:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
3230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->State = HAL_CRYP_STATE_READY;
 425              		.loc 1 3230 9 is_stmt 1 view .LVU161
 426              		.loc 1 3230 22 is_stmt 0 view .LVU162
 427 0176 0123     		movs	r3, #1
 428 0178 84F85530 		strb	r3, [r4, #85]
3231:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
 429              		.loc 1 3231 9 is_stmt 1 view .LVU163
 430              		.loc 1 3231 9 view .LVU164
 431 017c 0023     		movs	r3, #0
 432 017e 84F85430 		strb	r3, [r4, #84]
 433              		.loc 1 3231 9 view .LVU165
3232:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         HAL_CRYP_ErrorCallback(hcryp);
 434              		.loc 1 3232 9 view .LVU166
 435 0182 2046     		mov	r0, r4
 436 0184 FFF7FEFF 		bl	HAL_CRYP_ErrorCallback
 437              	.LVL36:
 438              	.L26:
3233:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
3234:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3235:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Read data to discard */
3236:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Clear CCF Flag */
3237:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 439              		.loc 1 3237 7 view .LVU167
 440 0188 2368     		ldr	r3, [r4]
 441 018a 1A68     		ldr	r2, [r3]
 442 018c 42F08002 		orr	r2, r2, #128
 443 0190 1A60     		str	r2, [r3]
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 444              		.loc 1 3238 7 view .LVU168
 445              	.LVL37:
 446              		.loc 1 3238 22 view .LVU169
3239:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
3240:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         intermediate_data[index] = hcryp->Instance->DOUTR;
 447              		.loc 1 3240 9 view .LVU170
 448              		.loc 1 3240 51 is_stmt 0 view .LVU171
 449 0192 DA68     		ldr	r2, [r3, #12]
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 450              		.loc 1 3238 34 is_stmt 1 view .LVU172
 451              	.LVL38:
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 452              		.loc 1 3238 22 view .LVU173
 453              		.loc 1 3240 9 view .LVU174
 454              		.loc 1 3240 51 is_stmt 0 view .LVU175
 455 0194 DA68     		ldr	r2, [r3, #12]
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 456              		.loc 1 3238 34 is_stmt 1 view .LVU176
 457              	.LVL39:
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 458              		.loc 1 3238 22 view .LVU177
 459              		.loc 1 3240 9 view .LVU178
 460              		.loc 1 3240 51 is_stmt 0 view .LVU179
 461 0196 DA68     		ldr	r2, [r3, #12]
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 462              		.loc 1 3238 34 is_stmt 1 view .LVU180
 463              	.LVL40:
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 464              		.loc 1 3238 22 view .LVU181
 465              		.loc 1 3240 9 view .LVU182
 466              		.loc 1 3240 51 is_stmt 0 view .LVU183
 467 0198 DB68     		ldr	r3, [r3, #12]
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 468              		.loc 1 3238 34 is_stmt 1 view .LVU184
 469              	.LVL41:
3238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       for(index=0U ; index < 4U; index ++)
 470              		.loc 1 3238 22 view .LVU185
 471              	.L9:
3241:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
3242:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3243:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     } /* if (hcryp->Init.OperatingMode == CRYP_ALGOMODE_ENCRYPT) */
3244:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif  /* !defined(AES_CR_NPBLB) */
3245:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }   /* if (hcryp->Init.GCMCMACPhase == CRYP_PAYLOAD_PHASE) */
3246:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
3247:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 472              		.loc 1 3247 1 is_stmt 0 view .LVU186
 473 019a 11B0     		add	sp, sp, #68
 474              	.LCFI3:
 475              		.cfi_remember_state
 476              		.cfi_def_cfa_offset 36
 477              		@ sp needed
 478 019c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 479              	.LVL42:
 480              	.L12:
 481              	.LCFI4:
 482              		.cfi_restore_state
3145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 483              		.loc 1 3145 5 is_stmt 1 discriminator 3 view .LVU187
3145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 484              		.loc 1 3145 10 is_stmt 0 discriminator 3 view .LVU188
 485 01a0 2268     		ldr	r2, [r4]
3145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 486              		.loc 1 3145 29 discriminator 3 view .LVU189
 487 01a2 57F8041B 		ldr	r1, [r7], #4
 488              	.LVL43:
3145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 489              		.loc 1 3145 27 discriminator 3 view .LVU190
 490 01a6 9160     		str	r1, [r2, #8]
3146:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 491              		.loc 1 3146 5 is_stmt 1 discriminator 3 view .LVU191
 492              	.LVL44:
3142:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 493              		.loc 1 3142 43 discriminator 3 view .LVU192
 494 01a8 6AE7     		b	.L11
 495              	.LVL45:
 496              	.L15:
3157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 497              		.loc 1 3157 5 discriminator 3 view .LVU193
3157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 498              		.loc 1 3157 10 is_stmt 0 discriminator 3 view .LVU194
 499 01aa 2268     		ldr	r2, [r4]
3155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 500              		.loc 1 3155 61 discriminator 3 view .LVU195
 501 01ac 0137     		adds	r7, r7, #1
 502              	.LVL46:
3157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 503              		.loc 1 3157 27 discriminator 3 view .LVU196
 504 01ae 9160     		str	r1, [r2, #8]
3155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 505              		.loc 1 3155 55 is_stmt 1 discriminator 3 view .LVU197
 506              	.LVL47:
3155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 507              		.loc 1 3155 55 is_stmt 0 discriminator 3 view .LVU198
 508 01b0 80E7     		b	.L14
 509              	.LVL48:
 510              	.L21:
3190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 511              		.loc 1 3190 7 is_stmt 1 discriminator 3 view .LVU199
3190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 512              		.loc 1 3190 51 is_stmt 0 discriminator 3 view .LVU200
 513 01b2 52F8040B 		ldr	r0, [r2], #4
3190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 514              		.loc 1 3190 32 discriminator 3 view .LVU201
 515 01b6 4AF8040B 		str	r0, [r10], #4
 516              	.LVL49:
3191:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 517              		.loc 1 3191 7 is_stmt 1 discriminator 3 view .LVU202
3188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 518              		.loc 1 3188 45 discriminator 3 view .LVU203
 519 01ba A3E7     		b	.L20
 520              	.LVL50:
 521              	.L25:
3219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 522              		.loc 1 3219 9 discriminator 3 view .LVU204
3219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 523              		.loc 1 3219 55 is_stmt 0 discriminator 3 view .LVU205
 524 01bc 46F8042B 		str	r2, [r6], #4
3217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 525              		.loc 1 3217 59 is_stmt 1 discriminator 3 view .LVU206
3217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 526              		.loc 1 3217 65 is_stmt 0 discriminator 3 view .LVU207
 527 01c0 0131     		adds	r1, r1, #1
 528              	.LVL51:
3217:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 529              		.loc 1 3217 65 discriminator 3 view .LVU208
 530 01c2 C8E7     		b	.L24
 531              		.cfi_endproc
 532              	.LFE338:
 534              		.section	.text.CRYP_Authentication_SetDMAConfig,"ax",%progbits
 535              		.align	1
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 539              		.fpu softvfp
 541              	CRYP_Authentication_SetDMAConfig:
 542              	.LVL52:
 543              	.LFB329:
2735:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 544              		.loc 1 2735 1 is_stmt 1 view -0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
2738:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 548              		.loc 1 2738 3 view .LVU210
2735:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 549              		.loc 1 2735 1 is_stmt 0 view .LVU211
 550 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 551              	.LCFI5:
 552              		.cfi_def_cfa_offset 24
 553              		.cfi_offset 3, -24
 554              		.cfi_offset 4, -20
 555              		.cfi_offset 5, -16
 556              		.cfi_offset 6, -12
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
2735:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 559              		.loc 1 2735 1 view .LVU212
 560 0002 0446     		mov	r4, r0
2738:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 561              		.loc 1 2738 8 view .LVU213
 562 0004 C06C     		ldr	r0, [r0, #76]
 563              	.LVL53:
2735:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 564              		.loc 1 2735 1 view .LVU214
 565 0006 1546     		mov	r5, r2
2738:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 566              		.loc 1 2738 35 view .LVU215
 567 0008 164A     		ldr	r2, .L56
 568              	.LVL54:
2738:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 569              		.loc 1 2738 35 view .LVU216
 570 000a C262     		str	r2, [r0, #44]
2740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 571              		.loc 1 2740 3 is_stmt 1 view .LVU217
2740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 572              		.loc 1 2740 36 is_stmt 0 view .LVU218
 573 000c 164A     		ldr	r2, .L56+4
 574 000e 4263     		str	r2, [r0, #52]
2742:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 575              		.loc 1 2742 3 is_stmt 1 view .LVU219
2742:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 576              		.loc 1 2742 6 is_stmt 0 view .LVU220
 577 0010 1E46     		mov	r6, r3
 578 0012 1BB1     		cbz	r3, .L40
2745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Set the DMA error callback */
 579              		.loc 1 2745 5 is_stmt 1 view .LVU221
2745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Set the DMA error callback */
 580              		.loc 1 2745 10 is_stmt 0 view .LVU222
 581 0014 236D     		ldr	r3, [r4, #80]
 582              	.LVL55:
2745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Set the DMA error callback */
 583              		.loc 1 2745 38 view .LVU223
 584 0016 154F     		ldr	r7, .L56+8
 585 0018 DF62     		str	r7, [r3, #44]
2747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 586              		.loc 1 2747 5 is_stmt 1 view .LVU224
2747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 587              		.loc 1 2747 39 is_stmt 0 view .LVU225
 588 001a 5A63     		str	r2, [r3, #52]
 589              	.L40:
2751:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 590              		.loc 1 2751 3 is_stmt 1 view .LVU226
 591 001c 2268     		ldr	r2, [r4]
 592 001e 1368     		ldr	r3, [r2]
2754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 593              		.loc 1 2754 7 is_stmt 0 view .LVU227
 594 0020 AD08     		lsrs	r5, r5, #2
2751:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 595              		.loc 1 2751 3 view .LVU228
 596 0022 43F00103 		orr	r3, r3, #1
 597 0026 42F8083B 		str	r3, [r2], #8
2754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 598              		.loc 1 2754 3 is_stmt 1 view .LVU229
2754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 599              		.loc 1 2754 7 is_stmt 0 view .LVU230
 600 002a 2B46     		mov	r3, r5
 601 002c FFF7FEFF 		bl	HAL_DMA_Start_IT
 602              	.LVL56:
2754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 603              		.loc 1 2754 6 view .LVU231
 604 0030 10B1     		cbz	r0, .L41
2759:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 605              		.loc 1 2759 5 is_stmt 1 view .LVU232
 606 0032 2046     		mov	r0, r4
 607 0034 FFF7FEFF 		bl	HAL_CRYP_ErrorCallback
 608              	.LVL57:
 609              	.L41:
2764:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 610              		.loc 1 2764 3 view .LVU233
 611 0038 2168     		ldr	r1, [r4]
 612 003a 0B68     		ldr	r3, [r1]
 613 003c 43F40063 		orr	r3, r3, #2048
 614 0040 0B60     		str	r3, [r1]
2767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 615              		.loc 1 2767 3 view .LVU234
2767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 616              		.loc 1 2767 6 is_stmt 0 view .LVU235
 617 0042 76B1     		cbz	r6, .L39
2770:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 618              		.loc 1 2770 5 is_stmt 1 view .LVU236
2770:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 619              		.loc 1 2770 9 is_stmt 0 view .LVU237
 620 0044 206D     		ldr	r0, [r4, #80]
 621 0046 2B46     		mov	r3, r5
 622 0048 3246     		mov	r2, r6
 623 004a 0C31     		adds	r1, r1, #12
 624 004c FFF7FEFF 		bl	HAL_DMA_Start_IT
 625              	.LVL58:
2770:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 626              		.loc 1 2770 8 view .LVU238
 627 0050 10B1     		cbz	r0, .L43
2775:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 628              		.loc 1 2775 7 is_stmt 1 view .LVU239
 629 0052 2046     		mov	r0, r4
 630 0054 FFF7FEFF 		bl	HAL_CRYP_ErrorCallback
 631              	.LVL59:
 632              	.L43:
2780:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 633              		.loc 1 2780 5 view .LVU240
 634 0058 2268     		ldr	r2, [r4]
 635 005a 1368     		ldr	r3, [r2]
 636 005c 43F48053 		orr	r3, r3, #4096
 637 0060 1360     		str	r3, [r2]
 638              	.L39:
2782:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 639              		.loc 1 2782 1 is_stmt 0 view .LVU241
 640 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 641              	.LVL60:
 642              	.L57:
2782:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 643              		.loc 1 2782 1 view .LVU242
 644              		.align	2
 645              	.L56:
 646 0064 00000000 		.word	CRYP_Authentication_DMAInCplt
 647 0068 00000000 		.word	CRYP_Authentication_DMAError
 648 006c 00000000 		.word	CRYP_Authentication_DMAOutCplt
 649              		.cfi_endproc
 650              	.LFE329:
 652              		.section	.text.CRYP_Authentication_DMAError,"ax",%progbits
 653              		.align	1
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu softvfp
 659              	CRYP_Authentication_DMAError:
 660              	.LVL61:
 661              	.LFB327:
2227:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
 662              		.loc 1 2227 1 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
2228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 666              		.loc 1 2228 3 view .LVU244
2227:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
 667              		.loc 1 2227 1 is_stmt 0 view .LVU245
 668 0000 10B5     		push	{r4, lr}
 669              	.LCFI6:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
2228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 673              		.loc 1 2228 23 view .LVU246
 674 0002 846A     		ldr	r4, [r0, #40]
 675              	.LVL62:
2230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->ErrorCode |= HAL_CRYP_DMA_ERROR;
 676              		.loc 1 2230 3 is_stmt 1 view .LVU247
2230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->ErrorCode |= HAL_CRYP_DMA_ERROR;
 677              		.loc 1 2230 15 is_stmt 0 view .LVU248
 678 0004 0423     		movs	r3, #4
 679 0006 84F85530 		strb	r3, [r4, #85]
2231:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
 680              		.loc 1 2231 3 is_stmt 1 view .LVU249
2231:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1)
 681              		.loc 1 2231 20 is_stmt 0 view .LVU250
 682 000a A36D     		ldr	r3, [r4, #88]
 683 000c 43F00403 		orr	r3, r3, #4
 684 0010 A365     		str	r3, [r4, #88]
2235:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 685              		.loc 1 2235 3 is_stmt 1 view .LVU251
 686 0012 2046     		mov	r0, r4
 687              	.LVL63:
2235:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 688              		.loc 1 2235 3 is_stmt 0 view .LVU252
 689 0014 FFF7FEFF 		bl	HAL_CRYP_ErrorCallback
 690              	.LVL64:
2238:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 691              		.loc 1 2238 3 is_stmt 1 view .LVU253
 692 0018 2268     		ldr	r2, [r4]
 693 001a 1368     		ldr	r3, [r2]
 694 001c 43F48073 		orr	r3, r3, #256
 695 0020 1360     		str	r3, [r2]
2239:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 696              		.loc 1 2239 1 is_stmt 0 view .LVU254
 697 0022 10BD     		pop	{r4, pc}
2239:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 698              		.loc 1 2239 1 view .LVU255
 699              		.cfi_endproc
 700              	.LFE327:
 702              		.section	.text.CRYP_DMAError,"ax",%progbits
 703              		.align	1
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu softvfp
 709              	CRYP_DMAError:
 710              	.LFB340:
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 715 0000 FFF7FEBF 		b	CRYP_Authentication_DMAError
 716              		.cfi_endproc
 717              	.LFE340:
 719              		.section	.text.CRYP_DMAOutCplt,"ax",%progbits
 720              		.align	1
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu softvfp
 726              	CRYP_DMAOutCplt:
 727              	.LVL65:
 728              	.LFB336:
3047:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
 729              		.loc 1 3047 1 is_stmt 1 view -0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
3048:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 734              		.loc 1 3048 3 view .LVU257
3048:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 735              		.loc 1 3048 23 is_stmt 0 view .LVU258
 736 0000 806A     		ldr	r0, [r0, #40]
 737              	.LVL66:
3051:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 738              		.loc 1 3051 3 is_stmt 1 view .LVU259
 739 0002 0368     		ldr	r3, [r0]
 740 0004 1A68     		ldr	r2, [r3]
 741 0006 22F48052 		bic	r2, r2, #4096
 742 000a 1A60     		str	r2, [r3]
3054:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 743              		.loc 1 3054 3 view .LVU260
 744 000c 1A68     		ldr	r2, [r3]
 745 000e 42F08002 		orr	r2, r2, #128
 746 0012 1A60     		str	r2, [r3]
3057:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 747              		.loc 1 3057 3 view .LVU261
 748 0014 1A68     		ldr	r2, [r3]
 749 0016 22F00102 		bic	r2, r2, #1
 750 001a 1A60     		str	r2, [r3]
3060:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 751              		.loc 1 3060 3 view .LVU262
3060:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 752              		.loc 1 3060 16 is_stmt 0 view .LVU263
 753 001c 0123     		movs	r3, #1
 754 001e 80F85530 		strb	r3, [r0, #85]
3066:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 755              		.loc 1 3066 3 is_stmt 1 view .LVU264
 756 0022 FFF7FEBF 		b	HAL_CRYP_OutCpltCallback
 757              	.LVL67:
3066:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 758              		.loc 1 3066 3 is_stmt 0 view .LVU265
 759              		.cfi_endproc
 760              	.LFE336:
 762              		.section	.text.CRYP_Authentication_DMAOutCplt,"ax",%progbits
 763              		.align	1
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu softvfp
 769              	CRYP_Authentication_DMAOutCplt:
 770              	.LVL68:
 771              	.LFB326:
2187:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength;
 772              		.loc 1 2187 1 is_stmt 1 view -0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
2188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
 776              		.loc 1 2188 3 view .LVU267
2189:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 777              		.loc 1 2189 3 view .LVU268
2187:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength;
 778              		.loc 1 2187 1 is_stmt 0 view .LVU269
 779 0000 10B5     		push	{r4, lr}
 780              	.LCFI7:
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 4, -8
 783              		.cfi_offset 14, -4
2189:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 784              		.loc 1 2189 23 view .LVU270
 785 0002 846A     		ldr	r4, [r0, #40]
 786              	.LVL69:
2192:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 787              		.loc 1 2192 3 is_stmt 1 view .LVU271
 788 0004 2368     		ldr	r3, [r4]
2198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 789              		.loc 1 2198 12 is_stmt 0 view .LVU272
 790 0006 216C     		ldr	r1, [r4, #64]
2192:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 791              		.loc 1 2192 3 view .LVU273
 792 0008 1A68     		ldr	r2, [r3]
 793 000a 22F48052 		bic	r2, r2, #4096
 794 000e 1A60     		str	r2, [r3]
2195:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 795              		.loc 1 2195 3 is_stmt 1 view .LVU274
 796 0010 1A68     		ldr	r2, [r3]
 797 0012 42F08002 		orr	r2, r2, #128
 798 0016 1A60     		str	r2, [r3]
2198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 799              		.loc 1 2198 3 view .LVU275
2198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 800              		.loc 1 2198 6 is_stmt 0 view .LVU276
 801 0018 29B1     		cbz	r1, .L62
2201:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->CrypInCount = 0;
 802              		.loc 1 2201 5 is_stmt 1 view .LVU277
 803              	.LVL70:
2202:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 804              		.loc 1 2202 5 view .LVU278
2202:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 805              		.loc 1 2202 24 is_stmt 0 view .LVU279
 806 001a 0023     		movs	r3, #0
 807 001c 2364     		str	r3, [r4, #64]
2204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 808              		.loc 1 2204 5 is_stmt 1 view .LVU280
 809 001e 0122     		movs	r2, #1
 810 0020 2046     		mov	r0, r4
 811              	.LVL71:
2204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 812              		.loc 1 2204 5 is_stmt 0 view .LVU281
 813 0022 FFF7FEFF 		bl	CRYP_Padding
 814              	.LVL72:
 815              	.L62:
2208:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Mark that the payload phase is over */
 816              		.loc 1 2208 3 is_stmt 1 view .LVU282
2208:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Mark that the payload phase is over */
 817              		.loc 1 2208 16 is_stmt 0 view .LVU283
 818 0026 0123     		movs	r3, #1
 819 0028 84F85530 		strb	r3, [r4, #85]
2210:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 820              		.loc 1 2210 3 is_stmt 1 view .LVU284
2210:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 821              		.loc 1 2210 16 is_stmt 0 view .LVU285
 822 002c 0623     		movs	r3, #6
 823 002e 84F84830 		strb	r3, [r4, #72]
2216:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 824              		.loc 1 2216 3 is_stmt 1 view .LVU286
 825 0032 2046     		mov	r0, r4
2218:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 826              		.loc 1 2218 1 is_stmt 0 view .LVU287
 827 0034 BDE81040 		pop	{r4, lr}
 828              	.LCFI8:
 829              		.cfi_restore 14
 830              		.cfi_restore 4
 831              		.cfi_def_cfa_offset 0
 832              	.LVL73:
2216:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 833              		.loc 1 2216 3 view .LVU288
 834 0038 FFF7FEBF 		b	HAL_CRYP_OutCpltCallback
 835              	.LVL74:
2216:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 836              		.loc 1 2216 3 view .LVU289
 837              		.cfi_endproc
 838              	.LFE326:
 840              		.section	.text.CRYP_DMAInCplt,"ax",%progbits
 841              		.align	1
 842              		.syntax unified
 843              		.thumb
 844              		.thumb_func
 845              		.fpu softvfp
 847              	CRYP_DMAInCplt:
 848              	.LVL75:
 849              	.LFB335:
3027:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
 850              		.loc 1 3027 1 is_stmt 1 view -0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
3028:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 855              		.loc 1 3028 3 view .LVU291
3028:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 856              		.loc 1 3028 23 is_stmt 0 view .LVU292
 857 0000 806A     		ldr	r0, [r0, #40]
 858              	.LVL76:
3031:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 859              		.loc 1 3031 3 is_stmt 1 view .LVU293
 860 0002 0268     		ldr	r2, [r0]
 861 0004 1368     		ldr	r3, [r2]
 862 0006 23F40063 		bic	r3, r3, #2048
 863 000a 1360     		str	r3, [r2]
3037:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 864              		.loc 1 3037 3 view .LVU294
 865 000c FFF7FEBF 		b	HAL_CRYP_InCpltCallback
 866              	.LVL77:
3037:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 867              		.loc 1 3037 3 is_stmt 0 view .LVU295
 868              		.cfi_endproc
 869              	.LFE335:
 871              		.section	.text.CRYP_Authentication_DMAInCplt,"ax",%progbits
 872              		.align	1
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu softvfp
 878              	CRYP_Authentication_DMAInCplt:
 879              	.LVL78:
 880              	.LFB325:
2143:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength;
 881              		.loc 1 2143 1 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
2144:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   CRYP_HandleTypeDef* hcryp = (CRYP_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;   /* Derogat
 885              		.loc 1 2144 3 view .LVU297
2145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 886              		.loc 1 2145 3 view .LVU298
2143:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength;
 887              		.loc 1 2143 1 is_stmt 0 view .LVU299
 888 0000 10B5     		push	{r4, lr}
 889              	.LCFI9:
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 4, -8
 892              		.cfi_offset 14, -4
2145:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 893              		.loc 1 2145 23 view .LVU300
 894 0002 846A     		ldr	r4, [r0, #40]
 895              	.LVL79:
2148:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 896              		.loc 1 2148 3 is_stmt 1 view .LVU301
 897 0004 2268     		ldr	r2, [r4]
 898 0006 1368     		ldr	r3, [r2]
 899 0008 23F40063 		bic	r3, r3, #2048
 900 000c 1360     		str	r3, [r2]
2150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 901              		.loc 1 2150 3 view .LVU302
2150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 902              		.loc 1 2150 6 is_stmt 0 view .LVU303
 903 000e E369     		ldr	r3, [r4, #28]
 904 0010 B3F5005F 		cmp	r3, #8192
 905 0014 0CD1     		bne	.L68
2153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 906              		.loc 1 2153 5 is_stmt 1 view .LVU304
2153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 907              		.loc 1 2153 14 is_stmt 0 view .LVU305
 908 0016 216C     		ldr	r1, [r4, #64]
2153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 909              		.loc 1 2153 8 view .LVU306
 910 0018 21B1     		cbz	r1, .L69
2156:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount = 0;
 911              		.loc 1 2156 7 is_stmt 1 view .LVU307
 912              	.LVL80:
2157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 913              		.loc 1 2157 7 view .LVU308
2157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 914              		.loc 1 2157 26 is_stmt 0 view .LVU309
 915 001a 0022     		movs	r2, #0
 916 001c 2264     		str	r2, [r4, #64]
2159:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 917              		.loc 1 2159 7 is_stmt 1 view .LVU310
 918 001e 2046     		mov	r0, r4
 919              	.LVL81:
2159:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 920              		.loc 1 2159 7 is_stmt 0 view .LVU311
 921 0020 FFF7FEFF 		bl	CRYP_Padding
 922              	.LVL82:
 923              	.L69:
2161:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Mark that the header phase is over */
 924              		.loc 1 2161 5 is_stmt 1 view .LVU312
2161:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     /* Mark that the header phase is over */
 925              		.loc 1 2161 18 is_stmt 0 view .LVU313
 926 0024 0123     		movs	r3, #1
 927 0026 84F85530 		strb	r3, [r4, #85]
2163:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 928              		.loc 1 2163 5 is_stmt 1 view .LVU314
2163:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 929              		.loc 1 2163 18 is_stmt 0 view .LVU315
 930 002a 0523     		movs	r3, #5
 931 002c 84F84830 		strb	r3, [r4, #72]
 932              	.L68:
2175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 933              		.loc 1 2175 3 is_stmt 1 view .LVU316
 934 0030 2046     		mov	r0, r4
2177:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 935              		.loc 1 2177 1 is_stmt 0 view .LVU317
 936 0032 BDE81040 		pop	{r4, lr}
 937              	.LCFI10:
 938              		.cfi_restore 14
 939              		.cfi_restore 4
 940              		.cfi_def_cfa_offset 0
 941              	.LVL83:
2175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 942              		.loc 1 2175 3 view .LVU318
 943 0036 FFF7FEBF 		b	HAL_CRYP_InCpltCallback
 944              	.LVL84:
2175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 945              		.loc 1 2175 3 view .LVU319
 946              		.cfi_endproc
 947              	.LFE325:
 949              		.section	.text.CRYP_WaitOnBusyFlagReset.constprop.0,"ax",%progbits
 950              		.align	1
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu softvfp
 956              	CRYP_WaitOnBusyFlagReset.constprop.0:
 957              	.LVL85:
 958              	.LFB341:
2999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 959              		.loc 1 2999 26 is_stmt 1 view -0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
3001:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 963              		.loc 1 3001 3 view .LVU321
3004:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 964              		.loc 1 3004 3 view .LVU322
2999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 965              		.loc 1 2999 26 is_stmt 0 view .LVU323
 966 0000 70B5     		push	{r4, r5, r6, lr}
 967              	.LCFI11:
 968              		.cfi_def_cfa_offset 16
 969              		.cfi_offset 4, -16
 970              		.cfi_offset 5, -12
 971              		.cfi_offset 6, -8
 972              		.cfi_offset 14, -4
2999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 973              		.loc 1 2999 26 view .LVU324
 974 0002 0446     		mov	r4, r0
3004:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 975              		.loc 1 3004 15 view .LVU325
 976 0004 FFF7FEFF 		bl	HAL_GetTick
 977              	.LVL86:
3011:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 978              		.loc 1 3011 9 view .LVU326
 979 0008 45F2F056 		movw	r6, #22000
3004:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 980              		.loc 1 3004 15 view .LVU327
 981 000c 0546     		mov	r5, r0
 982              	.LVL87:
3006:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 983              		.loc 1 3006 3 is_stmt 1 view .LVU328
 984              	.L74:
3006:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 985              		.loc 1 3006 8 view .LVU329
3006:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 986              		.loc 1 3006 9 is_stmt 0 view .LVU330
 987 000e 2368     		ldr	r3, [r4]
 988 0010 5868     		ldr	r0, [r3, #4]
3006:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 989              		.loc 1 3006 8 view .LVU331
 990 0012 10F00800 		ands	r0, r0, #8
 991 0016 00D1     		bne	.L76
 992              	.L75:
3018:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 993              		.loc 1 3018 1 view .LVU332
 994 0018 70BD     		pop	{r4, r5, r6, pc}
 995              	.LVL88:
 996              	.L76:
3009:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 997              		.loc 1 3009 5 is_stmt 1 view .LVU333
3011:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 998              		.loc 1 3011 7 view .LVU334
3011:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 999              		.loc 1 3011 11 is_stmt 0 view .LVU335
 1000 001a FFF7FEFF 		bl	HAL_GetTick
 1001              	.LVL89:
3011:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1002              		.loc 1 3011 25 view .LVU336
 1003 001e 401B     		subs	r0, r0, r5
3011:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1004              		.loc 1 3011 9 view .LVU337
 1005 0020 B042     		cmp	r0, r6
 1006 0022 F4D9     		bls	.L74
3013:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 1007              		.loc 1 3013 16 view .LVU338
 1008 0024 0320     		movs	r0, #3
 1009 0026 F7E7     		b	.L75
 1010              		.cfi_endproc
 1011              	.LFE341:
 1013              		.section	.text.HAL_CRYPEx_ComputationCpltCallback,"ax",%progbits
 1014              		.align	1
 1015              		.weak	HAL_CRYPEx_ComputationCpltCallback
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1019              		.fpu softvfp
 1021              	HAL_CRYPEx_ComputationCpltCallback:
 1022              	.LVL90:
 1023              	.LFB309:
 125:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Prevent unused argument(s) compilation warning */
 1024              		.loc 1 125 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		@ link register save eliminated.
 127:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1029              		.loc 1 127 3 view .LVU340
 132:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1030              		.loc 1 132 1 is_stmt 0 view .LVU341
 1031 0000 7047     		bx	lr
 1032              		.cfi_endproc
 1033              	.LFE309:
 1035              		.section	.text.HAL_CRYPEx_AES,"ax",%progbits
 1036              		.align	1
 1037              		.global	HAL_CRYPEx_AES
 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1041              		.fpu softvfp
 1043              	HAL_CRYPEx_AES:
 1044              	.LVL91:
 1045              	.LFB310:
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1046              		.loc 1 183 1 is_stmt 1 view -0
 1047              		.cfi_startproc
 1048              		@ args = 4, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1050              		.loc 1 183 1 is_stmt 0 view .LVU343
 1051 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1052              	.LCFI12:
 1053              		.cfi_def_cfa_offset 32
 1054              		.cfi_offset 3, -32
 1055              		.cfi_offset 4, -28
 1056              		.cfi_offset 5, -24
 1057              		.cfi_offset 6, -20
 1058              		.cfi_offset 7, -16
 1059              		.cfi_offset 8, -12
 1060              		.cfi_offset 9, -8
 1061              		.cfi_offset 14, -4
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1062              		.loc 1 183 1 view .LVU344
 1063 0004 1746     		mov	r7, r2
 185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1064              		.loc 1 185 12 view .LVU345
 1065 0006 90F85520 		ldrb	r2, [r0, #85]	@ zero_extendqisi2
 1066              	.LVL92:
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1067              		.loc 1 183 1 view .LVU346
 1068 000a DDF82090 		ldr	r9, [sp, #32]
 185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1069              		.loc 1 185 6 view .LVU347
 1070 000e 012A     		cmp	r2, #1
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1071              		.loc 1 183 1 view .LVU348
 1072 0010 0446     		mov	r4, r0
 185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1073              		.loc 1 185 3 is_stmt 1 view .LVU349
 185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1074              		.loc 1 185 12 is_stmt 0 view .LVU350
 1075 0012 D0B2     		uxtb	r0, r2
 1076              	.LVL93:
 185:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1077              		.loc 1 185 6 view .LVU351
 1078 0014 40F09C80 		bne	.L92
 188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1079              		.loc 1 188 5 is_stmt 1 view .LVU352
 188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1080              		.loc 1 188 20 is_stmt 0 view .LVU353
 1081 0018 2269     		ldr	r2, [r4, #16]
 188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1082              		.loc 1 188 8 view .LVU354
 1083 001a 082A     		cmp	r2, #8
 1084 001c 02D1     		bne	.L81
 190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1085              		.loc 1 190 7 is_stmt 1 view .LVU355
 190:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1086              		.loc 1 190 10 is_stmt 0 view .LVU356
 1087 001e 3BB9     		cbnz	r3, .L82
 1088              	.LVL94:
 1089              	.L80:
 242:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1090              		.loc 1 242 1 view .LVU357
 1091 0020 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1092              	.LVL95:
 1093              	.L81:
 197:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1094              		.loc 1 197 7 is_stmt 1 view .LVU358
 197:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1095              		.loc 1 197 10 is_stmt 0 view .LVU359
 1096 0024 0029     		cmp	r1, #0
 1097 0026 FBD0     		beq	.L80
 197:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1098              		.loc 1 197 32 discriminator 1 view .LVU360
 1099 0028 002B     		cmp	r3, #0
 1100 002a F9D0     		beq	.L80
 197:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1101              		.loc 1 197 57 discriminator 2 view .LVU361
 1102 002c 002F     		cmp	r7, #0
 1103 002e F7D0     		beq	.L80
 1104              	.L82:
 204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1105              		.loc 1 204 5 is_stmt 1 view .LVU362
 204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1106              		.loc 1 204 5 view .LVU363
 1107 0030 94F85400 		ldrb	r0, [r4, #84]	@ zero_extendqisi2
 1108 0034 0128     		cmp	r0, #1
 1109 0036 4FF00200 		mov	r0, #2
 1110 003a F1D0     		beq	.L80
 204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1111              		.loc 1 204 5 discriminator 2 view .LVU364
 1112 003c 0125     		movs	r5, #1
 211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1113              		.loc 1 211 8 is_stmt 0 discriminator 2 view .LVU365
 1114 003e 082A     		cmp	r2, #8
 204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1115              		.loc 1 204 5 discriminator 2 view .LVU366
 1116 0040 84F85450 		strb	r5, [r4, #84]
 204:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1117              		.loc 1 204 5 is_stmt 1 discriminator 2 view .LVU367
 207:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1118              		.loc 1 207 5 discriminator 2 view .LVU368
 207:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1119              		.loc 1 207 18 is_stmt 0 discriminator 2 view .LVU369
 1120 0044 84F85500 		strb	r0, [r4, #85]
 211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1121              		.loc 1 211 5 is_stmt 1 discriminator 2 view .LVU370
 1122 0048 1E46     		mov	r6, r3
 211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1123              		.loc 1 211 8 is_stmt 0 discriminator 2 view .LVU371
 1124 004a 3AD1     		bne	.L83
 213:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1125              		.loc 1 213 7 is_stmt 1 view .LVU372
 1126              	.LVL96:
 1127              	.LBB193:
 1128              	.LBI193:
2875:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 1129              		.loc 1 2875 26 view .LVU373
 1130              	.LBB194:
2877:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1131              		.loc 1 2877 3 view .LVU374
2880:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1132              		.loc 1 2880 3 view .LVU375
2880:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1133              		.loc 1 2880 6 is_stmt 0 view .LVU376
 1134 004c 4946     		mov	r1, r9
 1135              	.LVL97:
2880:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1136              		.loc 1 2880 6 view .LVU377
 1137 004e 2046     		mov	r0, r4
 1138 0050 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 1139              	.LVL98:
2880:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1140              		.loc 1 2880 5 view .LVU378
 1141 0054 30B1     		cbz	r0, .L84
2882:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
 1142              		.loc 1 2882 5 is_stmt 1 view .LVU379
2882:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     __HAL_UNLOCK(hcryp);
 1143              		.loc 1 2882 18 is_stmt 0 view .LVU380
 1144 0056 84F85550 		strb	r5, [r4, #85]
2883:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_TIMEOUT;
 1145              		.loc 1 2883 5 is_stmt 1 view .LVU381
2883:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_TIMEOUT;
 1146              		.loc 1 2883 5 view .LVU382
 1147              	.LVL99:
 1148              	.L109:
2883:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     return HAL_TIMEOUT;
 1149              		.loc 1 2883 5 is_stmt 0 view .LVU383
 1150              	.LBE194:
 1151              	.LBE193:
 1152              	.LBB212:
 1153              	.LBB213:
2819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_TIMEOUT;
 1154              		.loc 1 2819 7 is_stmt 1 view .LVU384
2819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_TIMEOUT;
 1155              		.loc 1 2819 7 view .LVU385
 1156 005a 0023     		movs	r3, #0
 1157 005c 84F85430 		strb	r3, [r4, #84]
2819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_TIMEOUT;
 1158              		.loc 1 2819 7 view .LVU386
2820:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1159              		.loc 1 2820 7 view .LVU387
 1160              	.LBE213:
 1161              	.LBE212:
 222:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 1162              		.loc 1 222 16 is_stmt 0 view .LVU388
 1163 0060 0320     		movs	r0, #3
 1164 0062 DDE7     		b	.L80
 1165              	.LVL100:
 1166              	.L84:
 1167              	.LBB215:
 1168              	.LBB211:
2887:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1169              		.loc 1 2887 3 is_stmt 1 view .LVU389
 1170 0064 2368     		ldr	r3, [r4]
 1171 0066 1A68     		ldr	r2, [r3]
 1172 0068 42F08002 		orr	r2, r2, #128
 1173 006c 1A60     		str	r2, [r3]
2890:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1174              		.loc 1 2890 3 view .LVU390
2890:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1175              		.loc 1 2890 6 is_stmt 0 view .LVU391
 1176 006e E268     		ldr	r2, [r4, #12]
 1177 0070 B2F5802F 		cmp	r2, #262144
 1178 0074 0CD1     		bne	.L85
2892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1179              		.loc 1 2892 5 is_stmt 1 view .LVU392
2892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1180              		.loc 1 2892 32 is_stmt 0 view .LVU393
 1181 0076 DA6B     		ldr	r2, [r3, #60]
 1182              	.LVL101:
 1183              	.LBB195:
 1184              	.LBI195:
 1185              		.file 2 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h"
   1:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
   9:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    *
  21:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  34:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  35:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  38:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
  45:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  46:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  47:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   @{
  51:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  52:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  53:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
  54:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  58:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
  60:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
  62:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  63:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  64:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
  65:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  69:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
  71:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
  73:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  74:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  75:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
  76:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  80:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
  82:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  84:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
  87:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  88:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  89:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
  90:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  94:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
  96:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
  98:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  99:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 100:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 101:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 105:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 107:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 109:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 112:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 113:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 114:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 115:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 119:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 121:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 123:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 126:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 127:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 128:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 129:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 132:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 134:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 136:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 138:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 141:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 142:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 143:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 144:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 148:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 150:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 152:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 155:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 156:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 157:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 158:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 162:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 164:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 166:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 167:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 168:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 169:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 173:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 175:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 177:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 180:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 181:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 182:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 183:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 186:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 188:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 190:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 192:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 193:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 194:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 195:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 199:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 201:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 203:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 206:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 207:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 208:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 209:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 213:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 215:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 217:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 218:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 219:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 221:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 222:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 226:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 228:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 230:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 231:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 232:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 233:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 237:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 239:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 241:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 242:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 243:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 244:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 248:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 250:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 252:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 255:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 256:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 257:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 258:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 262:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 264:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 266:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 267:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 268:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 269:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 274:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 276:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 278:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 279:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 280:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 281:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 285:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 287:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 289:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 292:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 293:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 294:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 295:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 299:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 301:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 303:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 304:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 306:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 307:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 309:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 310:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 314:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 316:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 319:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 325:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 327:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 328:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 329:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 330:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 331:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 335:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 337:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 343:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 344:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 345:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 347:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 348:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 349:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 351:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 352:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   @{
 356:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** */
 357:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 358:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 365:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 368:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 369:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 370:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 373:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 375:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 377:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 378:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 379:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 380:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 383:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 385:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 387:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 388:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 389:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 390:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 394:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 396:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 398:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 399:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 400:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 401:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 404:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 406:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 408:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 409:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 410:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 411:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 416:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 418:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 420:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 421:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 422:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 423:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 427:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 429:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 431:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 432:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 433:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 434:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 438:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 440:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 442:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 443:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 444:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 445:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 1186              		.loc 2 450 57 is_stmt 1 view .LVU394
 1187              	.LBB196:
 451:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 452:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 1188              		.loc 2 453 3 view .LVU395
 1189              		.loc 2 453 10 is_stmt 0 view .LVU396
 1190 0078 12BA     		rev	r2, r2
 1191              	.LVL102:
 1192              		.loc 2 453 10 view .LVU397
 1193              	.LBE196:
 1194              	.LBE195:
2892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1195              		.loc 1 2892 30 view .LVU398
 1196 007a 3260     		str	r2, [r6]
2893:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR6);
 1197              		.loc 1 2893 5 is_stmt 1 view .LVU399
 1198              	.LVL103:
2894:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1199              		.loc 1 2894 5 view .LVU400
2894:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1200              		.loc 1 2894 32 is_stmt 0 view .LVU401
 1201 007c 9A6B     		ldr	r2, [r3, #56]
 1202              	.LVL104:
 1203              	.LBB197:
 1204              	.LBI197:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1205              		.loc 2 450 57 is_stmt 1 view .LVU402
 1206              	.LBB198:
 1207              		.loc 2 453 3 view .LVU403
 1208              		.loc 2 453 10 is_stmt 0 view .LVU404
 1209 007e 12BA     		rev	r2, r2
 1210              	.LVL105:
 1211              		.loc 2 453 10 view .LVU405
 1212              	.LBE198:
 1213              	.LBE197:
2894:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1214              		.loc 1 2894 30 view .LVU406
 1215 0080 7260     		str	r2, [r6, #4]
2895:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR5);
 1216              		.loc 1 2895 5 is_stmt 1 view .LVU407
 1217              	.LVL106:
2896:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1218              		.loc 1 2896 5 view .LVU408
2896:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1219              		.loc 1 2896 32 is_stmt 0 view .LVU409
 1220 0082 5A6B     		ldr	r2, [r3, #52]
 1221              	.LVL107:
 1222              	.LBB199:
 1223              	.LBI199:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1224              		.loc 2 450 57 is_stmt 1 view .LVU410
 1225              	.LBB200:
 1226              		.loc 2 453 3 view .LVU411
 1227              		.loc 2 453 10 is_stmt 0 view .LVU412
 1228 0084 12BA     		rev	r2, r2
 1229              	.LVL108:
 1230              		.loc 2 453 10 view .LVU413
 1231              	.LBE200:
 1232              	.LBE199:
2896:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1233              		.loc 1 2896 30 view .LVU414
 1234 0086 B260     		str	r2, [r6, #8]
2897:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR4);
 1235              		.loc 1 2897 5 is_stmt 1 view .LVU415
 1236              	.LVL109:
2898:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1237              		.loc 1 2898 5 view .LVU416
2898:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1238              		.loc 1 2898 32 is_stmt 0 view .LVU417
 1239 0088 1A6B     		ldr	r2, [r3, #48]
 1240              	.LVL110:
 1241              	.LBB201:
 1242              	.LBI201:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1243              		.loc 2 450 57 is_stmt 1 view .LVU418
 1244              	.LBB202:
 1245              		.loc 2 453 3 view .LVU419
 1246              		.loc 2 453 10 is_stmt 0 view .LVU420
 1247 008a 12BA     		rev	r2, r2
 1248              	.LVL111:
 1249              		.loc 2 453 10 view .LVU421
 1250              	.LBE202:
 1251              	.LBE201:
2898:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1252              		.loc 1 2898 30 view .LVU422
 1253 008c F260     		str	r2, [r6, #12]
2899:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 1254              		.loc 1 2899 5 is_stmt 1 view .LVU423
2899:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 1255              		.loc 1 2899 15 is_stmt 0 view .LVU424
 1256 008e 1036     		adds	r6, r6, #16
 1257              	.LVL112:
 1258              	.L85:
2902:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1259              		.loc 1 2902 5 is_stmt 1 view .LVU425
2902:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1260              		.loc 1 2902 32 is_stmt 0 view .LVU426
 1261 0090 DA69     		ldr	r2, [r3, #28]
 1262              	.LVL113:
 1263              	.LBB203:
 1264              	.LBI203:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1265              		.loc 2 450 57 is_stmt 1 view .LVU427
 1266              	.LBB204:
 1267              		.loc 2 453 3 view .LVU428
 1268              		.loc 2 453 10 is_stmt 0 view .LVU429
 1269 0092 12BA     		rev	r2, r2
 1270              	.LVL114:
 1271              		.loc 2 453 10 view .LVU430
 1272              	.LBE204:
 1273              	.LBE203:
2902:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1274              		.loc 1 2902 30 view .LVU431
 1275 0094 3260     		str	r2, [r6]
2903:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR2);
 1276              		.loc 1 2903 5 is_stmt 1 view .LVU432
 1277              	.LVL115:
2904:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1278              		.loc 1 2904 5 view .LVU433
2904:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1279              		.loc 1 2904 32 is_stmt 0 view .LVU434
 1280 0096 9A69     		ldr	r2, [r3, #24]
 1281              	.LVL116:
 1282              	.LBB205:
 1283              	.LBI205:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1284              		.loc 2 450 57 is_stmt 1 view .LVU435
 1285              	.LBB206:
 1286              		.loc 2 453 3 view .LVU436
 1287              		.loc 2 453 10 is_stmt 0 view .LVU437
 1288 0098 12BA     		rev	r2, r2
 1289              	.LVL117:
 1290              		.loc 2 453 10 view .LVU438
 1291              	.LBE206:
 1292              	.LBE205:
2904:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1293              		.loc 1 2904 30 view .LVU439
 1294 009a 7260     		str	r2, [r6, #4]
2905:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR1);
 1295              		.loc 1 2905 5 is_stmt 1 view .LVU440
 1296              	.LVL118:
2906:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1297              		.loc 1 2906 5 view .LVU441
2906:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1298              		.loc 1 2906 32 is_stmt 0 view .LVU442
 1299 009c 5A69     		ldr	r2, [r3, #20]
 1300              	.LVL119:
 1301              	.LBB207:
 1302              	.LBI207:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1303              		.loc 2 450 57 is_stmt 1 view .LVU443
 1304              	.LBB208:
 1305              		.loc 2 453 3 view .LVU444
 1306              		.loc 2 453 10 is_stmt 0 view .LVU445
 1307 009e 12BA     		rev	r2, r2
 1308              	.LVL120:
 1309              		.loc 2 453 10 view .LVU446
 1310              	.LBE208:
 1311              	.LBE207:
2906:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1312              		.loc 1 2906 30 view .LVU447
 1313 00a0 B260     		str	r2, [r6, #8]
2907:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->KEYR0);
 1314              		.loc 1 2907 5 is_stmt 1 view .LVU448
 1315              	.LVL121:
2908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1316              		.loc 1 2908 5 view .LVU449
2908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1317              		.loc 1 2908 32 is_stmt 0 view .LVU450
 1318 00a2 1B69     		ldr	r3, [r3, #16]
 1319              	.LVL122:
 1320              	.LBB209:
 1321              	.LBI209:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1322              		.loc 2 450 57 is_stmt 1 view .LVU451
 1323              	.LBB210:
 1324              		.loc 2 453 3 view .LVU452
 1325              		.loc 2 453 10 is_stmt 0 view .LVU453
 1326 00a4 1BBA     		rev	r3, r3
 1327              	.LVL123:
 1328              		.loc 2 453 10 view .LVU454
 1329              	.LBE210:
 1330              	.LBE209:
2908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1331              		.loc 1 2908 30 view .LVU455
 1332 00a6 F360     		str	r3, [r6, #12]
2912:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 1333              		.loc 1 2912 3 is_stmt 1 view .LVU456
 1334              	.LVL124:
 1335              	.L86:
2912:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 1336              		.loc 1 2912 3 is_stmt 0 view .LVU457
 1337              	.LBE211:
 1338              	.LBE215:
 228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1339              		.loc 1 228 5 is_stmt 1 view .LVU458
 228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1340              		.loc 1 228 14 is_stmt 0 view .LVU459
 1341 00a8 94F85530 		ldrb	r3, [r4, #85]	@ zero_extendqisi2
 228:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1342              		.loc 1 228 8 view .LVU460
 1343 00ac 052B     		cmp	r3, #5
 230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1344              		.loc 1 230 7 is_stmt 1 view .LVU461
 230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1345              		.loc 1 230 20 is_stmt 0 view .LVU462
 1346 00ae 18BF     		it	ne
 1347 00b0 0123     		movne	r3, #1
 234:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1348              		.loc 1 234 5 view .LVU463
 1349 00b2 4FF00000 		mov	r0, #0
 230:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1350              		.loc 1 230 20 view .LVU464
 1351 00b6 18BF     		it	ne
 1352 00b8 84F85530 		strbne	r3, [r4, #85]
 234:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1353              		.loc 1 234 5 is_stmt 1 view .LVU465
 234:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1354              		.loc 1 234 5 view .LVU466
 1355 00bc 84F85400 		strb	r0, [r4, #84]
 234:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1356              		.loc 1 234 5 view .LVU467
 236:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 1357              		.loc 1 236 5 view .LVU468
 236:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 1358              		.loc 1 236 12 is_stmt 0 view .LVU469
 1359 00c0 AEE7     		b	.L80
 1360              	.LVL125:
 1361              	.L83:
 220:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1362              		.loc 1 220 7 is_stmt 1 view .LVU470
 1363              	.LBB216:
 1364              	.LBI212:
2796:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 1365              		.loc 1 2796 26 view .LVU471
 1366              	.LBB214:
2798:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1367              		.loc 1 2798 3 view .LVU472
2799:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
 1368              		.loc 1 2799 3 view .LVU473
2800:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1369              		.loc 1 2800 3 view .LVU474
2803:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1370              		.loc 1 2803 3 view .LVU475
2803:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1371              		.loc 1 2803 3 is_stmt 0 view .LVU476
 1372 00c2 01F11006 		add	r6, r1, #16
 1373 00c6 03F11005 		add	r5, r3, #16
2803:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1374              		.loc 1 2803 12 view .LVU477
 1375 00ca 4FF00008 		mov	r8, #0
 1376              	.LVL126:
 1377              	.L87:
2803:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1378              		.loc 1 2803 18 is_stmt 1 view .LVU478
2803:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1379              		.loc 1 2803 3 is_stmt 0 view .LVU479
 1380 00ce B845     		cmp	r8, r7
 1381 00d0 EAD2     		bcs	.L86
2806:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1382              		.loc 1 2806 5 is_stmt 1 view .LVU480
2806:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1383              		.loc 1 2806 10 is_stmt 0 view .LVU481
 1384 00d2 2368     		ldr	r3, [r4]
2806:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1385              		.loc 1 2806 29 view .LVU482
 1386 00d4 56F8102C 		ldr	r2, [r6, #-16]
2806:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1387              		.loc 1 2806 27 view .LVU483
 1388 00d8 9A60     		str	r2, [r3, #8]
2807:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 1389              		.loc 1 2807 5 is_stmt 1 view .LVU484
 1390              	.LVL127:
2808:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1391              		.loc 1 2808 5 view .LVU485
2808:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1392              		.loc 1 2808 29 is_stmt 0 view .LVU486
 1393 00da 56F80C2C 		ldr	r2, [r6, #-12]
2808:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1394              		.loc 1 2808 27 view .LVU487
 1395 00de 9A60     		str	r2, [r3, #8]
2809:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 1396              		.loc 1 2809 5 is_stmt 1 view .LVU488
 1397              	.LVL128:
2810:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1398              		.loc 1 2810 5 view .LVU489
2810:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1399              		.loc 1 2810 30 is_stmt 0 view .LVU490
 1400 00e0 56F8082C 		ldr	r2, [r6, #-8]
2810:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1401              		.loc 1 2810 28 view .LVU491
 1402 00e4 9A60     		str	r2, [r3, #8]
2811:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 1403              		.loc 1 2811 5 is_stmt 1 view .LVU492
 1404              	.LVL129:
2812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1405              		.loc 1 2812 5 view .LVU493
2812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1406              		.loc 1 2812 29 is_stmt 0 view .LVU494
 1407 00e6 56F8042C 		ldr	r2, [r6, #-4]
2812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     inputaddr+=4U;
 1408              		.loc 1 2812 27 view .LVU495
 1409 00ea 9A60     		str	r2, [r3, #8]
2813:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1410              		.loc 1 2813 5 is_stmt 1 view .LVU496
 1411              	.LVL130:
2816:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1412              		.loc 1 2816 5 view .LVU497
2816:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1413              		.loc 1 2816 8 is_stmt 0 view .LVU498
 1414 00ec 4946     		mov	r1, r9
 1415 00ee 2046     		mov	r0, r4
 1416 00f0 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 1417              	.LVL131:
2816:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1418              		.loc 1 2816 7 view .LVU499
 1419 00f4 18B1     		cbz	r0, .L88
2818:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_UNLOCK(hcryp);
 1420              		.loc 1 2818 7 is_stmt 1 view .LVU500
2818:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_UNLOCK(hcryp);
 1421              		.loc 1 2818 20 is_stmt 0 view .LVU501
 1422 00f6 0123     		movs	r3, #1
 1423 00f8 84F85530 		strb	r3, [r4, #85]
 1424 00fc ADE7     		b	.L109
 1425              	.L88:
2824:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1426              		.loc 1 2824 5 is_stmt 1 view .LVU502
 1427 00fe 2368     		ldr	r3, [r4]
 1428 0100 1A68     		ldr	r2, [r3]
 1429 0102 42F08002 		orr	r2, r2, #128
 1430 0106 1A60     		str	r2, [r3]
2827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1431              		.loc 1 2827 5 view .LVU503
2827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1432              		.loc 1 2827 47 is_stmt 0 view .LVU504
 1433 0108 DA68     		ldr	r2, [r3, #12]
2827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1434              		.loc 1 2827 30 view .LVU505
 1435 010a 45F8102C 		str	r2, [r5, #-16]
2828:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 1436              		.loc 1 2828 5 is_stmt 1 view .LVU506
 1437              	.LVL132:
2829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1438              		.loc 1 2829 5 view .LVU507
2829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1439              		.loc 1 2829 47 is_stmt 0 view .LVU508
 1440 010e DA68     		ldr	r2, [r3, #12]
2829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1441              		.loc 1 2829 30 view .LVU509
 1442 0110 45F80C2C 		str	r2, [r5, #-12]
2830:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 1443              		.loc 1 2830 5 is_stmt 1 view .LVU510
 1444              	.LVL133:
2831:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1445              		.loc 1 2831 5 view .LVU511
2831:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1446              		.loc 1 2831 47 is_stmt 0 view .LVU512
 1447 0114 DA68     		ldr	r2, [r3, #12]
2831:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1448              		.loc 1 2831 30 view .LVU513
 1449 0116 45F8082C 		str	r2, [r5, #-8]
2832:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 1450              		.loc 1 2832 5 is_stmt 1 view .LVU514
 1451              	.LVL134:
2833:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1452              		.loc 1 2833 5 view .LVU515
2833:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1453              		.loc 1 2833 47 is_stmt 0 view .LVU516
 1454 011a DB68     		ldr	r3, [r3, #12]
2833:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr+=4U;
 1455              		.loc 1 2833 30 view .LVU517
 1456 011c 45F8043C 		str	r3, [r5, #-4]
2834:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1457              		.loc 1 2834 5 is_stmt 1 view .LVU518
 1458              	.LVL135:
2838:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1459              		.loc 1 2838 5 view .LVU519
2838:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1460              		.loc 1 2838 8 is_stmt 0 view .LVU520
 1461 0120 94F85C20 		ldrb	r2, [r4, #92]	@ zero_extendqisi2
 1462 0124 012A     		cmp	r2, #1
 1463 0126 08F11003 		add	r3, r8, #16
 1464 012a 0DD1     		bne	.L89
2838:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1465              		.loc 1 2838 53 view .LVU521
 1466 012c 9F42     		cmp	r7, r3
 1467 012e 0BD9     		bls	.L89
2841:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1468              		.loc 1 2841 7 is_stmt 1 view .LVU522
2847:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1469              		.loc 1 2847 41 is_stmt 0 view .LVU523
 1470 0130 103F     		subs	r7, r7, #16
 1471              	.LVL136:
2847:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1472              		.loc 1 2847 41 view .LVU524
 1473 0132 A7EB0807 		sub	r7, r7, r8
2850:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1474              		.loc 1 2850 20 view .LVU525
 1475 0136 0523     		movs	r3, #5
2845:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Save the number of bytes that remain to be processed at this point */
 1476              		.loc 1 2845 30 view .LVU526
 1477 0138 C4E90E65 		strd	r6, r5, [r4, #56]
2841:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1478              		.loc 1 2841 29 view .LVU527
 1479 013c 84F85C00 		strb	r0, [r4, #92]
2844:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
 1480              		.loc 1 2844 7 is_stmt 1 view .LVU528
2847:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1481              		.loc 1 2847 7 view .LVU529
2847:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1482              		.loc 1 2847 30 is_stmt 0 view .LVU530
 1483 0140 2764     		str	r7, [r4, #64]
2850:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1484              		.loc 1 2850 7 is_stmt 1 view .LVU531
2850:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1485              		.loc 1 2850 20 is_stmt 0 view .LVU532
 1486 0142 84F85530 		strb	r3, [r4, #85]
2852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1487              		.loc 1 2852 7 is_stmt 1 view .LVU533
 1488              	.LVL137:
2852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1489              		.loc 1 2852 7 is_stmt 0 view .LVU534
 1490 0146 AFE7     		b	.L86
 1491              	.LVL138:
 1492              	.L89:
2852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1493              		.loc 1 2852 7 view .LVU535
 1494 0148 1036     		adds	r6, r6, #16
 1495              	.LVL139:
2852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1496              		.loc 1 2852 7 view .LVU536
 1497 014a 1035     		adds	r5, r5, #16
 1498              	.LVL140:
2852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1499              		.loc 1 2852 7 view .LVU537
 1500              	.LBE214:
 1501              	.LBE216:
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1502              		.loc 1 183 1 view .LVU538
 1503 014c 9846     		mov	r8, r3
 1504              	.LVL141:
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1505              		.loc 1 183 1 view .LVU539
 1506 014e BEE7     		b	.L87
 1507              	.LVL142:
 1508              	.L92:
 240:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 1509              		.loc 1 240 12 view .LVU540
 1510 0150 0220     		movs	r0, #2
 1511 0152 65E7     		b	.L80
 1512              		.cfi_endproc
 1513              	.LFE310:
 1515              		.section	.text.HAL_CRYPEx_AES_IT,"ax",%progbits
 1516              		.align	1
 1517              		.global	HAL_CRYPEx_AES_IT
 1518              		.syntax unified
 1519              		.thumb
 1520              		.thumb_func
 1521              		.fpu softvfp
 1523              	HAL_CRYPEx_AES_IT:
 1524              	.LVL143:
 1525              	.LFB311:
 263:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 1526              		.loc 1 263 1 is_stmt 1 view -0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 0
 1529              		@ frame_needed = 0, uses_anonymous_args = 0
 264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1530              		.loc 1 264 3 view .LVU542
 266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1531              		.loc 1 266 3 view .LVU543
 263:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 1532              		.loc 1 263 1 is_stmt 0 view .LVU544
 1533 0000 30B5     		push	{r4, r5, lr}
 1534              	.LCFI13:
 1535              		.cfi_def_cfa_offset 12
 1536              		.cfi_offset 4, -12
 1537              		.cfi_offset 5, -8
 1538              		.cfi_offset 14, -4
 266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1539              		.loc 1 266 11 view .LVU545
 1540 0002 90F85550 		ldrb	r5, [r0, #85]	@ zero_extendqisi2
 266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1541              		.loc 1 266 5 view .LVU546
 1542 0006 012D     		cmp	r5, #1
 263:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 1543              		.loc 1 263 1 view .LVU547
 1544 0008 0446     		mov	r4, r0
 266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1545              		.loc 1 266 11 view .LVU548
 1546 000a E8B2     		uxtb	r0, r5
 1547              	.LVL144:
 266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1548              		.loc 1 266 5 view .LVU549
 1549 000c 39D1     		bne	.L117
 269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1550              		.loc 1 269 5 is_stmt 1 view .LVU550
 269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1551              		.loc 1 269 20 is_stmt 0 view .LVU551
 1552 000e 2569     		ldr	r5, [r4, #16]
 269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1553              		.loc 1 269 8 view .LVU552
 1554 0010 082D     		cmp	r5, #8
 1555 0012 01D1     		bne	.L112
 271:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1556              		.loc 1 271 7 is_stmt 1 view .LVU553
 271:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1557              		.loc 1 271 10 is_stmt 0 view .LVU554
 1558 0014 33B9     		cbnz	r3, .L113
 1559              	.LVL145:
 1560              	.L111:
 342:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1561              		.loc 1 342 1 view .LVU555
 1562 0016 30BD     		pop	{r4, r5, pc}
 1563              	.LVL146:
 1564              	.L112:
 278:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1565              		.loc 1 278 7 is_stmt 1 view .LVU556
 278:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1566              		.loc 1 278 10 is_stmt 0 view .LVU557
 1567 0018 0029     		cmp	r1, #0
 1568 001a FCD0     		beq	.L111
 278:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1569              		.loc 1 278 32 discriminator 1 view .LVU558
 1570 001c 002B     		cmp	r3, #0
 1571 001e FAD0     		beq	.L111
 278:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1572              		.loc 1 278 57 discriminator 2 view .LVU559
 1573 0020 002A     		cmp	r2, #0
 1574 0022 F8D0     		beq	.L111
 1575              	.L113:
 284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1576              		.loc 1 284 5 is_stmt 1 view .LVU560
 284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1577              		.loc 1 284 5 view .LVU561
 1578 0024 94F85400 		ldrb	r0, [r4, #84]	@ zero_extendqisi2
 1579 0028 0128     		cmp	r0, #1
 1580 002a 2AD0     		beq	.L117
 284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1581              		.loc 1 284 5 discriminator 2 view .LVU562
 288:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1582              		.loc 1 288 8 is_stmt 0 discriminator 2 view .LVU563
 1583 002c 082D     		cmp	r5, #8
 293:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypOutCount = Size;
 1584              		.loc 1 293 30 discriminator 2 view .LVU564
 1585 002e 14BF     		ite	ne
 1586 0030 C4E90E13 		strdne	r1, r3, [r4, #56]
 300:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1587              		.loc 1 300 30 discriminator 2 view .LVU565
 1588 0034 E363     		streq	r3, [r4, #60]
 284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1589              		.loc 1 284 5 discriminator 2 view .LVU566
 1590 0036 4FF00100 		mov	r0, #1
 304:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1591              		.loc 1 304 18 discriminator 2 view .LVU567
 1592 003a 4FF00203 		mov	r3, #2
 1593              	.LVL147:
 284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1594              		.loc 1 284 5 discriminator 2 view .LVU568
 1595 003e 84F85400 		strb	r0, [r4, #84]
 284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1596              		.loc 1 284 5 is_stmt 1 discriminator 2 view .LVU569
 288:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1597              		.loc 1 288 5 discriminator 2 view .LVU570
 291:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr = pInputData;
 1598              		.loc 1 291 7 discriminator 2 view .LVU571
 304:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1599              		.loc 1 304 18 is_stmt 0 discriminator 2 view .LVU572
 1600 0042 84F85530 		strb	r3, [r4, #85]
 307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1601              		.loc 1 307 5 discriminator 2 view .LVU573
 1602 0046 4FF00000 		mov	r0, #0
 310:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1603              		.loc 1 310 5 discriminator 2 view .LVU574
 1604 004a 2368     		ldr	r3, [r4]
 307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1605              		.loc 1 307 5 discriminator 2 view .LVU575
 1606 004c 84F85400 		strb	r0, [r4, #84]
 291:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr = pInputData;
 1607              		.loc 1 291 26 discriminator 2 view .LVU576
 1608 0050 1CBF     		itt	ne
 1609 0052 2264     		strne	r2, [r4, #64]
 292:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypOutBuffPtr = pOutputData;
 1610              		.loc 1 292 7 is_stmt 1 discriminator 2 view .LVU577
 294:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1611              		.loc 1 294 7 discriminator 2 view .LVU578
 294:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1612              		.loc 1 294 27 is_stmt 0 discriminator 2 view .LVU579
 1613 0054 6264     		strne	r2, [r4, #68]
 300:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1614              		.loc 1 300 7 is_stmt 1 discriminator 2 view .LVU580
 304:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1615              		.loc 1 304 5 discriminator 2 view .LVU581
 307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1616              		.loc 1 307 5 discriminator 2 view .LVU582
 307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1617              		.loc 1 307 5 discriminator 2 view .LVU583
 307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1618              		.loc 1 307 5 discriminator 2 view .LVU584
 310:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1619              		.loc 1 310 5 discriminator 2 view .LVU585
 1620 0056 1A68     		ldr	r2, [r3]
 1621              	.LVL148:
 317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1622              		.loc 1 317 8 is_stmt 0 discriminator 2 view .LVU586
 1623 0058 082D     		cmp	r5, #8
 310:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1624              		.loc 1 310 5 discriminator 2 view .LVU587
 1625 005a 42F4C062 		orr	r2, r2, #1536
 1626 005e 1A60     		str	r2, [r3]
 317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1627              		.loc 1 317 5 is_stmt 1 discriminator 2 view .LVU588
 317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1628              		.loc 1 317 8 is_stmt 0 discriminator 2 view .LVU589
 1629 0060 D9D0     		beq	.L111
 321:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Increment/decrement instance pointer/counter */
 1630              		.loc 1 321 7 is_stmt 1 view .LVU590
 321:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Increment/decrement instance pointer/counter */
 1631              		.loc 1 321 34 is_stmt 0 view .LVU591
 1632 0062 A26B     		ldr	r2, [r4, #56]
 1633              	.LVL149:
 323:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount -= 16U;
 1634              		.loc 1 323 7 is_stmt 1 view .LVU592
 323:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount -= 16U;
 1635              		.loc 1 323 29 is_stmt 0 view .LVU593
 1636 0064 02F11001 		add	r1, r2, #16
 1637              	.LVL150:
 323:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypInCount -= 16U;
 1638              		.loc 1 323 29 view .LVU594
 1639 0068 A163     		str	r1, [r4, #56]
 324:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Write the first input block in the Data Input register */
 1640              		.loc 1 324 7 is_stmt 1 view .LVU595
 324:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Write the first input block in the Data Input register */
 1641              		.loc 1 324 26 is_stmt 0 view .LVU596
 1642 006a 216C     		ldr	r1, [r4, #64]
 1643 006c 1039     		subs	r1, r1, #16
 1644 006e 2164     		str	r1, [r4, #64]
 326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1645              		.loc 1 326 7 is_stmt 1 view .LVU597
 326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1646              		.loc 1 326 31 is_stmt 0 view .LVU598
 1647 0070 1168     		ldr	r1, [r2]
 326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1648              		.loc 1 326 29 view .LVU599
 1649 0072 9960     		str	r1, [r3, #8]
 327:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 1650              		.loc 1 327 7 is_stmt 1 view .LVU600
 1651              	.LVL151:
 328:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1652              		.loc 1 328 7 view .LVU601
 328:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1653              		.loc 1 328 31 is_stmt 0 view .LVU602
 1654 0074 5168     		ldr	r1, [r2, #4]
 328:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1655              		.loc 1 328 29 view .LVU603
 1656 0076 9960     		str	r1, [r3, #8]
 329:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 1657              		.loc 1 329 7 is_stmt 1 view .LVU604
 1658              	.LVL152:
 330:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1659              		.loc 1 330 7 view .LVU605
 330:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1660              		.loc 1 330 32 is_stmt 0 view .LVU606
 1661 0078 9168     		ldr	r1, [r2, #8]
 330:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       inputaddr+=4U;
 1662              		.loc 1 330 30 view .LVU607
 1663 007a 9960     		str	r1, [r3, #8]
 331:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 1664              		.loc 1 331 7 is_stmt 1 view .LVU608
 1665              	.LVL153:
 332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1666              		.loc 1 332 7 view .LVU609
 332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1667              		.loc 1 332 31 is_stmt 0 view .LVU610
 1668 007c D268     		ldr	r2, [r2, #12]
 1669              	.LVL154:
 332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 1670              		.loc 1 332 29 view .LVU611
 1671 007e 9A60     		str	r2, [r3, #8]
 1672 0080 C9E7     		b	.L111
 1673              	.LVL155:
 1674              	.L117:
 340:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 1675              		.loc 1 340 12 view .LVU612
 1676 0082 0220     		movs	r0, #2
 1677 0084 C7E7     		b	.L111
 1678              		.cfi_endproc
 1679              	.LFE311:
 1681              		.section	.text.HAL_CRYPEx_AES_DMA,"ax",%progbits
 1682              		.align	1
 1683              		.global	HAL_CRYPEx_AES_DMA
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu softvfp
 1689              	HAL_CRYPEx_AES_DMA:
 1690              	.LVL156:
 1691              	.LFB312:
 368:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 1692              		.loc 1 368 1 is_stmt 1 view -0
 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 0
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr;
 1696              		.loc 1 369 3 view .LVU614
 370:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1697              		.loc 1 370 3 view .LVU615
 372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1698              		.loc 1 372 3 view .LVU616
 368:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 1699              		.loc 1 368 1 is_stmt 0 view .LVU617
 1700 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1701              	.LCFI14:
 1702              		.cfi_def_cfa_offset 24
 1703              		.cfi_offset 3, -24
 1704              		.cfi_offset 4, -20
 1705              		.cfi_offset 5, -16
 1706              		.cfi_offset 6, -12
 1707              		.cfi_offset 7, -8
 1708              		.cfi_offset 14, -4
 368:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 1709              		.loc 1 368 1 view .LVU618
 1710 0002 1E46     		mov	r6, r3
 372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1711              		.loc 1 372 12 view .LVU619
 1712 0004 90F85530 		ldrb	r3, [r0, #85]	@ zero_extendqisi2
 1713              	.LVL157:
 372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1714              		.loc 1 372 6 view .LVU620
 1715 0008 012B     		cmp	r3, #1
 368:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr;
 1716              		.loc 1 368 1 view .LVU621
 1717 000a 0446     		mov	r4, r0
 372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1718              		.loc 1 372 12 view .LVU622
 1719 000c D8B2     		uxtb	r0, r3
 1720              	.LVL158:
 372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1721              		.loc 1 372 6 view .LVU623
 1722 000e 3DD1     		bne	.L135
 375:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1723              		.loc 1 375 5 is_stmt 1 view .LVU624
 375:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1724              		.loc 1 375 8 is_stmt 0 view .LVU625
 1725 0010 2369     		ldr	r3, [r4, #16]
 1726 0012 082B     		cmp	r3, #8
 1727 0014 39D0     		beq	.L132
 383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1728              		.loc 1 383 7 is_stmt 1 view .LVU626
 383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1729              		.loc 1 383 10 is_stmt 0 view .LVU627
 1730 0016 0029     		cmp	r1, #0
 1731 0018 37D0     		beq	.L132
 383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1732              		.loc 1 383 32 discriminator 1 view .LVU628
 1733 001a 002E     		cmp	r6, #0
 1734 001c 35D0     		beq	.L132
 383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1735              		.loc 1 383 57 discriminator 2 view .LVU629
 1736 001e 002A     		cmp	r2, #0
 1737 0020 33D0     		beq	.L132
 391:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1738              		.loc 1 391 5 is_stmt 1 view .LVU630
 391:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1739              		.loc 1 391 5 view .LVU631
 1740 0022 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 1741 0026 012B     		cmp	r3, #1
 1742 0028 4FF00203 		mov	r3, #2
 1743 002c 30D0     		beq	.L136
 391:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1744              		.loc 1 391 5 discriminator 2 view .LVU632
 1745 002e 84F85400 		strb	r0, [r4, #84]
 391:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1746              		.loc 1 391 5 discriminator 2 view .LVU633
 393:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     outputaddr = (uint32_t)pOutputData;
 1747              		.loc 1 393 5 discriminator 2 view .LVU634
 394:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1748              		.loc 1 394 5 discriminator 2 view .LVU635
 1749              	.LVL159:
 397:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1750              		.loc 1 397 5 discriminator 2 view .LVU636
 1751              	.LBB219:
 1752              	.LBB220:
2927:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 1753              		.loc 1 2927 8 is_stmt 0 discriminator 2 view .LVU637
 1754 0032 E06C     		ldr	r0, [r4, #76]
 1755              	.LBE220:
 1756              	.LBE219:
 397:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1757              		.loc 1 397 18 discriminator 2 view .LVU638
 1758 0034 84F85530 		strb	r3, [r4, #85]
 400:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1759              		.loc 1 400 5 is_stmt 1 discriminator 2 view .LVU639
 1760              	.LVL160:
 1761              	.LBB223:
 1762              	.LBI219:
2924:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** {
 1763              		.loc 1 2924 13 discriminator 2 view .LVU640
 1764              	.LBB221:
2927:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 1765              		.loc 1 2927 3 discriminator 2 view .LVU641
2927:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 1766              		.loc 1 2927 35 is_stmt 0 discriminator 2 view .LVU642
 1767 0038 164B     		ldr	r3, .L155
 1768 003a C362     		str	r3, [r0, #44]
2929:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1769              		.loc 1 2929 3 is_stmt 1 discriminator 2 view .LVU643
2932:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 1770              		.loc 1 2932 8 is_stmt 0 discriminator 2 view .LVU644
 1771 003c 236D     		ldr	r3, [r4, #80]
2929:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1772              		.loc 1 2929 36 discriminator 2 view .LVU645
 1773 003e 164D     		ldr	r5, .L155+4
 1774 0040 4563     		str	r5, [r0, #52]
2932:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 1775              		.loc 1 2932 3 is_stmt 1 discriminator 2 view .LVU646
2934:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1776              		.loc 1 2934 37 is_stmt 0 discriminator 2 view .LVU647
 1777 0042 5D63     		str	r5, [r3, #52]
2937:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1778              		.loc 1 2937 7 discriminator 2 view .LVU648
 1779 0044 9508     		lsrs	r5, r2, #2
2937:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1780              		.loc 1 2937 60 discriminator 2 view .LVU649
 1781 0046 2268     		ldr	r2, [r4]
 1782              	.LVL161:
2932:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set the DMA error callback */
 1783              		.loc 1 2932 36 discriminator 2 view .LVU650
 1784 0048 144F     		ldr	r7, .L155+8
 1785 004a DF62     		str	r7, [r3, #44]
2934:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1786              		.loc 1 2934 3 is_stmt 1 discriminator 2 view .LVU651
2937:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1787              		.loc 1 2937 3 discriminator 2 view .LVU652
2937:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1788              		.loc 1 2937 7 is_stmt 0 discriminator 2 view .LVU653
 1789 004c 0832     		adds	r2, r2, #8
 1790 004e 2B46     		mov	r3, r5
 1791 0050 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1792              	.LVL162:
2937:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1793              		.loc 1 2937 6 discriminator 2 view .LVU654
 1794 0054 10B1     		cbz	r0, .L133
2942:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 1795              		.loc 1 2942 5 is_stmt 1 view .LVU655
 1796 0056 2046     		mov	r0, r4
 1797 0058 FFF7FEFF 		bl	HAL_CRYP_ErrorCallback
 1798              	.LVL163:
 1799              	.L133:
2947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1800              		.loc 1 2947 3 view .LVU656
2947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1801              		.loc 1 2947 50 is_stmt 0 view .LVU657
 1802 005c 2168     		ldr	r1, [r4]
2947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1803              		.loc 1 2947 7 view .LVU658
 1804 005e 206D     		ldr	r0, [r4, #80]
 1805 0060 2B46     		mov	r3, r5
 1806 0062 3246     		mov	r2, r6
 1807 0064 0C31     		adds	r1, r1, #12
 1808 0066 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1809              	.LVL164:
2947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1810              		.loc 1 2947 6 view .LVU659
 1811 006a 10B1     		cbz	r0, .L134
2952:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 1812              		.loc 1 2952 5 is_stmt 1 view .LVU660
 1813 006c 2046     		mov	r0, r4
 1814 006e FFF7FEFF 		bl	HAL_CRYP_ErrorCallback
 1815              	.LVL165:
 1816              	.L134:
2957:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1817              		.loc 1 2957 3 view .LVU661
 1818 0072 2368     		ldr	r3, [r4]
 1819 0074 1A68     		ldr	r2, [r3]
 1820 0076 42F4C052 		orr	r2, r2, #6144
 1821 007a 1A60     		str	r2, [r3]
2960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 1822              		.loc 1 2960 3 view .LVU662
 1823 007c 1A68     		ldr	r2, [r3]
 1824              	.LBE221:
 1825              	.LBE223:
 403:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1826              		.loc 1 403 5 is_stmt 0 view .LVU663
 1827 007e 0020     		movs	r0, #0
 1828              	.LBB224:
 1829              	.LBB222:
2960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 1830              		.loc 1 2960 3 view .LVU664
 1831 0080 42F00102 		orr	r2, r2, #1
 1832 0084 1A60     		str	r2, [r3]
 1833              	.LVL166:
2960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 1834              		.loc 1 2960 3 view .LVU665
 1835              	.LBE222:
 1836              	.LBE224:
 403:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1837              		.loc 1 403 5 is_stmt 1 view .LVU666
 403:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1838              		.loc 1 403 5 view .LVU667
 1839 0086 84F85400 		strb	r0, [r4, #84]
 403:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1840              		.loc 1 403 5 view .LVU668
 406:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 1841              		.loc 1 406 5 view .LVU669
 1842              	.LVL167:
 1843              	.L132:
 412:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1844              		.loc 1 412 1 is_stmt 0 view .LVU670
 1845 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1846              	.LVL168:
 1847              	.L135:
 410:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 1848              		.loc 1 410 12 view .LVU671
 1849 008c 0220     		movs	r0, #2
 1850 008e FCE7     		b	.L132
 1851              	.L136:
 1852 0090 1846     		mov	r0, r3
 1853 0092 FAE7     		b	.L132
 1854              	.L156:
 1855              		.align	2
 1856              	.L155:
 1857 0094 00000000 		.word	CRYP_DMAInCplt
 1858 0098 00000000 		.word	CRYP_DMAError
 1859 009c 00000000 		.word	CRYP_DMAOutCplt
 1860              		.cfi_endproc
 1861              	.LFE312:
 1863              		.section	.text.HAL_CRYPEx_AES_Auth,"ax",%progbits
 1864              		.align	1
 1865              		.global	HAL_CRYPEx_AES_Auth
 1866              		.syntax unified
 1867              		.thumb
 1868              		.thumb_func
 1869              		.fpu softvfp
 1871              	HAL_CRYPEx_AES_Auth:
 1872              	.LVL169:
 1873              	.LFB313:
 449:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 1874              		.loc 1 449 1 is_stmt 1 view -0
 1875              		.cfi_startproc
 1876              		@ args = 8, pretend = 0, frame = 40
 1877              		@ frame_needed = 0, uses_anonymous_args = 0
 449:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 1878              		.loc 1 449 1 is_stmt 0 view .LVU673
 1879 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1880              	.LCFI15:
 1881              		.cfi_def_cfa_offset 36
 1882              		.cfi_offset 4, -36
 1883              		.cfi_offset 5, -32
 1884              		.cfi_offset 6, -28
 1885              		.cfi_offset 7, -24
 1886              		.cfi_offset 8, -20
 1887              		.cfi_offset 9, -16
 1888              		.cfi_offset 10, -12
 1889              		.cfi_offset 11, -8
 1890              		.cfi_offset 14, -4
 1891 0004 9B46     		mov	fp, r3
 460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1892              		.loc 1 460 12 view .LVU674
 1893 0006 90F85530 		ldrb	r3, [r0, #85]	@ zero_extendqisi2
 449:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 1894              		.loc 1 449 1 view .LVU675
 1895 000a 8BB0     		sub	sp, sp, #44
 1896              	.LCFI16:
 1897              		.cfi_def_cfa_offset 80
 460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1898              		.loc 1 460 6 view .LVU676
 1899 000c 012B     		cmp	r3, #1
 449:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 1900              		.loc 1 449 1 view .LVU677
 1901 000e DDE9149E 		ldrd	r9, lr, [sp, #80]
 1902 0012 0446     		mov	r4, r0
 450:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr         ;
 1903              		.loc 1 450 3 is_stmt 1 view .LVU678
 451:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr        ;
 1904              		.loc 1 451 3 view .LVU679
 452:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t tagaddr           ;
 1905              		.loc 1 452 3 view .LVU680
 453:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t headerlength      ;
 1906              		.loc 1 453 3 view .LVU681
 454:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t inputlength       ;
 1907              		.loc 1 454 3 view .LVU682
 455:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t payloadlength     ;
 1908              		.loc 1 455 3 view .LVU683
 456:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength     = 0;
 1909              		.loc 1 456 3 view .LVU684
 457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 1910              		.loc 1 457 3 view .LVU685
 1911              	.LVL170:
 458:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1912              		.loc 1 458 3 view .LVU686
 460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1913              		.loc 1 460 3 view .LVU687
 449:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 1914              		.loc 1 449 1 is_stmt 0 view .LVU688
 1915 0014 0E46     		mov	r6, r1
 1916 0016 9246     		mov	r10, r2
 460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1917              		.loc 1 460 12 view .LVU689
 1918 0018 DDB2     		uxtb	r5, r3
 460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 1919              		.loc 1 460 6 view .LVU690
 1920 001a 40F05A82 		bne	.L201
 463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1921              		.loc 1 463 5 is_stmt 1 view .LVU691
 463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1922              		.loc 1 463 20 is_stmt 0 view .LVU692
 1923 001e C769     		ldr	r7, [r0, #28]
 463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1924              		.loc 1 463 8 view .LVU693
 1925 0020 B7B1     		cbz	r7, .L159
 467:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1926              		.loc 1 467 10 is_stmt 1 view .LVU694
 467:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1927              		.loc 1 467 13 is_stmt 0 view .LVU695
 1928 0022 B7F5005F 		cmp	r7, #8192
 1929 0026 30D1     		bne	.L160
 469:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 1930              		.loc 1 469 7 is_stmt 1 view .LVU696
 1931 0028 D0E90C23 		ldrd	r2, [r0, #48]
 1932              	.LVL171:
 469:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 1933              		.loc 1 469 10 is_stmt 0 view .LVU697
 1934 002c 806A     		ldr	r0, [r0, #40]
 1935              	.LVL172:
 469:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 1936              		.loc 1 469 10 view .LVU698
 1937 002e 28B1     		cbz	r0, .L161
 469:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 1938              		.loc 1 469 41 discriminator 1 view .LVU699
 1939 0030 1343     		orrs	r3, r2, r3
 1940 0032 05D1     		bne	.L162
 1941              	.LVL173:
 1942              	.L158:
 926:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1943              		.loc 1 926 1 view .LVU700
 1944 0034 2846     		mov	r0, r5
 1945 0036 0BB0     		add	sp, sp, #44
 1946              	.LCFI17:
 1947              		.cfi_remember_state
 1948              		.cfi_def_cfa_offset 36
 1949              		@ sp needed
 1950 0038 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1951              	.LVL174:
 1952              	.L161:
 1953              	.LCFI18:
 1954              		.cfi_restore_state
 470:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1955              		.loc 1 470 41 view .LVU701
 1956 003c 1343     		orrs	r3, r2, r3
 1957 003e F9D1     		bne	.L158
 1958              	.L162:
 477:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 1959              		.loc 1 477 7 is_stmt 1 view .LVU702
 477:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 1960              		.loc 1 477 10 is_stmt 0 view .LVU703
 1961 0040 6369     		ldr	r3, [r4, #20]
 1962 0042 B3F5803F 		cmp	r3, #65536
 1963 0046 03D1     		bne	.L159
 481:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 1964              		.loc 1 481 9 is_stmt 1 view .LVU704
 481:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 1965              		.loc 1 481 12 is_stmt 0 view .LVU705
 1966 0048 DEB1     		cbz	r6, .L164
 481:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 1967              		.loc 1 481 35 discriminator 1 view .LVU706
 1968 004a 5AEA0B03 		orrs	r3, r10, fp
 1969 004e F1D0     		beq	.L158
 1970              	.L159:
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1971              		.loc 1 517 5 is_stmt 1 view .LVU707
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1972              		.loc 1 517 5 view .LVU708
 1973 0050 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 1974 0054 012B     		cmp	r3, #1
 1975 0056 4FF00203 		mov	r3, #2
 1976 005a 00F03C82 		beq	.L202
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1977              		.loc 1 517 5 discriminator 2 view .LVU709
 1978 005e 4FF00108 		mov	r8, #1
 1979 0062 84F85480 		strb	r8, [r4, #84]
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1980              		.loc 1 517 5 discriminator 2 view .LVU710
 520:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1981              		.loc 1 520 5 discriminator 2 view .LVU711
 520:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 1982              		.loc 1 520 18 is_stmt 0 discriminator 2 view .LVU712
 1983 0066 84F85530 		strb	r3, [r4, #85]
 528:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1984              		.loc 1 528 5 is_stmt 1 discriminator 2 view .LVU713
 528:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 1985              		.loc 1 528 8 is_stmt 0 discriminator 2 view .LVU714
 1986 006a A7BB     		cbnz	r7, .L166
 531:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1987              		.loc 1 531 7 is_stmt 1 view .LVU715
 531:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1988              		.loc 1 531 10 is_stmt 0 view .LVU716
 1989 006c 7146     		mov	r1, lr
 1990              	.LVL175:
 531:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1991              		.loc 1 531 10 view .LVU717
 1992 006e 2046     		mov	r0, r4
 1993 0070 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 1994              	.LVL176:
 531:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 1995              		.loc 1 531 9 view .LVU718
 1996 0074 10B3     		cbz	r0, .L167
 533:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
 1997              		.loc 1 533 9 is_stmt 1 view .LVU719
 533:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
 1998              		.loc 1 533 22 is_stmt 0 view .LVU720
 1999 0076 84F85580 		strb	r8, [r4, #85]
 534:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 2000              		.loc 1 534 9 is_stmt 1 view .LVU721
 534:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 2001              		.loc 1 534 9 view .LVU722
 2002 007a 84F85470 		strb	r7, [r4, #84]
 534:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 2003              		.loc 1 534 9 view .LVU723
 535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2004              		.loc 1 535 9 view .LVU724
 2005              	.LVL177:
 2006              	.L241:
 2007              	.LBB225:
 762:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               return HAL_TIMEOUT;
 2008              		.loc 1 762 15 view .LVU725
 763:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             }
 2009              		.loc 1 763 15 view .LVU726
 763:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             }
 2010              		.loc 1 763 22 is_stmt 0 view .LVU727
 2011 007e 0325     		movs	r5, #3
 2012 0080 D8E7     		b	.L158
 2013              	.LVL178:
 2014              	.L164:
 763:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             }
 2015              		.loc 1 763 22 view .LVU728
 2016              	.LBE225:
 481:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2017              		.loc 1 481 77 discriminator 4 view .LVU729
 2018 0082 5AEA0B03 		orrs	r3, r10, fp
 2019 0086 E3D0     		beq	.L159
 2020 0088 D4E7     		b	.L158
 2021              	.LVL179:
 2022              	.L160:
 487:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2023              		.loc 1 487 10 is_stmt 1 view .LVU730
 487:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2024              		.loc 1 487 13 is_stmt 0 view .LVU731
 2025 008a B7F5804F 		cmp	r7, #16384
 2026 008e 08D1     		bne	.L165
 489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((pInputData != NULL) && (Size == 0U)) || \
 2027              		.loc 1 489 7 is_stmt 1 view .LVU732
 489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((pInputData != NULL) && (Size == 0U)) || \
 2028              		.loc 1 489 10 is_stmt 0 view .LVU733
 2029 0090 0029     		cmp	r1, #0
 2030 0092 F6D0     		beq	.L164
 490:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((pInputData != NULL) && (Size != 0U) && (pOutputData == NULL)))
 2031              		.loc 1 490 33 view .LVU734
 2032 0094 5AEA0B03 		orrs	r3, r10, fp
 2033 0098 CCD0     		beq	.L158
 491:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2034              		.loc 1 491 49 discriminator 1 view .LVU735
 2035 009a B9F1000F 		cmp	r9, #0
 2036 009e D7D1     		bne	.L159
 2037 00a0 C8E7     		b	.L158
 2038              	.L165:
 496:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2039              		.loc 1 496 10 is_stmt 1 view .LVU736
 496:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2040              		.loc 1 496 13 is_stmt 0 view .LVU737
 2041 00a2 B7F5C04F 		cmp	r7, #24576
 2042 00a6 C5D1     		bne	.L158
 498:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2043              		.loc 1 498 7 is_stmt 1 view .LVU738
 498:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2044              		.loc 1 498 10 is_stmt 0 view .LVU739
 2045 00a8 B9F1000F 		cmp	r9, #0
 2046 00ac C2D0     		beq	.L158
 503:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2047              		.loc 1 503 7 is_stmt 1 view .LVU740
 503:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2048              		.loc 1 503 10 is_stmt 0 view .LVU741
 2049 00ae 4369     		ldr	r3, [r0, #20]
 2050 00b0 B3F5803F 		cmp	r3, #65536
 2051 00b4 CCD1     		bne	.L159
 503:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2052              		.loc 1 503 65 discriminator 1 view .LVU742
 2053 00b6 0029     		cmp	r1, #0
 2054 00b8 CAD1     		bne	.L159
 2055 00ba BBE7     		b	.L158
 2056              	.LVL180:
 2057              	.L167:
 539:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the initialization phase is over */
 2058              		.loc 1 539 7 is_stmt 1 view .LVU743
 2059 00bc 2268     		ldr	r2, [r4]
 2060 00be 1368     		ldr	r3, [r2]
 2061 00c0 43F08003 		orr	r3, r3, #128
 2062 00c4 1360     		str	r3, [r2]
 541:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2063              		.loc 1 541 7 view .LVU744
 541:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2064              		.loc 1 541 20 is_stmt 0 view .LVU745
 2065 00c6 0423     		movs	r3, #4
 2066              	.LVL181:
 2067              	.L239:
 683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2068              		.loc 1 683 20 view .LVU746
 2069 00c8 84F84830 		strb	r3, [r4, #72]
 2070              	.L168:
 915:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2071              		.loc 1 915 5 is_stmt 1 view .LVU747
 915:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2072              		.loc 1 915 18 is_stmt 0 view .LVU748
 2073 00cc 0123     		movs	r3, #1
 2074 00ce 84F85530 		strb	r3, [r4, #85]
 918:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2075              		.loc 1 918 5 is_stmt 1 view .LVU749
 918:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2076              		.loc 1 918 5 view .LVU750
 2077 00d2 0025     		movs	r5, #0
 2078 00d4 92E0     		b	.L240
 2079              	.LVL182:
 2080              	.L166:
 546:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2081              		.loc 1 546 10 view .LVU751
 546:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2082              		.loc 1 546 13 is_stmt 0 view .LVU752
 2083 00d6 B7F5005F 		cmp	r7, #8192
 2084 00da 2268     		ldr	r2, [r4]
 2085 00dc 40F0DE80 		bne	.L169
 550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2086              		.loc 1 550 7 is_stmt 1 view .LVU753
 550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2087              		.loc 1 550 22 is_stmt 0 view .LVU754
 2088 00e0 6569     		ldr	r5, [r4, #20]
 550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2089              		.loc 1 550 10 view .LVU755
 2090 00e2 602D     		cmp	r5, #96
 552:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2091              		.loc 1 552 9 is_stmt 1 view .LVU756
 2092 00e4 09BF     		itett	eq
 2093 00e6 1068     		ldreq	r0, [r2]
 557:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2094              		.loc 1 557 9 is_stmt 0 view .LVU757
 2095 00e8 1368     		ldrne	r3, [r2]
 552:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2096              		.loc 1 552 9 view .LVU758
 2097 00ea A368     		ldreq	r3, [r4, #8]
 2098 00ec 20F4C040 		biceq	r0, r0, #24576
 2099 00f0 06BF     		itte	eq
 2100 00f2 20F00600 		biceq	r0, r0, #6
 2101 00f6 0343     		orreq	r3, r3, r0
 557:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2102              		.loc 1 557 9 is_stmt 1 view .LVU759
 2103 00f8 23F4C043 		bicne	r3, r3, #24576
 2104 00fc 43F40053 		orr	r3, r3, #8192
 2105 0100 1360     		str	r3, [r2]
 2106              	.LVL183:
 561:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2107              		.loc 1 561 7 view .LVU760
 2108 0102 1368     		ldr	r3, [r2]
 567:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2109              		.loc 1 567 10 is_stmt 0 view .LVU761
 2110 0104 B5F5803F 		cmp	r5, #65536
 561:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2111              		.loc 1 561 7 view .LVU762
 2112 0108 43F00103 		orr	r3, r3, #1
 2113 010c 1360     		str	r3, [r2]
 567:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2114              		.loc 1 567 7 is_stmt 1 view .LVU763
 567:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2115              		.loc 1 567 10 is_stmt 0 view .LVU764
 2116 010e 21D0     		beq	.L172
 2117              	.LVL184:
 2118              	.L175:
 621:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Local variable headerlength is a number of bytes multiple of 128 bits,
 2119              		.loc 1 621 7 is_stmt 1 view .LVU765
 624:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.HeaderSize % 16U) != 0U)
 2120              		.loc 1 624 37 is_stmt 0 view .LVU766
 2121 0110 226B     		ldr	r2, [r4, #48]
 621:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Local variable headerlength is a number of bytes multiple of 128 bits,
 2122              		.loc 1 621 17 view .LVU767
 2123 0112 A36A     		ldr	r3, [r4, #40]
 2124              	.LVL185:
 624:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.HeaderSize % 16U) != 0U)
 2125              		.loc 1 624 7 is_stmt 1 view .LVU768
 624:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.HeaderSize % 16U) != 0U)
 2126              		.loc 1 624 20 is_stmt 0 view .LVU769
 2127 0114 D4F83490 		ldr	r9, [r4, #52]
 625:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2128              		.loc 1 625 35 view .LVU770
 2129 0118 4FF0000B 		mov	fp, #0
 2130 011c 02F00F06 		and	r6, r2, #15
 2131 0120 5F46     		mov	r7, fp
 625:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2132              		.loc 1 625 10 view .LVU771
 2133 0122 56EA0701 		orrs	r1, r6, r7
 624:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.HeaderSize % 16U) != 0U)
 2134              		.loc 1 624 20 view .LVU772
 2135 0126 22F00F08 		bic	r8, r2, #15
 2136              	.LVL186:
 625:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2137              		.loc 1 625 7 is_stmt 1 view .LVU773
 625:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2138              		.loc 1 625 10 is_stmt 0 view .LVU774
 2139 012a 6CD1     		bne	.L173
 2140              	.LVL187:
 2141              	.L174:
 629:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2142              		.loc 1 629 7 is_stmt 1 view .LVU775
 621:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Local variable headerlength is a number of bytes multiple of 128 bits,
 2143              		.loc 1 621 17 is_stmt 0 view .LVU776
 2144 012c 9A46     		mov	r10, r3
 2145              	.LVL188:
 2146              	.L180:
 629:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2147              		.loc 1 629 22 is_stmt 1 discriminator 1 view .LVU777
 629:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2148              		.loc 1 629 28 is_stmt 0 discriminator 1 view .LVU778
 2149 012e 0027     		movs	r7, #0
 2150 0130 AAEB0306 		sub	r6, r10, r3
 2151              	.LVL189:
 629:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2152              		.loc 1 629 7 discriminator 1 view .LVU779
 2153 0134 4F45     		cmp	r7, r9
 2154 0136 08BF     		it	eq
 2155 0138 4645     		cmpeq	r6, r8
 2156 013a 67D3     		bcc	.L183
 676:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2157              		.loc 1 676 7 is_stmt 1 view .LVU780
 676:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2158              		.loc 1 676 10 is_stmt 0 view .LVU781
 2159 013c BBF1000F 		cmp	fp, #0
 2160 0140 06D0     		beq	.L184
 678:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Padding(hcryp, difflength, CRYP_POLLING_ON);
 2161              		.loc 1 678 9 is_stmt 1 view .LVU782
 678:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Padding(hcryp, difflength, CRYP_POLLING_ON);
 2162              		.loc 1 678 32 is_stmt 0 view .LVU783
 2163 0142 C4F838A0 		str	r10, [r4, #56]
 679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2164              		.loc 1 679 9 is_stmt 1 view .LVU784
 2165 0146 0122     		movs	r2, #1
 2166 0148 5946     		mov	r1, fp
 2167 014a 2046     		mov	r0, r4
 2168 014c FFF7FEFF 		bl	CRYP_Padding
 2169              	.LVL190:
 2170              	.L184:
 683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2171              		.loc 1 683 7 view .LVU785
 683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2172              		.loc 1 683 20 is_stmt 0 view .LVU786
 2173 0150 0523     		movs	r3, #5
 2174 0152 B9E7     		b	.L239
 2175              	.LVL191:
 2176              	.L172:
 567:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2177              		.loc 1 567 65 discriminator 1 view .LVU787
 2178 0154 5AEA0B03 		orrs	r3, r10, fp
 2179 0158 DAD0     		beq	.L175
 2180              	.LBB226:
 569:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr = (uint32_t)pInputData;
 2181              		.loc 1 569 9 is_stmt 1 view .LVU788
 570:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2182              		.loc 1 570 9 view .LVU789
 2183              	.LVL192:
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2184              		.loc 1 572 9 view .LVU790
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2185              		.loc 1 572 9 is_stmt 0 view .LVU791
 2186 015a 6FF00F03 		mvn	r3, #15
 2187 015e 9B1B     		subs	r3, r3, r6
 2188 0160 06F11007 		add	r7, r6, #16
 2189 0164 0593     		str	r3, [sp, #20]
 2190              	.LVL193:
 2191              	.L176:
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2192              		.loc 1 572 9 view .LVU792
 2193 0166 059B     		ldr	r3, [sp, #20]
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2194              		.loc 1 572 31 discriminator 1 view .LVU793
 2195 0168 4FF00009 		mov	r9, #0
 2196 016c DE19     		adds	r6, r3, r7
 2197              	.LVL194:
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2198              		.loc 1 572 24 is_stmt 1 discriminator 1 view .LVU794
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2199              		.loc 1 572 9 is_stmt 0 discriminator 1 view .LVU795
 2200 016e D945     		cmp	r9, fp
 2201 0170 08BF     		it	eq
 2202 0172 5645     		cmpeq	r6, r10
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2203              		.loc 1 572 31 discriminator 1 view .LVU796
 2204 0174 B046     		mov	r8, r6
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2205              		.loc 1 572 9 discriminator 1 view .LVU797
 2206 0176 CBD2     		bcs	.L175
 575:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2207              		.loc 1 575 11 is_stmt 1 view .LVU798
 575:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2208              		.loc 1 575 16 is_stmt 0 view .LVU799
 2209 0178 2268     		ldr	r2, [r4]
 575:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2210              		.loc 1 575 35 view .LVU800
 2211 017a 57F8103C 		ldr	r3, [r7, #-16]
 575:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2212              		.loc 1 575 33 view .LVU801
 2213 017e 9360     		str	r3, [r2, #8]
 576:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 2214              		.loc 1 576 11 is_stmt 1 view .LVU802
 2215              	.LVL195:
 577:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2216              		.loc 1 577 11 view .LVU803
 577:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2217              		.loc 1 577 35 is_stmt 0 view .LVU804
 2218 0180 57F80C3C 		ldr	r3, [r7, #-12]
 577:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2219              		.loc 1 577 33 view .LVU805
 2220 0184 9360     		str	r3, [r2, #8]
 578:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 2221              		.loc 1 578 11 is_stmt 1 view .LVU806
 2222              	.LVL196:
 579:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2223              		.loc 1 579 11 view .LVU807
 579:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2224              		.loc 1 579 36 is_stmt 0 view .LVU808
 2225 0186 57F8083C 		ldr	r3, [r7, #-8]
 579:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2226              		.loc 1 579 34 view .LVU809
 2227 018a 9360     		str	r3, [r2, #8]
 580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 2228              		.loc 1 580 11 is_stmt 1 view .LVU810
 2229              	.LVL197:
 581:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2230              		.loc 1 581 11 view .LVU811
 581:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2231              		.loc 1 581 35 is_stmt 0 view .LVU812
 2232 018c 57F8043C 		ldr	r3, [r7, #-4]
 581:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 2233              		.loc 1 581 33 view .LVU813
 2234 0190 9360     		str	r3, [r2, #8]
 582:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2235              		.loc 1 582 11 is_stmt 1 view .LVU814
 2236              	.LVL198:
 584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2237              		.loc 1 584 11 view .LVU815
 584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2238              		.loc 1 584 14 is_stmt 0 view .LVU816
 2239 0192 7146     		mov	r1, lr
 2240 0194 2046     		mov	r0, r4
 2241 0196 CDF854E0 		str	lr, [sp, #84]
 2242 019a FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 2243              	.LVL199:
 584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2244              		.loc 1 584 13 view .LVU817
 2245 019e DDF854E0 		ldr	lr, [sp, #84]
 2246 01a2 0546     		mov	r5, r0
 2247 01a4 30B1     		cbz	r0, .L177
 2248              	.LVL200:
 2249              	.L242:
 584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2250              		.loc 1 584 13 view .LVU818
 2251              	.LBE226:
 891:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 2252              		.loc 1 891 11 is_stmt 1 view .LVU819
 891:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 2253              		.loc 1 891 24 is_stmt 0 view .LVU820
 2254 01a6 0123     		movs	r3, #1
 2255 01a8 84F85530 		strb	r3, [r4, #85]
 2256              	.LVL201:
 892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 2257              		.loc 1 892 11 is_stmt 1 view .LVU821
 892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 2258              		.loc 1 892 11 view .LVU822
 2259 01ac 0023     		movs	r3, #0
 2260 01ae 84F85430 		strb	r3, [r4, #84]
 892:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 2261              		.loc 1 892 11 view .LVU823
 893:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2262              		.loc 1 893 11 view .LVU824
 2263 01b2 64E7     		b	.L241
 2264              	.LVL202:
 2265              	.L177:
 2266              	.LBB227:
 591:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2267              		.loc 1 591 11 view .LVU825
 2268 01b4 2268     		ldr	r2, [r4]
 2269 01b6 1368     		ldr	r3, [r2]
 2270 01b8 43F08003 		orr	r3, r3, #128
 2271 01bc 1360     		str	r3, [r2]
 595:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_test < Size))
 2272              		.loc 1 595 11 view .LVU826
 2273              	.LVL203:
 596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2274              		.loc 1 596 11 view .LVU827
 596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2275              		.loc 1 596 14 is_stmt 0 view .LVU828
 2276 01be 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 2277 01c2 012B     		cmp	r3, #1
 2278 01c4 1DD1     		bne	.L178
 595:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_test < Size))
 2279              		.loc 1 595 22 discriminator 1 view .LVU829
 2280 01c6 18F11003 		adds	r3, r8, #16
 2281 01ca 0093     		str	r3, [sp]
 2282 01cc 49F10003 		adc	r3, r9, #0
 2283 01d0 0193     		str	r3, [sp, #4]
 596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2284              		.loc 1 596 59 discriminator 1 view .LVU830
 2285 01d2 DDE90023 		ldrd	r2, [sp]
 2286 01d6 5B45     		cmp	r3, fp
 2287 01d8 08BF     		it	eq
 2288 01da 5245     		cmpeq	r2, r10
 2289 01dc 11D2     		bcs	.L178
 599:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Change the CRYP state */
 2290              		.loc 1 599 13 is_stmt 1 view .LVU831
 601:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Mark that the header phase is over */
 2291              		.loc 1 601 26 is_stmt 0 view .LVU832
 2292 01de 0523     		movs	r3, #5
 609:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2293              		.loc 1 609 38 view .LVU833
 2294 01e0 226B     		ldr	r2, [r4, #48]
 601:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Mark that the header phase is over */
 2295              		.loc 1 601 26 view .LVU834
 2296 01e2 84F85530 		strb	r3, [r4, #85]
 603:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2297              		.loc 1 603 26 view .LVU835
 2298 01e6 0823     		movs	r3, #8
 2299 01e8 84F84830 		strb	r3, [r4, #72]
 609:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2300              		.loc 1 609 38 view .LVU836
 2301 01ec AAF11003 		sub	r3, r10, #16
 2302 01f0 1344     		add	r3, r3, r2
 2303 01f2 9B1B     		subs	r3, r3, r6
 599:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Change the CRYP state */
 2304              		.loc 1 599 35 view .LVU837
 2305 01f4 84F85C00 		strb	r0, [r4, #92]
 601:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             /* Mark that the header phase is over */
 2306              		.loc 1 601 13 is_stmt 1 view .LVU838
 603:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2307              		.loc 1 603 13 view .LVU839
 606:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            /* Save the total number of bytes (B blocks + header) that remain to be
 2308              		.loc 1 606 12 view .LVU840
 606:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****            /* Save the total number of bytes (B blocks + header) that remain to be
 2309              		.loc 1 606 35 is_stmt 0 view .LVU841
 2310 01f8 A763     		str	r7, [r4, #56]
 609:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2311              		.loc 1 609 12 is_stmt 1 view .LVU842
 609:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2312              		.loc 1 609 35 is_stmt 0 view .LVU843
 2313 01fa 2364     		str	r3, [r4, #64]
 612:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2314              		.loc 1 612 13 is_stmt 1 view .LVU844
 612:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2315              		.loc 1 612 13 view .LVU845
 2316              	.LVL204:
 2317              	.L240:
 612:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2318              		.loc 1 612 13 is_stmt 0 view .LVU846
 2319              	.LBE227:
 918:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2320              		.loc 1 918 5 view .LVU847
 2321 01fc 84F85450 		strb	r5, [r4, #84]
 918:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2322              		.loc 1 918 5 is_stmt 1 view .LVU848
 920:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 2323              		.loc 1 920 5 view .LVU849
 920:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 2324              		.loc 1 920 12 is_stmt 0 view .LVU850
 2325 0200 18E7     		b	.L158
 2326              	.LVL205:
 2327              	.L178:
 2328              	.LBB228:
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2329              		.loc 1 572 40 is_stmt 1 discriminator 2 view .LVU851
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2330              		.loc 1 572 40 is_stmt 0 discriminator 2 view .LVU852
 2331 0202 1037     		adds	r7, r7, #16
 2332              	.LVL206:
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2333              		.loc 1 572 40 discriminator 2 view .LVU853
 2334 0204 AFE7     		b	.L176
 2335              	.LVL207:
 2336              	.L173:
 572:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2337              		.loc 1 572 40 discriminator 2 view .LVU854
 2338              	.LBE228:
 627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2339              		.loc 1 627 9 is_stmt 1 view .LVU855
 627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2340              		.loc 1 627 20 is_stmt 0 view .LVU856
 2341 0206 A2EB080B 		sub	fp, r2, r8
 2342              	.LVL208:
 627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2343              		.loc 1 627 20 view .LVU857
 2344 020a 8FE7     		b	.L174
 2345              	.LVL209:
 2346              	.L183:
 2347              	.LBB229:
 633:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2348              		.loc 1 633 14 view .LVU858
 2349 020c 2068     		ldr	r0, [r4]
 633:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2350              		.loc 1 633 33 view .LVU859
 2351 020e DAF80020 		ldr	r2, [r10]
 633:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2352              		.loc 1 633 31 view .LVU860
 2353 0212 8260     		str	r2, [r0, #8]
 635:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2354              		.loc 1 635 33 view .LVU861
 2355 0214 DAF80420 		ldr	r2, [r10, #4]
 635:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2356              		.loc 1 635 31 view .LVU862
 2357 0218 8260     		str	r2, [r0, #8]
 637:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2358              		.loc 1 637 34 view .LVU863
 2359 021a DAF80820 		ldr	r2, [r10, #8]
 637:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2360              		.loc 1 637 32 view .LVU864
 2361 021e 8260     		str	r2, [r0, #8]
 639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2362              		.loc 1 639 33 view .LVU865
 2363 0220 DAF80C20 		ldr	r2, [r10, #12]
 639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2364              		.loc 1 639 31 view .LVU866
 2365 0224 8260     		str	r2, [r0, #8]
 642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2366              		.loc 1 642 12 view .LVU867
 2367 0226 7146     		mov	r1, lr
 640:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2368              		.loc 1 640 18 view .LVU868
 2369 0228 0AF11002 		add	r2, r10, #16
 642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2370              		.loc 1 642 12 view .LVU869
 2371 022c 2046     		mov	r0, r4
 2372 022e 0593     		str	r3, [sp, #20]
 631:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the Input block in the Data Input register */
 2373              		.loc 1 631 9 is_stmt 1 view .LVU870
 633:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2374              		.loc 1 633 9 view .LVU871
 634:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 2375              		.loc 1 634 9 view .LVU872
 2376              	.LVL210:
 635:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2377              		.loc 1 635 9 view .LVU873
 636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 2378              		.loc 1 636 9 view .LVU874
 637:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2379              		.loc 1 637 9 view .LVU875
 638:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 2380              		.loc 1 638 9 view .LVU876
 639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2381              		.loc 1 639 9 view .LVU877
 640:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2382              		.loc 1 640 9 view .LVU878
 640:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2383              		.loc 1 640 18 is_stmt 0 view .LVU879
 2384 0230 0092     		str	r2, [sp]
 2385              	.LVL211:
 642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2386              		.loc 1 642 9 is_stmt 1 view .LVU880
 642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2387              		.loc 1 642 12 is_stmt 0 view .LVU881
 2388 0232 CDF854E0 		str	lr, [sp, #84]
 2389 0236 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 2390              	.LVL212:
 642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2391              		.loc 1 642 11 view .LVU882
 2392 023a DDF854E0 		ldr	lr, [sp, #84]
 2393 023e 009A     		ldr	r2, [sp]
 2394 0240 059B     		ldr	r3, [sp, #20]
 2395 0242 0546     		mov	r5, r0
 2396 0244 0028     		cmp	r0, #0
 2397 0246 AED1     		bne	.L242
 649:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2398              		.loc 1 649 9 is_stmt 1 view .LVU883
 2399 0248 D4F800C0 		ldr	ip, [r4]
 2400 024c DCF80000 		ldr	r0, [ip]
 2401 0250 40F08000 		orr	r0, r0, #128
 2402 0254 CCF80000 		str	r0, [ip]
 653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_temp < headerlength))
 2403              		.loc 1 653 9 view .LVU884
 2404              	.LVL213:
 654:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2405              		.loc 1 654 9 view .LVU885
 654:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2406              		.loc 1 654 12 is_stmt 0 view .LVU886
 2407 0258 94F85C00 		ldrb	r0, [r4, #92]	@ zero_extendqisi2
 2408 025c 0128     		cmp	r0, #1
 2409 025e 1BD1     		bne	.L182
 653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_temp < headerlength))
 2410              		.loc 1 653 20 discriminator 1 view .LVU887
 2411 0260 16F11000 		adds	r0, r6, #16
 2412 0264 0290     		str	r0, [sp, #8]
 2413 0266 47F10000 		adc	r0, r7, #0
 2414 026a 0390     		str	r0, [sp, #12]
 654:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2415              		.loc 1 654 57 discriminator 1 view .LVU888
 2416 026c DDE90201 		ldrd	r0, [sp, #8]
 2417 0270 4945     		cmp	r1, r9
 2418 0272 08BF     		it	eq
 2419 0274 4045     		cmpeq	r0, r8
 2420 0276 0FD2     		bcs	.L182
 657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state */
 2421              		.loc 1 657 11 is_stmt 1 view .LVU889
 664:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          /* Save the total number of bytes that remain to be processed at this point */
 2422              		.loc 1 664 33 is_stmt 0 view .LVU890
 2423 0278 A263     		str	r2, [r4, #56]
 666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2424              		.loc 1 666 33 view .LVU891
 2425 027a 226B     		ldr	r2, [r4, #48]
 657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state */
 2426              		.loc 1 657 33 view .LVU892
 2427 027c 84F85C50 		strb	r5, [r4, #92]
 659:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 2428              		.loc 1 659 11 is_stmt 1 view .LVU893
 659:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 2429              		.loc 1 659 24 is_stmt 0 view .LVU894
 2430 0280 0521     		movs	r1, #5
 666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2431              		.loc 1 666 33 view .LVU895
 2432 0282 103A     		subs	r2, r2, #16
 2433 0284 A3EB0A0A 		sub	r10, r3, r10
 659:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 2434              		.loc 1 659 24 view .LVU896
 2435 0288 84F85510 		strb	r1, [r4, #85]
 661:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2436              		.loc 1 661 11 is_stmt 1 view .LVU897
 666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2437              		.loc 1 666 33 is_stmt 0 view .LVU898
 2438 028c 5244     		add	r2, r2, r10
 661:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2439              		.loc 1 661 24 view .LVU899
 2440 028e 0821     		movs	r1, #8
 2441 0290 84F84810 		strb	r1, [r4, #72]
 664:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****          /* Save the total number of bytes that remain to be processed at this point */
 2442              		.loc 1 664 10 is_stmt 1 view .LVU900
 666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2443              		.loc 1 666 11 view .LVU901
 666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2444              		.loc 1 666 30 is_stmt 0 view .LVU902
 2445 0294 2264     		str	r2, [r4, #64]
 669:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2446              		.loc 1 669 11 is_stmt 1 view .LVU903
 669:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2447              		.loc 1 669 11 view .LVU904
 2448 0296 B1E7     		b	.L240
 2449              	.L182:
 669:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2450              		.loc 1 669 11 is_stmt 0 view .LVU905
 2451              	.LBE229:
 457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 2452              		.loc 1 457 12 discriminator 1 view .LVU906
 2453 0298 9246     		mov	r10, r2
 2454 029a 48E7     		b	.L180
 2455              	.LVL214:
 2456              	.L169:
 688:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2457              		.loc 1 688 10 is_stmt 1 view .LVU907
 688:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2458              		.loc 1 688 13 is_stmt 0 view .LVU908
 2459 029c B7F5804F 		cmp	r7, #16384
 2460 02a0 94F84800 		ldrb	r0, [r4, #72]	@ zero_extendqisi2
 691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2461              		.loc 1 691 7 view .LVU909
 2462 02a4 1368     		ldr	r3, [r2]
 2463 02a6 CDF80090 		str	r9, [sp]
 688:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 2464              		.loc 1 688 13 view .LVU910
 2465 02aa 40F09980 		bne	.L185
 691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2466              		.loc 1 691 7 is_stmt 1 view .LVU911
 2467 02ae 23F4C043 		bic	r3, r3, #24576
 2468 02b2 43F48043 		orr	r3, r3, #16384
 2469 02b6 1360     		str	r3, [r2]
 694:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2470              		.loc 1 694 7 view .LVU912
 694:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2471              		.loc 1 694 10 is_stmt 0 view .LVU913
 2472 02b8 0428     		cmp	r0, #4
 696:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2473              		.loc 1 696 9 is_stmt 1 view .LVU914
 2474 02ba 08BF     		it	eq
 2475 02bc 1368     		ldreq	r3, [r2]
 704:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2476              		.loc 1 704 17 is_stmt 0 view .LVU915
 2477 02be 4FF00009 		mov	r9, #0
 696:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2478              		.loc 1 696 9 view .LVU916
 2479 02c2 04BF     		itt	eq
 2480 02c4 43F00103 		orreq	r3, r3, #1
 2481 02c8 1360     		streq	r3, [r2]
 699:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr = (uint32_t)pOutputData;
 2482              		.loc 1 699 7 is_stmt 1 view .LVU917
 2483              	.LVL215:
 700:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2484              		.loc 1 700 7 view .LVU918
 704:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2485              		.loc 1 704 7 view .LVU919
 704:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2486              		.loc 1 704 17 is_stmt 0 view .LVU920
 2487 02ca 0AF00F02 		and	r2, r10, #15
 2488 02ce 4B46     		mov	r3, r9
 704:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2489              		.loc 1 704 10 view .LVU921
 2490 02d0 1343     		orrs	r3, r2, r3
 2491 02d2 1FD0     		beq	.L203
 706:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = (uint32_t) (Size - payloadlength);
 2492              		.loc 1 706 9 is_stmt 1 view .LVU922
 706:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = (uint32_t) (Size - payloadlength);
 2493              		.loc 1 706 23 is_stmt 0 view .LVU923
 2494 02d4 2AF00F03 		bic	r3, r10, #15
 2495 02d8 CDE9023B 		strd	r3, fp, [sp, #8]
 2496              	.LVL216:
 707:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         addhoc_process = 1;
 2497              		.loc 1 707 9 is_stmt 1 view .LVU924
 707:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         addhoc_process = 1;
 2498              		.loc 1 707 20 is_stmt 0 view .LVU925
 2499 02dc AAEB0303 		sub	r3, r10, r3
 2500 02e0 0793     		str	r3, [sp, #28]
 2501              	.LVL217:
 708:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2502              		.loc 1 708 9 is_stmt 1 view .LVU926
 708:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2503              		.loc 1 708 24 is_stmt 0 view .LVU927
 2504 02e2 0123     		movs	r3, #1
 2505              	.LVL218:
 708:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2506              		.loc 1 708 24 view .LVU928
 2507 02e4 0593     		str	r3, [sp, #20]
 2508              	.LVL219:
 2509              	.L187:
 716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2510              		.loc 1 716 7 is_stmt 1 view .LVU929
 699:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr = (uint32_t)pOutputData;
 2511              		.loc 1 699 18 is_stmt 0 view .LVU930
 2512 02e6 3746     		mov	r7, r6
 2513              	.LVL220:
 2514              	.L188:
 716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2515              		.loc 1 716 22 is_stmt 1 discriminator 1 view .LVU931
 716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2516              		.loc 1 716 7 is_stmt 0 discriminator 1 view .LVU932
 2517 02e8 DDE90201 		ldrd	r0, [sp, #8]
 716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2518              		.loc 1 716 28 discriminator 1 view .LVU933
 2519 02ec 0022     		movs	r2, #0
 2520 02ee BB1B     		subs	r3, r7, r6
 2521              	.LVL221:
 716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2522              		.loc 1 716 7 discriminator 1 view .LVU934
 2523 02f0 8A42     		cmp	r2, r1
 2524 02f2 08BF     		it	eq
 2525 02f4 8342     		cmpeq	r3, r0
 716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2526              		.loc 1 716 28 discriminator 1 view .LVU935
 2527 02f6 9846     		mov	r8, r3
 2528 02f8 9146     		mov	r9, r2
 716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2529              		.loc 1 716 7 discriminator 1 view .LVU936
 2530 02fa 12D3     		bcc	.L192
 789:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2531              		.loc 1 789 7 is_stmt 1 view .LVU937
 789:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2532              		.loc 1 789 10 is_stmt 0 view .LVU938
 2533 02fc 059B     		ldr	r3, [sp, #20]
 2534              	.LVL222:
 789:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2535              		.loc 1 789 10 view .LVU939
 2536 02fe 3BB1     		cbz	r3, .L193
 792:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypOutBuffPtr =  (uint8_t *)outputaddr;
 2537              		.loc 1 792 9 is_stmt 1 view .LVU940
 793:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Padding(hcryp, difflength, CRYP_POLLING_ON);
 2538              		.loc 1 793 32 is_stmt 0 view .LVU941
 2539 0300 009B     		ldr	r3, [sp]
 794:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2540              		.loc 1 794 9 view .LVU942
 2541 0302 059A     		ldr	r2, [sp, #20]
 2542 0304 0799     		ldr	r1, [sp, #28]
 792:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypOutBuffPtr =  (uint8_t *)outputaddr;
 2543              		.loc 1 792 32 view .LVU943
 2544 0306 A763     		str	r7, [r4, #56]
 793:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Padding(hcryp, difflength, CRYP_POLLING_ON);
 2545              		.loc 1 793 9 is_stmt 1 view .LVU944
 793:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         CRYP_Padding(hcryp, difflength, CRYP_POLLING_ON);
 2546              		.loc 1 793 32 is_stmt 0 view .LVU945
 2547 0308 E363     		str	r3, [r4, #60]
 794:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2548              		.loc 1 794 9 is_stmt 1 view .LVU946
 2549 030a 2046     		mov	r0, r4
 2550 030c FFF7FEFF 		bl	CRYP_Padding
 2551              	.LVL223:
 2552              	.L193:
 799:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2553              		.loc 1 799 7 view .LVU947
 799:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2554              		.loc 1 799 20 is_stmt 0 view .LVU948
 2555 0310 0623     		movs	r3, #6
 2556 0312 D9E6     		b	.L239
 2557              	.LVL224:
 2558              	.L203:
 799:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2559              		.loc 1 799 20 view .LVU949
 2560 0314 CDE902AB 		strd	r10, [sp, #8]
 458:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2561              		.loc 1 458 12 view .LVU950
 2562 0318 CDF81490 		str	r9, [sp, #20]
 457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 2563              		.loc 1 457 12 view .LVU951
 2564 031c CDF81C90 		str	r9, [sp, #28]
 2565 0320 E1E7     		b	.L187
 2566              	.LVL225:
 2567              	.L192:
 2568              	.LBB230:
 718:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the Input block in the Data Input register */
 2569              		.loc 1 718 9 is_stmt 1 view .LVU952
 720:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2570              		.loc 1 720 9 view .LVU953
 720:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2571              		.loc 1 720 14 is_stmt 0 view .LVU954
 2572 0322 2268     		ldr	r2, [r4]
 720:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2573              		.loc 1 720 33 view .LVU955
 2574 0324 3B68     		ldr	r3, [r7]
 2575              	.LVL226:
 720:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2576              		.loc 1 720 31 view .LVU956
 2577 0326 9360     		str	r3, [r2, #8]
 721:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 2578              		.loc 1 721 9 is_stmt 1 view .LVU957
 2579              	.LVL227:
 722:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2580              		.loc 1 722 9 view .LVU958
 722:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2581              		.loc 1 722 33 is_stmt 0 view .LVU959
 2582 0328 7B68     		ldr	r3, [r7, #4]
 722:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2583              		.loc 1 722 31 view .LVU960
 2584 032a 9360     		str	r3, [r2, #8]
 723:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 2585              		.loc 1 723 9 is_stmt 1 view .LVU961
 2586              	.LVL228:
 724:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2587              		.loc 1 724 9 view .LVU962
 724:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2588              		.loc 1 724 34 is_stmt 0 view .LVU963
 2589 032c BB68     		ldr	r3, [r7, #8]
 724:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2590              		.loc 1 724 32 view .LVU964
 2591 032e 9360     		str	r3, [r2, #8]
 725:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 2592              		.loc 1 725 9 is_stmt 1 view .LVU965
 2593              	.LVL229:
 726:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2594              		.loc 1 726 9 view .LVU966
 726:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2595              		.loc 1 726 33 is_stmt 0 view .LVU967
 2596 0330 FB68     		ldr	r3, [r7, #12]
 726:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 2597              		.loc 1 726 31 view .LVU968
 2598 0332 9360     		str	r3, [r2, #8]
 727:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2599              		.loc 1 727 9 is_stmt 1 view .LVU969
 729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2600              		.loc 1 729 12 is_stmt 0 view .LVU970
 2601 0334 7146     		mov	r1, lr
 727:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2602              		.loc 1 727 18 view .LVU971
 2603 0336 07F11003 		add	r3, r7, #16
 729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2604              		.loc 1 729 12 view .LVU972
 2605 033a 2046     		mov	r0, r4
 2606 033c CDF854E0 		str	lr, [sp, #84]
 727:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2607              		.loc 1 727 18 view .LVU973
 2608 0340 0693     		str	r3, [sp, #24]
 2609              	.LVL230:
 729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2610              		.loc 1 729 9 is_stmt 1 view .LVU974
 729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2611              		.loc 1 729 12 is_stmt 0 view .LVU975
 2612 0342 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 2613              	.LVL231:
 729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2614              		.loc 1 729 11 view .LVU976
 2615 0346 DDF854E0 		ldr	lr, [sp, #84]
 2616 034a 0546     		mov	r5, r0
 2617 034c 0028     		cmp	r0, #0
 2618 034e 7FF42AAF 		bne	.L242
 737:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2619              		.loc 1 737 9 is_stmt 1 view .LVU977
 2620 0352 2368     		ldr	r3, [r4]
 741:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2621              		.loc 1 741 34 is_stmt 0 view .LVU978
 2622 0354 0099     		ldr	r1, [sp]
 737:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2623              		.loc 1 737 9 view .LVU979
 2624 0356 1A68     		ldr	r2, [r3]
 2625 0358 42F08002 		orr	r2, r2, #128
 2626 035c 1A60     		str	r2, [r3]
 741:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2627              		.loc 1 741 9 is_stmt 1 view .LVU980
 741:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2628              		.loc 1 741 51 is_stmt 0 view .LVU981
 2629 035e DA68     		ldr	r2, [r3, #12]
 741:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2630              		.loc 1 741 34 view .LVU982
 2631 0360 0A60     		str	r2, [r1]
 742:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 2632              		.loc 1 742 9 is_stmt 1 view .LVU983
 2633              	.LVL232:
 743:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2634              		.loc 1 743 9 view .LVU984
 743:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2635              		.loc 1 743 51 is_stmt 0 view .LVU985
 2636 0362 DA68     		ldr	r2, [r3, #12]
 743:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2637              		.loc 1 743 34 view .LVU986
 2638 0364 4A60     		str	r2, [r1, #4]
 744:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 2639              		.loc 1 744 9 is_stmt 1 view .LVU987
 2640              	.LVL233:
 745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2641              		.loc 1 745 9 view .LVU988
 745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2642              		.loc 1 745 51 is_stmt 0 view .LVU989
 2643 0366 DA68     		ldr	r2, [r3, #12]
 745:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2644              		.loc 1 745 34 view .LVU990
 2645 0368 8A60     		str	r2, [r1, #8]
 746:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 2646              		.loc 1 746 9 is_stmt 1 view .LVU991
 2647              	.LVL234:
 747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2648              		.loc 1 747 9 view .LVU992
 747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2649              		.loc 1 747 51 is_stmt 0 view .LVU993
 2650 036a DB68     		ldr	r3, [r3, #12]
 747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr+=4U;
 2651              		.loc 1 747 34 view .LVU994
 2652 036c CB60     		str	r3, [r1, #12]
 748:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2653              		.loc 1 748 9 is_stmt 1 view .LVU995
 748:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2654              		.loc 1 748 19 is_stmt 0 view .LVU996
 2655 036e 0B46     		mov	r3, r1
 2656 0370 1033     		adds	r3, r3, #16
 2657 0372 0093     		str	r3, [sp]
 2658              	.LVL235:
 752:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_temp < payloadlength))
 2659              		.loc 1 752 9 is_stmt 1 view .LVU997
 753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2660              		.loc 1 753 9 view .LVU998
 753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2661              		.loc 1 753 12 is_stmt 0 view .LVU999
 2662 0374 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 2663              	.LVL236:
 753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2664              		.loc 1 753 12 view .LVU1000
 2665 0378 012B     		cmp	r3, #1
 2666 037a 2FD1     		bne	.L190
 752:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if ((hcryp->SuspendRequest == HAL_CRYP_SUSPEND) && (index_temp < payloadlength))
 2667              		.loc 1 752 20 discriminator 1 view .LVU1001
 2668 037c 18F11002 		adds	r2, r8, #16
 2669 0380 0892     		str	r2, [sp, #32]
 2670 0382 49F10002 		adc	r2, r9, #0
 2671 0386 0992     		str	r2, [sp, #36]
 753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2672              		.loc 1 753 57 discriminator 1 view .LVU1002
 2673 0388 DDE90812 		ldrd	r1, [sp, #32]
 2674 038c DDE90289 		ldrd	r8, [sp, #8]
 2675              	.LVL237:
 753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2676              		.loc 1 753 57 discriminator 1 view .LVU1003
 2677 0390 4A45     		cmp	r2, r9
 2678 0392 08BF     		it	eq
 2679 0394 4145     		cmpeq	r1, r8
 2680 0396 21D2     		bcs	.L190
 756:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2681              		.loc 1 756 14 view .LVU1004
 2682 0398 2269     		ldr	r2, [r4, #16]
 2683 039a 0293     		str	r3, [sp, #8]
 2684              	.LVL238:
 756:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2685              		.loc 1 756 11 is_stmt 1 view .LVU1005
 756:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 2686              		.loc 1 756 14 is_stmt 0 view .LVU1006
 2687 039c 4AB9     		cbnz	r2, .L191
 759:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             {
 2688              		.loc 1 759 13 is_stmt 1 view .LVU1007
 759:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             {
 2689              		.loc 1 759 16 is_stmt 0 view .LVU1008
 2690 039e 2046     		mov	r0, r4
 2691 03a0 FFF7FEFF 		bl	CRYP_WaitOnBusyFlagReset.constprop.0
 2692              	.LVL239:
 759:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             {
 2693              		.loc 1 759 15 view .LVU1009
 2694 03a4 029B     		ldr	r3, [sp, #8]
 2695 03a6 20B1     		cbz	r0, .L191
 761:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               __HAL_UNLOCK(hcryp);
 2696              		.loc 1 761 15 is_stmt 1 view .LVU1010
 761:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               __HAL_UNLOCK(hcryp);
 2697              		.loc 1 761 28 is_stmt 0 view .LVU1011
 2698 03a8 84F85530 		strb	r3, [r4, #85]
 762:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               return HAL_TIMEOUT;
 2699              		.loc 1 762 15 is_stmt 1 view .LVU1012
 762:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****               return HAL_TIMEOUT;
 2700              		.loc 1 762 15 view .LVU1013
 2701 03ac 84F85450 		strb	r5, [r4, #84]
 2702 03b0 65E6     		b	.L241
 2703              	.L191:
 767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state */
 2704              		.loc 1 767 11 view .LVU1014
 769:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 2705              		.loc 1 769 24 is_stmt 0 view .LVU1015
 2706 03b2 0523     		movs	r3, #5
 2707 03b4 84F85530 		strb	r3, [r4, #85]
 771:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2708              		.loc 1 771 24 view .LVU1016
 2709 03b8 0823     		movs	r3, #8
 2710 03ba 84F84830 		strb	r3, [r4, #72]
 774:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
 2711              		.loc 1 774 34 view .LVU1017
 2712 03be 009B     		ldr	r3, [sp]
 2713 03c0 E363     		str	r3, [r4, #60]
 775:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Save the number of bytes that remain to be processed at this point */
 2714              		.loc 1 775 34 view .LVU1018
 2715 03c2 069B     		ldr	r3, [sp, #24]
 2716 03c4 A363     		str	r3, [r4, #56]
 777:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2717              		.loc 1 777 37 view .LVU1019
 2718 03c6 F61B     		subs	r6, r6, r7
 2719              	.LVL240:
 777:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2720              		.loc 1 777 37 view .LVU1020
 2721 03c8 AAF11003 		sub	r3, r10, #16
 767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state */
 2722              		.loc 1 767 33 view .LVU1021
 2723 03cc 0022     		movs	r2, #0
 777:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2724              		.loc 1 777 37 view .LVU1022
 2725 03ce 1E44     		add	r6, r6, r3
 767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Change the CRYP state */
 2726              		.loc 1 767 33 view .LVU1023
 2727 03d0 84F85C20 		strb	r2, [r4, #92]
 769:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 2728              		.loc 1 769 11 is_stmt 1 view .LVU1024
 771:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2729              		.loc 1 771 11 view .LVU1025
 774:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr  =  (uint8_t *)inputaddr;
 2730              		.loc 1 774 11 view .LVU1026
 775:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Save the number of bytes that remain to be processed at this point */
 2731              		.loc 1 775 11 view .LVU1027
 777:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2732              		.loc 1 777 11 view .LVU1028
 777:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2733              		.loc 1 777 34 is_stmt 0 view .LVU1029
 2734 03d4 2664     		str	r6, [r4, #64]
 780:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2735              		.loc 1 780 11 is_stmt 1 view .LVU1030
 780:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2736              		.loc 1 780 11 view .LVU1031
 2737 03d6 84F85420 		strb	r2, [r4, #84]
 780:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2738              		.loc 1 780 11 view .LVU1032
 782:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 2739              		.loc 1 782 11 view .LVU1033
 782:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 2740              		.loc 1 782 18 is_stmt 0 view .LVU1034
 2741 03da 2BE6     		b	.L158
 2742              	.LVL241:
 2743              	.L190:
 782:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 2744              		.loc 1 782 18 view .LVU1035
 2745              	.LBE230:
 457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 2746              		.loc 1 457 12 discriminator 1 view .LVU1036
 2747 03dc 069F     		ldr	r7, [sp, #24]
 2748              	.LVL242:
 457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 2749              		.loc 1 457 12 discriminator 1 view .LVU1037
 2750 03de 83E7     		b	.L188
 2751              	.LVL243:
 2752              	.L185:
 806:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2753              		.loc 1 806 7 is_stmt 1 view .LVU1038
 813:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2754              		.loc 1 813 7 view .LVU1039
 2755 03e0 43F4C043 		orr	r3, r3, #24576
 2756 03e4 1360     		str	r3, [r2]
 816:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2757              		.loc 1 816 7 view .LVU1040
 816:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2758              		.loc 1 816 10 is_stmt 0 view .LVU1041
 2759 03e6 0428     		cmp	r0, #4
 818:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 2760              		.loc 1 818 9 is_stmt 1 view .LVU1042
 2761 03e8 02BF     		ittt	eq
 2762 03ea 1368     		ldreq	r3, [r2]
 2763 03ec 43F00103 		orreq	r3, r3, #1
 2764 03f0 1360     		streq	r3, [r2]
 821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2765              		.loc 1 821 7 view .LVU1043
 821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2766              		.loc 1 821 22 is_stmt 0 view .LVU1044
 2767 03f2 6369     		ldr	r3, [r4, #20]
 821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2768              		.loc 1 821 10 view .LVU1045
 2769 03f4 602B     		cmp	r3, #96
 2770 03f6 5FD1     		bne	.L195
 823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* input length in bits */
 2771              		.loc 1 823 9 is_stmt 1 view .LVU1046
 823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* input length in bits */
 2772              		.loc 1 823 22 is_stmt 0 view .LVU1047
 2773 03f8 D4E90C03 		ldrd	r0, r3, [r4, #48]
 827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2774              		.loc 1 827 23 view .LVU1048
 2775 03fc D4F808C0 		ldr	ip, [r4, #8]
 823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* input length in bits */
 2776              		.loc 1 823 22 view .LVU1049
 2777 0400 DB00     		lsls	r3, r3, #3
 824:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2778              		.loc 1 824 21 view .LVU1050
 2779 0402 4FEACB06 		lsl	r6, fp, #3
 827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2780              		.loc 1 827 11 view .LVU1051
 2781 0406 BCF1060F 		cmp	ip, #6
 823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* input length in bits */
 2782              		.loc 1 823 22 view .LVU1052
 2783 040a 43EA5073 		orr	r3, r3, r0, lsr #29
 824:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2784              		.loc 1 824 21 view .LVU1053
 2785 040e 46EA5A76 		orr	r6, r6, r10, lsr #29
 823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* input length in bits */
 2786              		.loc 1 823 22 view .LVU1054
 2787 0412 4FEAC000 		lsl	r0, r0, #3
 2788              	.LVL244:
 824:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2789              		.loc 1 824 9 is_stmt 1 view .LVU1055
 824:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2790              		.loc 1 824 21 is_stmt 0 view .LVU1056
 2791 0416 4FEACA07 		lsl	r7, r10, #3
 2792              	.LVL245:
 827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2793              		.loc 1 827 9 is_stmt 1 view .LVU1057
 827:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2794              		.loc 1 827 11 is_stmt 0 view .LVU1058
 2795 041a 2BD1     		bne	.L196
 829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
 2796              		.loc 1 829 11 is_stmt 1 view .LVU1059
 2797              	.LVL246:
 2798              	.LBB231:
 2799              	.LBI231:
 454:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 455:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 457:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 460:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 461:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 462:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 463:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 464:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 469:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 471:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 473:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 476:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 477:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 478:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 479:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 484:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 486:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 489:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 491:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 494:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 495:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 496:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 497:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 498:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 508:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 509:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 510:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 511:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 517:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 519:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 520:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 521:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 2800              		.loc 2 526 57 view .LVU1060
 2801              	.LBB232:
 527:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2802              		.loc 2 528 3 view .LVU1061
 529:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 530:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2803              		.loc 2 531 4 view .LVU1062
 2804              		.syntax unified
 2805              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 2806 041c 93FAA3F3 		rbit r3, r3
 2807              	@ 0 "" 2
 2808              	.LVL247:
 532:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 533:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 535:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   {
 538:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 539:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 540:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     s--;
 541:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   }
 542:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 544:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2809              		.loc 2 544 3 view .LVU1063
 2810              		.loc 2 544 3 is_stmt 0 view .LVU1064
 2811              		.thumb
 2812              		.syntax unified
 2813              	.LBE232:
 2814              	.LBE231:
 829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
 2815              		.loc 1 829 33 view .LVU1065
 2816 0420 9360     		str	r3, [r2, #8]
 830:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)(inputlength>>32));
 2817              		.loc 1 830 11 is_stmt 1 view .LVU1066
 2818              	.LVL248:
 2819              	.LBB233:
 2820              	.LBI233:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 2821              		.loc 2 526 57 view .LVU1067
 2822              	.LBB234:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 2823              		.loc 2 528 3 view .LVU1068
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2824              		.loc 2 531 4 view .LVU1069
 2825              		.syntax unified
 2826              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 2827 0422 90FAA0F0 		rbit r0, r0
 2828              	@ 0 "" 2
 2829              	.LVL249:
 2830              		.loc 2 544 3 view .LVU1070
 2831              		.loc 2 544 3 is_stmt 0 view .LVU1071
 2832              		.thumb
 2833              		.syntax unified
 2834              	.LBE234:
 2835              	.LBE233:
 830:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)(inputlength>>32));
 2836              		.loc 1 830 33 view .LVU1072
 2837 0426 9060     		str	r0, [r2, #8]
 831:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
 2838              		.loc 1 831 11 is_stmt 1 view .LVU1073
 2839              	.LVL250:
 2840              	.LBB235:
 2841              	.LBI235:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 2842              		.loc 2 526 57 view .LVU1074
 2843              	.LBB236:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 2844              		.loc 2 528 3 view .LVU1075
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2845              		.loc 2 531 4 view .LVU1076
 2846              		.syntax unified
 2847              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 2848 0428 96FAA6F6 		rbit r6, r6
 2849              	@ 0 "" 2
 2850              	.LVL251:
 2851              		.loc 2 544 3 view .LVU1077
 2852              		.loc 2 544 3 is_stmt 0 view .LVU1078
 2853              		.thumb
 2854              		.syntax unified
 2855              	.LBE236:
 2856              	.LBE235:
 831:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
 2857              		.loc 1 831 33 view .LVU1079
 2858 042c 9660     		str	r6, [r2, #8]
 832:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 2859              		.loc 1 832 11 is_stmt 1 view .LVU1080
 2860              	.LVL252:
 2861              	.LBB237:
 2862              	.LBI237:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 2863              		.loc 2 526 57 view .LVU1081
 2864              	.LBB238:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 2865              		.loc 2 528 3 view .LVU1082
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2866              		.loc 2 531 4 view .LVU1083
 2867              		.syntax unified
 2868              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 2869 042e 97FAA7F7 		rbit r7, r7
 2870              	@ 0 "" 2
 2871              	.LVL253:
 2872              		.loc 2 544 3 view .LVU1084
 2873              		.thumb
 2874              		.syntax unified
 2875              	.L238:
 2876              		.loc 2 544 3 is_stmt 0 view .LVU1085
 2877              	.LBE238:
 2878              	.LBE237:
 839:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 2879              		.loc 1 839 33 view .LVU1086
 2880 0432 9760     		str	r7, [r2, #8]
 2881              	.LVL254:
 2882              	.L197:
 889:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2883              		.loc 1 889 7 is_stmt 1 view .LVU1087
 889:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2884              		.loc 1 889 10 is_stmt 0 view .LVU1088
 2885 0434 7146     		mov	r1, lr
 2886              	.LVL255:
 889:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2887              		.loc 1 889 10 view .LVU1089
 2888 0436 2046     		mov	r0, r4
 2889 0438 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 2890              	.LVL256:
 889:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 2891              		.loc 1 889 9 view .LVU1090
 2892 043c 0028     		cmp	r0, #0
 2893 043e 7FF4B2AE 		bne	.L242
 897:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2894              		.loc 1 897 7 is_stmt 1 view .LVU1091
 897:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2895              		.loc 1 897 36 is_stmt 0 view .LVU1092
 2896 0442 2368     		ldr	r3, [r4]
 897:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2897              		.loc 1 897 46 view .LVU1093
 2898 0444 DA68     		ldr	r2, [r3, #12]
 897:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2899              		.loc 1 897 29 view .LVU1094
 2900 0446 C9F80020 		str	r2, [r9]
 898:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 2901              		.loc 1 898 7 is_stmt 1 view .LVU1095
 2902              	.LVL257:
 899:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2903              		.loc 1 899 7 view .LVU1096
 899:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2904              		.loc 1 899 46 is_stmt 0 view .LVU1097
 2905 044a DA68     		ldr	r2, [r3, #12]
 899:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2906              		.loc 1 899 29 view .LVU1098
 2907 044c C9F80420 		str	r2, [r9, #4]
 900:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 2908              		.loc 1 900 7 is_stmt 1 view .LVU1099
 2909              	.LVL258:
 901:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2910              		.loc 1 901 7 view .LVU1100
 901:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2911              		.loc 1 901 46 is_stmt 0 view .LVU1101
 2912 0450 DA68     		ldr	r2, [r3, #12]
 901:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 2913              		.loc 1 901 29 view .LVU1102
 2914 0452 C9F80820 		str	r2, [r9, #8]
 902:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 2915              		.loc 1 902 7 is_stmt 1 view .LVU1103
 2916              	.LVL259:
 903:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2917              		.loc 1 903 7 view .LVU1104
 903:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2918              		.loc 1 903 46 is_stmt 0 view .LVU1105
 2919 0456 DA68     		ldr	r2, [r3, #12]
 903:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 2920              		.loc 1 903 29 view .LVU1106
 2921 0458 C9F80C20 		str	r2, [r9, #12]
 907:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the final phase is over */
 2922              		.loc 1 907 7 is_stmt 1 view .LVU1107
 2923 045c 1A68     		ldr	r2, [r3]
 2924 045e 42F08002 		orr	r2, r2, #128
 2925 0462 1A60     		str	r2, [r3]
 909:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable the Peripheral */
 2926              		.loc 1 909 7 view .LVU1108
 909:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable the Peripheral */
 2927              		.loc 1 909 20 is_stmt 0 view .LVU1109
 2928 0464 0722     		movs	r2, #7
 2929 0466 84F84820 		strb	r2, [r4, #72]
 911:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 2930              		.loc 1 911 7 is_stmt 1 view .LVU1110
 2931 046a 1A68     		ldr	r2, [r3]
 2932 046c 22F00102 		bic	r2, r2, #1
 2933 0470 1A60     		str	r2, [r3]
 2934 0472 2BE6     		b	.L168
 2935              	.LVL260:
 2936              	.L196:
 834:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2937              		.loc 1 834 14 view .LVU1111
 834:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 2938              		.loc 1 834 16 is_stmt 0 view .LVU1112
 2939 0474 BCF1040F 		cmp	ip, #4
 2940 0478 07D1     		bne	.L198
 836:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
 2941              		.loc 1 836 11 is_stmt 1 view .LVU1113
 2942              	.LVL261:
 2943              	.LBB239:
 2944              	.LBI239:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 2945              		.loc 2 450 57 view .LVU1114
 2946              	.LBB240:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2947              		.loc 2 453 3 view .LVU1115
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2948              		.loc 2 453 10 is_stmt 0 view .LVU1116
 2949 047a 1BBA     		rev	r3, r3
 2950              	.LVL262:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2951              		.loc 2 453 10 view .LVU1117
 2952              	.LBE240:
 2953              	.LBE239:
 2954              	.LBB241:
 2955              	.LBB242:
 2956 047c 00BA     		rev	r0, r0
 2957              	.LVL263:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2958              		.loc 2 453 10 view .LVU1118
 2959              	.LBE242:
 2960              	.LBE241:
 2961              	.LBB244:
 2962              	.LBB245:
 2963 047e 36BA     		rev	r6, r6
 2964              	.LVL264:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2965              		.loc 2 453 10 view .LVU1119
 2966              	.LBE245:
 2967              	.LBE244:
 836:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
 2968              		.loc 1 836 33 view .LVU1120
 2969 0480 9360     		str	r3, [r2, #8]
 837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
 2970              		.loc 1 837 11 is_stmt 1 view .LVU1121
 2971              	.LBB247:
 2972              	.LBI241:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 2973              		.loc 2 450 57 view .LVU1122
 2974              	.LBB243:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2975              		.loc 2 453 3 view .LVU1123
 2976              	.LBE243:
 2977              	.LBE247:
 2978              	.LBB248:
 2979              	.LBB249:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2980              		.loc 2 453 10 is_stmt 0 view .LVU1124
 2981 0482 3FBA     		rev	r7, r7
 2982              	.LVL265:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2983              		.loc 2 453 10 view .LVU1125
 2984              	.LBE249:
 2985              	.LBE248:
 837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
 2986              		.loc 1 837 33 view .LVU1126
 2987 0484 9060     		str	r0, [r2, #8]
 838:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
 2988              		.loc 1 838 11 is_stmt 1 view .LVU1127
 2989              	.LBB251:
 2990              	.LBI244:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 2991              		.loc 2 450 57 view .LVU1128
 2992              	.LBB246:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 2993              		.loc 2 453 3 view .LVU1129
 2994              	.LBE246:
 2995              	.LBE251:
 838:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
 2996              		.loc 1 838 33 is_stmt 0 view .LVU1130
 2997 0486 9660     		str	r6, [r2, #8]
 839:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 2998              		.loc 1 839 11 is_stmt 1 view .LVU1131
 2999              	.LBB252:
 3000              	.LBI248:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3001              		.loc 2 450 57 view .LVU1132
 3002              	.LBB250:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3003              		.loc 2 453 3 view .LVU1133
 3004 0488 D3E7     		b	.L238
 3005              	.LVL266:
 3006              	.L198:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3007              		.loc 2 453 3 is_stmt 0 view .LVU1134
 3008              	.LBE250:
 3009              	.LBE252:
 841:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3010              		.loc 1 841 14 is_stmt 1 view .LVU1135
 841:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3011              		.loc 1 841 16 is_stmt 0 view .LVU1136
 3012 048a BCF1020F 		cmp	ip, #2
 3013 048e 0BD1     		bne	.L199
 843:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
 3014              		.loc 1 843 11 is_stmt 1 view .LVU1137
 3015              	.LVL267:
 3016              	.LBB253:
 3017              	.LBI253:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3018              		.loc 2 504 57 view .LVU1138
 3019              	.LBB254:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3020              		.loc 2 506 3 view .LVU1139
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3021              		.loc 2 506 23 is_stmt 0 view .LVU1140
 3022 0490 4FEA3343 		ror	r3, r3, #16
 3023              	.LVL268:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3024              		.loc 2 506 23 view .LVU1141
 3025              	.LBE254:
 3026              	.LBE253:
 3027              	.LBB255:
 3028              	.LBB256:
 3029 0494 4FEA3040 		ror	r0, r0, #16
 3030              	.LVL269:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3031              		.loc 2 506 23 view .LVU1142
 3032              	.LBE256:
 3033              	.LBE255:
 3034              	.LBB258:
 3035              	.LBB259:
 3036 0498 4FEA3646 		ror	r6, r6, #16
 3037              	.LVL270:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3038              		.loc 2 506 23 view .LVU1143
 3039              	.LBE259:
 3040              	.LBE258:
 843:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
 3041              		.loc 1 843 33 view .LVU1144
 3042 049c 9360     		str	r3, [r2, #8]
 844:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)(inputlength>>32), 16);
 3043              		.loc 1 844 11 is_stmt 1 view .LVU1145
 3044              	.LVL271:
 3045              	.LBB261:
 3046              	.LBI255:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3047              		.loc 2 504 57 view .LVU1146
 3048              	.LBB257:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3049              		.loc 2 506 3 view .LVU1147
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3050              		.loc 2 506 3 is_stmt 0 view .LVU1148
 3051              	.LBE257:
 3052              	.LBE261:
 3053              	.LBB262:
 3054              	.LBB263:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3055              		.loc 2 506 23 view .LVU1149
 3056 049e 4FEA3747 		ror	r7, r7, #16
 3057              	.LVL272:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3058              		.loc 2 506 23 view .LVU1150
 3059              	.LBE263:
 3060              	.LBE262:
 844:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)(inputlength>>32), 16);
 3061              		.loc 1 844 33 view .LVU1151
 3062 04a2 9060     		str	r0, [r2, #8]
 845:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
 3063              		.loc 1 845 11 is_stmt 1 view .LVU1152
 3064              	.LVL273:
 3065              	.LBB265:
 3066              	.LBI258:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3067              		.loc 2 504 57 view .LVU1153
 3068              	.LBB260:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3069              		.loc 2 506 3 view .LVU1154
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3070              		.loc 2 506 3 is_stmt 0 view .LVU1155
 3071              	.LBE260:
 3072              	.LBE265:
 845:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
 3073              		.loc 1 845 33 view .LVU1156
 3074 04a4 9660     		str	r6, [r2, #8]
 846:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3075              		.loc 1 846 11 is_stmt 1 view .LVU1157
 3076              	.LVL274:
 3077              	.LBB266:
 3078              	.LBI262:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3079              		.loc 2 504 57 view .LVU1158
 3080              	.LBB264:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3081              		.loc 2 506 3 view .LVU1159
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3082              		.loc 2 506 3 is_stmt 0 view .LVU1160
 3083 04a6 C4E7     		b	.L238
 3084              	.LVL275:
 3085              	.L199:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 3086              		.loc 2 506 3 view .LVU1161
 3087              	.LBE264:
 3088              	.LBE266:
 848:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3089              		.loc 1 848 14 is_stmt 1 view .LVU1162
 848:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3090              		.loc 1 848 16 is_stmt 0 view .LVU1163
 3091 04a8 BCF1000F 		cmp	ip, #0
 3092 04ac 7FF4C2AD 		bne	.L158
 850:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
 3093              		.loc 1 850 11 is_stmt 1 view .LVU1164
 850:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
 3094              		.loc 1 850 33 is_stmt 0 view .LVU1165
 3095 04b0 9360     		str	r3, [r2, #8]
 851:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
 3096              		.loc 1 851 11 is_stmt 1 view .LVU1166
 851:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
 3097              		.loc 1 851 33 is_stmt 0 view .LVU1167
 3098 04b2 9060     		str	r0, [r2, #8]
 852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
 3099              		.loc 1 852 11 is_stmt 1 view .LVU1168
 852:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
 3100              		.loc 1 852 33 is_stmt 0 view .LVU1169
 3101 04b4 9660     		str	r6, [r2, #8]
 853:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3102              		.loc 1 853 11 is_stmt 1 view .LVU1170
 3103 04b6 BCE7     		b	.L238
 3104              	.LVL276:
 3105              	.L195:
 868:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3106              		.loc 1 868 12 view .LVU1171
 868:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3107              		.loc 1 868 15 is_stmt 0 view .LVU1172
 3108 04b8 B3F5803F 		cmp	r3, #65536
 3109 04bc 7FF4BAAD 		bne	.L158
 870:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter the last block made of a 128-bit value formatted
 3110              		.loc 1 870 9 is_stmt 1 view .LVU1173
 3111              	.LVL277:
 873:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3112              		.loc 1 873 9 view .LVU1174
 873:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3113              		.loc 1 873 33 is_stmt 0 view .LVU1175
 3114 04c0 3368     		ldr	r3, [r6]
 873:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3115              		.loc 1 873 31 view .LVU1176
 3116 04c2 9360     		str	r3, [r2, #8]
 874:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 3117              		.loc 1 874 9 is_stmt 1 view .LVU1177
 3118              	.LVL278:
 875:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3119              		.loc 1 875 9 view .LVU1178
 875:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3120              		.loc 1 875 33 is_stmt 0 view .LVU1179
 3121 04c4 7368     		ldr	r3, [r6, #4]
 875:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3122              		.loc 1 875 31 view .LVU1180
 3123 04c6 9360     		str	r3, [r2, #8]
 876:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 3124              		.loc 1 876 9 is_stmt 1 view .LVU1181
 3125              	.LVL279:
 877:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3126              		.loc 1 877 9 view .LVU1182
 877:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3127              		.loc 1 877 34 is_stmt 0 view .LVU1183
 3128 04c8 B368     		ldr	r3, [r6, #8]
 877:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3129              		.loc 1 877 32 view .LVU1184
 3130 04ca 9360     		str	r3, [r2, #8]
 878:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 3131              		.loc 1 878 9 is_stmt 1 view .LVU1185
 3132              	.LVL280:
 879:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3133              		.loc 1 879 9 view .LVU1186
 879:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3134              		.loc 1 879 33 is_stmt 0 view .LVU1187
 3135 04cc F368     		ldr	r3, [r6, #12]
 879:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3136              		.loc 1 879 31 view .LVU1188
 3137 04ce 9360     		str	r3, [r2, #8]
 3138 04d0 B0E7     		b	.L197
 3139              	.LVL281:
 3140              	.L201:
 924:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 3141              		.loc 1 924 12 view .LVU1189
 3142 04d2 0225     		movs	r5, #2
 3143 04d4 AEE5     		b	.L158
 3144              	.LVL282:
 3145              	.L202:
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3146              		.loc 1 517 5 view .LVU1190
 3147 04d6 1D46     		mov	r5, r3
 3148 04d8 ACE5     		b	.L158
 3149              		.cfi_endproc
 3150              	.LFE313:
 3152              		.section	.text.HAL_CRYPEx_AES_Auth_IT,"ax",%progbits
 3153              		.align	1
 3154              		.global	HAL_CRYPEx_AES_Auth_IT
 3155              		.syntax unified
 3156              		.thumb
 3157              		.thumb_func
 3158              		.fpu softvfp
 3160              	HAL_CRYPEx_AES_Auth_IT:
 3161              	.LVL283:
 3162              	.LFB314:
 960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3163              		.loc 1 960 1 is_stmt 1 view -0
 3164              		.cfi_startproc
 3165              		@ args = 4, pretend = 0, frame = 48
 3166              		@ frame_needed = 0, uses_anonymous_args = 0
 962:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t headerlength      ;
 3167              		.loc 1 962 3 view .LVU1192
 963:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t inputlength       ;
 3168              		.loc 1 963 3 view .LVU1193
 964:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 3169              		.loc 1 964 3 view .LVU1194
 965:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 3170              		.loc 1 965 3 view .LVU1195
 966:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength     = 0;
 3171              		.loc 1 966 3 view .LVU1196
 967:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflengthmod4 = 0;
 3172              		.loc 1 967 3 view .LVU1197
 968:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask[4][3];
 3173              		.loc 1 968 3 view .LVU1198
 969:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3174              		.loc 1 969 3 view .LVU1199
 971:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3175              		.loc 1 971 3 view .LVU1200
 960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3176              		.loc 1 960 1 is_stmt 0 view .LVU1201
 3177 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3178              	.LCFI19:
 3179              		.cfi_def_cfa_offset 28
 3180              		.cfi_offset 4, -28
 3181              		.cfi_offset 5, -24
 3182              		.cfi_offset 6, -20
 3183              		.cfi_offset 7, -16
 3184              		.cfi_offset 8, -12
 3185              		.cfi_offset 9, -8
 3186              		.cfi_offset 14, -4
 3187 0004 8DB0     		sub	sp, sp, #52
 3188              	.LCFI20:
 3189              		.cfi_def_cfa_offset 80
 960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3190              		.loc 1 960 1 view .LVU1202
 3191 0006 1F46     		mov	r7, r3
 973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 3192              		.loc 1 973 14 view .LVU1203
 3193 0008 4FF07F43 		mov	r3, #-16777216
 3194 000c 0093     		str	r3, [sp]
 973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 3195              		.loc 1 973 41 view .LVU1204
 3196 000e 03F57F03 		add	r3, r3, #16711680
 960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3197              		.loc 1 960 1 view .LVU1205
 3198 0012 1646     		mov	r6, r2
 973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 3199              		.loc 1 973 41 view .LVU1206
 3200 0014 0193     		str	r3, [sp, #4]
 974:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 3201              		.loc 1 974 14 view .LVU1207
 3202 0016 6FF0FF02 		mvn	r2, #255
 3203              	.LVL284:
 974:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 3204              		.loc 1 974 14 view .LVU1208
 3205 001a 4FF47F43 		mov	r3, #65280
 3206 001e CDE90223 		strd	r2, r3, [sp, #8]
 960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3207              		.loc 1 960 1 view .LVU1209
 3208 0022 0446     		mov	r4, r0
 974:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 3209              		.loc 1 974 68 view .LVU1210
 3210 0024 4FF6FF73 		movw	r3, #65535
 3211 0028 6FF47F02 		mvn	r2, #16711680
 3212 002c CDE90432 		strd	r3, r2, [sp, #16]
 971:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3213              		.loc 1 971 36 view .LVU1211
 3214 0030 D0F808C0 		ldr	ip, [r0, #8]
 3215              	.LVL285:
 973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 3216              		.loc 1 973 3 is_stmt 1 view .LVU1212
 973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 3217              		.loc 1 973 30 view .LVU1213
 973:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 3218              		.loc 1 973 57 view .LVU1214
 974:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 3219              		.loc 1 974 30 view .LVU1215
 975:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 3220              		.loc 1 975 3 view .LVU1216
 960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3221              		.loc 1 960 1 is_stmt 0 view .LVU1217
 3222 0034 DDF85080 		ldr	r8, [sp, #80]
 975:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 3223              		.loc 1 975 14 view .LVU1218
 3224 0038 FF20     		movs	r0, #255
 3225              	.LVL286:
 975:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 3226              		.loc 1 975 68 view .LVU1219
 3227 003a 6FF07F42 		mvn	r2, #-16777216
 975:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 3228              		.loc 1 975 41 view .LVU1220
 3229 003e CDE90603 		strd	r0, r3, [sp, #24]
 975:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 3230              		.loc 1 975 57 is_stmt 1 view .LVU1221
 976:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3231              		.loc 1 976 68 is_stmt 0 view .LVU1222
 3232 0042 CDE90A32 		strd	r3, r2, [sp, #40]
 978:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 3233              		.loc 1 978 12 view .LVU1223
 3234 0046 94F85530 		ldrb	r3, [r4, #85]	@ zero_extendqisi2
 978:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 3235              		.loc 1 978 6 view .LVU1224
 3236 004a 012B     		cmp	r3, #1
 976:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3237              		.loc 1 976 14 view .LVU1225
 3238 004c CDE90820 		strd	r2, r0, [sp, #32]
 976:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3239              		.loc 1 976 30 is_stmt 1 view .LVU1226
 978:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 3240              		.loc 1 978 3 view .LVU1227
 978:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 3241              		.loc 1 978 12 is_stmt 0 view .LVU1228
 3242 0050 D8B2     		uxtb	r0, r3
 978:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 3243              		.loc 1 978 6 view .LVU1229
 3244 0052 40F08581 		bne	.L286
 981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3245              		.loc 1 981 5 is_stmt 1 view .LVU1230
 981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3246              		.loc 1 981 20 is_stmt 0 view .LVU1231
 3247 0056 D4F81CE0 		ldr	lr, [r4, #28]
 981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3248              		.loc 1 981 8 view .LVU1232
 3249 005a BEF1000F 		cmp	lr, #0
 3250 005e 15D0     		beq	.L245
 985:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3251              		.loc 1 985 10 is_stmt 1 view .LVU1233
 985:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3252              		.loc 1 985 13 is_stmt 0 view .LVU1234
 3253 0060 BEF5005F 		cmp	lr, #8192
 3254 0064 2CD1     		bne	.L246
 987:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 3255              		.loc 1 987 7 is_stmt 1 view .LVU1235
 987:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 3256              		.loc 1 987 10 is_stmt 0 view .LVU1236
 3257 0066 A56A     		ldr	r5, [r4, #40]
 3258 0068 D4E90C23 		ldrd	r2, [r4, #48]
 3259 006c 25B1     		cbz	r5, .L247
 987:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           ((hcryp->Init.Header == NULL) && (hcryp->Init.HeaderSize != 0U)))
 3260              		.loc 1 987 41 discriminator 1 view .LVU1237
 3261 006e 1343     		orrs	r3, r2, r3
 3262 0070 04D1     		bne	.L248
 3263              	.LVL287:
 3264              	.L244:
1385:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3265              		.loc 1 1385 1 view .LVU1238
 3266 0072 0DB0     		add	sp, sp, #52
 3267              	.LCFI21:
 3268              		.cfi_remember_state
 3269              		.cfi_def_cfa_offset 28
 3270              		@ sp needed
 3271 0074 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3272              	.LVL288:
 3273              	.L247:
 3274              	.LCFI22:
 3275              		.cfi_restore_state
 988:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3276              		.loc 1 988 41 view .LVU1239
 3277 0078 1343     		orrs	r3, r2, r3
 3278 007a FAD1     		bne	.L244
 3279              	.L248:
 995:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3280              		.loc 1 995 7 is_stmt 1 view .LVU1240
 995:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3281              		.loc 1 995 10 is_stmt 0 view .LVU1241
 3282 007c 6369     		ldr	r3, [r4, #20]
 3283 007e B3F5803F 		cmp	r3, #65536
 3284 0082 03D1     		bne	.L245
 999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3285              		.loc 1 999 9 is_stmt 1 view .LVU1242
 999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3286              		.loc 1 999 12 is_stmt 0 view .LVU1243
 3287 0084 C1B1     		cbz	r1, .L250
 999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3288              		.loc 1 999 35 discriminator 1 view .LVU1244
 3289 0086 56EA0703 		orrs	r3, r6, r7
 3290 008a F2D0     		beq	.L244
 3291              	.L245:
1033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3292              		.loc 1 1033 5 is_stmt 1 view .LVU1245
1033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3293              		.loc 1 1033 5 view .LVU1246
 3294 008c 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 3295 0090 012B     		cmp	r3, #1
 3296 0092 4FF00203 		mov	r3, #2
 3297 0096 00F06581 		beq	.L287
1033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3298              		.loc 1 1033 5 discriminator 2 view .LVU1247
1033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3299              		.loc 1 1033 5 discriminator 2 view .LVU1248
1036:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3300              		.loc 1 1036 5 discriminator 2 view .LVU1249
1036:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3301              		.loc 1 1036 18 is_stmt 0 discriminator 2 view .LVU1250
 3302 009a 84F85530 		strb	r3, [r4, #85]
1039:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3303              		.loc 1 1039 5 is_stmt 1 discriminator 2 view .LVU1251
1039:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3304              		.loc 1 1039 5 discriminator 2 view .LVU1252
 3305 009e 0023     		movs	r3, #0
 3306 00a0 84F85430 		strb	r3, [r4, #84]
1039:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3307              		.loc 1 1039 5 discriminator 2 view .LVU1253
1042:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3308              		.loc 1 1042 5 discriminator 2 view .LVU1254
 3309 00a4 2368     		ldr	r3, [r4]
 3310 00a6 1A68     		ldr	r2, [r3]
 3311 00a8 42F4C062 		orr	r2, r2, #1536
 3312 00ac 1A60     		str	r2, [r3]
1049:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3313              		.loc 1 1049 5 discriminator 2 view .LVU1255
1049:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3314              		.loc 1 1049 8 is_stmt 0 discriminator 2 view .LVU1256
 3315 00ae BEF1000F 		cmp	lr, #0
 3316 00b2 1ED1     		bne	.L252
 3317              	.LVL289:
 3318              	.L323:
1379:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 3319              		.loc 1 1379 12 view .LVU1257
 3320 00b4 0020     		movs	r0, #0
 3321 00b6 DCE7     		b	.L244
 3322              	.LVL290:
 3323              	.L250:
 999:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3324              		.loc 1 999 77 discriminator 4 view .LVU1258
 3325 00b8 56EA0703 		orrs	r3, r6, r7
 3326 00bc E6D0     		beq	.L245
 3327 00be D8E7     		b	.L244
 3328              	.L246:
1005:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3329              		.loc 1 1005 10 is_stmt 1 view .LVU1259
1005:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3330              		.loc 1 1005 13 is_stmt 0 view .LVU1260
 3331 00c0 BEF5804F 		cmp	lr, #16384
 3332 00c4 08D1     		bne	.L251
1007:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3333              		.loc 1 1007 7 is_stmt 1 view .LVU1261
1007:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3334              		.loc 1 1007 10 is_stmt 0 view .LVU1262
 3335 00c6 0029     		cmp	r1, #0
 3336 00c8 E0D0     		beq	.L245
1007:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3337              		.loc 1 1007 32 discriminator 1 view .LVU1263
 3338 00ca 56EA0703 		orrs	r3, r6, r7
 3339 00ce DDD0     		beq	.L245
1007:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3340              		.loc 1 1007 48 discriminator 2 view .LVU1264
 3341 00d0 B8F1000F 		cmp	r8, #0
 3342 00d4 DAD1     		bne	.L245
 3343 00d6 CCE7     		b	.L244
 3344              	.L251:
1012:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3345              		.loc 1 1012 10 is_stmt 1 view .LVU1265
1012:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3346              		.loc 1 1012 13 is_stmt 0 view .LVU1266
 3347 00d8 BEF5C04F 		cmp	lr, #24576
 3348 00dc C9D1     		bne	.L244
1014:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3349              		.loc 1 1014 7 is_stmt 1 view .LVU1267
1014:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3350              		.loc 1 1014 10 is_stmt 0 view .LVU1268
 3351 00de B8F1000F 		cmp	r8, #0
 3352 00e2 C6D0     		beq	.L244
1019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3353              		.loc 1 1019 7 is_stmt 1 view .LVU1269
1019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3354              		.loc 1 1019 10 is_stmt 0 view .LVU1270
 3355 00e4 6369     		ldr	r3, [r4, #20]
 3356 00e6 B3F5803F 		cmp	r3, #65536
 3357 00ea CFD1     		bne	.L245
1019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3358              		.loc 1 1019 65 discriminator 1 view .LVU1271
 3359 00ec 0029     		cmp	r1, #0
 3360 00ee CDD1     		bne	.L245
 3361 00f0 BFE7     		b	.L244
 3362              	.L252:
1059:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3363              		.loc 1 1059 13 view .LVU1272
 3364 00f2 BEF5005F 		cmp	lr, #8192
 971:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3365              		.loc 1 971 12 view .LVU1273
 3366 00f6 4FEA5C02 		lsr	r2, ip, #1
1059:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3367              		.loc 1 1059 10 is_stmt 1 view .LVU1274
1059:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3368              		.loc 1 1059 13 is_stmt 0 view .LVU1275
 3369 00fa 7CD1     		bne	.L253
1065:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3370              		.loc 1 1065 7 is_stmt 1 view .LVU1276
 3371 00fc D4E90C89 		ldrd	r8, [r4, #48]
1065:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3372              		.loc 1 1065 22 is_stmt 0 view .LVU1277
 3373 0100 D4F814E0 		ldr	lr, [r4, #20]
1065:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3374              		.loc 1 1065 10 view .LVU1278
 3375 0104 BEF5803F 		cmp	lr, #65536
 3376 0108 4546     		mov	r5, r8
 3377 010a 20D1     		bne	.L254
1074:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 3378              		.loc 1 1074 11 is_stmt 1 view .LVU1279
1074:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 3379              		.loc 1 1074 14 is_stmt 0 view .LVU1280
 3380 010c 56EA0700 		orrs	r0, r6, r7
 3381 0110 1DD0     		beq	.L254
1076:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->pCrypInBuffPtr = pInputData;
 3382              		.loc 1 1076 13 is_stmt 1 view .LVU1281
1076:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->pCrypInBuffPtr = pInputData;
 3383              		.loc 1 1076 34 is_stmt 0 view .LVU1282
 3384 0112 4644     		add	r6, r6, r8
1076:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             hcryp->pCrypInBuffPtr = pInputData;
 3385              		.loc 1 1076 32 view .LVU1283
 3386 0114 2664     		str	r6, [r4, #64]
1077:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 3387              		.loc 1 1077 13 is_stmt 1 view .LVU1284
 3388              	.LVL291:
 3389              	.L320:
1089:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3390              		.loc 1 1089 31 is_stmt 0 view .LVU1285
 3391 0116 A163     		str	r1, [r4, #56]
1092:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3392              		.loc 1 1092 7 is_stmt 1 view .LVU1286
1099:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3393              		.loc 1 1099 9 is_stmt 0 view .LVU1287
 3394 0118 1968     		ldr	r1, [r3]
1092:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3395              		.loc 1 1092 34 view .LVU1288
 3396 011a A66B     		ldr	r6, [r4, #56]
 3397              	.LVL292:
1097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3398              		.loc 1 1097 7 is_stmt 1 view .LVU1289
1099:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3399              		.loc 1 1099 9 is_stmt 0 view .LVU1290
 3400 011c 21F4C041 		bic	r1, r1, #24576
1097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3401              		.loc 1 1097 10 view .LVU1291
 3402 0120 BEF1600F 		cmp	lr, #96
1099:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3403              		.loc 1 1099 9 is_stmt 1 view .LVU1292
 3404 0124 04BF     		itt	eq
 3405 0126 21F00601 		biceq	r1, r1, #6
 3406 012a 41EA0C01 		orreq	r1, r1, ip
1104:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3407              		.loc 1 1104 9 view .LVU1293
 3408 012e 41F40051 		orr	r1, r1, #8192
 3409 0132 1960     		str	r1, [r3]
1108:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3410              		.loc 1 1108 7 view .LVU1294
 3411 0134 1968     		ldr	r1, [r3]
1111:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3412              		.loc 1 1111 16 is_stmt 0 view .LVU1295
 3413 0136 206C     		ldr	r0, [r4, #64]
1108:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3414              		.loc 1 1108 7 view .LVU1296
 3415 0138 41F00101 		orr	r1, r1, #1
 3416 013c 1960     		str	r1, [r3]
1111:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3417              		.loc 1 1111 7 is_stmt 1 view .LVU1297
1111:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3418              		.loc 1 1111 10 is_stmt 0 view .LVU1298
 3419 013e 50B9     		cbnz	r0, .L259
1114:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
 3420              		.loc 1 1114 9 is_stmt 1 view .LVU1299
1114:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
 3421              		.loc 1 1114 22 is_stmt 0 view .LVU1300
 3422 0140 0123     		movs	r3, #1
 3423 0142 84F85530 		strb	r3, [r4, #85]
1116:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
 3424              		.loc 1 1116 9 is_stmt 1 view .LVU1301
1116:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_OK;
 3425              		.loc 1 1116 22 is_stmt 0 view .LVU1302
 3426 0146 0523     		movs	r3, #5
 3427 0148 84F84830 		strb	r3, [r4, #72]
1117:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3428              		.loc 1 1117 9 is_stmt 1 view .LVU1303
1117:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3429              		.loc 1 1117 16 is_stmt 0 view .LVU1304
 3430 014c 91E7     		b	.L244
 3431              	.LVL293:
 3432              	.L254:
1088:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypInBuffPtr = hcryp->Init.Header;
 3433              		.loc 1 1088 9 is_stmt 1 view .LVU1305
1089:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3434              		.loc 1 1089 31 is_stmt 0 view .LVU1306
 3435 014e A16A     		ldr	r1, [r4, #40]
 3436              	.LVL294:
1088:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->pCrypInBuffPtr = hcryp->Init.Header;
 3437              		.loc 1 1088 28 view .LVU1307
 3438 0150 C4F84080 		str	r8, [r4, #64]
1089:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3439              		.loc 1 1089 9 is_stmt 1 view .LVU1308
 3440 0154 DFE7     		b	.L320
 3441              	.LVL295:
 3442              	.L259:
1119:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3443              		.loc 1 1119 15 is_stmt 0 view .LVU1309
 3444 0156 0F28     		cmp	r0, #15
1092:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3445              		.loc 1 1092 17 view .LVU1310
 3446 0158 3746     		mov	r7, r6
1119:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3447              		.loc 1 1119 12 is_stmt 1 view .LVU1311
1119:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3448              		.loc 1 1119 15 is_stmt 0 view .LVU1312
 3449 015a 16D8     		bhi	.L260
1121:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         addhoc_process = 1;
 3450              		.loc 1 1121 9 is_stmt 1 view .LVU1313
1121:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         addhoc_process = 1;
 3451              		.loc 1 1121 28 is_stmt 0 view .LVU1314
 3452 015c 0021     		movs	r1, #0
1136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3453              		.loc 1 1136 10 view .LVU1315
 3454 015e BEF5803F 		cmp	lr, #65536
1121:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         addhoc_process = 1;
 3455              		.loc 1 1121 28 view .LVU1316
 3456 0162 2164     		str	r1, [r4, #64]
1122:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = (uint32_t) (hcryp->Init.HeaderSize);
 3457              		.loc 1 1122 9 is_stmt 1 view .LVU1317
 3458              	.LVL296:
1123:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflengthmod4 = difflength%4U;
 3459              		.loc 1 1123 9 view .LVU1318
1124:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3460              		.loc 1 1124 9 view .LVU1319
1124:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3461              		.loc 1 1124 24 is_stmt 0 view .LVU1320
 3462 0164 08F0030C 		and	ip, r8, #3
 3463              	.LVL297:
1136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3464              		.loc 1 1136 7 is_stmt 1 view .LVU1321
1136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3465              		.loc 1 1136 10 is_stmt 0 view .LVU1322
 3466 0168 0BD1     		bne	.L262
1122:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflength = (uint32_t) (hcryp->Init.HeaderSize);
 3467              		.loc 1 1122 24 view .LVU1323
 3468 016a 4FF0010E 		mov	lr, #1
 3469              	.LVL298:
 3470              	.L261:
1139:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3471              		.loc 1 1139 9 is_stmt 1 view .LVU1324
1139:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3472              		.loc 1 1139 18 is_stmt 0 view .LVU1325
 3473 016e 0021     		movs	r1, #0
 3474 0170 206C     		ldr	r0, [r4, #64]
1139:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3475              		.loc 1 1139 12 view .LVU1326
 3476 0172 4945     		cmp	r1, r9
 3477 0174 02BF     		ittt	eq
 3478 0176 4045     		cmpeq	r0, r8
1144:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3479              		.loc 1 1144 11 is_stmt 1 view .LVU1327
1144:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3480              		.loc 1 1144 33 is_stmt 0 view .LVU1328
 3481 0178 A16A     		ldreq	r1, [r4, #40]
 3482 017a A163     		streq	r1, [r4, #56]
1150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3483              		.loc 1 1150 7 is_stmt 1 view .LVU1329
1150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3484              		.loc 1 1150 10 is_stmt 0 view .LVU1330
 3485 017c BEF1000F 		cmp	lr, #0
 3486 0180 0BD0     		beq	.L264
 3487              	.L262:
1150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3488              		.loc 1 1150 10 view .LVU1331
 3489 0182 25F00301 		bic	r1, r5, #3
 3490 0186 0E44     		add	r6, r6, r1
 3491              	.LVL299:
1150:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3492              		.loc 1 1150 10 view .LVU1332
 3493 0188 17E0     		b	.L265
 3494              	.LVL300:
 3495              	.L260:
1128:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount -= 16U;
 3496              		.loc 1 1128 9 is_stmt 1 view .LVU1333
1128:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount -= 16U;
 3497              		.loc 1 1128 31 is_stmt 0 view .LVU1334
 3498 018a 06F11001 		add	r1, r6, #16
1129:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3499              		.loc 1 1129 28 view .LVU1335
 3500 018e 1038     		subs	r0, r0, #16
1136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3501              		.loc 1 1136 10 view .LVU1336
 3502 0190 BEF5803F 		cmp	lr, #65536
1128:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount -= 16U;
 3503              		.loc 1 1128 31 view .LVU1337
 3504 0194 A163     		str	r1, [r4, #56]
1129:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3505              		.loc 1 1129 9 is_stmt 1 view .LVU1338
1129:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3506              		.loc 1 1129 28 is_stmt 0 view .LVU1339
 3507 0196 2064     		str	r0, [r4, #64]
1136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3508              		.loc 1 1136 7 is_stmt 1 view .LVU1340
1136:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 3509              		.loc 1 1136 10 is_stmt 0 view .LVU1341
 3510 0198 08D0     		beq	.L289
 3511              	.LVL301:
 3512              	.L264:
1153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3513              		.loc 1 1153 9 is_stmt 1 view .LVU1342
1153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3514              		.loc 1 1153 33 is_stmt 0 view .LVU1343
 3515 019a 3268     		ldr	r2, [r6]
1153:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3516              		.loc 1 1153 31 view .LVU1344
 3517 019c 9A60     		str	r2, [r3, #8]
1154:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 3518              		.loc 1 1154 9 is_stmt 1 view .LVU1345
 3519              	.LVL302:
1155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3520              		.loc 1 1155 9 view .LVU1346
1155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3521              		.loc 1 1155 33 is_stmt 0 view .LVU1347
 3522 019e 7268     		ldr	r2, [r6, #4]
1155:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3523              		.loc 1 1155 31 view .LVU1348
 3524 01a0 9A60     		str	r2, [r3, #8]
1156:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 3525              		.loc 1 1156 9 is_stmt 1 view .LVU1349
 3526              	.LVL303:
1157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3527              		.loc 1 1157 9 view .LVU1350
1157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3528              		.loc 1 1157 34 is_stmt 0 view .LVU1351
 3529 01a2 B268     		ldr	r2, [r6, #8]
1157:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3530              		.loc 1 1157 32 view .LVU1352
 3531 01a4 9A60     		str	r2, [r3, #8]
1158:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 3532              		.loc 1 1158 9 is_stmt 1 view .LVU1353
 3533              	.LVL304:
1159:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3534              		.loc 1 1159 9 view .LVU1354
1159:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3535              		.loc 1 1159 33 is_stmt 0 view .LVU1355
 3536 01a6 F268     		ldr	r2, [r6, #12]
 3537              	.LVL305:
 3538              	.L325:
1369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3539              		.loc 1 1369 31 view .LVU1356
 3540 01a8 9A60     		str	r2, [r3, #8]
 3541 01aa 83E7     		b	.L323
 3542              	.LVL306:
 3543              	.L289:
 968:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask[4][3];
 3544              		.loc 1 968 12 view .LVU1357
 3545 01ac 0025     		movs	r5, #0
 967:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflengthmod4 = 0;
 3546              		.loc 1 967 12 view .LVU1358
 3547 01ae AC46     		mov	ip, r5
 3548              	.LVL307:
 966:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength     = 0;
 3549              		.loc 1 966 12 view .LVU1359
 3550 01b0 AE46     		mov	lr, r5
 3551 01b2 DCE7     		b	.L261
 3552              	.LVL308:
 3553              	.L266:
1168:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 3554              		.loc 1 1168 11 is_stmt 1 discriminator 3 view .LVU1360
1168:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 3555              		.loc 1 1168 35 is_stmt 0 discriminator 3 view .LVU1361
 3556 01b4 57F8041B 		ldr	r1, [r7], #4
 3557              	.LVL309:
1168:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 3558              		.loc 1 1168 33 discriminator 3 view .LVU1362
 3559 01b8 9960     		str	r1, [r3, #8]
1169:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3560              		.loc 1 1169 11 is_stmt 1 discriminator 3 view .LVU1363
 3561              	.LVL310:
1165:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3562              		.loc 1 1165 49 discriminator 3 view .LVU1364
 3563              	.L265:
1165:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3564              		.loc 1 1165 24 discriminator 1 view .LVU1365
1165:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3565              		.loc 1 1165 9 is_stmt 0 discriminator 1 view .LVU1366
 3566 01ba BE42     		cmp	r6, r7
 3567 01bc FAD1     		bne	.L266
1173:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3568              		.loc 1 1173 9 is_stmt 1 view .LVU1367
1173:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3569              		.loc 1 1173 12 is_stmt 0 view .LVU1368
 3570 01be BCF1000F 		cmp	ip, #0
 3571 01c2 0CD0     		beq	.L267
1175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3572              		.loc 1 1175 11 is_stmt 1 view .LVU1369
1175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3573              		.loc 1 1175 80 is_stmt 0 view .LVU1370
 3574 01c4 02EB4202 		add	r2, r2, r2, lsl #1
 3575 01c8 0CF1FF3C 		add	ip, ip, #-1
 3576 01cc 0CA9     		add	r1, sp, #48
 3577 01ce 6244     		add	r2, r2, ip
 3578 01d0 01EB8202 		add	r2, r1, r2, lsl #2
1175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3579              		.loc 1 1175 62 view .LVU1371
 3580 01d4 3168     		ldr	r1, [r6]
 3581 01d6 52F8302C 		ldr	r2, [r2, #-48]
 3582 01da 0A40     		ands	r2, r2, r1
1175:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3583              		.loc 1 1175 33 view .LVU1372
 3584 01dc 9A60     		str	r2, [r3, #8]
 3585              	.L267:
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3586              		.loc 1 1178 49 discriminator 1 view .LVU1373
 3587 01de 0335     		adds	r5, r5, #3
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3588              		.loc 1 1178 53 discriminator 1 view .LVU1374
 3589 01e0 AD08     		lsrs	r5, r5, #2
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3590              		.loc 1 1178 35 discriminator 1 view .LVU1375
 3591 01e2 0022     		movs	r2, #0
 3592 01e4 C5F10405 		rsb	r5, r5, #4
1180:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3593              		.loc 1 1180 33 discriminator 1 view .LVU1376
 3594 01e8 1146     		mov	r1, r2
 3595              	.L268:
 3596              	.LVL311:
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3597              		.loc 1 1178 23 is_stmt 1 discriminator 1 view .LVU1377
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3598              		.loc 1 1178 9 is_stmt 0 discriminator 1 view .LVU1378
 3599 01ea 9542     		cmp	r5, r2
 3600 01ec 3FF462AF 		beq	.L323
1180:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3601              		.loc 1 1180 11 is_stmt 1 discriminator 3 view .LVU1379
1180:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3602              		.loc 1 1180 33 is_stmt 0 discriminator 3 view .LVU1380
 3603 01f0 9960     		str	r1, [r3, #8]
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3604              		.loc 1 1178 60 is_stmt 1 discriminator 3 view .LVU1381
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3605              		.loc 1 1178 66 is_stmt 0 discriminator 3 view .LVU1382
 3606 01f2 0132     		adds	r2, r2, #1
 3607              	.LVL312:
1178:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3608              		.loc 1 1178 66 discriminator 3 view .LVU1383
 3609 01f4 F9E7     		b	.L268
 3610              	.LVL313:
 3611              	.L253:
1188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3612              		.loc 1 1188 10 is_stmt 1 view .LVU1384
1188:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 3613              		.loc 1 1188 13 is_stmt 0 view .LVU1385
 3614 01f6 BEF5804F 		cmp	lr, #16384
 3615 01fa 94F84850 		ldrb	r5, [r4, #72]	@ zero_extendqisi2
 3616 01fe 5BD1     		bne	.L271
1191:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr = pInputData;
 3617              		.loc 1 1191 7 is_stmt 1 view .LVU1386
1198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3618              		.loc 1 1198 7 is_stmt 0 view .LVU1387
 3619 0200 1868     		ldr	r0, [r3]
1191:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypInBuffPtr = pInputData;
 3620              		.loc 1 1191 26 view .LVU1388
 3621 0202 2664     		str	r6, [r4, #64]
1192:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->pCrypOutBuffPtr = pOutputData;
 3622              		.loc 1 1192 7 is_stmt 1 view .LVU1389
1198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3623              		.loc 1 1198 7 is_stmt 0 view .LVU1390
 3624 0204 20F4C040 		bic	r0, r0, #24576
 3625 0208 40F48040 		orr	r0, r0, #16384
1201:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3626              		.loc 1 1201 10 view .LVU1391
 3627 020c 042D     		cmp	r5, #4
1193:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->CrypOutCount = (uint32_t)Size;
 3628              		.loc 1 1193 30 view .LVU1392
 3629 020e C4E90E18 		strd	r1, r8, [r4, #56]
1194:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3630              		.loc 1 1194 7 is_stmt 1 view .LVU1393
1194:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3631              		.loc 1 1194 27 is_stmt 0 view .LVU1394
 3632 0212 6664     		str	r6, [r4, #68]
1196:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3633              		.loc 1 1196 7 is_stmt 1 view .LVU1395
 3634              	.LVL314:
1198:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3635              		.loc 1 1198 7 view .LVU1396
 3636 0214 1860     		str	r0, [r3]
1201:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3637              		.loc 1 1201 7 view .LVU1397
1203:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3638              		.loc 1 1203 9 view .LVU1398
 3639 0216 02BF     		ittt	eq
 3640 0218 1868     		ldreq	r0, [r3]
 3641 021a 40F00100 		orreq	r0, r0, #1
 3642 021e 1860     		streq	r0, [r3]
1207:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3643              		.loc 1 1207 7 view .LVU1399
1207:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3644              		.loc 1 1207 10 is_stmt 0 view .LVU1400
 3645 0220 41B9     		cbnz	r1, .L273
 3646              	.LVL315:
1209:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
 3647              		.loc 1 1209 9 is_stmt 1 view .LVU1401
1209:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
 3648              		.loc 1 1209 22 is_stmt 0 view .LVU1402
 3649 0222 0123     		movs	r3, #1
 3650 0224 84F85530 		strb	r3, [r4, #85]
1211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
 3651              		.loc 1 1211 9 is_stmt 1 view .LVU1403
1211:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
 3652              		.loc 1 1211 22 is_stmt 0 view .LVU1404
 3653 0228 0623     		movs	r3, #6
 3654 022a 84F84830 		strb	r3, [r4, #72]
1213:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3655              		.loc 1 1213 9 is_stmt 1 view .LVU1405
1213:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3656              		.loc 1 1213 9 view .LVU1406
 3657 022e 84F85410 		strb	r1, [r4, #84]
1213:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3658              		.loc 1 1213 9 view .LVU1407
1215:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3659              		.loc 1 1215 9 view .LVU1408
 3660 0232 3FE7     		b	.L323
 3661              	.L273:
1219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3662              		.loc 1 1219 10 is_stmt 0 view .LVU1409
 3663 0234 002F     		cmp	r7, #0
 3664 0236 08BF     		it	eq
 3665 0238 102E     		cmpeq	r6, #16
1196:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3666              		.loc 1 1196 17 view .LVU1410
 3667 023a 0D46     		mov	r5, r1
1219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3668              		.loc 1 1219 7 is_stmt 1 view .LVU1411
1219:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3669              		.loc 1 1219 10 is_stmt 0 view .LVU1412
 3670 023c 2FD2     		bcs	.L274
1221:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #if defined(AES_CR_NPBLB)
 3671              		.loc 1 1221 9 is_stmt 1 view .LVU1413
 3672              	.LVL316:
1239:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3673              		.loc 1 1239 9 view .LVU1414
1239:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3674              		.loc 1 1239 12 is_stmt 0 view .LVU1415
 3675 023e 2069     		ldr	r0, [r4, #16]
 3676 0240 38B9     		cbnz	r0, .L275
1242:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3677              		.loc 1 1242 11 is_stmt 1 view .LVU1416
 3678 0242 1868     		ldr	r0, [r3]
 3679 0244 20F48030 		bic	r0, r0, #65536
 3680 0248 20F06000 		bic	r0, r0, #96
 3681 024c 40F04000 		orr	r0, r0, #64
 3682 0250 1860     		str	r0, [r3]
 3683              	.L275:
1248:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3684              		.loc 1 1248 9 view .LVU1417
1248:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3685              		.loc 1 1248 28 is_stmt 0 view .LVU1418
 3686 0252 0020     		movs	r0, #0
 3687 0254 2064     		str	r0, [r4, #64]
1252:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /*  Insert the last block (which size is inferior to 128 bits) padded with zeroes
 3688              		.loc 1 1252 9 is_stmt 1 view .LVU1419
 3689 0256 26F00300 		bic	r0, r6, #3
1252:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /*  Insert the last block (which size is inferior to 128 bits) padded with zeroes
 3690              		.loc 1 1252 24 is_stmt 0 view .LVU1420
 3691 025a 06F00304 		and	r4, r6, #3
 3692              	.LVL317:
1255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3693              		.loc 1 1255 9 is_stmt 1 view .LVU1421
1255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3694              		.loc 1 1255 9 is_stmt 0 view .LVU1422
 3695 025e 0144     		add	r1, r1, r0
 3696              	.LVL318:
 3697              	.L276:
1255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3698              		.loc 1 1255 23 is_stmt 1 discriminator 1 view .LVU1423
1255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3699              		.loc 1 1255 9 is_stmt 0 discriminator 1 view .LVU1424
 3700 0260 A942     		cmp	r1, r5
 3701 0262 18D1     		bne	.L277
1262:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3702              		.loc 1 1262 9 is_stmt 1 view .LVU1425
1262:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3703              		.loc 1 1262 12 is_stmt 0 view .LVU1426
 3704 0264 5CB1     		cbz	r4, .L278
1264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3705              		.loc 1 1264 11 is_stmt 1 view .LVU1427
1264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3706              		.loc 1 1264 80 is_stmt 0 view .LVU1428
 3707 0266 02EB4202 		add	r2, r2, r2, lsl #1
 3708 026a 013C     		subs	r4, r4, #1
 3709              	.LVL319:
1264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3710              		.loc 1 1264 80 view .LVU1429
 3711 026c 2244     		add	r2, r2, r4
 3712 026e 0CA8     		add	r0, sp, #48
 3713 0270 00EB8202 		add	r2, r0, r2, lsl #2
1264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3714              		.loc 1 1264 62 view .LVU1430
 3715 0274 0968     		ldr	r1, [r1]
 3716 0276 52F8302C 		ldr	r2, [r2, #-48]
 3717 027a 0A40     		ands	r2, r2, r1
1264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3718              		.loc 1 1264 33 view .LVU1431
 3719 027c 9A60     		str	r2, [r3, #8]
 3720              	.LVL320:
 3721              	.L278:
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3722              		.loc 1 1267 49 discriminator 1 view .LVU1432
 3723 027e 0336     		adds	r6, r6, #3
 3724              	.LVL321:
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3725              		.loc 1 1267 53 discriminator 1 view .LVU1433
 3726 0280 B608     		lsrs	r6, r6, #2
 3727              	.LVL322:
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3728              		.loc 1 1267 35 discriminator 1 view .LVU1434
 3729 0282 0022     		movs	r2, #0
 3730 0284 C6F10406 		rsb	r6, r6, #4
1269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3731              		.loc 1 1269 33 discriminator 1 view .LVU1435
 3732 0288 1146     		mov	r1, r2
 3733              	.L279:
 3734              	.LVL323:
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3735              		.loc 1 1267 23 is_stmt 1 discriminator 1 view .LVU1436
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3736              		.loc 1 1267 9 is_stmt 0 discriminator 1 view .LVU1437
 3737 028a 9642     		cmp	r6, r2
 3738 028c 3FF412AF 		beq	.L323
1269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3739              		.loc 1 1269 11 is_stmt 1 discriminator 3 view .LVU1438
1269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3740              		.loc 1 1269 33 is_stmt 0 discriminator 3 view .LVU1439
 3741 0290 9960     		str	r1, [r3, #8]
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3742              		.loc 1 1267 60 is_stmt 1 discriminator 3 view .LVU1440
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3743              		.loc 1 1267 66 is_stmt 0 discriminator 3 view .LVU1441
 3744 0292 0132     		adds	r2, r2, #1
 3745              	.LVL324:
1267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3746              		.loc 1 1267 66 discriminator 3 view .LVU1442
 3747 0294 F9E7     		b	.L279
 3748              	.LVL325:
 3749              	.L277:
1258:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 3750              		.loc 1 1258 11 is_stmt 1 discriminator 3 view .LVU1443
1258:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 3751              		.loc 1 1258 35 is_stmt 0 discriminator 3 view .LVU1444
 3752 0296 55F8040B 		ldr	r0, [r5], #4
 3753              	.LVL326:
1258:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 3754              		.loc 1 1258 33 discriminator 3 view .LVU1445
 3755 029a 9860     		str	r0, [r3, #8]
1259:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3756              		.loc 1 1259 11 is_stmt 1 discriminator 3 view .LVU1446
 3757              	.LVL327:
1255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3758              		.loc 1 1255 48 discriminator 3 view .LVU1447
 3759 029c E0E7     		b	.L276
 3760              	.LVL328:
 3761              	.L274:
1275:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount -= 16U;
 3762              		.loc 1 1275 9 view .LVU1448
1275:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount -= 16U;
 3763              		.loc 1 1275 31 is_stmt 0 view .LVU1449
 3764 029e 01F11002 		add	r2, r1, #16
1276:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3765              		.loc 1 1276 28 view .LVU1450
 3766 02a2 103E     		subs	r6, r6, #16
1275:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypInCount -= 16U;
 3767              		.loc 1 1275 31 view .LVU1451
 3768 02a4 A263     		str	r2, [r4, #56]
1276:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3769              		.loc 1 1276 9 is_stmt 1 view .LVU1452
1276:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3770              		.loc 1 1276 28 is_stmt 0 view .LVU1453
 3771 02a6 2664     		str	r6, [r4, #64]
1280:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3772              		.loc 1 1280 9 is_stmt 1 view .LVU1454
 3773              	.LVL329:
 3774              	.L324:
1360:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter the last block made of a 128-bit value formatted
 3775              		.loc 1 1360 9 view .LVU1455
1363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3776              		.loc 1 1363 9 view .LVU1456
1363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3777              		.loc 1 1363 33 is_stmt 0 view .LVU1457
 3778 02a8 0A68     		ldr	r2, [r1]
1363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3779              		.loc 1 1363 31 view .LVU1458
 3780 02aa 9A60     		str	r2, [r3, #8]
1364:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 3781              		.loc 1 1364 9 is_stmt 1 view .LVU1459
 3782              	.LVL330:
1365:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3783              		.loc 1 1365 9 view .LVU1460
1365:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3784              		.loc 1 1365 33 is_stmt 0 view .LVU1461
 3785 02ac 4A68     		ldr	r2, [r1, #4]
1365:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3786              		.loc 1 1365 31 view .LVU1462
 3787 02ae 9A60     		str	r2, [r3, #8]
1366:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 3788              		.loc 1 1366 9 is_stmt 1 view .LVU1463
 3789              	.LVL331:
1367:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3790              		.loc 1 1367 9 view .LVU1464
1367:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3791              		.loc 1 1367 34 is_stmt 0 view .LVU1465
 3792 02b0 8A68     		ldr	r2, [r1, #8]
1367:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 3793              		.loc 1 1367 32 view .LVU1466
 3794 02b2 9A60     		str	r2, [r3, #8]
1368:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 3795              		.loc 1 1368 9 is_stmt 1 view .LVU1467
 3796              	.LVL332:
1369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3797              		.loc 1 1369 9 view .LVU1468
1369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3798              		.loc 1 1369 33 is_stmt 0 view .LVU1469
 3799 02b4 CA68     		ldr	r2, [r1, #12]
 3800 02b6 77E7     		b	.L325
 3801              	.LVL333:
 3802              	.L271:
1294:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3803              		.loc 1 1294 8 is_stmt 1 view .LVU1470
1301:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3804              		.loc 1 1301 8 is_stmt 0 view .LVU1471
 3805 02b8 1A68     		ldr	r2, [r3]
1294:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3806              		.loc 1 1294 31 view .LVU1472
 3807 02ba C4F83C80 		str	r8, [r4, #60]
1301:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 3808              		.loc 1 1301 8 is_stmt 1 view .LVU1473
 3809 02be 42F4C042 		orr	r2, r2, #24576
 3810 02c2 1A60     		str	r2, [r3]
1304:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3811              		.loc 1 1304 7 view .LVU1474
1304:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3812              		.loc 1 1304 10 is_stmt 0 view .LVU1475
 3813 02c4 042D     		cmp	r5, #4
1306:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 3814              		.loc 1 1306 9 is_stmt 1 view .LVU1476
 3815 02c6 02BF     		ittt	eq
 3816 02c8 1A68     		ldreq	r2, [r3]
 3817 02ca 42F00102 		orreq	r2, r2, #1
 3818 02ce 1A60     		streq	r2, [r3]
1309:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3819              		.loc 1 1309 7 view .LVU1477
1309:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3820              		.loc 1 1309 22 is_stmt 0 view .LVU1478
 3821 02d0 6269     		ldr	r2, [r4, #20]
1309:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 3822              		.loc 1 1309 10 view .LVU1479
 3823 02d2 602A     		cmp	r2, #96
 3824 02d4 3FD1     		bne	.L282
1311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* Input length in bits */
 3825              		.loc 1 1311 9 is_stmt 1 view .LVU1480
1311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* Input length in bits */
 3826              		.loc 1 1311 22 is_stmt 0 view .LVU1481
 3827 02d6 D4E90C12 		ldrd	r1, r2, [r4, #48]
 3828              	.LVL334:
1317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3829              		.loc 1 1317 11 view .LVU1482
 3830 02da BCF1060F 		cmp	ip, #6
1311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* Input length in bits */
 3831              		.loc 1 1311 22 view .LVU1483
 3832 02de 4FEAC202 		lsl	r2, r2, #3
1312:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
 3833              		.loc 1 1312 21 view .LVU1484
 3834 02e2 4FEAC704 		lsl	r4, r7, #3
 3835              	.LVL335:
1311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* Input length in bits */
 3836              		.loc 1 1311 22 view .LVU1485
 3837 02e6 42EA5172 		orr	r2, r2, r1, lsr #29
1312:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
 3838              		.loc 1 1312 21 view .LVU1486
 3839 02ea 44EA5674 		orr	r4, r4, r6, lsr #29
1311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;                    /* Input length in bits */
 3840              		.loc 1 1311 22 view .LVU1487
 3841 02ee 4FEAC101 		lsl	r1, r1, #3
 3842              	.LVL336:
1312:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
 3843              		.loc 1 1312 9 is_stmt 1 view .LVU1488
1312:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
 3844              		.loc 1 1312 21 is_stmt 0 view .LVU1489
 3845 02f2 4FEAC606 		lsl	r6, r6, #3
 3846              	.LVL337:
1317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3847              		.loc 1 1317 9 is_stmt 1 view .LVU1490
1317:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3848              		.loc 1 1317 11 is_stmt 0 view .LVU1491
 3849 02f6 0CD1     		bne	.L283
1319:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
 3850              		.loc 1 1319 11 is_stmt 1 view .LVU1492
 3851              	.LVL338:
 3852              	.LBB267:
 3853              	.LBI267:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3854              		.loc 2 526 57 view .LVU1493
 3855              	.LBB268:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 3856              		.loc 2 528 3 view .LVU1494
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3857              		.loc 2 531 4 view .LVU1495
 3858              		.syntax unified
 3859              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 3860 02f8 92FAA2F2 		rbit r2, r2
 3861              	@ 0 "" 2
 3862              	.LVL339:
 3863              		.loc 2 544 3 view .LVU1496
 3864              		.loc 2 544 3 is_stmt 0 view .LVU1497
 3865              		.thumb
 3866              		.syntax unified
 3867              	.LBE268:
 3868              	.LBE267:
1319:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
 3869              		.loc 1 1319 33 view .LVU1498
 3870 02fc 9A60     		str	r2, [r3, #8]
1320:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)((inputlength)>>32));
 3871              		.loc 1 1320 11 is_stmt 1 view .LVU1499
 3872              	.LVL340:
 3873              	.LBB269:
 3874              	.LBI269:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3875              		.loc 2 526 57 view .LVU1500
 3876              	.LBB270:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 3877              		.loc 2 528 3 view .LVU1501
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3878              		.loc 2 531 4 view .LVU1502
 3879              		.syntax unified
 3880              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 3881 02fe 91FAA1F1 		rbit r1, r1
 3882              	@ 0 "" 2
 3883              	.LVL341:
 3884              		.loc 2 544 3 view .LVU1503
 3885              		.loc 2 544 3 is_stmt 0 view .LVU1504
 3886              		.thumb
 3887              		.syntax unified
 3888              	.LBE270:
 3889              	.LBE269:
1320:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)((inputlength)>>32));
 3890              		.loc 1 1320 33 view .LVU1505
 3891 0302 9960     		str	r1, [r3, #8]
1321:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
 3892              		.loc 1 1321 11 is_stmt 1 view .LVU1506
 3893              	.LVL342:
 3894              	.LBB271:
 3895              	.LBI271:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3896              		.loc 2 526 57 view .LVU1507
 3897              	.LBB272:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 3898              		.loc 2 528 3 view .LVU1508
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3899              		.loc 2 531 4 view .LVU1509
 3900              		.syntax unified
 3901              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 3902 0304 94FAA4F4 		rbit r4, r4
 3903              	@ 0 "" 2
 3904              	.LVL343:
 3905              		.loc 2 544 3 view .LVU1510
 3906              		.loc 2 544 3 is_stmt 0 view .LVU1511
 3907              		.thumb
 3908              		.syntax unified
 3909              	.LBE272:
 3910              	.LBE271:
1321:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
 3911              		.loc 1 1321 33 view .LVU1512
 3912 0308 9C60     		str	r4, [r3, #8]
1322:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3913              		.loc 1 1322 11 is_stmt 1 view .LVU1513
 3914              	.LVL344:
 3915              	.LBB273:
 3916              	.LBI273:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3917              		.loc 2 526 57 view .LVU1514
 3918              	.LBB274:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 3919              		.loc 2 528 3 view .LVU1515
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3920              		.loc 2 531 4 view .LVU1516
 3921              		.syntax unified
 3922              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 3923 030a 96FAA6F6 		rbit r6, r6
 3924              	@ 0 "" 2
 3925              	.LVL345:
 3926              		.loc 2 544 3 view .LVU1517
 3927              		.thumb
 3928              		.syntax unified
 3929              	.L322:
 3930              		.loc 2 544 3 is_stmt 0 view .LVU1518
 3931              	.LBE274:
 3932              	.LBE273:
1336:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3933              		.loc 1 1336 33 view .LVU1519
 3934 030e 9E60     		str	r6, [r3, #8]
 3935 0310 D0E6     		b	.L323
 3936              	.LVL346:
 3937              	.L283:
1324:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3938              		.loc 1 1324 14 is_stmt 1 view .LVU1520
1324:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 3939              		.loc 1 1324 16 is_stmt 0 view .LVU1521
 3940 0312 BCF1040F 		cmp	ip, #4
 3941 0316 07D1     		bne	.L284
1326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
 3942              		.loc 1 1326 11 is_stmt 1 view .LVU1522
 3943              	.LVL347:
 3944              	.LBB275:
 3945              	.LBI275:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3946              		.loc 2 450 57 view .LVU1523
 3947              	.LBB276:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3948              		.loc 2 453 3 view .LVU1524
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3949              		.loc 2 453 10 is_stmt 0 view .LVU1525
 3950 0318 12BA     		rev	r2, r2
 3951              	.LVL348:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3952              		.loc 2 453 10 view .LVU1526
 3953              	.LBE276:
 3954              	.LBE275:
 3955              	.LBB277:
 3956              	.LBB278:
 3957 031a 09BA     		rev	r1, r1
 3958              	.LVL349:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3959              		.loc 2 453 10 view .LVU1527
 3960              	.LBE278:
 3961              	.LBE277:
 3962              	.LBB280:
 3963              	.LBB281:
 3964 031c 24BA     		rev	r4, r4
 3965              	.LVL350:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3966              		.loc 2 453 10 view .LVU1528
 3967              	.LBE281:
 3968              	.LBE280:
1326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
 3969              		.loc 1 1326 33 view .LVU1529
 3970 031e 9A60     		str	r2, [r3, #8]
1327:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
 3971              		.loc 1 1327 11 is_stmt 1 view .LVU1530
 3972              	.LBB283:
 3973              	.LBI277:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3974              		.loc 2 450 57 view .LVU1531
 3975              	.LBB279:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3976              		.loc 2 453 3 view .LVU1532
 3977              	.LBE279:
 3978              	.LBE283:
 3979              	.LBB284:
 3980              	.LBB285:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3981              		.loc 2 453 10 is_stmt 0 view .LVU1533
 3982 0320 36BA     		rev	r6, r6
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3983              		.loc 2 453 10 view .LVU1534
 3984              	.LBE285:
 3985              	.LBE284:
1327:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
 3986              		.loc 1 1327 33 view .LVU1535
 3987 0322 9960     		str	r1, [r3, #8]
1328:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
 3988              		.loc 1 1328 11 is_stmt 1 view .LVU1536
 3989              	.LBB287:
 3990              	.LBI280:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 3991              		.loc 2 450 57 view .LVU1537
 3992              	.LBB282:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 3993              		.loc 2 453 3 view .LVU1538
 3994              	.LBE282:
 3995              	.LBE287:
1328:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
 3996              		.loc 1 1328 33 is_stmt 0 view .LVU1539
 3997 0324 9C60     		str	r4, [r3, #8]
1329:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 3998              		.loc 1 1329 11 is_stmt 1 view .LVU1540
 3999              	.LBB288:
 4000              	.LBI284:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4001              		.loc 2 450 57 view .LVU1541
 4002              	.LBB286:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4003              		.loc 2 453 3 view .LVU1542
 4004 0326 F2E7     		b	.L322
 4005              	.LVL351:
 4006              	.L284:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4007              		.loc 2 453 3 is_stmt 0 view .LVU1543
 4008              	.LBE286:
 4009              	.LBE288:
1331:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4010              		.loc 1 1331 14 is_stmt 1 view .LVU1544
1331:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4011              		.loc 1 1331 16 is_stmt 0 view .LVU1545
 4012 0328 BCF1020F 		cmp	ip, #2
 4013 032c 0BD1     		bne	.L285
1333:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
 4014              		.loc 1 1333 11 is_stmt 1 view .LVU1546
 4015              	.LVL352:
 4016              	.LBB289:
 4017              	.LBI289:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4018              		.loc 2 504 57 view .LVU1547
 4019              	.LBB290:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4020              		.loc 2 506 3 view .LVU1548
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4021              		.loc 2 506 23 is_stmt 0 view .LVU1549
 4022 032e 4FEA3242 		ror	r2, r2, #16
 4023              	.LVL353:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4024              		.loc 2 506 23 view .LVU1550
 4025              	.LBE290:
 4026              	.LBE289:
 4027              	.LBB291:
 4028              	.LBB292:
 4029 0332 4FEA3141 		ror	r1, r1, #16
 4030              	.LVL354:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4031              		.loc 2 506 23 view .LVU1551
 4032              	.LBE292:
 4033              	.LBE291:
 4034              	.LBB294:
 4035              	.LBB295:
 4036 0336 4FEA3444 		ror	r4, r4, #16
 4037              	.LVL355:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4038              		.loc 2 506 23 view .LVU1552
 4039              	.LBE295:
 4040              	.LBE294:
1333:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
 4041              		.loc 1 1333 33 view .LVU1553
 4042 033a 9A60     		str	r2, [r3, #8]
1334:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)((inputlength)>>32), 16);
 4043              		.loc 1 1334 11 is_stmt 1 view .LVU1554
 4044              	.LVL356:
 4045              	.LBB297:
 4046              	.LBI291:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4047              		.loc 2 504 57 view .LVU1555
 4048              	.LBB293:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4049              		.loc 2 506 3 view .LVU1556
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4050              		.loc 2 506 3 is_stmt 0 view .LVU1557
 4051              	.LBE293:
 4052              	.LBE297:
 4053              	.LBB298:
 4054              	.LBB299:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4055              		.loc 2 506 23 view .LVU1558
 4056 033c 4FEA3646 		ror	r6, r6, #16
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4057              		.loc 2 506 23 view .LVU1559
 4058              	.LBE299:
 4059              	.LBE298:
1334:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)((inputlength)>>32), 16);
 4060              		.loc 1 1334 33 view .LVU1560
 4061 0340 9960     		str	r1, [r3, #8]
1335:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
 4062              		.loc 1 1335 11 is_stmt 1 view .LVU1561
 4063              	.LVL357:
 4064              	.LBB301:
 4065              	.LBI294:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4066              		.loc 2 504 57 view .LVU1562
 4067              	.LBB296:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4068              		.loc 2 506 3 view .LVU1563
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4069              		.loc 2 506 3 is_stmt 0 view .LVU1564
 4070              	.LBE296:
 4071              	.LBE301:
1335:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
 4072              		.loc 1 1335 33 view .LVU1565
 4073 0342 9C60     		str	r4, [r3, #8]
1336:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4074              		.loc 1 1336 11 is_stmt 1 view .LVU1566
 4075              	.LVL358:
 4076              	.LBB302:
 4077              	.LBI298:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4078              		.loc 2 504 57 view .LVU1567
 4079              	.LBB300:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4080              		.loc 2 506 3 view .LVU1568
 4081 0344 E3E7     		b	.L322
 4082              	.LVL359:
 4083              	.L285:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4084              		.loc 2 506 3 is_stmt 0 view .LVU1569
 4085              	.LBE300:
 4086              	.LBE302:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4087              		.loc 1 1338 14 is_stmt 1 view .LVU1570
1338:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4088              		.loc 1 1338 16 is_stmt 0 view .LVU1571
 4089 0346 BCF1000F 		cmp	ip, #0
 4090 034a 7FF492AE 		bne	.L244
1340:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
 4091              		.loc 1 1340 11 is_stmt 1 view .LVU1572
1340:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
 4092              		.loc 1 1340 33 is_stmt 0 view .LVU1573
 4093 034e 9A60     		str	r2, [r3, #8]
1341:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
 4094              		.loc 1 1341 11 is_stmt 1 view .LVU1574
1341:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
 4095              		.loc 1 1341 33 is_stmt 0 view .LVU1575
 4096 0350 9960     		str	r1, [r3, #8]
1342:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
 4097              		.loc 1 1342 11 is_stmt 1 view .LVU1576
1342:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
 4098              		.loc 1 1342 33 is_stmt 0 view .LVU1577
 4099 0352 9C60     		str	r4, [r3, #8]
1343:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4100              		.loc 1 1343 11 is_stmt 1 view .LVU1578
 4101 0354 DBE7     		b	.L322
 4102              	.LVL360:
 4103              	.L282:
1358:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4104              		.loc 1 1358 12 view .LVU1579
1358:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4105              		.loc 1 1358 15 is_stmt 0 view .LVU1580
 4106 0356 B2F5803F 		cmp	r2, #65536
 4107 035a 7FF48AAE 		bne	.L244
 4108 035e A3E7     		b	.L324
 4109              	.L286:
1383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 4110              		.loc 1 1383 12 view .LVU1581
 4111 0360 0220     		movs	r0, #2
 4112 0362 86E6     		b	.L244
 4113              	.L287:
1383:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 4114              		.loc 1 1383 12 view .LVU1582
 4115 0364 1846     		mov	r0, r3
 4116 0366 84E6     		b	.L244
 4117              		.cfi_endproc
 4118              	.LFE314:
 4120              		.section	.text.HAL_CRYPEx_AES_Auth_DMA,"ax",%progbits
 4121              		.align	1
 4122              		.global	HAL_CRYPEx_AES_Auth_DMA
 4123              		.syntax unified
 4124              		.thumb
 4125              		.thumb_func
 4126              		.fpu softvfp
 4128              	HAL_CRYPEx_AES_Auth_DMA:
 4129              	.LVL361:
 4130              	.LFB315:
1420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      ;
 4131              		.loc 1 1420 1 is_stmt 1 view -0
 4132              		.cfi_startproc
 4133              		@ args = 4, pretend = 0, frame = 0
 4134              		@ frame_needed = 0, uses_anonymous_args = 0
1420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      ;
 4135              		.loc 1 1420 1 is_stmt 0 view .LVU1584
 4136 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4137              	.LCFI23:
 4138              		.cfi_def_cfa_offset 40
 4139              		.cfi_offset 3, -40
 4140              		.cfi_offset 4, -36
 4141              		.cfi_offset 5, -32
 4142              		.cfi_offset 6, -28
 4143              		.cfi_offset 7, -24
 4144              		.cfi_offset 8, -20
 4145              		.cfi_offset 9, -16
 4146              		.cfi_offset 10, -12
 4147              		.cfi_offset 11, -8
 4148              		.cfi_offset 14, -4
1420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      ;
 4149              		.loc 1 1420 1 view .LVU1585
 4150 0004 1F46     		mov	r7, r3
1429:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 4151              		.loc 1 1429 12 view .LVU1586
 4152 0006 90F85530 		ldrb	r3, [r0, #85]	@ zero_extendqisi2
1420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      ;
 4153              		.loc 1 1420 1 view .LVU1587
 4154 000a DDF82890 		ldr	r9, [sp, #40]
1429:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 4155              		.loc 1 1429 6 view .LVU1588
 4156 000e 012B     		cmp	r3, #1
1420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      ;
 4157              		.loc 1 1420 1 view .LVU1589
 4158 0010 0446     		mov	r4, r0
 4159 0012 8846     		mov	r8, r1
1421:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr     ;
 4160              		.loc 1 1421 3 is_stmt 1 view .LVU1590
1422:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t tagaddr        ;
 4161              		.loc 1 1422 3 view .LVU1591
1423:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t headerlength   ;
 4162              		.loc 1 1423 3 view .LVU1592
1424:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t inputlength    ;
 4163              		.loc 1 1424 3 view .LVU1593
1425:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint64_t payloadlength  ;
 4164              		.loc 1 1425 3 view .LVU1594
1426:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4165              		.loc 1 1426 3 view .LVU1595
1429:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 4166              		.loc 1 1429 3 view .LVU1596
1420:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr      ;
 4167              		.loc 1 1420 1 is_stmt 0 view .LVU1597
 4168 0014 1646     		mov	r6, r2
1429:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 4169              		.loc 1 1429 12 view .LVU1598
 4170 0016 DDB2     		uxtb	r5, r3
1429:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 4171              		.loc 1 1429 6 view .LVU1599
 4172 0018 40F0B781 		bne	.L359
1432:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4173              		.loc 1 1432 5 is_stmt 1 view .LVU1600
1432:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4174              		.loc 1 1432 20 is_stmt 0 view .LVU1601
 4175 001c D0F81CA0 		ldr	r10, [r0, #28]
1432:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4176              		.loc 1 1432 8 view .LVU1602
 4177 0020 BAF1000F 		cmp	r10, #0
 4178 0024 1FD0     		beq	.L328
1436:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4179              		.loc 1 1436 10 is_stmt 1 view .LVU1603
1436:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4180              		.loc 1 1436 13 is_stmt 0 view .LVU1604
 4181 0026 BAF5005F 		cmp	r10, #8192
 4182 002a 12D1     		bne	.L329
1438:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4183              		.loc 1 1438 7 is_stmt 1 view .LVU1605
1438:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4184              		.loc 1 1438 10 is_stmt 0 view .LVU1606
 4185 002c 836A     		ldr	r3, [r0, #40]
 4186 002e 1BB1     		cbz	r3, .L330
1438:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4187              		.loc 1 1438 40 discriminator 1 view .LVU1607
 4188 0030 D0E90C23 		ldrd	r2, [r0, #48]
 4189              	.LVL362:
1438:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4190              		.loc 1 1438 40 discriminator 1 view .LVU1608
 4191 0034 1343     		orrs	r3, r2, r3
 4192 0036 09D0     		beq	.L327
 4193              	.L330:
1452:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4194              		.loc 1 1452 7 is_stmt 1 view .LVU1609
1452:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4195              		.loc 1 1452 10 is_stmt 0 view .LVU1610
 4196 0038 6369     		ldr	r3, [r4, #20]
 4197 003a B3F5803F 		cmp	r3, #65536
 4198 003e 12D1     		bne	.L328
1454:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4199              		.loc 1 1454 9 is_stmt 1 view .LVU1611
1454:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4200              		.loc 1 1454 12 is_stmt 0 view .LVU1612
 4201 0040 B8F1000F 		cmp	r8, #0
 4202 0044 02D0     		beq	.L327
1454:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4203              		.loc 1 1454 34 discriminator 1 view .LVU1613
 4204 0046 56EA0703 		orrs	r3, r6, r7
 4205 004a 0CD1     		bne	.L328
 4206              	.LVL363:
 4207              	.L327:
1845:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4208              		.loc 1 1845 1 view .LVU1614
 4209 004c 2846     		mov	r0, r5
 4210 004e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4211              	.LVL364:
 4212              	.L329:
1461:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4213              		.loc 1 1461 10 is_stmt 1 view .LVU1615
1461:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4214              		.loc 1 1461 13 is_stmt 0 view .LVU1616
 4215 0052 BAF5804F 		cmp	r10, #16384
 4216 0056 22D1     		bne	.L332
1463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4217              		.loc 1 1463 7 is_stmt 1 view .LVU1617
1463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4218              		.loc 1 1463 10 is_stmt 0 view .LVU1618
 4219 0058 29B1     		cbz	r1, .L328
1463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4220              		.loc 1 1463 32 discriminator 1 view .LVU1619
 4221 005a 56EA0703 		orrs	r3, r6, r7
 4222 005e 02D0     		beq	.L328
1463:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4223              		.loc 1 1463 48 discriminator 2 view .LVU1620
 4224 0060 B9F1000F 		cmp	r9, #0
 4225 0064 F2D0     		beq	.L327
 4226              	.LVL365:
 4227              	.L328:
1489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4228              		.loc 1 1489 5 is_stmt 1 view .LVU1621
1489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4229              		.loc 1 1489 5 view .LVU1622
 4230 0066 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 4231 006a 012B     		cmp	r3, #1
 4232 006c 4FF00203 		mov	r3, #2
 4233 0070 00F08D81 		beq	.L360
1489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4234              		.loc 1 1489 5 discriminator 2 view .LVU1623
 4235 0074 4FF0010B 		mov	fp, #1
 4236 0078 84F854B0 		strb	fp, [r4, #84]
1489:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4237              		.loc 1 1489 5 discriminator 2 view .LVU1624
1492:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4238              		.loc 1 1492 5 discriminator 2 view .LVU1625
1492:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4239              		.loc 1 1492 18 is_stmt 0 discriminator 2 view .LVU1626
 4240 007c 84F85530 		strb	r3, [r4, #85]
1501:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4241              		.loc 1 1501 5 is_stmt 1 discriminator 2 view .LVU1627
1501:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4242              		.loc 1 1501 8 is_stmt 0 discriminator 2 view .LVU1628
 4243 0080 BAF1000F 		cmp	r10, #0
 4244 0084 24D1     		bne	.L333
1504:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4245              		.loc 1 1504 7 is_stmt 1 view .LVU1629
1504:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4246              		.loc 1 1504 10 is_stmt 0 view .LVU1630
 4247 0086 45F2F051 		movw	r1, #22000
 4248              	.LVL366:
1504:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4249              		.loc 1 1504 10 view .LVU1631
 4250 008a 2046     		mov	r0, r4
 4251              	.LVL367:
1504:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4252              		.loc 1 1504 10 view .LVU1632
 4253 008c FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 4254              	.LVL368:
1504:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4255              		.loc 1 1504 9 view .LVU1633
 4256 0090 90B1     		cbz	r0, .L334
1506:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
 4257              		.loc 1 1506 9 is_stmt 1 view .LVU1634
1506:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         __HAL_UNLOCK(hcryp);
 4258              		.loc 1 1506 22 is_stmt 0 view .LVU1635
 4259 0092 84F855B0 		strb	fp, [r4, #85]
1507:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 4260              		.loc 1 1507 9 is_stmt 1 view .LVU1636
1507:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 4261              		.loc 1 1507 9 view .LVU1637
 4262 0096 84F854A0 		strb	r10, [r4, #84]
1507:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         return HAL_TIMEOUT;
 4263              		.loc 1 1507 9 view .LVU1638
1508:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4264              		.loc 1 1508 9 view .LVU1639
 4265              	.LVL369:
 4266              	.L396:
1812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 4267              		.loc 1 1812 11 view .LVU1640
1813:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4268              		.loc 1 1813 11 view .LVU1641
1813:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4269              		.loc 1 1813 18 is_stmt 0 view .LVU1642
 4270 009a 0325     		movs	r5, #3
 4271 009c D6E7     		b	.L327
 4272              	.LVL370:
 4273              	.L332:
1468:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4274              		.loc 1 1468 10 is_stmt 1 view .LVU1643
1468:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4275              		.loc 1 1468 13 is_stmt 0 view .LVU1644
 4276 009e BAF5C04F 		cmp	r10, #24576
 4277 00a2 D3D1     		bne	.L327
1470:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4278              		.loc 1 1470 7 is_stmt 1 view .LVU1645
1470:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4279              		.loc 1 1470 10 is_stmt 0 view .LVU1646
 4280 00a4 B9F1000F 		cmp	r9, #0
 4281 00a8 D0D0     		beq	.L327
1475:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4282              		.loc 1 1475 7 is_stmt 1 view .LVU1647
1475:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4283              		.loc 1 1475 10 is_stmt 0 view .LVU1648
 4284 00aa 4369     		ldr	r3, [r0, #20]
 4285 00ac B3F5803F 		cmp	r3, #65536
 4286 00b0 D9D1     		bne	.L328
1475:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4287              		.loc 1 1475 65 discriminator 1 view .LVU1649
 4288 00b2 0029     		cmp	r1, #0
 4289 00b4 D7D1     		bne	.L328
 4290 00b6 C9E7     		b	.L327
 4291              	.LVL371:
 4292              	.L334:
1512:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the initialization phase is over */
 4293              		.loc 1 1512 7 is_stmt 1 view .LVU1650
 4294 00b8 2268     		ldr	r2, [r4]
 4295 00ba 1368     		ldr	r3, [r2]
 4296 00bc 43F08003 		orr	r3, r3, #128
 4297 00c0 1360     		str	r3, [r2]
1514:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
 4298              		.loc 1 1514 7 view .LVU1651
1514:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
 4299              		.loc 1 1514 20 is_stmt 0 view .LVU1652
 4300 00c2 0423     		movs	r3, #4
 4301 00c4 84F84830 		strb	r3, [r4, #72]
1515:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 4302              		.loc 1 1515 7 is_stmt 1 view .LVU1653
1515:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 4303              		.loc 1 1515 20 is_stmt 0 view .LVU1654
 4304 00c8 84F855B0 		strb	fp, [r4, #85]
 4305              	.LVL372:
 4306              	.L335:
1837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4307              		.loc 1 1837 5 is_stmt 1 view .LVU1655
1837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4308              		.loc 1 1837 5 view .LVU1656
 4309 00cc 0025     		movs	r5, #0
 4310 00ce 3BE0     		b	.L395
 4311              	.LVL373:
 4312              	.L333:
1520:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4313              		.loc 1 1520 10 view .LVU1657
1520:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4314              		.loc 1 1520 13 is_stmt 0 view .LVU1658
 4315 00d0 BAF5005F 		cmp	r10, #8192
 4316 00d4 68D1     		bne	.L336
1524:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4317              		.loc 1 1524 7 is_stmt 1 view .LVU1659
 4318 00d6 2368     		ldr	r3, [r4]
1524:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4319              		.loc 1 1524 22 is_stmt 0 view .LVU1660
 4320 00d8 6169     		ldr	r1, [r4, #20]
 4321              	.LVL374:
1526:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4322              		.loc 1 1526 9 view .LVU1661
 4323 00da 1A68     		ldr	r2, [r3]
1524:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4324              		.loc 1 1524 10 view .LVU1662
 4325 00dc 6029     		cmp	r1, #96
1526:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4326              		.loc 1 1526 9 is_stmt 1 view .LVU1663
 4327 00de 08BF     		it	eq
 4328 00e0 A068     		ldreq	r0, [r4, #8]
 4329              	.LVL375:
1526:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4330              		.loc 1 1526 9 is_stmt 0 view .LVU1664
 4331 00e2 22F4C042 		bic	r2, r2, #24576
 4332 00e6 04BF     		itt	eq
 4333 00e8 22F00602 		biceq	r2, r2, #6
 4334 00ec 0243     		orreq	r2, r2, r0
1531:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4335              		.loc 1 1531 9 is_stmt 1 view .LVU1665
 4336 00ee 42F40052 		orr	r2, r2, #8192
 4337 00f2 1A60     		str	r2, [r3]
1535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4338              		.loc 1 1535 7 view .LVU1666
 4339 00f4 1A68     		ldr	r2, [r3]
1539:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4340              		.loc 1 1539 10 is_stmt 0 view .LVU1667
 4341 00f6 B1F5803F 		cmp	r1, #65536
1535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4342              		.loc 1 1535 7 view .LVU1668
 4343 00fa 42F00102 		orr	r2, r2, #1
 4344 00fe 1A60     		str	r2, [r3]
1539:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4345              		.loc 1 1539 7 is_stmt 1 view .LVU1669
1539:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4346              		.loc 1 1539 10 is_stmt 0 view .LVU1670
 4347 0100 1AD1     		bne	.L339
1541:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 4348              		.loc 1 1541 9 is_stmt 1 view .LVU1671
 4349              	.LVL376:
1542:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4350              		.loc 1 1542 9 view .LVU1672
1542:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4351              		.loc 1 1542 33 is_stmt 0 view .LVU1673
 4352 0102 D8F80020 		ldr	r2, [r8]
1542:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4353              		.loc 1 1542 31 view .LVU1674
 4354 0106 9A60     		str	r2, [r3, #8]
1543:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 4355              		.loc 1 1543 9 is_stmt 1 view .LVU1675
 4356              	.LVL377:
1544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4357              		.loc 1 1544 9 view .LVU1676
1544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4358              		.loc 1 1544 33 is_stmt 0 view .LVU1677
 4359 0108 D8F80420 		ldr	r2, [r8, #4]
1544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4360              		.loc 1 1544 31 view .LVU1678
 4361 010c 9A60     		str	r2, [r3, #8]
1545:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 4362              		.loc 1 1545 9 is_stmt 1 view .LVU1679
 4363              	.LVL378:
1546:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4364              		.loc 1 1546 9 view .LVU1680
1546:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4365              		.loc 1 1546 34 is_stmt 0 view .LVU1681
 4366 010e D8F80820 		ldr	r2, [r8, #8]
1546:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 4367              		.loc 1 1546 32 view .LVU1682
 4368 0112 9A60     		str	r2, [r3, #8]
1547:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 4369              		.loc 1 1547 9 is_stmt 1 view .LVU1683
 4370              	.LVL379:
1548:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4371              		.loc 1 1548 9 view .LVU1684
1548:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4372              		.loc 1 1548 33 is_stmt 0 view .LVU1685
 4373 0114 D8F80C20 		ldr	r2, [r8, #12]
1548:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4374              		.loc 1 1548 31 view .LVU1686
 4375 0118 9A60     		str	r2, [r3, #8]
1550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4376              		.loc 1 1550 9 is_stmt 1 view .LVU1687
1550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4377              		.loc 1 1550 12 is_stmt 0 view .LVU1688
 4378 011a 45F2F051 		movw	r1, #22000
 4379 011e 2046     		mov	r0, r4
 4380 0120 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 4381              	.LVL380:
1550:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4382              		.loc 1 1550 11 view .LVU1689
 4383 0124 18B1     		cbz	r0, .L340
 4384              	.LVL381:
 4385              	.L397:
1811:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 4386              		.loc 1 1811 11 is_stmt 1 view .LVU1690
1811:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 4387              		.loc 1 1811 24 is_stmt 0 view .LVU1691
 4388 0126 0123     		movs	r3, #1
 4389 0128 84F85530 		strb	r3, [r4, #85]
 4390              	.LVL382:
1811:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 4391              		.loc 1 1811 24 view .LVU1692
 4392 012c 49E0     		b	.L394
 4393              	.LVL383:
 4394              	.L340:
1557:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4395              		.loc 1 1557 9 is_stmt 1 view .LVU1693
 4396 012e 2268     		ldr	r2, [r4]
 4397 0130 1368     		ldr	r3, [r2]
 4398 0132 43F08003 		orr	r3, r3, #128
 4399 0136 1360     		str	r3, [r2]
 4400              	.LVL384:
 4401              	.L339:
1562:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4402              		.loc 1 1562 7 view .LVU1694
1562:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4403              		.loc 1 1562 22 is_stmt 0 view .LVU1695
 4404 0138 A56A     		ldr	r5, [r4, #40]
1562:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4405              		.loc 1 1562 10 view .LVU1696
 4406 013a 45B9     		cbnz	r5, .L341
1564:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
 4407              		.loc 1 1564 9 is_stmt 1 view .LVU1697
1564:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
 4408              		.loc 1 1564 22 is_stmt 0 view .LVU1698
 4409 013c 0123     		movs	r3, #1
 4410 013e 84F85530 		strb	r3, [r4, #85]
1566:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
 4411              		.loc 1 1566 9 is_stmt 1 view .LVU1699
1566:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
 4412              		.loc 1 1566 22 is_stmt 0 view .LVU1700
 4413 0142 0523     		movs	r3, #5
 4414 0144 84F84830 		strb	r3, [r4, #72]
1568:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4415              		.loc 1 1568 9 is_stmt 1 view .LVU1701
1568:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4416              		.loc 1 1568 9 view .LVU1702
 4417              	.LVL385:
 4418              	.L395:
1837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4419              		.loc 1 1837 5 is_stmt 0 view .LVU1703
 4420 0148 84F85450 		strb	r5, [r4, #84]
1837:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4421              		.loc 1 1837 5 is_stmt 1 view .LVU1704
1839:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 4422              		.loc 1 1839 5 view .LVU1705
1839:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 4423              		.loc 1 1839 12 is_stmt 0 view .LVU1706
 4424 014c 7EE7     		b	.L327
 4425              	.LVL386:
 4426              	.L341:
1573:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       if ((hcryp->Init.HeaderSize % 16U) != 0U)
 4427              		.loc 1 1573 7 is_stmt 1 view .LVU1707
1574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4428              		.loc 1 1574 7 view .LVU1708
1574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4429              		.loc 1 1574 23 is_stmt 0 view .LVU1709
 4430 014e D4E90C89 		ldrd	r8, [r4, #48]
 4431              	.LVL387:
1574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4432              		.loc 1 1574 35 view .LVU1710
 4433 0152 0023     		movs	r3, #0
 4434 0154 08F00F06 		and	r6, r8, #15
 4435 0158 1F46     		mov	r7, r3
1574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4436              		.loc 1 1574 10 view .LVU1711
 4437 015a 56EA0702 		orrs	r2, r6, r7
 4438 015e 1FD0     		beq	.L342
1577:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4439              		.loc 1 1577 9 is_stmt 1 view .LVU1712
1577:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4440              		.loc 1 1577 12 is_stmt 0 view .LVU1713
 4441 0160 B9F1000F 		cmp	r9, #0
 4442 0164 08BF     		it	eq
 4443 0166 B8F1100F 		cmpeq	r8, #16
 4444 016a 0CD2     		bcs	.L343
1579:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           CRYP_Padding(hcryp, (uint32_t) (hcryp->Init.HeaderSize), CRYP_POLLING_OFF);
 4445              		.loc 1 1579 11 is_stmt 1 view .LVU1714
1580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4446              		.loc 1 1580 11 is_stmt 0 view .LVU1715
 4447 016c 1A46     		mov	r2, r3
1579:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           CRYP_Padding(hcryp, (uint32_t) (hcryp->Init.HeaderSize), CRYP_POLLING_OFF);
 4448              		.loc 1 1579 34 view .LVU1716
 4449 016e A563     		str	r5, [r4, #56]
1580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4450              		.loc 1 1580 11 is_stmt 1 view .LVU1717
 4451 0170 4146     		mov	r1, r8
 4452 0172 2046     		mov	r0, r4
 4453 0174 FFF7FEFF 		bl	CRYP_Padding
 4454              	.LVL388:
1582:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 4455              		.loc 1 1582 11 view .LVU1718
1582:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the header phase is over */
 4456              		.loc 1 1582 24 is_stmt 0 view .LVU1719
 4457 0178 0123     		movs	r3, #1
 4458 017a 84F85530 		strb	r3, [r4, #85]
1584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4459              		.loc 1 1584 11 is_stmt 1 view .LVU1720
1584:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4460              		.loc 1 1584 24 is_stmt 0 view .LVU1721
 4461 017e 0523     		movs	r3, #5
 4462 0180 84F84830 		strb	r3, [r4, #72]
 4463 0184 A2E7     		b	.L335
 4464              	.L343:
1595:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Store the ending transfer point */
 4465              		.loc 1 1595 11 is_stmt 1 view .LVU1722
1595:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Store the ending transfer point */
 4466              		.loc 1 1595 24 is_stmt 0 view .LVU1723
 4467 0186 28F00F02 		bic	r2, r8, #15
 4468              	.LVL389:
1597:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = (uint32_t)(hcryp->Init.HeaderSize - headerlength); /* remainder */
 4469              		.loc 1 1597 11 is_stmt 1 view .LVU1724
1597:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = (uint32_t)(hcryp->Init.HeaderSize - headerlength); /* remainder */
 4470              		.loc 1 1597 54 is_stmt 0 view .LVU1725
 4471 018a A918     		adds	r1, r5, r2
1598:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4472              		.loc 1 1598 32 view .LVU1726
 4473 018c A8EB0200 		sub	r0, r8, r2
1597:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = (uint32_t)(hcryp->Init.HeaderSize - headerlength); /* remainder */
 4474              		.loc 1 1597 33 view .LVU1727
 4475 0190 A163     		str	r1, [r4, #56]
1598:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4476              		.loc 1 1598 11 is_stmt 1 view .LVU1728
1598:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4477              		.loc 1 1598 30 is_stmt 0 view .LVU1729
 4478 0192 2064     		str	r0, [r4, #64]
1603:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4479              		.loc 1 1603 11 is_stmt 1 view .LVU1730
 4480 0194 92B2     		uxth	r2, r2
 4481              	.LVL390:
 4482              	.L398:
1610:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4483              		.loc 1 1610 9 is_stmt 0 view .LVU1731
 4484 0196 2946     		mov	r1, r5
 4485              	.LVL391:
 4486              	.L392:
1691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4487              		.loc 1 1691 11 view .LVU1732
 4488 0198 2046     		mov	r0, r4
 4489 019a FFF7FEFF 		bl	CRYP_Authentication_SetDMAConfig
 4490              	.LVL392:
 4491 019e 95E7     		b	.L335
 4492              	.LVL393:
 4493              	.L342:
1608:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Set the input address and start DMA transfer */
 4494              		.loc 1 1608 9 is_stmt 1 view .LVU1733
1608:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Set the input address and start DMA transfer */
 4495              		.loc 1 1608 28 is_stmt 0 view .LVU1734
 4496 01a0 2364     		str	r3, [r4, #64]
1610:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4497              		.loc 1 1610 9 is_stmt 1 view .LVU1735
 4498 01a2 1FFA88F2 		uxth	r2, r8
 4499 01a6 F6E7     		b	.L398
 4500              	.LVL394:
 4501              	.L336:
1616:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4502              		.loc 1 1616 10 view .LVU1736
1616:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 4503              		.loc 1 1616 13 is_stmt 0 view .LVU1737
 4504 01a8 BAF5804F 		cmp	r10, #16384
 4505 01ac 57D1     		bne	.L344
1620:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4506              		.loc 1 1620 7 is_stmt 1 view .LVU1738
1620:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4507              		.loc 1 1620 10 is_stmt 0 view .LVU1739
 4508 01ae A36A     		ldr	r3, [r4, #40]
 4509 01b0 5BB1     		cbz	r3, .L345
1622:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4510              		.loc 1 1622 9 is_stmt 1 view .LVU1740
1622:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4511              		.loc 1 1622 12 is_stmt 0 view .LVU1741
 4512 01b2 45F2F051 		movw	r1, #22000
 4513              	.LVL395:
1622:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4514              		.loc 1 1622 12 view .LVU1742
 4515 01b6 2046     		mov	r0, r4
 4516              	.LVL396:
1622:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4517              		.loc 1 1622 12 view .LVU1743
 4518 01b8 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 4519              	.LVL397:
1622:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4520              		.loc 1 1622 11 view .LVU1744
 4521 01bc 50B1     		cbz	r0, .L346
 4522              	.L399:
1715:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 4523              		.loc 1 1715 11 is_stmt 1 view .LVU1745
1715:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           __HAL_UNLOCK(hcryp);
 4524              		.loc 1 1715 24 is_stmt 0 view .LVU1746
 4525 01be 84F855B0 		strb	fp, [r4, #85]
 4526              	.LVL398:
1716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 4527              		.loc 1 1716 11 is_stmt 1 view .LVU1747
1716:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 4528              		.loc 1 1716 11 view .LVU1748
 4529              	.L394:
1812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 4530              		.loc 1 1812 11 view .LVU1749
1812:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           return HAL_TIMEOUT;
 4531              		.loc 1 1812 11 view .LVU1750
 4532 01c2 0023     		movs	r3, #0
 4533 01c4 84F85430 		strb	r3, [r4, #84]
 4534 01c8 67E7     		b	.L396
 4535              	.LVL399:
 4536              	.L345:
1632:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4537              		.loc 1 1632 9 view .LVU1751
 4538 01ca 2268     		ldr	r2, [r4]
 4539 01cc 1368     		ldr	r3, [r2]
 4540 01ce 43F00103 		orr	r3, r3, #1
 4541 01d2 1360     		str	r3, [r2]
 4542              	.LVL400:
 4543              	.L346:
1635:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4544              		.loc 1 1635 7 view .LVU1752
 4545 01d4 2268     		ldr	r2, [r4]
 4546 01d6 1368     		ldr	r3, [r2]
 4547 01d8 43F08003 		orr	r3, r3, #128
 4548 01dc 1360     		str	r3, [r2]
1637:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4549              		.loc 1 1637 7 view .LVU1753
 4550 01de 1368     		ldr	r3, [r2]
 4551 01e0 23F4C043 		bic	r3, r3, #24576
 4552 01e4 43F48043 		orr	r3, r3, #16384
 4553 01e8 1360     		str	r3, [r2]
1640:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4554              		.loc 1 1640 7 view .LVU1754
1640:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4555              		.loc 1 1640 10 is_stmt 0 view .LVU1755
 4556 01ea B8F1000F 		cmp	r8, #0
 4557 01ee 09D1     		bne	.L347
1642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
 4558              		.loc 1 1642 9 is_stmt 1 view .LVU1756
1642:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is over */
 4559              		.loc 1 1642 22 is_stmt 0 view .LVU1757
 4560 01f0 0123     		movs	r3, #1
 4561 01f2 84F85530 		strb	r3, [r4, #85]
1644:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
 4562              		.loc 1 1644 9 is_stmt 1 view .LVU1758
1644:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Process Unlocked */
 4563              		.loc 1 1644 22 is_stmt 0 view .LVU1759
 4564 01f6 0623     		movs	r3, #6
 4565 01f8 84F84830 		strb	r3, [r4, #72]
1646:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4566              		.loc 1 1646 9 is_stmt 1 view .LVU1760
1646:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4567              		.loc 1 1646 9 view .LVU1761
 4568 01fc 84F85480 		strb	r8, [r4, #84]
1646:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4569              		.loc 1 1646 9 view .LVU1762
1648:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4570              		.loc 1 1648 9 view .LVU1763
1648:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4571              		.loc 1 1648 16 is_stmt 0 view .LVU1764
 4572 0200 4546     		mov	r5, r8
 4573 0202 23E7     		b	.L327
 4574              	.L347:
1653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4575              		.loc 1 1653 7 is_stmt 1 view .LVU1765
1653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4576              		.loc 1 1653 17 is_stmt 0 view .LVU1766
 4577 0204 0021     		movs	r1, #0
 4578 0206 06F00F02 		and	r2, r6, #15
 4579 020a 0B46     		mov	r3, r1
1653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4580              		.loc 1 1653 10 view .LVU1767
 4581 020c 1343     		orrs	r3, r2, r3
 4582 020e 22D0     		beq	.L348
1655:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr = (uint32_t)pOutputData;
 4583              		.loc 1 1655 9 is_stmt 1 view .LVU1768
 4584              	.LVL401:
1656:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         if (Size < 16U)
 4585              		.loc 1 1656 9 view .LVU1769
1657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4586              		.loc 1 1657 9 view .LVU1770
1657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4587              		.loc 1 1657 12 is_stmt 0 view .LVU1771
 4588 0210 002F     		cmp	r7, #0
 4589 0212 08BF     		it	eq
 4590 0214 102E     		cmpeq	r6, #16
 4591 0216 10D2     		bcs	.L349
1660:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr =  (uint8_t *)outputaddr;
 4592              		.loc 1 1660 11 is_stmt 1 view .LVU1772
1663:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4593              		.loc 1 1663 11 is_stmt 0 view .LVU1773
 4594 0218 2046     		mov	r0, r4
1661:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4595              		.loc 1 1661 34 view .LVU1774
 4596 021a C4E90E89 		strd	r8, r9, [r4, #56]
1663:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4597              		.loc 1 1663 11 is_stmt 1 view .LVU1775
 4598 021e 0122     		movs	r2, #1
 4599 0220 3146     		mov	r1, r6
 4600 0222 FFF7FEFF 		bl	CRYP_Padding
 4601              	.LVL402:
1666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the payload phase is over */
 4602              		.loc 1 1666 11 view .LVU1776
1666:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           /* Mark that the payload phase is over */
 4603              		.loc 1 1666 24 is_stmt 0 view .LVU1777
 4604 0226 0123     		movs	r3, #1
 4605 0228 84F85530 		strb	r3, [r4, #85]
1668:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4606              		.loc 1 1668 11 is_stmt 1 view .LVU1778
1668:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4607              		.loc 1 1668 24 is_stmt 0 view .LVU1779
 4608 022c 0623     		movs	r3, #6
 4609 022e 84F84830 		strb	r3, [r4, #72]
1674:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 4610              		.loc 1 1674 11 is_stmt 1 view .LVU1780
 4611 0232 2046     		mov	r0, r4
 4612 0234 FFF7FEFF 		bl	HAL_CRYP_OutCpltCallback
 4613              	.LVL403:
 4614 0238 48E7     		b	.L335
 4615              	.L349:
1679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4616              		.loc 1 1679 11 view .LVU1781
1679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4617              		.loc 1 1679 25 is_stmt 0 view .LVU1782
 4618 023a 26F00F02 		bic	r2, r6, #15
 4619              	.LVL404:
1682:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypInBuffPtr += payloadlength;
 4620              		.loc 1 1682 11 is_stmt 1 view .LVU1783
1683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr = pOutputData;
 4621              		.loc 1 1683 11 view .LVU1784
1683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr = pOutputData;
 4622              		.loc 1 1683 33 is_stmt 0 view .LVU1785
 4623 023e 08EB0203 		add	r3, r8, r2
1686:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4624              		.loc 1 1686 32 view .LVU1786
 4625 0242 B61A     		subs	r6, r6, r2
1683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr = pOutputData;
 4626              		.loc 1 1683 33 view .LVU1787
 4627 0244 A363     		str	r3, [r4, #56]
1684:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->pCrypOutBuffPtr += payloadlength;
 4628              		.loc 1 1684 11 is_stmt 1 view .LVU1788
1685:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = (uint32_t)(Size - payloadlength); /* remainder */
 4629              		.loc 1 1685 11 view .LVU1789
1685:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = (uint32_t)(Size - payloadlength); /* remainder */
 4630              		.loc 1 1685 34 is_stmt 0 view .LVU1790
 4631 0246 09EB0203 		add	r3, r9, r2
 4632 024a E363     		str	r3, [r4, #60]
1686:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4633              		.loc 1 1686 11 is_stmt 1 view .LVU1791
1686:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4634              		.loc 1 1686 30 is_stmt 0 view .LVU1792
 4635 024c 2664     		str	r6, [r4, #64]
1691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4636              		.loc 1 1691 11 is_stmt 1 view .LVU1793
 4637 024e 92B2     		uxth	r2, r2
1691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4638              		.loc 1 1691 11 is_stmt 0 view .LVU1794
 4639 0250 4B46     		mov	r3, r9
 4640              	.LVL405:
 4641              	.L393:
1691:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4642              		.loc 1 1691 11 view .LVU1795
 4643 0252 4146     		mov	r1, r8
 4644 0254 A0E7     		b	.L392
 4645              	.LVL406:
 4646              	.L348:
1696:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr  = (uint32_t)pInputData;
 4647              		.loc 1 1696 9 is_stmt 1 view .LVU1796
1696:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr  = (uint32_t)pInputData;
 4648              		.loc 1 1696 28 is_stmt 0 view .LVU1797
 4649 0256 2164     		str	r1, [r4, #64]
1697:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         outputaddr = (uint32_t)pOutputData;
 4650              		.loc 1 1697 9 is_stmt 1 view .LVU1798
 4651              	.LVL407:
1698:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4652              		.loc 1 1698 9 view .LVU1799
1701:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4653              		.loc 1 1701 9 view .LVU1800
 4654 0258 4B46     		mov	r3, r9
 4655 025a B2B2     		uxth	r2, r6
 4656 025c F9E7     		b	.L393
 4657              	.LVL408:
 4658              	.L344:
1711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4659              		.loc 1 1711 7 view .LVU1801
1711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4660              		.loc 1 1711 11 is_stmt 0 view .LVU1802
 4661 025e 2368     		ldr	r3, [r4]
 4662 0260 1B68     		ldr	r3, [r3]
 4663 0262 03F4C043 		and	r3, r3, #24576
1711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4664              		.loc 1 1711 10 view .LVU1803
 4665 0266 B3F5005F 		cmp	r3, #8192
 4666 026a 0BD1     		bne	.L350
1713:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4667              		.loc 1 1713 9 is_stmt 1 view .LVU1804
1713:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4668              		.loc 1 1713 12 is_stmt 0 view .LVU1805
 4669 026c 45F2F051 		movw	r1, #22000
 4670              	.LVL409:
1713:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4671              		.loc 1 1713 12 view .LVU1806
 4672 0270 2046     		mov	r0, r4
 4673              	.LVL410:
1713:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4674              		.loc 1 1713 12 view .LVU1807
 4675 0272 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 4676              	.LVL411:
1713:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4677              		.loc 1 1713 11 view .LVU1808
 4678 0276 0028     		cmp	r0, #0
 4679 0278 A1D1     		bne	.L399
1720:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4680              		.loc 1 1720 9 is_stmt 1 view .LVU1809
 4681 027a 2268     		ldr	r2, [r4]
 4682 027c 1368     		ldr	r3, [r2]
 4683 027e 43F08003 		orr	r3, r3, #128
 4684 0282 1360     		str	r3, [r2]
 4685              	.L350:
1723:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4686              		.loc 1 1723 7 view .LVU1810
 4687              	.LVL412:
1729:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4688              		.loc 1 1729 7 view .LVU1811
 4689 0284 2268     		ldr	r2, [r4]
 4690 0286 1368     		ldr	r3, [r2]
 4691 0288 43F4C043 		orr	r3, r3, #24576
 4692 028c 1360     		str	r3, [r2]
1732:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4693              		.loc 1 1732 7 view .LVU1812
1732:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4694              		.loc 1 1732 10 is_stmt 0 view .LVU1813
 4695 028e 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
 4696 0292 042B     		cmp	r3, #4
1734:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 4697              		.loc 1 1734 9 is_stmt 1 view .LVU1814
 4698 0294 02BF     		ittt	eq
 4699 0296 1368     		ldreq	r3, [r2]
 4700 0298 43F00103 		orreq	r3, r3, #1
 4701 029c 1360     		streq	r3, [r2]
1737:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4702              		.loc 1 1737 7 view .LVU1815
1737:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4703              		.loc 1 1737 22 is_stmt 0 view .LVU1816
 4704 029e 6369     		ldr	r3, [r4, #20]
1737:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4705              		.loc 1 1737 10 view .LVU1817
 4706 02a0 602B     		cmp	r3, #96
 4707 02a2 5DD1     		bne	.L353
1739:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;  /* input length in bits */
 4708              		.loc 1 1739 9 is_stmt 1 view .LVU1818
1739:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;  /* input length in bits */
 4709              		.loc 1 1739 22 is_stmt 0 view .LVU1819
 4710 02a4 D4E90C31 		ldrd	r3, r1, [r4, #48]
1740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
 4711              		.loc 1 1740 21 view .LVU1820
 4712 02a8 F800     		lsls	r0, r7, #3
1744:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4713              		.loc 1 1744 23 view .LVU1821
 4714 02aa A768     		ldr	r7, [r4, #8]
1739:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;  /* input length in bits */
 4715              		.loc 1 1739 22 view .LVU1822
 4716 02ac C900     		lsls	r1, r1, #3
1744:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4717              		.loc 1 1744 11 view .LVU1823
 4718 02ae 062F     		cmp	r7, #6
1739:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;  /* input length in bits */
 4719              		.loc 1 1739 22 view .LVU1824
 4720 02b0 41EA5371 		orr	r1, r1, r3, lsr #29
1740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
 4721              		.loc 1 1740 21 view .LVU1825
 4722 02b4 40EA5670 		orr	r0, r0, r6, lsr #29
1739:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputlength = Size * 8U;  /* input length in bits */
 4723              		.loc 1 1739 22 view .LVU1826
 4724 02b8 4FEAC303 		lsl	r3, r3, #3
 4725              	.LVL413:
1740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
 4726              		.loc 1 1740 9 is_stmt 1 view .LVU1827
1740:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Write the number of bits in the header on 64 bits followed by the number
 4727              		.loc 1 1740 21 is_stmt 0 view .LVU1828
 4728 02bc 4FEAC606 		lsl	r6, r6, #3
 4729              	.LVL414:
1744:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4730              		.loc 1 1744 9 is_stmt 1 view .LVU1829
1744:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4731              		.loc 1 1744 11 is_stmt 0 view .LVU1830
 4732 02c0 2FD1     		bne	.L354
1746:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
 4733              		.loc 1 1746 11 is_stmt 1 view .LVU1831
 4734              	.LVL415:
 4735              	.LBB303:
 4736              	.LBI303:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4737              		.loc 2 526 57 view .LVU1832
 4738              	.LBB304:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 4739              		.loc 2 528 3 view .LVU1833
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4740              		.loc 2 531 4 view .LVU1834
 4741              		.syntax unified
 4742              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 4743 02c2 91FAA1F1 		rbit r1, r1
 4744              	@ 0 "" 2
 4745              	.LVL416:
 4746              		.loc 2 544 3 view .LVU1835
 4747              		.loc 2 544 3 is_stmt 0 view .LVU1836
 4748              		.thumb
 4749              		.syntax unified
 4750              	.LBE304:
 4751              	.LBE303:
1746:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)headerlength);
 4752              		.loc 1 1746 33 view .LVU1837
 4753 02c6 9160     		str	r1, [r2, #8]
1747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)(inputlength>>32));
 4754              		.loc 1 1747 11 is_stmt 1 view .LVU1838
 4755              	.LVL417:
 4756              	.LBB305:
 4757              	.LBI305:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4758              		.loc 2 526 57 view .LVU1839
 4759              	.LBB306:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 4760              		.loc 2 528 3 view .LVU1840
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4761              		.loc 2 531 4 view .LVU1841
 4762              		.syntax unified
 4763              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 4764 02c8 93FAA3F3 		rbit r3, r3
 4765              	@ 0 "" 2
 4766              	.LVL418:
 4767              		.loc 2 544 3 view .LVU1842
 4768              		.loc 2 544 3 is_stmt 0 view .LVU1843
 4769              		.thumb
 4770              		.syntax unified
 4771              	.LBE306:
 4772              	.LBE305:
1747:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)(inputlength>>32));
 4773              		.loc 1 1747 33 view .LVU1844
 4774 02cc 9360     		str	r3, [r2, #8]
1748:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
 4775              		.loc 1 1748 11 is_stmt 1 view .LVU1845
 4776              	.LVL419:
 4777              	.LBB307:
 4778              	.LBI307:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4779              		.loc 2 526 57 view .LVU1846
 4780              	.LBB308:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 4781              		.loc 2 528 3 view .LVU1847
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4782              		.loc 2 531 4 view .LVU1848
 4783              		.syntax unified
 4784              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 4785 02ce 90FAA0F0 		rbit r0, r0
 4786              	@ 0 "" 2
 4787              	.LVL420:
 4788              		.loc 2 544 3 view .LVU1849
 4789              		.loc 2 544 3 is_stmt 0 view .LVU1850
 4790              		.thumb
 4791              		.syntax unified
 4792              	.LBE308:
 4793              	.LBE307:
1748:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __RBIT((uint32_t)inputlength);
 4794              		.loc 1 1748 33 view .LVU1851
 4795 02d2 9060     		str	r0, [r2, #8]
1749:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4796              		.loc 1 1749 11 is_stmt 1 view .LVU1852
 4797              	.LVL421:
 4798              	.LBB309:
 4799              	.LBI309:
 526:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4800              		.loc 2 526 57 view .LVU1853
 4801              	.LBB310:
 528:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 4802              		.loc 2 528 3 view .LVU1854
 531:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4803              		.loc 2 531 4 view .LVU1855
 4804              		.syntax unified
 4805              	@ 531 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 4806 02d4 96FAA6F6 		rbit r6, r6
 4807              	@ 0 "" 2
 4808              	.LVL422:
 4809              		.loc 2 544 3 view .LVU1856
 4810              		.thumb
 4811              		.syntax unified
 4812              	.L391:
 4813              		.loc 2 544 3 is_stmt 0 view .LVU1857
 4814              	.LBE310:
 4815              	.LBE309:
1756:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4816              		.loc 1 1756 33 view .LVU1858
 4817 02d8 9660     		str	r6, [r2, #8]
 4818              	.LVL423:
 4819              	.L355:
1809:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4820              		.loc 1 1809 7 is_stmt 1 view .LVU1859
1809:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4821              		.loc 1 1809 10 is_stmt 0 view .LVU1860
 4822 02da 45F2F051 		movw	r1, #22000
 4823 02de 2046     		mov	r0, r4
 4824 02e0 FFF7FEFF 		bl	CRYP_WaitOnCCFlag
 4825              	.LVL424:
1809:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 4826              		.loc 1 1809 9 view .LVU1861
 4827 02e4 0028     		cmp	r0, #0
 4828 02e6 7FF41EAF 		bne	.L397
1817:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4829              		.loc 1 1817 7 is_stmt 1 view .LVU1862
1817:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4830              		.loc 1 1817 36 is_stmt 0 view .LVU1863
 4831 02ea 2368     		ldr	r3, [r4]
1817:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4832              		.loc 1 1817 46 view .LVU1864
 4833 02ec DA68     		ldr	r2, [r3, #12]
1817:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4834              		.loc 1 1817 29 view .LVU1865
 4835 02ee C9F80020 		str	r2, [r9]
1818:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 4836              		.loc 1 1818 7 is_stmt 1 view .LVU1866
 4837              	.LVL425:
1819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4838              		.loc 1 1819 7 view .LVU1867
1819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4839              		.loc 1 1819 46 is_stmt 0 view .LVU1868
 4840 02f2 DA68     		ldr	r2, [r3, #12]
1819:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4841              		.loc 1 1819 29 view .LVU1869
 4842 02f4 C9F80420 		str	r2, [r9, #4]
1820:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 4843              		.loc 1 1820 7 is_stmt 1 view .LVU1870
 4844              	.LVL426:
1821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4845              		.loc 1 1821 7 view .LVU1871
1821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4846              		.loc 1 1821 46 is_stmt 0 view .LVU1872
 4847 02f8 DA68     		ldr	r2, [r3, #12]
1821:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       tagaddr+=4U;
 4848              		.loc 1 1821 29 view .LVU1873
 4849 02fa C9F80820 		str	r2, [r9, #8]
1822:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(tagaddr) = hcryp->Instance->DOUTR;
 4850              		.loc 1 1822 7 is_stmt 1 view .LVU1874
 4851              	.LVL427:
1823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4852              		.loc 1 1823 7 view .LVU1875
1823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4853              		.loc 1 1823 46 is_stmt 0 view .LVU1876
 4854 02fe DA68     		ldr	r2, [r3, #12]
1823:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4855              		.loc 1 1823 29 view .LVU1877
 4856 0300 C9F80C20 		str	r2, [r9, #12]
1826:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4857              		.loc 1 1826 7 is_stmt 1 view .LVU1878
 4858 0304 1A68     		ldr	r2, [r3]
 4859 0306 42F08002 		orr	r2, r2, #128
 4860 030a 1A60     		str	r2, [r3]
1829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
 4861              		.loc 1 1829 7 view .LVU1879
1829:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_READY;
 4862              		.loc 1 1829 20 is_stmt 0 view .LVU1880
 4863 030c 0722     		movs	r2, #7
 4864 030e 84F84820 		strb	r2, [r4, #72]
1830:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable the Peripheral */
 4865              		.loc 1 1830 7 is_stmt 1 view .LVU1881
1830:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable the Peripheral */
 4866              		.loc 1 1830 20 is_stmt 0 view .LVU1882
 4867 0312 0122     		movs	r2, #1
 4868 0314 84F85520 		strb	r2, [r4, #85]
1832:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 4869              		.loc 1 1832 7 is_stmt 1 view .LVU1883
 4870 0318 1A68     		ldr	r2, [r3]
 4871 031a 22F00102 		bic	r2, r2, #1
 4872 031e 1A60     		str	r2, [r3]
 4873 0320 D4E6     		b	.L335
 4874              	.LVL428:
 4875              	.L354:
1751:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4876              		.loc 1 1751 14 view .LVU1884
1751:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4877              		.loc 1 1751 16 is_stmt 0 view .LVU1885
 4878 0322 042F     		cmp	r7, #4
 4879 0324 07D1     		bne	.L356
1753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
 4880              		.loc 1 1753 11 is_stmt 1 view .LVU1886
 4881              	.LVL429:
 4882              	.LBB311:
 4883              	.LBI311:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4884              		.loc 2 450 57 view .LVU1887
 4885              	.LBB312:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4886              		.loc 2 453 3 view .LVU1888
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4887              		.loc 2 453 10 is_stmt 0 view .LVU1889
 4888 0326 09BA     		rev	r1, r1
 4889              	.LVL430:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4890              		.loc 2 453 10 view .LVU1890
 4891              	.LBE312:
 4892              	.LBE311:
 4893              	.LBB313:
 4894              	.LBB314:
 4895 0328 1BBA     		rev	r3, r3
 4896              	.LVL431:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4897              		.loc 2 453 10 view .LVU1891
 4898              	.LBE314:
 4899              	.LBE313:
 4900              	.LBB316:
 4901              	.LBB317:
 4902 032a 00BA     		rev	r0, r0
 4903              	.LVL432:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4904              		.loc 2 453 10 view .LVU1892
 4905              	.LBE317:
 4906              	.LBE316:
1753:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)headerlength);
 4907              		.loc 1 1753 33 view .LVU1893
 4908 032c 9160     		str	r1, [r2, #8]
1754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
 4909              		.loc 1 1754 11 is_stmt 1 view .LVU1894
 4910              	.LBB319:
 4911              	.LBI313:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4912              		.loc 2 450 57 view .LVU1895
 4913              	.LBB315:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4914              		.loc 2 453 3 view .LVU1896
 4915              	.LBE315:
 4916              	.LBE319:
 4917              	.LBB320:
 4918              	.LBB321:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4919              		.loc 2 453 10 is_stmt 0 view .LVU1897
 4920 032e 36BA     		rev	r6, r6
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4921              		.loc 2 453 10 view .LVU1898
 4922              	.LBE321:
 4923              	.LBE320:
1754:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)(inputlength>>32));
 4924              		.loc 1 1754 33 view .LVU1899
 4925 0330 9360     		str	r3, [r2, #8]
1755:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
 4926              		.loc 1 1755 11 is_stmt 1 view .LVU1900
 4927              	.LBB323:
 4928              	.LBI316:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4929              		.loc 2 450 57 view .LVU1901
 4930              	.LBB318:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4931              		.loc 2 453 3 view .LVU1902
 4932              	.LBE318:
 4933              	.LBE323:
1755:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __REV((uint32_t)inputlength);
 4934              		.loc 1 1755 33 is_stmt 0 view .LVU1903
 4935 0332 9060     		str	r0, [r2, #8]
1756:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 4936              		.loc 1 1756 11 is_stmt 1 view .LVU1904
 4937              	.LBB324:
 4938              	.LBI320:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4939              		.loc 2 450 57 view .LVU1905
 4940              	.LBB322:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4941              		.loc 2 453 3 view .LVU1906
 4942 0334 D0E7     		b	.L391
 4943              	.LVL433:
 4944              	.L356:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 4945              		.loc 2 453 3 is_stmt 0 view .LVU1907
 4946              	.LBE322:
 4947              	.LBE324:
1758:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4948              		.loc 1 1758 14 is_stmt 1 view .LVU1908
1758:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 4949              		.loc 1 1758 16 is_stmt 0 view .LVU1909
 4950 0336 022F     		cmp	r7, #2
 4951 0338 0BD1     		bne	.L357
1760:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
 4952              		.loc 1 1760 11 is_stmt 1 view .LVU1910
 4953              	.LVL434:
 4954              	.LBB325:
 4955              	.LBI325:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4956              		.loc 2 504 57 view .LVU1911
 4957              	.LBB326:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4958              		.loc 2 506 3 view .LVU1912
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4959              		.loc 2 506 23 is_stmt 0 view .LVU1913
 4960 033a 4FEA3141 		ror	r1, r1, #16
 4961              	.LVL435:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4962              		.loc 2 506 23 view .LVU1914
 4963              	.LBE326:
 4964              	.LBE325:
 4965              	.LBB327:
 4966              	.LBB328:
 4967 033e 4FEA3343 		ror	r3, r3, #16
 4968              	.LVL436:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4969              		.loc 2 506 23 view .LVU1915
 4970              	.LBE328:
 4971              	.LBE327:
 4972              	.LBB330:
 4973              	.LBB331:
 4974 0342 4FEA3040 		ror	r0, r0, #16
 4975              	.LVL437:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4976              		.loc 2 506 23 view .LVU1916
 4977              	.LBE331:
 4978              	.LBE330:
1760:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)headerlength, 16);
 4979              		.loc 1 1760 33 view .LVU1917
 4980 0346 9160     		str	r1, [r2, #8]
1761:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)(inputlength>>32), 16);
 4981              		.loc 1 1761 11 is_stmt 1 view .LVU1918
 4982              	.LVL438:
 4983              	.LBB333:
 4984              	.LBI327:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 4985              		.loc 2 504 57 view .LVU1919
 4986              	.LBB329:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4987              		.loc 2 506 3 view .LVU1920
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4988              		.loc 2 506 3 is_stmt 0 view .LVU1921
 4989              	.LBE329:
 4990              	.LBE333:
 4991              	.LBB334:
 4992              	.LBB335:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4993              		.loc 2 506 23 view .LVU1922
 4994 0348 4FEA3646 		ror	r6, r6, #16
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 4995              		.loc 2 506 23 view .LVU1923
 4996              	.LBE335:
 4997              	.LBE334:
1761:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)(inputlength>>32), 16);
 4998              		.loc 1 1761 33 view .LVU1924
 4999 034c 9360     		str	r3, [r2, #8]
1762:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
 5000              		.loc 1 1762 11 is_stmt 1 view .LVU1925
 5001              	.LVL439:
 5002              	.LBB337:
 5003              	.LBI330:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5004              		.loc 2 504 57 view .LVU1926
 5005              	.LBB332:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 5006              		.loc 2 506 3 view .LVU1927
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 5007              		.loc 2 506 3 is_stmt 0 view .LVU1928
 5008              	.LBE332:
 5009              	.LBE337:
1762:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = __ROR((uint32_t)inputlength, 16);
 5010              		.loc 1 1762 33 view .LVU1929
 5011 034e 9060     		str	r0, [r2, #8]
1763:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 5012              		.loc 1 1763 11 is_stmt 1 view .LVU1930
 5013              	.LVL440:
 5014              	.LBB338:
 5015              	.LBI334:
 504:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5016              		.loc 2 504 57 view .LVU1931
 5017              	.LBB336:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 5018              		.loc 2 506 3 view .LVU1932
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 5019              		.loc 2 506 3 is_stmt 0 view .LVU1933
 5020 0350 C2E7     		b	.L391
 5021              	.LVL441:
 5022              	.L357:
 506:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 5023              		.loc 2 506 3 view .LVU1934
 5024              	.LBE336:
 5025              	.LBE338:
1765:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 5026              		.loc 1 1765 14 is_stmt 1 view .LVU1935
1765:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 5027              		.loc 1 1765 16 is_stmt 0 view .LVU1936
 5028 0352 002F     		cmp	r7, #0
 5029 0354 7FF47AAE 		bne	.L327
1767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
 5030              		.loc 1 1767 11 is_stmt 1 view .LVU1937
1767:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(headerlength);
 5031              		.loc 1 1767 33 is_stmt 0 view .LVU1938
 5032 0358 9160     		str	r1, [r2, #8]
1768:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
 5033              		.loc 1 1768 11 is_stmt 1 view .LVU1939
1768:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength>>32);
 5034              		.loc 1 1768 33 is_stmt 0 view .LVU1940
 5035 035a 9360     		str	r3, [r2, #8]
1769:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
 5036              		.loc 1 1769 11 is_stmt 1 view .LVU1941
1769:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = (uint32_t)(inputlength);
 5037              		.loc 1 1769 33 is_stmt 0 view .LVU1942
 5038 035c 9060     		str	r0, [r2, #8]
1770:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 5039              		.loc 1 1770 11 is_stmt 1 view .LVU1943
 5040 035e BBE7     		b	.L391
 5041              	.LVL442:
 5042              	.L353:
1785:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 5043              		.loc 1 1785 12 view .LVU1944
1785:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 5044              		.loc 1 1785 15 is_stmt 0 view .LVU1945
 5045 0360 B3F5803F 		cmp	r3, #65536
 5046 0364 7FF472AE 		bne	.L327
1787:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5047              		.loc 1 1787 9 is_stmt 1 view .LVU1946
 5048 0368 1368     		ldr	r3, [r2]
 5049 036a 43F08003 		orr	r3, r3, #128
 5050 036e 1360     		str	r3, [r2]
1789:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Enter the last block made of a 128-bit value formatted
 5051              		.loc 1 1789 9 view .LVU1947
 5052              	.LVL443:
1792:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5053              		.loc 1 1792 9 view .LVU1948
1792:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5054              		.loc 1 1792 33 is_stmt 0 view .LVU1949
 5055 0370 D8F80030 		ldr	r3, [r8]
1792:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5056              		.loc 1 1792 31 view .LVU1950
 5057 0374 9360     		str	r3, [r2, #8]
1793:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 5058              		.loc 1 1793 9 is_stmt 1 view .LVU1951
 5059              	.LVL444:
1794:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5060              		.loc 1 1794 9 view .LVU1952
1794:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5061              		.loc 1 1794 33 is_stmt 0 view .LVU1953
 5062 0376 D8F80430 		ldr	r3, [r8, #4]
1794:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5063              		.loc 1 1794 31 view .LVU1954
 5064 037a 9360     		str	r3, [r2, #8]
1795:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 5065              		.loc 1 1795 9 is_stmt 1 view .LVU1955
 5066              	.LVL445:
1796:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5067              		.loc 1 1796 9 view .LVU1956
1796:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5068              		.loc 1 1796 34 is_stmt 0 view .LVU1957
 5069 037c D8F80830 		ldr	r3, [r8, #8]
1796:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         inputaddr+=4U;
 5070              		.loc 1 1796 32 view .LVU1958
 5071 0380 9360     		str	r3, [r2, #8]
1797:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 5072              		.loc 1 1797 9 is_stmt 1 view .LVU1959
 5073              	.LVL446:
1798:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 5074              		.loc 1 1798 9 view .LVU1960
1798:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 5075              		.loc 1 1798 33 is_stmt 0 view .LVU1961
 5076 0382 D8F80C30 		ldr	r3, [r8, #12]
1798:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 5077              		.loc 1 1798 31 view .LVU1962
 5078 0386 9360     		str	r3, [r2, #8]
 5079 0388 A7E7     		b	.L355
 5080              	.LVL447:
 5081              	.L359:
1843:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 5082              		.loc 1 1843 12 view .LVU1963
 5083 038a 0225     		movs	r5, #2
 5084 038c 5EE6     		b	.L327
 5085              	.LVL448:
 5086              	.L360:
1843:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 5087              		.loc 1 1843 12 view .LVU1964
 5088 038e 1D46     		mov	r5, r3
 5089 0390 5CE6     		b	.L327
 5090              		.cfi_endproc
 5091              	.LFE315:
 5093              		.section	.text.HAL_CRYPEx_Read_IVRegisters,"ax",%progbits
 5094              		.align	1
 5095              		.global	HAL_CRYPEx_Read_IVRegisters
 5096              		.syntax unified
 5097              		.thumb
 5098              		.thumb_func
 5099              		.fpu softvfp
 5101              	HAL_CRYPEx_Read_IVRegisters:
 5102              	.LVL449:
 5103              	.LFB316:
1881:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
 5104              		.loc 1 1881 1 is_stmt 1 view -0
 5105              		.cfi_startproc
 5106              		@ args = 0, pretend = 0, frame = 0
 5107              		@ frame_needed = 0, uses_anonymous_args = 0
 5108              		@ link register save eliminated.
1882:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5109              		.loc 1 1882 3 view .LVU1966
1884:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5110              		.loc 1 1884 3 view .LVU1967
1884:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5111              		.loc 1 1884 41 is_stmt 0 view .LVU1968
 5112 0000 0368     		ldr	r3, [r0]
1884:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5113              		.loc 1 1884 30 view .LVU1969
 5114 0002 DA6A     		ldr	r2, [r3, #44]
 5115              	.LVL450:
 5116              	.LBB339:
 5117              	.LBI339:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5118              		.loc 2 450 57 is_stmt 1 view .LVU1970
 5119              	.LBB340:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5120              		.loc 2 453 3 view .LVU1971
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5121              		.loc 2 453 10 is_stmt 0 view .LVU1972
 5122 0004 12BA     		rev	r2, r2
 5123              	.LVL451:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5124              		.loc 2 453 10 view .LVU1973
 5125              	.LBE340:
 5126              	.LBE339:
1884:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5127              		.loc 1 1884 28 view .LVU1974
 5128 0006 0A60     		str	r2, [r1]
1885:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->IVR2);
 5129              		.loc 1 1885 3 is_stmt 1 view .LVU1975
 5130              	.LVL452:
1886:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5131              		.loc 1 1886 3 view .LVU1976
1886:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5132              		.loc 1 1886 30 is_stmt 0 view .LVU1977
 5133 0008 9A6A     		ldr	r2, [r3, #40]
 5134              	.LVL453:
 5135              	.LBB341:
 5136              	.LBI341:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5137              		.loc 2 450 57 is_stmt 1 view .LVU1978
 5138              	.LBB342:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5139              		.loc 2 453 3 view .LVU1979
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5140              		.loc 2 453 10 is_stmt 0 view .LVU1980
 5141 000a 12BA     		rev	r2, r2
 5142              	.LVL454:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5143              		.loc 2 453 10 view .LVU1981
 5144              	.LBE342:
 5145              	.LBE341:
1886:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5146              		.loc 1 1886 28 view .LVU1982
 5147 000c 4A60     		str	r2, [r1, #4]
1887:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->IVR1);
 5148              		.loc 1 1887 3 is_stmt 1 view .LVU1983
 5149              	.LVL455:
1888:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5150              		.loc 1 1888 3 view .LVU1984
1888:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5151              		.loc 1 1888 30 is_stmt 0 view .LVU1985
 5152 000e 5A6A     		ldr	r2, [r3, #36]
 5153              	.LVL456:
 5154              	.LBB343:
 5155              	.LBI343:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5156              		.loc 2 450 57 is_stmt 1 view .LVU1986
 5157              	.LBB344:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5158              		.loc 2 453 3 view .LVU1987
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5159              		.loc 2 453 10 is_stmt 0 view .LVU1988
 5160 0010 12BA     		rev	r2, r2
 5161              	.LVL457:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5162              		.loc 2 453 10 view .LVU1989
 5163              	.LBE344:
 5164              	.LBE343:
1888:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5165              		.loc 1 1888 28 view .LVU1990
 5166 0012 8A60     		str	r2, [r1, #8]
1889:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->IVR0);
 5167              		.loc 1 1889 3 is_stmt 1 view .LVU1991
 5168              	.LVL458:
1890:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5169              		.loc 1 1890 3 view .LVU1992
1890:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5170              		.loc 1 1890 30 is_stmt 0 view .LVU1993
 5171 0014 1B6A     		ldr	r3, [r3, #32]
 5172              	.LVL459:
 5173              	.LBB345:
 5174              	.LBI345:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5175              		.loc 2 450 57 is_stmt 1 view .LVU1994
 5176              	.LBB346:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5177              		.loc 2 453 3 view .LVU1995
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5178              		.loc 2 453 10 is_stmt 0 view .LVU1996
 5179 0016 1BBA     		rev	r3, r3
 5180              	.LVL460:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5181              		.loc 2 453 10 view .LVU1997
 5182              	.LBE346:
 5183              	.LBE345:
1890:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5184              		.loc 1 1890 28 view .LVU1998
 5185 0018 CB60     		str	r3, [r1, #12]
1891:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5186              		.loc 1 1891 1 view .LVU1999
 5187 001a 7047     		bx	lr
 5188              		.cfi_endproc
 5189              	.LFE316:
 5191              		.section	.text.HAL_CRYPEx_Write_IVRegisters,"ax",%progbits
 5192              		.align	1
 5193              		.global	HAL_CRYPEx_Write_IVRegisters
 5194              		.syntax unified
 5195              		.thumb
 5196              		.thumb_func
 5197              		.fpu softvfp
 5199              	HAL_CRYPEx_Write_IVRegisters:
 5200              	.LVL461:
 5201              	.LFB317:
1905:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t ivaddr = (uint32_t)Input;
 5202              		.loc 1 1905 1 is_stmt 1 view -0
 5203              		.cfi_startproc
 5204              		@ args = 0, pretend = 0, frame = 0
 5205              		@ frame_needed = 0, uses_anonymous_args = 0
 5206              		@ link register save eliminated.
1906:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5207              		.loc 1 1906 3 view .LVU2001
1908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5208              		.loc 1 1908 3 view .LVU2002
 5209              	.LBB347:
 5210              	.LBB348:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5211              		.loc 2 453 10 is_stmt 0 view .LVU2003
 5212 0000 0A68     		ldr	r2, [r1]
 5213              	.LBE348:
 5214              	.LBE347:
1908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5215              		.loc 1 1908 8 view .LVU2004
 5216 0002 0368     		ldr	r3, [r0]
 5217              	.LVL462:
 5218              	.LBB350:
 5219              	.LBI347:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5220              		.loc 2 450 57 is_stmt 1 view .LVU2005
 5221              	.LBB349:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5222              		.loc 2 453 3 view .LVU2006
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5223              		.loc 2 453 10 is_stmt 0 view .LVU2007
 5224 0004 12BA     		rev	r2, r2
 5225              	.LVL463:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5226              		.loc 2 453 10 view .LVU2008
 5227              	.LBE349:
 5228              	.LBE350:
1908:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5229              		.loc 1 1908 25 view .LVU2009
 5230 0006 DA62     		str	r2, [r3, #44]
1909:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->IVR2 = __REV(*(uint32_t*)(ivaddr));
 5231              		.loc 1 1909 3 is_stmt 1 view .LVU2010
 5232              	.LVL464:
1910:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5233              		.loc 1 1910 3 view .LVU2011
 5234              	.LBB351:
 5235              	.LBI351:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5236              		.loc 2 450 57 view .LVU2012
 5237              	.LBB352:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5238              		.loc 2 453 3 view .LVU2013
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5239              		.loc 2 453 10 is_stmt 0 view .LVU2014
 5240 0008 4A68     		ldr	r2, [r1, #4]
 5241 000a 12BA     		rev	r2, r2
 5242              	.LVL465:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5243              		.loc 2 453 10 view .LVU2015
 5244              	.LBE352:
 5245              	.LBE351:
1910:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5246              		.loc 1 1910 25 view .LVU2016
 5247 000c 9A62     		str	r2, [r3, #40]
1911:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->IVR1 = __REV(*(uint32_t*)(ivaddr));
 5248              		.loc 1 1911 3 is_stmt 1 view .LVU2017
 5249              	.LVL466:
1912:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5250              		.loc 1 1912 3 view .LVU2018
 5251              	.LBB353:
 5252              	.LBI353:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5253              		.loc 2 450 57 view .LVU2019
 5254              	.LBB354:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5255              		.loc 2 453 3 view .LVU2020
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5256              		.loc 2 453 10 is_stmt 0 view .LVU2021
 5257 000e 8A68     		ldr	r2, [r1, #8]
 5258 0010 12BA     		rev	r2, r2
 5259              	.LVL467:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5260              		.loc 2 453 10 view .LVU2022
 5261              	.LBE354:
 5262              	.LBE353:
1912:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5263              		.loc 1 1912 25 view .LVU2023
 5264 0012 5A62     		str	r2, [r3, #36]
1913:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->IVR0 = __REV(*(uint32_t*)(ivaddr));
 5265              		.loc 1 1913 3 is_stmt 1 view .LVU2024
 5266              	.LVL468:
1914:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5267              		.loc 1 1914 3 view .LVU2025
 5268              	.LBB355:
 5269              	.LBI355:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5270              		.loc 2 450 57 view .LVU2026
 5271              	.LBB356:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5272              		.loc 2 453 3 view .LVU2027
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5273              		.loc 2 453 10 is_stmt 0 view .LVU2028
 5274 0014 CA68     		ldr	r2, [r1, #12]
 5275 0016 12BA     		rev	r2, r2
 5276              	.LVL469:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5277              		.loc 2 453 10 view .LVU2029
 5278              	.LBE356:
 5279              	.LBE355:
1914:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5280              		.loc 1 1914 25 view .LVU2030
 5281 0018 1A62     		str	r2, [r3, #32]
1915:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5282              		.loc 1 1915 1 view .LVU2031
 5283 001a 7047     		bx	lr
 5284              		.cfi_endproc
 5285              	.LFE317:
 5287              		.section	.text.HAL_CRYPEx_Read_SuspendRegisters,"ax",%progbits
 5288              		.align	1
 5289              		.global	HAL_CRYPEx_Read_SuspendRegisters
 5290              		.syntax unified
 5291              		.thumb
 5292              		.thumb_func
 5293              		.fpu softvfp
 5295              	HAL_CRYPEx_Read_SuspendRegisters:
 5296              	.LVL470:
 5297              	.LFB318:
1929:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
 5298              		.loc 1 1929 1 is_stmt 1 view -0
 5299              		.cfi_startproc
 5300              		@ args = 0, pretend = 0, frame = 0
 5301              		@ frame_needed = 0, uses_anonymous_args = 0
1930:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5302              		.loc 1 1930 3 view .LVU2033
1929:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
 5303              		.loc 1 1929 1 is_stmt 0 view .LVU2034
 5304 0000 38B5     		push	{r3, r4, r5, lr}
 5305              	.LCFI24:
 5306              		.cfi_def_cfa_offset 16
 5307              		.cfi_offset 3, -16
 5308              		.cfi_offset 4, -12
 5309              		.cfi_offset 5, -8
 5310              		.cfi_offset 14, -4
1933:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 5311              		.loc 1 1933 7 view .LVU2035
 5312 0002 0368     		ldr	r3, [r0]
 5313 0004 1B68     		ldr	r3, [r3]
 5314 0006 23F4FF53 		bic	r3, r3, #8160
 5315 000a 23F00703 		bic	r3, r3, #7
 5316 000e 5B04     		lsls	r3, r3, #17
 5317 0010 5B0C     		lsrs	r3, r3, #17
1933:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 5318              		.loc 1 1933 6 view .LVU2036
 5319 0012 B3F5804F 		cmp	r3, #16384
1929:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr = (uint32_t)Output;
 5320              		.loc 1 1929 1 view .LVU2037
 5321 0016 0546     		mov	r5, r0
 5322 0018 0C46     		mov	r4, r1
 5323              	.LVL471:
1933:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 5324              		.loc 1 1933 3 is_stmt 1 view .LVU2038
1933:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 5325              		.loc 1 1933 6 is_stmt 0 view .LVU2039
 5326 001a 11D1     		bne	.L403
1936:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 5327              		.loc 1 1936 5 is_stmt 1 view .LVU2040
1936:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 5328              		.loc 1 1936 8 is_stmt 0 view .LVU2041
 5329 001c FFF7FEFF 		bl	CRYP_WaitOnBusyFlagReset.constprop.0
 5330              	.LVL472:
1936:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 5331              		.loc 1 1936 7 view .LVU2042
 5332 0020 70B1     		cbz	r0, .L403
1938:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_ERROR;
 5333              		.loc 1 1938 7 is_stmt 1 view .LVU2043
1938:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_ERROR;
 5334              		.loc 1 1938 24 is_stmt 0 view .LVU2044
 5335 0022 AB6D     		ldr	r3, [r5, #88]
 5336 0024 43F00803 		orr	r3, r3, #8
 5337 0028 AB65     		str	r3, [r5, #88]
1939:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5338              		.loc 1 1939 7 is_stmt 1 view .LVU2045
1939:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5339              		.loc 1 1939 20 is_stmt 0 view .LVU2046
 5340 002a 0423     		movs	r3, #4
 5341 002c 85F85530 		strb	r3, [r5, #85]
1942:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5342              		.loc 1 1942 7 is_stmt 1 view .LVU2047
1942:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5343              		.loc 1 1942 7 view .LVU2048
 5344 0030 0023     		movs	r3, #0
 5345 0032 85F85430 		strb	r3, [r5, #84]
1942:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5346              		.loc 1 1942 7 view .LVU2049
1947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 5347              		.loc 1 1947 7 view .LVU2050
 5348 0036 2846     		mov	r0, r5
1968:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5349              		.loc 1 1968 1 is_stmt 0 view .LVU2051
 5350 0038 BDE83840 		pop	{r3, r4, r5, lr}
 5351              	.LCFI25:
 5352              		.cfi_remember_state
 5353              		.cfi_restore 14
 5354              		.cfi_restore 5
 5355              		.cfi_restore 4
 5356              		.cfi_restore 3
 5357              		.cfi_def_cfa_offset 0
 5358              	.LVL473:
1947:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 5359              		.loc 1 1947 7 view .LVU2052
 5360 003c FFF7FEBF 		b	HAL_CRYP_ErrorCallback
 5361              	.LVL474:
 5362              	.L403:
 5363              	.LCFI26:
 5364              		.cfi_restore_state
1953:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5365              		.loc 1 1953 3 is_stmt 1 view .LVU2053
1953:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5366              		.loc 1 1953 41 is_stmt 0 view .LVU2054
 5367 0040 2B68     		ldr	r3, [r5]
1953:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5368              		.loc 1 1953 30 view .LVU2055
 5369 0042 DA6D     		ldr	r2, [r3, #92]
 5370              	.LVL475:
 5371              	.LBB357:
 5372              	.LBI357:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5373              		.loc 2 450 57 is_stmt 1 view .LVU2056
 5374              	.LBB358:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5375              		.loc 2 453 3 view .LVU2057
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5376              		.loc 2 453 10 is_stmt 0 view .LVU2058
 5377 0044 12BA     		rev	r2, r2
 5378              	.LVL476:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5379              		.loc 2 453 10 view .LVU2059
 5380              	.LBE358:
 5381              	.LBE357:
1953:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5382              		.loc 1 1953 28 view .LVU2060
 5383 0046 2260     		str	r2, [r4]
1954:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP6R);
 5384              		.loc 1 1954 3 is_stmt 1 view .LVU2061
 5385              	.LVL477:
1955:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5386              		.loc 1 1955 3 view .LVU2062
1955:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5387              		.loc 1 1955 30 is_stmt 0 view .LVU2063
 5388 0048 9A6D     		ldr	r2, [r3, #88]
 5389              	.LVL478:
 5390              	.LBB359:
 5391              	.LBI359:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5392              		.loc 2 450 57 is_stmt 1 view .LVU2064
 5393              	.LBB360:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5394              		.loc 2 453 3 view .LVU2065
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5395              		.loc 2 453 10 is_stmt 0 view .LVU2066
 5396 004a 12BA     		rev	r2, r2
 5397              	.LVL479:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5398              		.loc 2 453 10 view .LVU2067
 5399              	.LBE360:
 5400              	.LBE359:
1955:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5401              		.loc 1 1955 28 view .LVU2068
 5402 004c 6260     		str	r2, [r4, #4]
1956:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP5R);
 5403              		.loc 1 1956 3 is_stmt 1 view .LVU2069
 5404              	.LVL480:
1957:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5405              		.loc 1 1957 3 view .LVU2070
1957:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5406              		.loc 1 1957 30 is_stmt 0 view .LVU2071
 5407 004e 5A6D     		ldr	r2, [r3, #84]
 5408              	.LVL481:
 5409              	.LBB361:
 5410              	.LBI361:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5411              		.loc 2 450 57 is_stmt 1 view .LVU2072
 5412              	.LBB362:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5413              		.loc 2 453 3 view .LVU2073
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5414              		.loc 2 453 10 is_stmt 0 view .LVU2074
 5415 0050 12BA     		rev	r2, r2
 5416              	.LVL482:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5417              		.loc 2 453 10 view .LVU2075
 5418              	.LBE362:
 5419              	.LBE361:
1957:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5420              		.loc 1 1957 28 view .LVU2076
 5421 0052 A260     		str	r2, [r4, #8]
1958:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP4R);
 5422              		.loc 1 1958 3 is_stmt 1 view .LVU2077
 5423              	.LVL483:
1959:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5424              		.loc 1 1959 3 view .LVU2078
1959:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5425              		.loc 1 1959 30 is_stmt 0 view .LVU2079
 5426 0054 1A6D     		ldr	r2, [r3, #80]
 5427              	.LVL484:
 5428              	.LBB363:
 5429              	.LBI363:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5430              		.loc 2 450 57 is_stmt 1 view .LVU2080
 5431              	.LBB364:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5432              		.loc 2 453 3 view .LVU2081
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5433              		.loc 2 453 10 is_stmt 0 view .LVU2082
 5434 0056 12BA     		rev	r2, r2
 5435              	.LVL485:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5436              		.loc 2 453 10 view .LVU2083
 5437              	.LBE364:
 5438              	.LBE363:
1959:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5439              		.loc 1 1959 28 view .LVU2084
 5440 0058 E260     		str	r2, [r4, #12]
1960:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP3R);
 5441              		.loc 1 1960 3 is_stmt 1 view .LVU2085
 5442              	.LVL486:
1961:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5443              		.loc 1 1961 3 view .LVU2086
1961:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5444              		.loc 1 1961 30 is_stmt 0 view .LVU2087
 5445 005a DA6C     		ldr	r2, [r3, #76]
 5446              	.LVL487:
 5447              	.LBB365:
 5448              	.LBI365:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5449              		.loc 2 450 57 is_stmt 1 view .LVU2088
 5450              	.LBB366:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5451              		.loc 2 453 3 view .LVU2089
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5452              		.loc 2 453 10 is_stmt 0 view .LVU2090
 5453 005c 12BA     		rev	r2, r2
 5454              	.LVL488:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5455              		.loc 2 453 10 view .LVU2091
 5456              	.LBE366:
 5457              	.LBE365:
1961:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5458              		.loc 1 1961 28 view .LVU2092
 5459 005e 2261     		str	r2, [r4, #16]
1962:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP2R);
 5460              		.loc 1 1962 3 is_stmt 1 view .LVU2093
 5461              	.LVL489:
1963:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5462              		.loc 1 1963 3 view .LVU2094
1963:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5463              		.loc 1 1963 30 is_stmt 0 view .LVU2095
 5464 0060 9A6C     		ldr	r2, [r3, #72]
 5465              	.LVL490:
 5466              	.LBB367:
 5467              	.LBI367:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5468              		.loc 2 450 57 is_stmt 1 view .LVU2096
 5469              	.LBB368:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5470              		.loc 2 453 3 view .LVU2097
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5471              		.loc 2 453 10 is_stmt 0 view .LVU2098
 5472 0062 12BA     		rev	r2, r2
 5473              	.LVL491:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5474              		.loc 2 453 10 view .LVU2099
 5475              	.LBE368:
 5476              	.LBE367:
1963:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5477              		.loc 1 1963 28 view .LVU2100
 5478 0064 6261     		str	r2, [r4, #20]
1964:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP1R);
 5479              		.loc 1 1964 3 is_stmt 1 view .LVU2101
 5480              	.LVL492:
1965:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5481              		.loc 1 1965 3 view .LVU2102
1965:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5482              		.loc 1 1965 30 is_stmt 0 view .LVU2103
 5483 0066 5A6C     		ldr	r2, [r3, #68]
 5484              	.LVL493:
 5485              	.LBB369:
 5486              	.LBI369:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5487              		.loc 2 450 57 is_stmt 1 view .LVU2104
 5488              	.LBB370:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5489              		.loc 2 453 3 view .LVU2105
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5490              		.loc 2 453 10 is_stmt 0 view .LVU2106
 5491 0068 12BA     		rev	r2, r2
 5492              	.LVL494:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5493              		.loc 2 453 10 view .LVU2107
 5494              	.LBE370:
 5495              	.LBE369:
1965:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   outputaddr+=4U;
 5496              		.loc 1 1965 28 view .LVU2108
 5497 006a A261     		str	r2, [r4, #24]
1966:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(outputaddr) = __REV(hcryp->Instance->SUSP0R);
 5498              		.loc 1 1966 3 is_stmt 1 view .LVU2109
 5499              	.LVL495:
1967:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5500              		.loc 1 1967 3 view .LVU2110
1967:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5501              		.loc 1 1967 30 is_stmt 0 view .LVU2111
 5502 006c 1B6C     		ldr	r3, [r3, #64]
 5503              	.LVL496:
 5504              	.LBB371:
 5505              	.LBI371:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5506              		.loc 2 450 57 is_stmt 1 view .LVU2112
 5507              	.LBB372:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5508              		.loc 2 453 3 view .LVU2113
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5509              		.loc 2 453 10 is_stmt 0 view .LVU2114
 5510 006e 1BBA     		rev	r3, r3
 5511              	.LVL497:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5512              		.loc 2 453 10 view .LVU2115
 5513              	.LBE372:
 5514              	.LBE371:
1967:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5515              		.loc 1 1967 28 view .LVU2116
 5516 0070 E361     		str	r3, [r4, #28]
1968:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5517              		.loc 1 1968 1 view .LVU2117
 5518 0072 38BD     		pop	{r3, r4, r5, pc}
1968:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5519              		.loc 1 1968 1 view .LVU2118
 5520              		.cfi_endproc
 5521              	.LFE318:
 5523              		.section	.text.HAL_CRYPEx_Write_SuspendRegisters,"ax",%progbits
 5524              		.align	1
 5525              		.global	HAL_CRYPEx_Write_SuspendRegisters
 5526              		.syntax unified
 5527              		.thumb
 5528              		.thumb_func
 5529              		.fpu softvfp
 5531              	HAL_CRYPEx_Write_SuspendRegisters:
 5532              	.LVL498:
 5533              	.LFB319:
1980:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t ivaddr = (uint32_t)Input;
 5534              		.loc 1 1980 1 is_stmt 1 view -0
 5535              		.cfi_startproc
 5536              		@ args = 0, pretend = 0, frame = 0
 5537              		@ frame_needed = 0, uses_anonymous_args = 0
 5538              		@ link register save eliminated.
1981:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5539              		.loc 1 1981 3 view .LVU2120
1983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5540              		.loc 1 1983 3 view .LVU2121
 5541              	.LBB373:
 5542              	.LBB374:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5543              		.loc 2 453 10 is_stmt 0 view .LVU2122
 5544 0000 0A68     		ldr	r2, [r1]
 5545              	.LBE374:
 5546              	.LBE373:
1983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5547              		.loc 1 1983 8 view .LVU2123
 5548 0002 0368     		ldr	r3, [r0]
 5549              	.LVL499:
 5550              	.LBB376:
 5551              	.LBI373:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5552              		.loc 2 450 57 is_stmt 1 view .LVU2124
 5553              	.LBB375:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5554              		.loc 2 453 3 view .LVU2125
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5555              		.loc 2 453 10 is_stmt 0 view .LVU2126
 5556 0004 12BA     		rev	r2, r2
 5557              	.LVL500:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5558              		.loc 2 453 10 view .LVU2127
 5559              	.LBE375:
 5560              	.LBE376:
1983:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5561              		.loc 1 1983 27 view .LVU2128
 5562 0006 DA65     		str	r2, [r3, #92]
1984:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP6R = __REV(*(uint32_t*)(ivaddr));
 5563              		.loc 1 1984 3 is_stmt 1 view .LVU2129
 5564              	.LVL501:
1985:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5565              		.loc 1 1985 3 view .LVU2130
 5566              	.LBB377:
 5567              	.LBI377:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5568              		.loc 2 450 57 view .LVU2131
 5569              	.LBB378:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5570              		.loc 2 453 3 view .LVU2132
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5571              		.loc 2 453 10 is_stmt 0 view .LVU2133
 5572 0008 4A68     		ldr	r2, [r1, #4]
 5573 000a 12BA     		rev	r2, r2
 5574              	.LVL502:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5575              		.loc 2 453 10 view .LVU2134
 5576              	.LBE378:
 5577              	.LBE377:
1985:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5578              		.loc 1 1985 27 view .LVU2135
 5579 000c 9A65     		str	r2, [r3, #88]
1986:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP5R = __REV(*(uint32_t*)(ivaddr));
 5580              		.loc 1 1986 3 is_stmt 1 view .LVU2136
 5581              	.LVL503:
1987:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5582              		.loc 1 1987 3 view .LVU2137
 5583              	.LBB379:
 5584              	.LBI379:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5585              		.loc 2 450 57 view .LVU2138
 5586              	.LBB380:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5587              		.loc 2 453 3 view .LVU2139
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5588              		.loc 2 453 10 is_stmt 0 view .LVU2140
 5589 000e 8A68     		ldr	r2, [r1, #8]
 5590 0010 12BA     		rev	r2, r2
 5591              	.LVL504:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5592              		.loc 2 453 10 view .LVU2141
 5593              	.LBE380:
 5594              	.LBE379:
1987:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5595              		.loc 1 1987 27 view .LVU2142
 5596 0012 5A65     		str	r2, [r3, #84]
1988:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP4R = __REV(*(uint32_t*)(ivaddr));
 5597              		.loc 1 1988 3 is_stmt 1 view .LVU2143
 5598              	.LVL505:
1989:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5599              		.loc 1 1989 3 view .LVU2144
 5600              	.LBB381:
 5601              	.LBI381:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5602              		.loc 2 450 57 view .LVU2145
 5603              	.LBB382:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5604              		.loc 2 453 3 view .LVU2146
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5605              		.loc 2 453 10 is_stmt 0 view .LVU2147
 5606 0014 CA68     		ldr	r2, [r1, #12]
 5607 0016 12BA     		rev	r2, r2
 5608              	.LVL506:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5609              		.loc 2 453 10 view .LVU2148
 5610              	.LBE382:
 5611              	.LBE381:
1989:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5612              		.loc 1 1989 27 view .LVU2149
 5613 0018 1A65     		str	r2, [r3, #80]
1990:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP3R = __REV(*(uint32_t*)(ivaddr));
 5614              		.loc 1 1990 3 is_stmt 1 view .LVU2150
 5615              	.LVL507:
1991:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5616              		.loc 1 1991 3 view .LVU2151
 5617              	.LBB383:
 5618              	.LBI383:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5619              		.loc 2 450 57 view .LVU2152
 5620              	.LBB384:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5621              		.loc 2 453 3 view .LVU2153
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5622              		.loc 2 453 10 is_stmt 0 view .LVU2154
 5623 001a 0A69     		ldr	r2, [r1, #16]
 5624 001c 12BA     		rev	r2, r2
 5625              	.LVL508:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5626              		.loc 2 453 10 view .LVU2155
 5627              	.LBE384:
 5628              	.LBE383:
1991:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5629              		.loc 1 1991 27 view .LVU2156
 5630 001e DA64     		str	r2, [r3, #76]
1992:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP2R = __REV(*(uint32_t*)(ivaddr));
 5631              		.loc 1 1992 3 is_stmt 1 view .LVU2157
 5632              	.LVL509:
1993:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5633              		.loc 1 1993 3 view .LVU2158
 5634              	.LBB385:
 5635              	.LBI385:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5636              		.loc 2 450 57 view .LVU2159
 5637              	.LBB386:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5638              		.loc 2 453 3 view .LVU2160
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5639              		.loc 2 453 10 is_stmt 0 view .LVU2161
 5640 0020 4A69     		ldr	r2, [r1, #20]
 5641 0022 12BA     		rev	r2, r2
 5642              	.LVL510:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5643              		.loc 2 453 10 view .LVU2162
 5644              	.LBE386:
 5645              	.LBE385:
1993:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5646              		.loc 1 1993 27 view .LVU2163
 5647 0024 9A64     		str	r2, [r3, #72]
1994:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP1R = __REV(*(uint32_t*)(ivaddr));
 5648              		.loc 1 1994 3 is_stmt 1 view .LVU2164
 5649              	.LVL511:
1995:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5650              		.loc 1 1995 3 view .LVU2165
 5651              	.LBB387:
 5652              	.LBI387:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5653              		.loc 2 450 57 view .LVU2166
 5654              	.LBB388:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5655              		.loc 2 453 3 view .LVU2167
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5656              		.loc 2 453 10 is_stmt 0 view .LVU2168
 5657 0026 8A69     		ldr	r2, [r1, #24]
 5658 0028 12BA     		rev	r2, r2
 5659              	.LVL512:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5660              		.loc 2 453 10 view .LVU2169
 5661              	.LBE388:
 5662              	.LBE387:
1995:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   ivaddr+=4U;
 5663              		.loc 1 1995 27 view .LVU2170
 5664 002a 5A64     		str	r2, [r3, #68]
1996:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->SUSP0R = __REV(*(uint32_t*)(ivaddr));
 5665              		.loc 1 1996 3 is_stmt 1 view .LVU2171
 5666              	.LVL513:
1997:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5667              		.loc 1 1997 3 view .LVU2172
 5668              	.LBB389:
 5669              	.LBI389:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5670              		.loc 2 450 57 view .LVU2173
 5671              	.LBB390:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5672              		.loc 2 453 3 view .LVU2174
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5673              		.loc 2 453 10 is_stmt 0 view .LVU2175
 5674 002c CA69     		ldr	r2, [r1, #28]
 5675 002e 12BA     		rev	r2, r2
 5676              	.LVL514:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5677              		.loc 2 453 10 view .LVU2176
 5678              	.LBE390:
 5679              	.LBE389:
1997:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5680              		.loc 1 1997 27 view .LVU2177
 5681 0030 1A64     		str	r2, [r3, #64]
1998:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5682              		.loc 1 1998 1 view .LVU2178
 5683 0032 7047     		bx	lr
 5684              		.cfi_endproc
 5685              	.LFE319:
 5687              		.section	.text.HAL_CRYPEx_Read_KeyRegisters,"ax",%progbits
 5688              		.align	1
 5689              		.global	HAL_CRYPEx_Read_KeyRegisters
 5690              		.syntax unified
 5691              		.thumb
 5692              		.thumb_func
 5693              		.fpu softvfp
 5695              	HAL_CRYPEx_Read_KeyRegisters:
 5696              	.LVL515:
 5697              	.LFB320:
2012:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t keyaddr = (uint32_t)Output;
 5698              		.loc 1 2012 1 is_stmt 1 view -0
 5699              		.cfi_startproc
 5700              		@ args = 0, pretend = 0, frame = 0
 5701              		@ frame_needed = 0, uses_anonymous_args = 0
 5702              		@ link register save eliminated.
2013:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5703              		.loc 1 2013 3 view .LVU2180
2015:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 5704              		.loc 1 2015 3 view .LVU2181
2015:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 5705              		.loc 1 2015 6 is_stmt 0 view .LVU2182
 5706 0000 B2F5802F 		cmp	r2, #262144
 5707 0004 0368     		ldr	r3, [r0]
 5708 0006 0CD1     		bne	.L409
2017:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5709              		.loc 1 2017 5 is_stmt 1 view .LVU2183
2017:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5710              		.loc 1 2017 29 is_stmt 0 view .LVU2184
 5711 0008 DA6B     		ldr	r2, [r3, #60]
 5712              	.LVL516:
 5713              	.LBB391:
 5714              	.LBI391:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5715              		.loc 2 450 57 is_stmt 1 view .LVU2185
 5716              	.LBB392:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5717              		.loc 2 453 3 view .LVU2186
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5718              		.loc 2 453 10 is_stmt 0 view .LVU2187
 5719 000a 12BA     		rev	r2, r2
 5720              	.LVL517:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5721              		.loc 2 453 10 view .LVU2188
 5722              	.LBE392:
 5723              	.LBE391:
2017:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5724              		.loc 1 2017 27 view .LVU2189
 5725 000c 0A60     		str	r2, [r1]
2018:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR6);
 5726              		.loc 1 2018 5 is_stmt 1 view .LVU2190
 5727              	.LVL518:
2019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5728              		.loc 1 2019 5 view .LVU2191
2019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5729              		.loc 1 2019 29 is_stmt 0 view .LVU2192
 5730 000e 9A6B     		ldr	r2, [r3, #56]
 5731              	.LVL519:
 5732              	.LBB393:
 5733              	.LBI393:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5734              		.loc 2 450 57 is_stmt 1 view .LVU2193
 5735              	.LBB394:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5736              		.loc 2 453 3 view .LVU2194
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5737              		.loc 2 453 10 is_stmt 0 view .LVU2195
 5738 0010 12BA     		rev	r2, r2
 5739              	.LVL520:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5740              		.loc 2 453 10 view .LVU2196
 5741              	.LBE394:
 5742              	.LBE393:
2019:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5743              		.loc 1 2019 27 view .LVU2197
 5744 0012 4A60     		str	r2, [r1, #4]
2020:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR5);
 5745              		.loc 1 2020 5 is_stmt 1 view .LVU2198
 5746              	.LVL521:
2021:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5747              		.loc 1 2021 5 view .LVU2199
2021:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5748              		.loc 1 2021 29 is_stmt 0 view .LVU2200
 5749 0014 5A6B     		ldr	r2, [r3, #52]
 5750              	.LVL522:
 5751              	.LBB395:
 5752              	.LBI395:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5753              		.loc 2 450 57 is_stmt 1 view .LVU2201
 5754              	.LBB396:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5755              		.loc 2 453 3 view .LVU2202
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5756              		.loc 2 453 10 is_stmt 0 view .LVU2203
 5757 0016 12BA     		rev	r2, r2
 5758              	.LVL523:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5759              		.loc 2 453 10 view .LVU2204
 5760              	.LBE396:
 5761              	.LBE395:
2021:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5762              		.loc 1 2021 27 view .LVU2205
 5763 0018 8A60     		str	r2, [r1, #8]
2022:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR4);
 5764              		.loc 1 2022 5 is_stmt 1 view .LVU2206
 5765              	.LVL524:
2023:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5766              		.loc 1 2023 5 view .LVU2207
2023:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5767              		.loc 1 2023 29 is_stmt 0 view .LVU2208
 5768 001a 1A6B     		ldr	r2, [r3, #48]
 5769              	.LVL525:
 5770              	.LBB397:
 5771              	.LBI397:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5772              		.loc 2 450 57 is_stmt 1 view .LVU2209
 5773              	.LBB398:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5774              		.loc 2 453 3 view .LVU2210
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5775              		.loc 2 453 10 is_stmt 0 view .LVU2211
 5776 001c 12BA     		rev	r2, r2
 5777              	.LVL526:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5778              		.loc 2 453 10 view .LVU2212
 5779              	.LBE398:
 5780              	.LBE397:
2023:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5781              		.loc 1 2023 27 view .LVU2213
 5782 001e CA60     		str	r2, [r1, #12]
2024:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 5783              		.loc 1 2024 5 is_stmt 1 view .LVU2214
2024:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 5784              		.loc 1 2024 12 is_stmt 0 view .LVU2215
 5785 0020 1031     		adds	r1, r1, #16
 5786              	.LVL527:
 5787              	.L409:
2027:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5788              		.loc 1 2027 3 is_stmt 1 view .LVU2216
2027:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5789              		.loc 1 2027 27 is_stmt 0 view .LVU2217
 5790 0022 DA69     		ldr	r2, [r3, #28]
 5791              	.LVL528:
 5792              	.LBB399:
 5793              	.LBI399:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5794              		.loc 2 450 57 is_stmt 1 view .LVU2218
 5795              	.LBB400:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5796              		.loc 2 453 3 view .LVU2219
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5797              		.loc 2 453 10 is_stmt 0 view .LVU2220
 5798 0024 12BA     		rev	r2, r2
 5799              	.LVL529:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5800              		.loc 2 453 10 view .LVU2221
 5801              	.LBE400:
 5802              	.LBE399:
2027:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5803              		.loc 1 2027 25 view .LVU2222
 5804 0026 0A60     		str	r2, [r1]
2028:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR2);
 5805              		.loc 1 2028 3 is_stmt 1 view .LVU2223
 5806              	.LVL530:
2029:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5807              		.loc 1 2029 3 view .LVU2224
2029:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5808              		.loc 1 2029 27 is_stmt 0 view .LVU2225
 5809 0028 9A69     		ldr	r2, [r3, #24]
 5810              	.LVL531:
 5811              	.LBB401:
 5812              	.LBI401:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5813              		.loc 2 450 57 is_stmt 1 view .LVU2226
 5814              	.LBB402:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5815              		.loc 2 453 3 view .LVU2227
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5816              		.loc 2 453 10 is_stmt 0 view .LVU2228
 5817 002a 12BA     		rev	r2, r2
 5818              	.LVL532:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5819              		.loc 2 453 10 view .LVU2229
 5820              	.LBE402:
 5821              	.LBE401:
2029:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5822              		.loc 1 2029 25 view .LVU2230
 5823 002c 4A60     		str	r2, [r1, #4]
2030:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR1);
 5824              		.loc 1 2030 3 is_stmt 1 view .LVU2231
 5825              	.LVL533:
2031:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5826              		.loc 1 2031 3 view .LVU2232
2031:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5827              		.loc 1 2031 27 is_stmt 0 view .LVU2233
 5828 002e 5A69     		ldr	r2, [r3, #20]
 5829              	.LVL534:
 5830              	.LBB403:
 5831              	.LBI403:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5832              		.loc 2 450 57 is_stmt 1 view .LVU2234
 5833              	.LBB404:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5834              		.loc 2 453 3 view .LVU2235
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5835              		.loc 2 453 10 is_stmt 0 view .LVU2236
 5836 0030 12BA     		rev	r2, r2
 5837              	.LVL535:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5838              		.loc 2 453 10 view .LVU2237
 5839              	.LBE404:
 5840              	.LBE403:
2031:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   keyaddr+=4U;
 5841              		.loc 1 2031 25 view .LVU2238
 5842 0032 8A60     		str	r2, [r1, #8]
2032:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(keyaddr) = __REV(hcryp->Instance->KEYR0);
 5843              		.loc 1 2032 3 is_stmt 1 view .LVU2239
 5844              	.LVL536:
2033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5845              		.loc 1 2033 3 view .LVU2240
2033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5846              		.loc 1 2033 27 is_stmt 0 view .LVU2241
 5847 0034 1B69     		ldr	r3, [r3, #16]
 5848              	.LVL537:
 5849              	.LBB405:
 5850              	.LBI405:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5851              		.loc 2 450 57 is_stmt 1 view .LVU2242
 5852              	.LBB406:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5853              		.loc 2 453 3 view .LVU2243
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5854              		.loc 2 453 10 is_stmt 0 view .LVU2244
 5855 0036 1BBA     		rev	r3, r3
 5856              	.LVL538:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5857              		.loc 2 453 10 view .LVU2245
 5858              	.LBE406:
 5859              	.LBE405:
2033:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 5860              		.loc 1 2033 25 view .LVU2246
 5861 0038 CB60     		str	r3, [r1, #12]
2034:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5862              		.loc 1 2034 1 view .LVU2247
 5863 003a 7047     		bx	lr
 5864              		.cfi_endproc
 5865              	.LFE320:
 5867              		.section	.text.HAL_CRYPEx_Write_KeyRegisters,"ax",%progbits
 5868              		.align	1
 5869              		.global	HAL_CRYPEx_Write_KeyRegisters
 5870              		.syntax unified
 5871              		.thumb
 5872              		.thumb_func
 5873              		.fpu softvfp
 5875              	HAL_CRYPEx_Write_KeyRegisters:
 5876              	.LVL539:
 5877              	.LFB321:
2047:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t keyaddr = (uint32_t)Input;
 5878              		.loc 1 2047 1 is_stmt 1 view -0
 5879              		.cfi_startproc
 5880              		@ args = 0, pretend = 0, frame = 0
 5881              		@ frame_needed = 0, uses_anonymous_args = 0
 5882              		@ link register save eliminated.
2048:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 5883              		.loc 1 2048 3 view .LVU2249
2050:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 5884              		.loc 1 2050 3 view .LVU2250
2050:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 5885              		.loc 1 2050 6 is_stmt 0 view .LVU2251
 5886 0000 B2F5802F 		cmp	r2, #262144
 5887 0004 0368     		ldr	r3, [r0]
 5888 0006 0CD1     		bne	.L411
2052:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5889              		.loc 1 2052 5 is_stmt 1 view .LVU2252
 5890              	.LVL540:
 5891              	.LBB407:
 5892              	.LBI407:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5893              		.loc 2 450 57 view .LVU2253
 5894              	.LBE407:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5895              		.loc 2 453 3 view .LVU2254
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5896              		.loc 2 453 3 is_stmt 0 view .LVU2255
 5897 0008 0A68     		ldr	r2, [r1]
 5898              	.LVL541:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5899              		.loc 2 453 3 view .LVU2256
 5900 000a 12BA     		rev	r2, r2
2052:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5901              		.loc 1 2052 28 view .LVU2257
 5902 000c DA63     		str	r2, [r3, #60]
2053:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR6 = __REV(*(uint32_t*)(keyaddr));
 5903              		.loc 1 2053 5 is_stmt 1 view .LVU2258
 5904              	.LVL542:
2054:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5905              		.loc 1 2054 5 view .LVU2259
 5906              	.LBB408:
 5907              	.LBI408:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5908              		.loc 2 450 57 view .LVU2260
 5909              	.LBB409:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5910              		.loc 2 453 3 view .LVU2261
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5911              		.loc 2 453 10 is_stmt 0 view .LVU2262
 5912 000e 4A68     		ldr	r2, [r1, #4]
 5913 0010 12BA     		rev	r2, r2
 5914              	.LVL543:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5915              		.loc 2 453 10 view .LVU2263
 5916              	.LBE409:
 5917              	.LBE408:
2054:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5918              		.loc 1 2054 28 view .LVU2264
 5919 0012 9A63     		str	r2, [r3, #56]
2055:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR5 = __REV(*(uint32_t*)(keyaddr));
 5920              		.loc 1 2055 5 is_stmt 1 view .LVU2265
 5921              	.LVL544:
2056:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5922              		.loc 1 2056 5 view .LVU2266
 5923              	.LBB410:
 5924              	.LBI410:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5925              		.loc 2 450 57 view .LVU2267
 5926              	.LBB411:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5927              		.loc 2 453 3 view .LVU2268
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5928              		.loc 2 453 10 is_stmt 0 view .LVU2269
 5929 0014 8A68     		ldr	r2, [r1, #8]
 5930 0016 12BA     		rev	r2, r2
 5931              	.LVL545:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5932              		.loc 2 453 10 view .LVU2270
 5933              	.LBE411:
 5934              	.LBE410:
2056:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5935              		.loc 1 2056 28 view .LVU2271
 5936 0018 5A63     		str	r2, [r3, #52]
2057:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR4 = __REV(*(uint32_t*)(keyaddr));
 5937              		.loc 1 2057 5 is_stmt 1 view .LVU2272
 5938              	.LVL546:
2058:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5939              		.loc 1 2058 5 view .LVU2273
 5940              	.LBB412:
 5941              	.LBI412:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5942              		.loc 2 450 57 view .LVU2274
 5943              	.LBB413:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5944              		.loc 2 453 3 view .LVU2275
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5945              		.loc 2 453 10 is_stmt 0 view .LVU2276
 5946 001a CA68     		ldr	r2, [r1, #12]
 5947 001c 12BA     		rev	r2, r2
 5948              	.LVL547:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5949              		.loc 2 453 10 view .LVU2277
 5950              	.LBE413:
 5951              	.LBE412:
2058:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5952              		.loc 1 2058 28 view .LVU2278
 5953 001e 1A63     		str	r2, [r3, #48]
2059:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 5954              		.loc 1 2059 5 is_stmt 1 view .LVU2279
2059:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 5955              		.loc 1 2059 12 is_stmt 0 view .LVU2280
 5956 0020 1031     		adds	r1, r1, #16
 5957              	.LVL548:
 5958              	.L411:
2062:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5959              		.loc 1 2062 5 is_stmt 1 view .LVU2281
 5960              	.LBB414:
 5961              	.LBI414:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5962              		.loc 2 450 57 view .LVU2282
 5963              	.LBB415:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5964              		.loc 2 453 3 view .LVU2283
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5965              		.loc 2 453 10 is_stmt 0 view .LVU2284
 5966 0022 0A68     		ldr	r2, [r1]
 5967 0024 12BA     		rev	r2, r2
 5968              	.LVL549:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5969              		.loc 2 453 10 view .LVU2285
 5970              	.LBE415:
 5971              	.LBE414:
2062:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5972              		.loc 1 2062 28 view .LVU2286
 5973 0026 DA61     		str	r2, [r3, #28]
2063:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR2 = __REV(*(uint32_t*)(keyaddr));
 5974              		.loc 1 2063 5 is_stmt 1 view .LVU2287
 5975              	.LVL550:
2064:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5976              		.loc 1 2064 5 view .LVU2288
 5977              	.LBB416:
 5978              	.LBI416:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5979              		.loc 2 450 57 view .LVU2289
 5980              	.LBB417:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5981              		.loc 2 453 3 view .LVU2290
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5982              		.loc 2 453 10 is_stmt 0 view .LVU2291
 5983 0028 4A68     		ldr	r2, [r1, #4]
 5984 002a 12BA     		rev	r2, r2
 5985              	.LVL551:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5986              		.loc 2 453 10 view .LVU2292
 5987              	.LBE417:
 5988              	.LBE416:
2064:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5989              		.loc 1 2064 28 view .LVU2293
 5990 002c 9A61     		str	r2, [r3, #24]
2065:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR1 = __REV(*(uint32_t*)(keyaddr));
 5991              		.loc 1 2065 5 is_stmt 1 view .LVU2294
 5992              	.LVL552:
2066:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 5993              		.loc 1 2066 5 view .LVU2295
 5994              	.LBB418:
 5995              	.LBI418:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 5996              		.loc 2 450 57 view .LVU2296
 5997              	.LBB419:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5998              		.loc 2 453 3 view .LVU2297
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 5999              		.loc 2 453 10 is_stmt 0 view .LVU2298
 6000 002e 8A68     		ldr	r2, [r1, #8]
 6001 0030 12BA     		rev	r2, r2
 6002              	.LVL553:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 6003              		.loc 2 453 10 view .LVU2299
 6004              	.LBE419:
 6005              	.LBE418:
2066:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     keyaddr+=4U;
 6006              		.loc 1 2066 28 view .LVU2300
 6007 0032 5A61     		str	r2, [r3, #20]
2067:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     hcryp->Instance->KEYR0 = __REV(*(uint32_t*)(keyaddr));
 6008              		.loc 1 2067 5 is_stmt 1 view .LVU2301
 6009              	.LVL554:
2068:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6010              		.loc 1 2068 5 view .LVU2302
 6011              	.LBB420:
 6012              	.LBI420:
 450:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 6013              		.loc 2 450 57 view .LVU2303
 6014              	.LBB421:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 6015              		.loc 2 453 3 view .LVU2304
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 6016              		.loc 2 453 10 is_stmt 0 view .LVU2305
 6017 0034 CA68     		ldr	r2, [r1, #12]
 6018 0036 12BA     		rev	r2, r2
 6019              	.LVL555:
 453:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 6020              		.loc 2 453 10 view .LVU2306
 6021              	.LBE421:
 6022              	.LBE420:
2068:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6023              		.loc 1 2068 28 view .LVU2307
 6024 0038 1A61     		str	r2, [r3, #16]
2069:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6025              		.loc 1 2069 1 view .LVU2308
 6026 003a 7047     		bx	lr
 6027              		.cfi_endproc
 6028              	.LFE321:
 6030              		.section	.text.HAL_CRYPEx_Read_ControlRegister,"ax",%progbits
 6031              		.align	1
 6032              		.global	HAL_CRYPEx_Read_ControlRegister
 6033              		.syntax unified
 6034              		.thumb
 6035              		.thumb_func
 6036              		.fpu softvfp
 6038              	HAL_CRYPEx_Read_ControlRegister:
 6039              	.LVL556:
 6040              	.LFB322:
2082:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   *(uint32_t*)(void *)(Output) = hcryp->Instance->CR;                           /* Derogation Misra
 6041              		.loc 1 2082 1 is_stmt 1 view -0
 6042              		.cfi_startproc
 6043              		@ args = 0, pretend = 0, frame = 0
 6044              		@ frame_needed = 0, uses_anonymous_args = 0
 6045              		@ link register save eliminated.
2083:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6046              		.loc 1 2083 3 view .LVU2310
2083:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6047              		.loc 1 2083 39 is_stmt 0 view .LVU2311
 6048 0000 0368     		ldr	r3, [r0]
2083:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6049              		.loc 1 2083 49 view .LVU2312
 6050 0002 1B68     		ldr	r3, [r3]
2083:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6051              		.loc 1 2083 32 view .LVU2313
 6052 0004 0B60     		str	r3, [r1]
2084:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6053              		.loc 1 2084 1 view .LVU2314
 6054 0006 7047     		bx	lr
 6055              		.cfi_endproc
 6056              	.LFE322:
 6058              		.section	.text.HAL_CRYPEx_Write_ControlRegister,"ax",%progbits
 6059              		.align	1
 6060              		.global	HAL_CRYPEx_Write_ControlRegister
 6061              		.syntax unified
 6062              		.thumb
 6063              		.thumb_func
 6064              		.fpu softvfp
 6066              	HAL_CRYPEx_Write_ControlRegister:
 6067              	.LVL557:
 6068              	.LFB323:
2096:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   hcryp->Instance->CR = *(uint32_t*)(void *)(Input);                            /* Derogation Misra
 6069              		.loc 1 2096 1 is_stmt 1 view -0
 6070              		.cfi_startproc
 6071              		@ args = 0, pretend = 0, frame = 0
 6072              		@ frame_needed = 0, uses_anonymous_args = 0
 6073              		@ link register save eliminated.
2097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* At the same time, set handle state back to READY to be able to resume the AES calculations
 6074              		.loc 1 2097 3 view .LVU2316
2097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* At the same time, set handle state back to READY to be able to resume the AES calculations
 6075              		.loc 1 2097 8 is_stmt 0 view .LVU2317
 6076 0000 0368     		ldr	r3, [r0]
2097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* At the same time, set handle state back to READY to be able to resume the AES calculations
 6077              		.loc 1 2097 25 view .LVU2318
 6078 0002 0A68     		ldr	r2, [r1]
2097:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* At the same time, set handle state back to READY to be able to resume the AES calculations
 6079              		.loc 1 2097 23 view .LVU2319
 6080 0004 1A60     		str	r2, [r3]
2100:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6081              		.loc 1 2100 3 is_stmt 1 view .LVU2320
2100:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6082              		.loc 1 2100 23 is_stmt 0 view .LVU2321
 6083 0006 0123     		movs	r3, #1
 6084 0008 80F85530 		strb	r3, [r0, #85]
2101:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6085              		.loc 1 2101 1 view .LVU2322
 6086 000c 7047     		bx	lr
 6087              		.cfi_endproc
 6088              	.LFE323:
 6090              		.section	.text.HAL_CRYPEx_ProcessSuspend,"ax",%progbits
 6091              		.align	1
 6092              		.global	HAL_CRYPEx_ProcessSuspend
 6093              		.syntax unified
 6094              		.thumb
 6095              		.thumb_func
 6096              		.fpu softvfp
 6098              	HAL_CRYPEx_ProcessSuspend:
 6099              	.LVL558:
 6100              	.LFB324:
2115:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   /* Set Handle Suspend Request field */
 6101              		.loc 1 2115 1 is_stmt 1 view -0
 6102              		.cfi_startproc
 6103              		@ args = 0, pretend = 0, frame = 0
 6104              		@ frame_needed = 0, uses_anonymous_args = 0
 6105              		@ link register save eliminated.
2117:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6106              		.loc 1 2117 3 view .LVU2324
2117:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** }
 6107              		.loc 1 2117 25 is_stmt 0 view .LVU2325
 6108 0000 0123     		movs	r3, #1
 6109 0002 80F85C30 		strb	r3, [r0, #92]
2118:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6110              		.loc 1 2118 1 view .LVU2326
 6111 0006 7047     		bx	lr
 6112              		.cfi_endproc
 6113              	.LFE324:
 6115              		.section	.text.CRYP_AES_Auth_IT,"ax",%progbits
 6116              		.align	1
 6117              		.global	CRYP_AES_Auth_IT
 6118              		.syntax unified
 6119              		.thumb
 6120              		.thumb_func
 6121              		.fpu softvfp
 6123              	CRYP_AES_Auth_IT:
 6124              	.LVL559:
 6125              	.LFB328:
2253:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr         ;
 6126              		.loc 1 2253 1 is_stmt 1 view -0
 6127              		.cfi_startproc
 6128              		@ args = 0, pretend = 0, frame = 64
 6129              		@ frame_needed = 0, uses_anonymous_args = 0
2254:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t outputaddr        ;
 6130              		.loc 1 2254 3 view .LVU2328
2255:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t index             ;
 6131              		.loc 1 2255 3 view .LVU2329
2256:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t addhoc_process = 0;
 6132              		.loc 1 2256 3 view .LVU2330
2257:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength     = 0;
 6133              		.loc 1 2257 3 view .LVU2331
2258:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflengthmod4 = 0;
 6134              		.loc 1 2258 3 view .LVU2332
2259:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask[4][3]        ;
 6135              		.loc 1 2259 3 view .LVU2333
2260:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask_index = hcryp->Init.DataType >> AES_CR_DATATYPE_Pos;
 6136              		.loc 1 2260 3 view .LVU2334
2261:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t intermediate_data[4] = {0};
 6137              		.loc 1 2261 3 view .LVU2335
2253:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr         ;
 6138              		.loc 1 2253 1 is_stmt 0 view .LVU2336
 6139 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6140              	.LCFI27:
 6141              		.cfi_def_cfa_offset 36
 6142              		.cfi_offset 4, -36
 6143              		.cfi_offset 5, -32
 6144              		.cfi_offset 6, -28
 6145              		.cfi_offset 7, -24
 6146              		.cfi_offset 8, -20
 6147              		.cfi_offset 9, -16
 6148              		.cfi_offset 10, -12
 6149              		.cfi_offset 11, -8
 6150              		.cfi_offset 14, -4
 6151 0004 91B0     		sub	sp, sp, #68
 6152              	.LCFI28:
 6153              		.cfi_def_cfa_offset 104
2261:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t intermediate_data[4] = {0};
 6154              		.loc 1 2261 36 view .LVU2337
 6155 0006 8668     		ldr	r6, [r0, #8]
 6156              	.LVL560:
2262:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6157              		.loc 1 2262 3 is_stmt 1 view .LVU2338
2253:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t inputaddr         ;
 6158              		.loc 1 2253 1 is_stmt 0 view .LVU2339
 6159 0008 0446     		mov	r4, r0
2262:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6160              		.loc 1 2262 12 view .LVU2340
 6161 000a 1022     		movs	r2, #16
 6162 000c 0021     		movs	r1, #0
 6163 000e 6846     		mov	r0, sp
 6164              	.LVL561:
2262:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6165              		.loc 1 2262 12 view .LVU2341
 6166 0010 FFF7FEFF 		bl	memset
 6167              	.LVL562:
2264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 6168              		.loc 1 2264 3 is_stmt 1 view .LVU2342
2264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 6169              		.loc 1 2264 14 is_stmt 0 view .LVU2343
 6170 0014 4FF07F43 		mov	r3, #-16777216
 6171 0018 0493     		str	r3, [sp, #16]
2264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 6172              		.loc 1 2264 30 is_stmt 1 view .LVU2344
2264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 6173              		.loc 1 2264 41 is_stmt 0 view .LVU2345
 6174 001a 03F57F03 		add	r3, r3, #16711680
2265:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 6175              		.loc 1 2265 14 view .LVU2346
 6176 001e 6FF0FF02 		mvn	r2, #255
2264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 6177              		.loc 1 2264 41 view .LVU2347
 6178 0022 0593     		str	r3, [sp, #20]
2264:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[1][0] = 0x0000FF00U;  mask[1][1] = 0x0000FFFFU;  mask[1][2] = 0xFF00FFFFU;  /* 16-bit data *
 6179              		.loc 1 2264 57 is_stmt 1 view .LVU2348
2265:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 6180              		.loc 1 2265 14 is_stmt 0 view .LVU2349
 6181 0024 4FF47F43 		mov	r3, #65280
 6182 0028 CDE90623 		strd	r2, r3, [sp, #24]
2265:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 6183              		.loc 1 2265 30 is_stmt 1 view .LVU2350
2265:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[2][0] = 0x000000FFU;  mask[2][1] = 0x0000FFFFU;  mask[2][2] = 0x00FFFFFFU;  /* 8-bit data  *
 6184              		.loc 1 2265 68 is_stmt 0 view .LVU2351
 6185 002c 4FF6FF73 		movw	r3, #65535
 6186 0030 6FF47F02 		mvn	r2, #16711680
 6187 0034 CDE90832 		strd	r3, r2, [sp, #32]
2266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 6188              		.loc 1 2266 3 is_stmt 1 view .LVU2352
2266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 6189              		.loc 1 2266 14 is_stmt 0 view .LVU2353
 6190 0038 FF21     		movs	r1, #255
2266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 6191              		.loc 1 2266 68 view .LVU2354
 6192 003a 6FF07F42 		mvn	r2, #-16777216
2266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 6193              		.loc 1 2266 41 view .LVU2355
 6194 003e CDE90A13 		strd	r1, r3, [sp, #40]
2266:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   mask[3][0] = 0x000000FFU;  mask[3][1] = 0x0000FFFFU;  mask[3][2] = 0x00FFFFFFU;  /* Bit data    *
 6195              		.loc 1 2266 57 is_stmt 1 view .LVU2356
2267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6196              		.loc 1 2267 68 is_stmt 0 view .LVU2357
 6197 0042 CDE90E32 		strd	r3, r2, [sp, #56]
2269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 6198              		.loc 1 2269 11 view .LVU2358
 6199 0046 94F85530 		ldrb	r3, [r4, #85]	@ zero_extendqisi2
2269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 6200              		.loc 1 2269 5 view .LVU2359
 6201 004a 022B     		cmp	r3, #2
2267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6202              		.loc 1 2267 14 view .LVU2360
 6203 004c CDE90C21 		strd	r2, r1, [sp, #48]
2267:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6204              		.loc 1 2267 30 is_stmt 1 view .LVU2361
2269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 6205              		.loc 1 2269 3 view .LVU2362
2269:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   {
 6206              		.loc 1 2269 5 is_stmt 0 view .LVU2363
 6207 0050 40F09B81 		bne	.L452
2274:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6208              		.loc 1 2274 5 is_stmt 1 view .LVU2364
2274:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6209              		.loc 1 2274 20 is_stmt 0 view .LVU2365
 6210 0054 E569     		ldr	r5, [r4, #28]
 6211 0056 2368     		ldr	r3, [r4]
2274:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6212              		.loc 1 2274 8 view .LVU2366
 6213 0058 9DB9     		cbnz	r5, .L417
2277:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Disable Computation Complete Flag and Errors Interrupts */
 6214              		.loc 1 2277 7 is_stmt 1 view .LVU2367
 6215 005a 1A68     		ldr	r2, [r3]
 6216 005c 42F08002 		orr	r2, r2, #128
 6217 0060 1A60     		str	r2, [r3]
2279:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Change the CRYP state */
 6218              		.loc 1 2279 7 view .LVU2368
 6219 0062 1A68     		ldr	r2, [r3]
 6220 0064 22F4C062 		bic	r2, r2, #1536
 6221 0068 1A60     		str	r2, [r3]
2281:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6222              		.loc 1 2281 7 view .LVU2369
2281:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6223              		.loc 1 2281 20 is_stmt 0 view .LVU2370
 6224 006a 0123     		movs	r3, #1
 6225 006c 84F85530 		strb	r3, [r4, #85]
2284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6226              		.loc 1 2284 7 is_stmt 1 view .LVU2371
2284:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6227              		.loc 1 2284 20 is_stmt 0 view .LVU2372
 6228 0070 0423     		movs	r3, #4
 6229              	.L470:
2311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6230              		.loc 1 2311 22 view .LVU2373
 6231 0072 84F84830 		strb	r3, [r4, #72]
2314:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6232              		.loc 1 2314 9 is_stmt 1 view .LVU2374
2314:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6233              		.loc 1 2314 9 view .LVU2375
 6234              	.LVL563:
 6235              	.L465:
2695:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6236              		.loc 1 2695 8 is_stmt 0 view .LVU2376
 6237 0076 84F85450 		strb	r5, [r4, #84]
2695:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6238              		.loc 1 2695 8 is_stmt 1 view .LVU2377
2701:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
 6239              		.loc 1 2701 7 view .LVU2378
 6240 007a 2046     		mov	r0, r4
 6241 007c FFF7FEFF 		bl	HAL_CRYPEx_ComputationCpltCallback
 6242              	.LVL564:
2704:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 6243              		.loc 1 2704 7 view .LVU2379
 6244 0080 63E0     		b	.L467
 6245              	.LVL565:
 6246              	.L417:
2299:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6247              		.loc 1 2299 13 is_stmt 0 view .LVU2380
 6248 0082 B5F5005F 		cmp	r5, #8192
2261:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t intermediate_data[4] = {0};
 6249              		.loc 1 2261 12 view .LVU2381
 6250 0086 4FEA5602 		lsr	r2, r6, #1
2299:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6251              		.loc 1 2299 10 is_stmt 1 view .LVU2382
2299:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6252              		.loc 1 2299 13 is_stmt 0 view .LVU2383
 6253 008a 7BD1     		bne	.L418
2302:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6254              		.loc 1 2302 7 is_stmt 1 view .LVU2384
2302:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6255              		.loc 1 2302 16 is_stmt 0 view .LVU2385
 6256 008c 256C     		ldr	r5, [r4, #64]
2302:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6257              		.loc 1 2302 10 view .LVU2386
 6258 008e 65B9     		cbnz	r5, .L419
2305:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6259              		.loc 1 2305 9 is_stmt 1 view .LVU2387
 6260 0090 1A68     		ldr	r2, [r3]
 6261 0092 42F08002 		orr	r2, r2, #128
 6262 0096 1A60     		str	r2, [r3]
2307:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Change the CRYP state */
 6263              		.loc 1 2307 9 view .LVU2388
 6264 0098 1A68     		ldr	r2, [r3]
 6265 009a 22F4C062 		bic	r2, r2, #1536
 6266 009e 1A60     		str	r2, [r3]
2309:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Mark that the header phase is over */
 6267              		.loc 1 2309 9 view .LVU2389
2309:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Mark that the header phase is over */
 6268              		.loc 1 2309 22 is_stmt 0 view .LVU2390
 6269 00a0 0123     		movs	r3, #1
 6270 00a2 84F85530 		strb	r3, [r4, #85]
2311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6271              		.loc 1 2311 9 is_stmt 1 view .LVU2391
2311:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6272              		.loc 1 2311 22 is_stmt 0 view .LVU2392
 6273 00a6 0523     		movs	r3, #5
 6274 00a8 E3E7     		b	.L470
 6275              	.L419:
2326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6276              		.loc 1 2326 12 is_stmt 1 view .LVU2393
2326:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6277              		.loc 1 2326 15 is_stmt 0 view .LVU2394
 6278 00aa 94F85C10 		ldrb	r1, [r4, #92]	@ zero_extendqisi2
 6279 00ae 0129     		cmp	r1, #1
 6280 00b0 13D1     		bne	.L420
2329:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6281              		.loc 1 2329 9 is_stmt 1 view .LVU2395
 6282 00b2 1A68     		ldr	r2, [r3]
2332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6283              		.loc 1 2332 31 is_stmt 0 view .LVU2396
 6284 00b4 0020     		movs	r0, #0
2329:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6285              		.loc 1 2329 9 view .LVU2397
 6286 00b6 42F08002 		orr	r2, r2, #128
 6287 00ba 1A60     		str	r2, [r3]
2332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6288              		.loc 1 2332 9 is_stmt 1 view .LVU2398
2332:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6289              		.loc 1 2332 31 is_stmt 0 view .LVU2399
 6290 00bc 84F85C00 		strb	r0, [r4, #92]
2334:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Change the CRYP state */
 6291              		.loc 1 2334 9 is_stmt 1 view .LVU2400
 6292 00c0 1A68     		ldr	r2, [r3]
 6293 00c2 22F4C062 		bic	r2, r2, #1536
 6294 00c6 1A60     		str	r2, [r3]
2336:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is suspended */
 6295              		.loc 1 2336 9 view .LVU2401
2336:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the header phase is suspended */
 6296              		.loc 1 2336 22 is_stmt 0 view .LVU2402
 6297 00c8 0523     		movs	r3, #5
 6298 00ca 84F85530 		strb	r3, [r4, #85]
2338:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6299              		.loc 1 2338 9 is_stmt 1 view .LVU2403
2338:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6300              		.loc 1 2338 22 is_stmt 0 view .LVU2404
 6301 00ce 0823     		movs	r3, #8
 6302              	.L466:
2580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6303              		.loc 1 2580 22 view .LVU2405
 6304 00d0 84F84830 		strb	r3, [r4, #72]
2583:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6305              		.loc 1 2583 9 is_stmt 1 view .LVU2406
2583:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6306              		.loc 1 2583 9 view .LVU2407
 6307 00d4 84F85400 		strb	r0, [r4, #84]
2583:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6308              		.loc 1 2583 9 view .LVU2408
2585:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 6309              		.loc 1 2585 9 view .LVU2409
2585:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 6310              		.loc 1 2585 16 is_stmt 0 view .LVU2410
 6311 00d8 4AE0     		b	.L416
 6312              	.L420:
2348:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Get the last Input data address */
 6313              		.loc 1 2348 9 is_stmt 1 view .LVU2411
 6314 00da 1968     		ldr	r1, [r3]
 6315 00dc 41F08001 		orr	r1, r1, #128
 6316 00e0 1960     		str	r1, [r3]
2350:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6317              		.loc 1 2350 9 view .LVU2412
2350:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6318              		.loc 1 2350 36 is_stmt 0 view .LVU2413
 6319 00e2 A16B     		ldr	r1, [r4, #56]
2353:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6320              		.loc 1 2353 12 view .LVU2414
 6321 00e4 0F2D     		cmp	r5, #15
2350:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6322              		.loc 1 2350 19 view .LVU2415
 6323 00e6 8E46     		mov	lr, r1
 6324              	.LVL566:
2353:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6325              		.loc 1 2353 9 is_stmt 1 view .LVU2416
2353:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6326              		.loc 1 2353 12 is_stmt 0 view .LVU2417
 6327 00e8 31D8     		bhi	.L421
2355:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = 0;
 6328              		.loc 1 2355 11 is_stmt 1 view .LVU2418
 6329              	.LVL567:
2356:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           addhoc_process = 1;
 6330              		.loc 1 2356 11 view .LVU2419
2356:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           addhoc_process = 1;
 6331              		.loc 1 2356 30 is_stmt 0 view .LVU2420
 6332 00ea 0020     		movs	r0, #0
 6333 00ec 2064     		str	r0, [r4, #64]
2357:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           difflengthmod4 = difflength%4U;
 6334              		.loc 1 2357 11 is_stmt 1 view .LVU2421
 6335              	.LVL568:
2358:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6336              		.loc 1 2358 11 view .LVU2422
2358:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6337              		.loc 1 2358 26 is_stmt 0 view .LVU2423
 6338 00ee 05F00306 		and	r6, r5, #3
 6339              	.LVL569:
2357:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           difflengthmod4 = difflength%4U;
 6340              		.loc 1 2357 26 view .LVU2424
 6341 00f2 0120     		movs	r0, #1
 6342              	.LVL570:
 6343              	.L422:
2369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 6344              		.loc 1 2369 9 is_stmt 1 view .LVU2425
2369:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** #endif
 6345              		.loc 1 2369 12 is_stmt 0 view .LVU2426
 6346 00f4 6769     		ldr	r7, [r4, #20]
 6347 00f6 B7F5803F 		cmp	r7, #65536
 6348 00fa 09D1     		bne	.L423
2372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6349              		.loc 1 2372 11 is_stmt 1 view .LVU2427
2372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6350              		.loc 1 2372 14 is_stmt 0 view .LVU2428
 6351 00fc D4E90CAB 		ldrd	r10, [r4, #48]
2372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6352              		.loc 1 2372 20 view .LVU2429
 6353 0100 276C     		ldr	r7, [r4, #64]
 6354 0102 4FF00009 		mov	r9, #0
2372:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6355              		.loc 1 2372 14 view .LVU2430
 6356 0106 D945     		cmp	r9, fp
 6357 0108 02BF     		ittt	eq
 6358 010a 5745     		cmpeq	r7, r10
2377:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6359              		.loc 1 2377 13 is_stmt 1 view .LVU2431
2377:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6360              		.loc 1 2377 35 is_stmt 0 view .LVU2432
 6361 010c A76A     		ldreq	r7, [r4, #40]
 6362 010e A763     		streq	r7, [r4, #56]
 6363              	.L423:
2382:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6364              		.loc 1 2382 9 is_stmt 1 view .LVU2433
2382:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6365              		.loc 1 2382 12 is_stmt 0 view .LVU2434
 6366 0110 30B3     		cbz	r0, .L424
 6367 0112 25F00300 		bic	r0, r5, #3
 6368              	.LVL571:
2382:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6369              		.loc 1 2382 12 view .LVU2435
 6370 0116 0144     		add	r1, r1, r0
 6371              	.LVL572:
 6372              	.L425:
2396:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6373              		.loc 1 2396 26 is_stmt 1 discriminator 1 view .LVU2436
2396:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6374              		.loc 1 2396 11 is_stmt 0 discriminator 1 view .LVU2437
 6375 0118 8E45     		cmp	lr, r1
 6376 011a 2CD1     		bne	.L426
2404:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6377              		.loc 1 2404 11 is_stmt 1 view .LVU2438
2404:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6378              		.loc 1 2404 14 is_stmt 0 view .LVU2439
 6379 011c 6EB1     		cbz	r6, .L427
2406:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6380              		.loc 1 2406 13 is_stmt 1 view .LVU2440
2406:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6381              		.loc 1 2406 82 is_stmt 0 view .LVU2441
 6382 011e 02EB4202 		add	r2, r2, r2, lsl #1
 6383 0122 06F1FF3C 		add	ip, r6, #-1
 6384 0126 10A9     		add	r1, sp, #64
 6385 0128 6244     		add	r2, r2, ip
 6386 012a 01EB8202 		add	r2, r1, r2, lsl #2
2406:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6387              		.loc 1 2406 64 view .LVU2442
 6388 012e DEF80010 		ldr	r1, [lr]
 6389 0132 52F8302C 		ldr	r2, [r2, #-48]
 6390 0136 0A40     		ands	r2, r2, r1
2406:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6391              		.loc 1 2406 35 view .LVU2443
 6392 0138 9A60     		str	r2, [r3, #8]
 6393              	.L427:
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6394              		.loc 1 2409 51 discriminator 1 view .LVU2444
 6395 013a 0335     		adds	r5, r5, #3
 6396              	.LVL573:
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6397              		.loc 1 2409 55 discriminator 1 view .LVU2445
 6398 013c AD08     		lsrs	r5, r5, #2
 6399              	.LVL574:
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6400              		.loc 1 2409 37 discriminator 1 view .LVU2446
 6401 013e 0022     		movs	r2, #0
 6402 0140 C5F10405 		rsb	r5, r5, #4
2411:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6403              		.loc 1 2411 35 discriminator 1 view .LVU2447
 6404 0144 1146     		mov	r1, r2
 6405              	.L428:
 6406              	.LVL575:
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6407              		.loc 1 2409 25 is_stmt 1 discriminator 1 view .LVU2448
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6408              		.loc 1 2409 11 is_stmt 0 discriminator 1 view .LVU2449
 6409 0146 9542     		cmp	r5, r2
 6410 0148 19D1     		bne	.L429
 6411              	.LVL576:
 6412              	.L467:
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6413              		.loc 1 2482 38 is_stmt 1 view .LVU2450
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6414              		.loc 1 2482 26 view .LVU2451
2510:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       }
 6415              		.loc 1 2510 16 is_stmt 0 view .LVU2452
 6416 014a 0020     		movs	r0, #0
 6417 014c 10E0     		b	.L416
 6418              	.LVL577:
 6419              	.L421:
2362:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount -= 16U;
 6420              		.loc 1 2362 11 is_stmt 1 view .LVU2453
2363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6421              		.loc 1 2363 30 is_stmt 0 view .LVU2454
 6422 014e 103D     		subs	r5, r5, #16
2362:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount -= 16U;
 6423              		.loc 1 2362 33 view .LVU2455
 6424 0150 01F11000 		add	r0, r1, #16
2363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6425              		.loc 1 2363 30 view .LVU2456
 6426 0154 2564     		str	r5, [r4, #64]
2259:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t mask[4][3]        ;
 6427              		.loc 1 2259 12 view .LVU2457
 6428 0156 0025     		movs	r5, #0
2362:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount -= 16U;
 6429              		.loc 1 2362 33 view .LVU2458
 6430 0158 A063     		str	r0, [r4, #56]
2363:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6431              		.loc 1 2363 11 is_stmt 1 view .LVU2459
2258:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflengthmod4 = 0;
 6432              		.loc 1 2258 12 is_stmt 0 view .LVU2460
 6433 015a 2E46     		mov	r6, r5
 6434              	.LVL578:
2257:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   uint32_t difflength     = 0;
 6435              		.loc 1 2257 12 view .LVU2461
 6436 015c 2846     		mov	r0, r5
 6437 015e C9E7     		b	.L422
 6438              	.LVL579:
 6439              	.L424:
2384:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6440              		.loc 1 2384 11 is_stmt 1 view .LVU2462
2384:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6441              		.loc 1 2384 35 is_stmt 0 view .LVU2463
 6442 0160 0A68     		ldr	r2, [r1]
2384:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6443              		.loc 1 2384 33 view .LVU2464
 6444 0162 9A60     		str	r2, [r3, #8]
2385:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 6445              		.loc 1 2385 11 is_stmt 1 view .LVU2465
 6446              	.LVL580:
2386:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6447              		.loc 1 2386 11 view .LVU2466
2386:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6448              		.loc 1 2386 35 is_stmt 0 view .LVU2467
 6449 0164 4A68     		ldr	r2, [r1, #4]
2386:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6450              		.loc 1 2386 33 view .LVU2468
 6451 0166 9A60     		str	r2, [r3, #8]
2387:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 6452              		.loc 1 2387 11 is_stmt 1 view .LVU2469
 6453              	.LVL581:
2388:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6454              		.loc 1 2388 11 view .LVU2470
2388:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6455              		.loc 1 2388 36 is_stmt 0 view .LVU2471
 6456 0168 8A68     		ldr	r2, [r1, #8]
2388:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6457              		.loc 1 2388 34 view .LVU2472
 6458 016a 9A60     		str	r2, [r3, #8]
2389:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 6459              		.loc 1 2389 11 is_stmt 1 view .LVU2473
 6460              	.LVL582:
2390:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6461              		.loc 1 2390 11 view .LVU2474
2390:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6462              		.loc 1 2390 35 is_stmt 0 view .LVU2475
 6463 016c CA68     		ldr	r2, [r1, #12]
2390:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6464              		.loc 1 2390 33 view .LVU2476
 6465 016e 9A60     		str	r2, [r3, #8]
 6466              	.LVL583:
 6467              	.L416:
2719:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6468              		.loc 1 2719 1 view .LVU2477
 6469 0170 11B0     		add	sp, sp, #68
 6470              	.LCFI29:
 6471              		.cfi_remember_state
 6472              		.cfi_def_cfa_offset 36
 6473              		@ sp needed
 6474 0172 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6475              	.LVL584:
 6476              	.L426:
 6477              	.LCFI30:
 6478              		.cfi_restore_state
2399:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             inputaddr+=4U;
 6479              		.loc 1 2399 13 is_stmt 1 discriminator 3 view .LVU2478
2399:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             inputaddr+=4U;
 6480              		.loc 1 2399 37 is_stmt 0 discriminator 3 view .LVU2479
 6481 0176 5EF8040B 		ldr	r0, [lr], #4
 6482              	.LVL585:
2399:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             inputaddr+=4U;
 6483              		.loc 1 2399 35 discriminator 3 view .LVU2480
 6484 017a 9860     		str	r0, [r3, #8]
2400:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6485              		.loc 1 2400 13 is_stmt 1 discriminator 3 view .LVU2481
 6486              	.LVL586:
2396:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6487              		.loc 1 2396 51 discriminator 3 view .LVU2482
 6488 017c CCE7     		b	.L425
 6489              	.LVL587:
 6490              	.L429:
2411:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6491              		.loc 1 2411 13 discriminator 3 view .LVU2483
2411:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6492              		.loc 1 2411 35 is_stmt 0 discriminator 3 view .LVU2484
 6493 017e 9960     		str	r1, [r3, #8]
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6494              		.loc 1 2409 62 is_stmt 1 discriminator 3 view .LVU2485
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6495              		.loc 1 2409 68 is_stmt 0 discriminator 3 view .LVU2486
 6496 0180 0132     		adds	r2, r2, #1
 6497              	.LVL588:
2409:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6498              		.loc 1 2409 68 discriminator 3 view .LVU2487
 6499 0182 E0E7     		b	.L428
 6500              	.LVL589:
 6501              	.L418:
2421:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6502              		.loc 1 2421 10 is_stmt 1 view .LVU2488
2421:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6503              		.loc 1 2421 13 is_stmt 0 view .LVU2489
 6504 0184 B5F5804F 		cmp	r5, #16384
 6505 0188 40F0D880 		bne	.L430
2424:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6506              		.loc 1 2424 7 is_stmt 1 view .LVU2490
2433:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (hcryp->CrypOutCount < 16U)                                && \
 6507              		.loc 1 2433 10 is_stmt 0 view .LVU2491
 6508 018c 6569     		ldr	r5, [r4, #20]
2424:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6509              		.loc 1 2424 35 view .LVU2492
 6510 018e E16B     		ldr	r1, [r4, #60]
 6511              	.LVL590:
2433:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (hcryp->CrypOutCount < 16U)                                && \
 6512              		.loc 1 2433 7 is_stmt 1 view .LVU2493
 6513 0190 606C     		ldr	r0, [r4, #68]
2433:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (hcryp->CrypOutCount < 16U)                                && \
 6514              		.loc 1 2433 10 is_stmt 0 view .LVU2494
 6515 0192 602D     		cmp	r5, #96
 6516 0194 55D1     		bne	.L431
2433:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (hcryp->CrypOutCount < 16U)                                && \
 6517              		.loc 1 2433 69 discriminator 1 view .LVU2495
 6518 0196 0F28     		cmp	r0, #15
 6519 0198 68D8     		bhi	.L432
2434:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           (hcryp->CrypOutCount > 0U))
 6520              		.loc 1 2434 70 view .LVU2496
 6521 019a 0028     		cmp	r0, #0
 6522 019c 52D0     		beq	.L433
2438:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         difflengthmod4 = difflength%4U;
 6523              		.loc 1 2438 9 is_stmt 1 view .LVU2497
 6524              	.LVL591:
2439:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypOutCount = 0;   /* mark that no more output data will be needed */
 6525              		.loc 1 2439 9 view .LVU2498
2440:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Retrieve intermediate data */
 6526              		.loc 1 2440 29 is_stmt 0 view .LVU2499
 6527 019e 0025     		movs	r5, #0
 6528 01a0 6564     		str	r5, [r4, #68]
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6529              		.loc 1 2444 53 view .LVU2500
 6530 01a2 DD68     		ldr	r5, [r3, #12]
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6531              		.loc 1 2444 36 view .LVU2501
 6532 01a4 0095     		str	r5, [sp]
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6533              		.loc 1 2444 53 view .LVU2502
 6534 01a6 DD68     		ldr	r5, [r3, #12]
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6535              		.loc 1 2444 36 view .LVU2503
 6536 01a8 0195     		str	r5, [sp, #4]
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6537              		.loc 1 2444 53 view .LVU2504
 6538 01aa DD68     		ldr	r5, [r3, #12]
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6539              		.loc 1 2444 36 view .LVU2505
 6540 01ac 0295     		str	r5, [sp, #8]
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6541              		.loc 1 2444 53 view .LVU2506
 6542 01ae DD68     		ldr	r5, [r3, #12]
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6543              		.loc 1 2444 36 view .LVU2507
 6544 01b0 0395     		str	r5, [sp, #12]
 6545 01b2 20F00305 		bic	r5, r0, #3
2439:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         hcryp->CrypOutCount = 0;   /* mark that no more output data will be needed */
 6546              		.loc 1 2439 24 view .LVU2508
 6547 01b6 00F00306 		and	r6, r0, #3
 6548              	.LVL592:
2440:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Retrieve intermediate data */
 6549              		.loc 1 2440 9 is_stmt 1 view .LVU2509
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6550              		.loc 1 2442 9 view .LVU2510
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6551              		.loc 1 2442 24 view .LVU2511
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6552              		.loc 1 2444 11 view .LVU2512
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6553              		.loc 1 2442 36 view .LVU2513
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6554              		.loc 1 2442 24 view .LVU2514
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6555              		.loc 1 2444 11 view .LVU2515
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6556              		.loc 1 2442 36 view .LVU2516
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6557              		.loc 1 2442 24 view .LVU2517
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6558              		.loc 1 2444 11 view .LVU2518
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6559              		.loc 1 2442 36 view .LVU2519
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6560              		.loc 1 2442 24 view .LVU2520
2444:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6561              		.loc 1 2444 11 view .LVU2521
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6562              		.loc 1 2442 36 view .LVU2522
2442:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6563              		.loc 1 2442 24 view .LVU2523
 6564 01ba 6F46     		mov	r7, sp
 6565 01bc 05EB010C 		add	ip, r5, r1
 6566              	.LVL593:
 6567              	.L434:
2448:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6568              		.loc 1 2448 24 discriminator 1 view .LVU2524
2448:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6569              		.loc 1 2448 9 is_stmt 0 discriminator 1 view .LVU2525
 6570 01c0 6145     		cmp	r1, ip
 6571 01c2 35D1     		bne	.L435
2457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6572              		.loc 1 2457 9 is_stmt 1 view .LVU2526
2457:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6573              		.loc 1 2457 12 is_stmt 0 view .LVU2527
 6574 01c4 7EB1     		cbz	r6, .L436
2459:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = intermediate_data[difflength/4U];
 6575              		.loc 1 2459 11 is_stmt 1 view .LVU2528
2459:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = intermediate_data[difflength/4U];
 6576              		.loc 1 2459 63 is_stmt 0 view .LVU2529
 6577 01c6 013E     		subs	r6, r6, #1
 6578              	.LVL594:
2459:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = intermediate_data[difflength/4U];
 6579              		.loc 1 2459 63 view .LVU2530
 6580 01c8 02EB4202 		add	r2, r2, r2, lsl #1
 6581 01cc 3244     		add	r2, r2, r6
 6582 01ce 10AE     		add	r6, sp, #64
 6583              	.LVL595:
2459:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = intermediate_data[difflength/4U];
 6584              		.loc 1 2459 63 view .LVU2531
 6585 01d0 06EB8202 		add	r2, r6, r2, lsl #2
2459:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = intermediate_data[difflength/4U];
 6586              		.loc 1 2459 44 view .LVU2532
 6587 01d4 3544     		add	r5, r5, r6
 6588 01d6 52F8302C 		ldr	r2, [r2, #-48]
 6589 01da 55F8406C 		ldr	r6, [r5, #-64]
 6590 01de 3240     		ands	r2, r2, r6
 6591 01e0 45F8402C 		str	r2, [r5, #-64]
2460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6592              		.loc 1 2460 11 is_stmt 1 view .LVU2533
2460:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6593              		.loc 1 2460 36 is_stmt 0 view .LVU2534
 6594 01e4 0A60     		str	r2, [r1]
 6595              	.L436:
2464:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6596              		.loc 1 2464 9 is_stmt 1 view .LVU2535
2464:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6597              		.loc 1 2464 24 is_stmt 0 view .LVU2536
 6598 01e6 2169     		ldr	r1, [r4, #16]
 6599              	.LVL596:
2467:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6600              		.loc 1 2467 11 view .LVU2537
 6601 01e8 1A68     		ldr	r2, [r3]
2464:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6602              		.loc 1 2464 12 view .LVU2538
 6603 01ea 0029     		cmp	r1, #0
 6604 01ec 2FD1     		bne	.L469
2467:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6605              		.loc 1 2467 11 is_stmt 1 view .LVU2539
 6606 01ee 22F48032 		bic	r2, r2, #65536
 6607 01f2 22F06002 		bic	r2, r2, #96
 6608 01f6 42F06002 		orr	r2, r2, #96
 6609 01fa 1A60     		str	r2, [r3]
2470:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6610              		.loc 1 2470 11 view .LVU2540
 6611 01fc 1A68     		ldr	r2, [r3]
 6612 01fe 42F4C042 		orr	r2, r2, #24576
 6613 0202 1A60     		str	r2, [r3]
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6614              		.loc 1 2474 11 view .LVU2541
 6615              	.LVL597:
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6616              		.loc 1 2474 52 is_stmt 0 view .LVU2542
 6617 0204 C21C     		adds	r2, r0, #3
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6618              		.loc 1 2474 56 view .LVU2543
 6619 0206 9208     		lsrs	r2, r2, #2
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6620              		.loc 1 2474 38 view .LVU2544
 6621 0208 C2F10400 		rsb	r0, r2, #4
 6622              	.LVL598:
2476:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6623              		.loc 1 2476 59 view .LVU2545
 6624 020c 0C46     		mov	r4, r1
 6625              	.LVL599:
2476:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6626              		.loc 1 2476 59 view .LVU2546
 6627 020e 0DEB8202 		add	r2, sp, r2, lsl #2
 6628              	.LVL600:
 6629              	.L438:
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6630              		.loc 1 2474 26 is_stmt 1 discriminator 1 view .LVU2547
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6631              		.loc 1 2474 11 is_stmt 0 discriminator 1 view .LVU2548
 6632 0212 8842     		cmp	r0, r1
 6633 0214 11D1     		bne	.L439
2481:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           for(index=0U ; index < 4U; index ++)
 6634              		.loc 1 2481 11 is_stmt 1 view .LVU2549
 6635 0216 1A68     		ldr	r2, [r3]
 6636 0218 42F08002 		orr	r2, r2, #128
 6637 021c 1A60     		str	r2, [r3]
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6638              		.loc 1 2482 11 view .LVU2550
 6639              	.LVL601:
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6640              		.loc 1 2482 26 view .LVU2551
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6641              		.loc 1 2484 13 view .LVU2552
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6642              		.loc 1 2484 54 is_stmt 0 view .LVU2553
 6643 021e 009A     		ldr	r2, [sp]
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6644              		.loc 1 2484 35 view .LVU2554
 6645 0220 9A60     		str	r2, [r3, #8]
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6646              		.loc 1 2482 38 is_stmt 1 view .LVU2555
 6647              	.LVL602:
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6648              		.loc 1 2482 26 view .LVU2556
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6649              		.loc 1 2484 13 view .LVU2557
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6650              		.loc 1 2484 54 is_stmt 0 view .LVU2558
 6651 0222 019A     		ldr	r2, [sp, #4]
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6652              		.loc 1 2484 35 view .LVU2559
 6653 0224 9A60     		str	r2, [r3, #8]
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6654              		.loc 1 2482 38 is_stmt 1 view .LVU2560
 6655              	.LVL603:
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6656              		.loc 1 2482 26 view .LVU2561
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6657              		.loc 1 2484 13 view .LVU2562
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6658              		.loc 1 2484 54 is_stmt 0 view .LVU2563
 6659 0226 029A     		ldr	r2, [sp, #8]
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6660              		.loc 1 2484 35 view .LVU2564
 6661 0228 9A60     		str	r2, [r3, #8]
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6662              		.loc 1 2482 38 is_stmt 1 view .LVU2565
 6663              	.LVL604:
2482:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6664              		.loc 1 2482 26 view .LVU2566
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6665              		.loc 1 2484 13 view .LVU2567
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6666              		.loc 1 2484 54 is_stmt 0 view .LVU2568
 6667 022a 039A     		ldr	r2, [sp, #12]
 6668              	.LVL605:
 6669              	.L468:
2484:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6670              		.loc 1 2484 35 view .LVU2569
 6671 022c 9A60     		str	r2, [r3, #8]
 6672 022e 8CE7     		b	.L467
 6673              	.LVL606:
 6674              	.L435:
2450:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6675              		.loc 1 2450 11 is_stmt 1 discriminator 3 view .LVU2570
2450:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6676              		.loc 1 2450 55 is_stmt 0 discriminator 3 view .LVU2571
 6677 0230 57F804EB 		ldr	lr, [r7], #4
2450:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6678              		.loc 1 2450 36 discriminator 3 view .LVU2572
 6679 0234 41F804EB 		str	lr, [r1], #4
 6680              	.LVL607:
2451:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6681              		.loc 1 2451 11 is_stmt 1 discriminator 3 view .LVU2573
2448:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6682              		.loc 1 2448 49 discriminator 3 view .LVU2574
 6683 0238 C2E7     		b	.L434
 6684              	.LVL608:
 6685              	.L439:
2476:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6686              		.loc 1 2476 13 discriminator 3 view .LVU2575
2476:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6687              		.loc 1 2476 59 is_stmt 0 discriminator 3 view .LVU2576
 6688 023a 42F8044B 		str	r4, [r2], #4
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6689              		.loc 1 2474 63 is_stmt 1 discriminator 3 view .LVU2577
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6690              		.loc 1 2474 69 is_stmt 0 discriminator 3 view .LVU2578
 6691 023e 0131     		adds	r1, r1, #1
 6692              	.LVL609:
2474:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6693              		.loc 1 2474 69 discriminator 3 view .LVU2579
 6694 0240 E7E7     		b	.L438
 6695              	.LVL610:
 6696              	.L431:
2514:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6697              		.loc 1 2514 9 is_stmt 1 view .LVU2580
2514:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6698              		.loc 1 2514 12 is_stmt 0 view .LVU2581
 6699 0242 98B9     		cbnz	r0, .L432
 6700              	.L433:
 6701              	.LVL611:
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6702              		.loc 1 2535 26 is_stmt 1 view .LVU2582
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6703              		.loc 1 2537 13 view .LVU2583
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6704              		.loc 1 2537 55 is_stmt 0 view .LVU2584
 6705 0244 DA68     		ldr	r2, [r3, #12]
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6706              		.loc 1 2535 38 is_stmt 1 view .LVU2585
 6707              	.LVL612:
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6708              		.loc 1 2535 26 view .LVU2586
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6709              		.loc 1 2537 13 view .LVU2587
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6710              		.loc 1 2537 55 is_stmt 0 view .LVU2588
 6711 0246 DA68     		ldr	r2, [r3, #12]
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6712              		.loc 1 2535 38 is_stmt 1 view .LVU2589
 6713              	.LVL613:
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6714              		.loc 1 2535 26 view .LVU2590
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6715              		.loc 1 2537 13 view .LVU2591
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6716              		.loc 1 2537 55 is_stmt 0 view .LVU2592
 6717 0248 DA68     		ldr	r2, [r3, #12]
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6718              		.loc 1 2535 38 is_stmt 1 view .LVU2593
 6719              	.LVL614:
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6720              		.loc 1 2535 26 view .LVU2594
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6721              		.loc 1 2537 13 view .LVU2595
2537:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6722              		.loc 1 2537 55 is_stmt 0 view .LVU2596
 6723 024a DA68     		ldr	r2, [r3, #12]
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6724              		.loc 1 2535 38 is_stmt 1 view .LVU2597
 6725              	.LVL615:
2535:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6726              		.loc 1 2535 26 view .LVU2598
2544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6727              		.loc 1 2544 7 view .LVU2599
 6728              	.L440:
2547:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6729              		.loc 1 2547 9 view .LVU2600
 6730 024c 1A68     		ldr	r2, [r3]
 6731              	.LVL616:
 6732              	.L469:
2547:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6733              		.loc 1 2547 9 is_stmt 0 view .LVU2601
 6734 024e 42F08002 		orr	r2, r2, #128
 6735 0252 1A60     		str	r2, [r3]
2549:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Change the CRYP state */
 6736              		.loc 1 2549 9 is_stmt 1 view .LVU2602
 6737 0254 1A68     		ldr	r2, [r3]
 6738 0256 22F4C062 		bic	r2, r2, #1536
 6739 025a 1A60     		str	r2, [r3]
2551:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Mark that the payload phase is over */
 6740              		.loc 1 2551 9 view .LVU2603
2551:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****        /* Mark that the payload phase is over */
 6741              		.loc 1 2551 22 is_stmt 0 view .LVU2604
 6742 025c 0123     		movs	r3, #1
 6743 025e 84F85530 		strb	r3, [r4, #85]
2553:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6744              		.loc 1 2553 9 is_stmt 1 view .LVU2605
2553:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6745              		.loc 1 2553 22 is_stmt 0 view .LVU2606
 6746 0262 0623     		movs	r3, #6
 6747 0264 84F84830 		strb	r3, [r4, #72]
2556:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6748              		.loc 1 2556 9 is_stmt 1 view .LVU2607
2556:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6749              		.loc 1 2556 9 view .LVU2608
 6750              	.L471:
2695:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6751              		.loc 1 2695 8 view .LVU2609
2695:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6752              		.loc 1 2695 8 view .LVU2610
 6753 0268 0025     		movs	r5, #0
 6754 026a 04E7     		b	.L465
 6755              	.LVL617:
 6756              	.L432:
2519:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6757              		.loc 1 2519 11 view .LVU2611
2519:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6758              		.loc 1 2519 53 is_stmt 0 view .LVU2612
 6759 026c D868     		ldr	r0, [r3, #12]
2519:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6760              		.loc 1 2519 36 view .LVU2613
 6761 026e 0860     		str	r0, [r1]
2520:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 6762              		.loc 1 2520 11 is_stmt 1 view .LVU2614
 6763              	.LVL618:
2521:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6764              		.loc 1 2521 11 view .LVU2615
2521:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6765              		.loc 1 2521 53 is_stmt 0 view .LVU2616
 6766 0270 D868     		ldr	r0, [r3, #12]
2521:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6767              		.loc 1 2521 36 view .LVU2617
 6768 0272 4860     		str	r0, [r1, #4]
2522:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 6769              		.loc 1 2522 11 is_stmt 1 view .LVU2618
 6770              	.LVL619:
2523:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6771              		.loc 1 2523 11 view .LVU2619
2523:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6772              		.loc 1 2523 53 is_stmt 0 view .LVU2620
 6773 0274 D868     		ldr	r0, [r3, #12]
2523:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           outputaddr+=4U;
 6774              		.loc 1 2523 36 view .LVU2621
 6775 0276 8860     		str	r0, [r1, #8]
2524:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 6776              		.loc 1 2524 11 is_stmt 1 view .LVU2622
 6777              	.LVL620:
2525:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6778              		.loc 1 2525 11 view .LVU2623
2525:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6779              		.loc 1 2525 53 is_stmt 0 view .LVU2624
 6780 0278 D868     		ldr	r0, [r3, #12]
2525:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6781              		.loc 1 2525 36 view .LVU2625
 6782 027a C860     		str	r0, [r1, #12]
2528:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypOutCount -= 16U;
 6783              		.loc 1 2528 11 is_stmt 1 view .LVU2626
2528:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypOutCount -= 16U;
 6784              		.loc 1 2528 34 is_stmt 0 view .LVU2627
 6785 027c 1031     		adds	r1, r1, #16
 6786              	.LVL621:
2528:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypOutCount -= 16U;
 6787              		.loc 1 2528 34 view .LVU2628
 6788 027e E163     		str	r1, [r4, #60]
 6789              	.LVL622:
2529:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6790              		.loc 1 2529 11 is_stmt 1 view .LVU2629
2529:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6791              		.loc 1 2529 31 is_stmt 0 view .LVU2630
 6792 0280 616C     		ldr	r1, [r4, #68]
 6793              	.LVL623:
2529:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6794              		.loc 1 2529 31 view .LVU2631
 6795 0282 1039     		subs	r1, r1, #16
 6796 0284 6164     		str	r1, [r4, #68]
2544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6797              		.loc 1 2544 7 is_stmt 1 view .LVU2632
2544:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6798              		.loc 1 2544 10 is_stmt 0 view .LVU2633
 6799 0286 0029     		cmp	r1, #0
 6800 0288 E0D0     		beq	.L440
2568:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6801              		.loc 1 2568 12 is_stmt 1 view .LVU2634
2568:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       {
 6802              		.loc 1 2568 15 is_stmt 0 view .LVU2635
 6803 028a 94F85C10 		ldrb	r1, [r4, #92]	@ zero_extendqisi2
 6804 028e 0129     		cmp	r1, #1
 6805 0290 0FD1     		bne	.L442
2571:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6806              		.loc 1 2571 9 is_stmt 1 view .LVU2636
 6807 0292 1A68     		ldr	r2, [r3]
2574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6808              		.loc 1 2574 31 is_stmt 0 view .LVU2637
 6809 0294 0020     		movs	r0, #0
2571:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6810              		.loc 1 2571 9 view .LVU2638
 6811 0296 42F08002 		orr	r2, r2, #128
 6812 029a 1A60     		str	r2, [r3]
2574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6813              		.loc 1 2574 9 is_stmt 1 view .LVU2639
2574:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Disable Computation Complete Flag and Errors Interrupts */
 6814              		.loc 1 2574 31 is_stmt 0 view .LVU2640
 6815 029c 84F85C00 		strb	r0, [r4, #92]
2576:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Change the CRYP state */
 6816              		.loc 1 2576 9 is_stmt 1 view .LVU2641
 6817 02a0 1A68     		ldr	r2, [r3]
 6818 02a2 22F4C062 		bic	r2, r2, #1536
 6819 02a6 1A60     		str	r2, [r3]
2578:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the payload phase is suspended */
 6820              		.loc 1 2578 9 view .LVU2642
2578:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Mark that the payload phase is suspended */
 6821              		.loc 1 2578 22 is_stmt 0 view .LVU2643
 6822 02a8 0523     		movs	r3, #5
 6823 02aa 84F85530 		strb	r3, [r4, #85]
2580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6824              		.loc 1 2580 9 is_stmt 1 view .LVU2644
2580:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6825              		.loc 1 2580 22 is_stmt 0 view .LVU2645
 6826 02ae 0923     		movs	r3, #9
 6827 02b0 0EE7     		b	.L466
 6828              	.L442:
2591:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Get the last Input data address */
 6829              		.loc 1 2591 9 is_stmt 1 view .LVU2646
 6830 02b2 1968     		ldr	r1, [r3]
2593:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6831              		.loc 1 2593 36 is_stmt 0 view .LVU2647
 6832 02b4 A06B     		ldr	r0, [r4, #56]
2591:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         /* Get the last Input data address */
 6833              		.loc 1 2591 9 view .LVU2648
 6834 02b6 41F08001 		orr	r1, r1, #128
 6835 02ba 1960     		str	r1, [r3]
2593:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6836              		.loc 1 2593 9 is_stmt 1 view .LVU2649
 6837              	.LVL624:
2596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6838              		.loc 1 2596 9 view .LVU2650
2596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6839              		.loc 1 2596 18 is_stmt 0 view .LVU2651
 6840 02bc 216C     		ldr	r1, [r4, #64]
2596:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         {
 6841              		.loc 1 2596 12 view .LVU2652
 6842 02be 0F29     		cmp	r1, #15
 6843 02c0 2FD8     		bhi	.L443
2598:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           difflengthmod4 = difflength%4U;
 6844              		.loc 1 2598 11 is_stmt 1 view .LVU2653
 6845              	.LVL625:
2599:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = 0;
 6846              		.loc 1 2599 11 view .LVU2654
2600:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6847              		.loc 1 2600 30 is_stmt 0 view .LVU2655
 6848 02c2 0026     		movs	r6, #0
 6849              	.LVL626:
2600:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6850              		.loc 1 2600 30 view .LVU2656
 6851 02c4 2664     		str	r6, [r4, #64]
2618:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6852              		.loc 1 2618 14 view .LVU2657
 6853 02c6 2469     		ldr	r4, [r4, #16]
 6854              	.LVL627:
2599:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount = 0;
 6855              		.loc 1 2599 26 view .LVU2658
 6856 02c8 01F00305 		and	r5, r1, #3
 6857              	.LVL628:
2600:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6858              		.loc 1 2600 11 is_stmt 1 view .LVU2659
2618:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6859              		.loc 1 2618 11 view .LVU2660
2618:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6860              		.loc 1 2618 14 is_stmt 0 view .LVU2661
 6861 02cc 3CB9     		cbnz	r4, .L444
2621:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6862              		.loc 1 2621 13 is_stmt 1 view .LVU2662
 6863 02ce 1C68     		ldr	r4, [r3]
 6864 02d0 24F48034 		bic	r4, r4, #65536
 6865 02d4 24F06004 		bic	r4, r4, #96
 6866 02d8 44F04004 		orr	r4, r4, #64
 6867 02dc 1C60     		str	r4, [r3]
 6868              	.L444:
 6869 02de 21F00304 		bic	r4, r1, #3
 6870 02e2 0444     		add	r4, r4, r0
 6871              	.L445:
2627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6872              		.loc 1 2627 26 discriminator 1 view .LVU2663
2627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6873              		.loc 1 2627 11 is_stmt 0 discriminator 1 view .LVU2664
 6874 02e4 A042     		cmp	r0, r4
 6875 02e6 18D1     		bne	.L446
2634:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6876              		.loc 1 2634 11 is_stmt 1 view .LVU2665
2634:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6877              		.loc 1 2634 14 is_stmt 0 view .LVU2666
 6878 02e8 5DB1     		cbz	r5, .L447
2636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6879              		.loc 1 2636 13 is_stmt 1 view .LVU2667
2636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6880              		.loc 1 2636 82 is_stmt 0 view .LVU2668
 6881 02ea 02EB4202 		add	r2, r2, r2, lsl #1
 6882 02ee 013D     		subs	r5, r5, #1
 6883              	.LVL629:
2636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6884              		.loc 1 2636 82 view .LVU2669
 6885 02f0 2A44     		add	r2, r2, r5
 6886 02f2 10AC     		add	r4, sp, #64
 6887 02f4 04EB8202 		add	r2, r4, r2, lsl #2
2636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6888              		.loc 1 2636 64 view .LVU2670
 6889 02f8 0068     		ldr	r0, [r0]
 6890              	.LVL630:
2636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6891              		.loc 1 2636 64 view .LVU2671
 6892 02fa 52F8302C 		ldr	r2, [r2, #-48]
 6893 02fe 0240     		ands	r2, r2, r0
2636:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6894              		.loc 1 2636 35 view .LVU2672
 6895 0300 9A60     		str	r2, [r3, #8]
 6896              	.LVL631:
 6897              	.L447:
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6898              		.loc 1 2639 52 discriminator 1 view .LVU2673
 6899 0302 0331     		adds	r1, r1, #3
 6900              	.LVL632:
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6901              		.loc 1 2639 56 discriminator 1 view .LVU2674
 6902 0304 8908     		lsrs	r1, r1, #2
 6903              	.LVL633:
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6904              		.loc 1 2639 38 discriminator 1 view .LVU2675
 6905 0306 0022     		movs	r2, #0
 6906 0308 C1F10401 		rsb	r1, r1, #4
2641:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6907              		.loc 1 2641 35 discriminator 1 view .LVU2676
 6908 030c 1046     		mov	r0, r2
 6909              	.L448:
 6910              	.LVL634:
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6911              		.loc 1 2639 26 is_stmt 1 discriminator 1 view .LVU2677
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6912              		.loc 1 2639 11 is_stmt 0 discriminator 1 view .LVU2678
 6913 030e 9142     		cmp	r1, r2
 6914 0310 3FF41BAF 		beq	.L467
2641:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6915              		.loc 1 2641 13 is_stmt 1 discriminator 3 view .LVU2679
2641:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6916              		.loc 1 2641 35 is_stmt 0 discriminator 3 view .LVU2680
 6917 0314 9860     		str	r0, [r3, #8]
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6918              		.loc 1 2639 63 is_stmt 1 discriminator 3 view .LVU2681
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6919              		.loc 1 2639 69 is_stmt 0 discriminator 3 view .LVU2682
 6920 0316 0132     		adds	r2, r2, #1
 6921              	.LVL635:
2639:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6922              		.loc 1 2639 69 discriminator 3 view .LVU2683
 6923 0318 F9E7     		b	.L448
 6924              	.LVL636:
 6925              	.L446:
2630:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             inputaddr+=4U;
 6926              		.loc 1 2630 13 is_stmt 1 discriminator 3 view .LVU2684
2630:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             inputaddr+=4U;
 6927              		.loc 1 2630 37 is_stmt 0 discriminator 3 view .LVU2685
 6928 031a 50F8046B 		ldr	r6, [r0], #4
 6929              	.LVL637:
2630:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****             inputaddr+=4U;
 6930              		.loc 1 2630 35 discriminator 3 view .LVU2686
 6931 031e 9E60     		str	r6, [r3, #8]
2631:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           }
 6932              		.loc 1 2631 13 is_stmt 1 discriminator 3 view .LVU2687
 6933              	.LVL638:
2627:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           {
 6934              		.loc 1 2627 51 discriminator 3 view .LVU2688
 6935 0320 E0E7     		b	.L445
 6936              	.LVL639:
 6937              	.L443:
2647:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount -= 16U;
 6938              		.loc 1 2647 11 view .LVU2689
2648:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6939              		.loc 1 2648 30 is_stmt 0 view .LVU2690
 6940 0322 1039     		subs	r1, r1, #16
 6941 0324 2164     		str	r1, [r4, #64]
2647:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->CrypInCount -= 16U;
 6942              		.loc 1 2647 33 view .LVU2691
 6943 0326 00F11002 		add	r2, r0, #16
 6944 032a A263     		str	r2, [r4, #56]
2648:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6945              		.loc 1 2648 11 is_stmt 1 view .LVU2692
2651:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6946              		.loc 1 2651 11 view .LVU2693
2651:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6947              		.loc 1 2651 35 is_stmt 0 view .LVU2694
 6948 032c 0268     		ldr	r2, [r0]
2651:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6949              		.loc 1 2651 33 view .LVU2695
 6950 032e 9A60     		str	r2, [r3, #8]
2652:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 6951              		.loc 1 2652 11 is_stmt 1 view .LVU2696
 6952              	.LVL640:
2653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6953              		.loc 1 2653 11 view .LVU2697
2653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6954              		.loc 1 2653 35 is_stmt 0 view .LVU2698
 6955 0330 4268     		ldr	r2, [r0, #4]
2653:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6956              		.loc 1 2653 33 view .LVU2699
 6957 0332 9A60     		str	r2, [r3, #8]
2654:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR  = *(uint32_t*)(inputaddr);
 6958              		.loc 1 2654 11 is_stmt 1 view .LVU2700
 6959              	.LVL641:
2655:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6960              		.loc 1 2655 11 view .LVU2701
2655:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6961              		.loc 1 2655 36 is_stmt 0 view .LVU2702
 6962 0334 8268     		ldr	r2, [r0, #8]
2655:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           inputaddr+=4U;
 6963              		.loc 1 2655 34 view .LVU2703
 6964 0336 9A60     		str	r2, [r3, #8]
2656:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****           hcryp->Instance->DINR = *(uint32_t*)(inputaddr);
 6965              		.loc 1 2656 11 is_stmt 1 view .LVU2704
 6966              	.LVL642:
2657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6967              		.loc 1 2657 11 view .LVU2705
2657:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****         }
 6968              		.loc 1 2657 35 is_stmt 0 view .LVU2706
 6969 0338 C268     		ldr	r2, [r0, #12]
 6970 033a 77E7     		b	.L468
 6971              	.LVL643:
 6972              	.L430:
2667:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6973              		.loc 1 2667 10 is_stmt 1 view .LVU2707
2670:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6974              		.loc 1 2670 7 is_stmt 0 view .LVU2708
 6975 033c 1A68     		ldr	r2, [r3]
2667:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6976              		.loc 1 2667 13 view .LVU2709
 6977 033e B5F5C04F 		cmp	r5, #24576
2670:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6978              		.loc 1 2670 7 view .LVU2710
 6979 0342 42F08002 		orr	r2, r2, #128
 6980 0346 1A60     		str	r2, [r3]
2667:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     {
 6981              		.loc 1 2667 13 view .LVU2711
 6982 0348 17D1     		bne	.L451
2670:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6983              		.loc 1 2670 7 is_stmt 1 view .LVU2712
2673:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6984              		.loc 1 2673 7 view .LVU2713
2673:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 6985              		.loc 1 2673 35 is_stmt 0 view .LVU2714
 6986 034a E26B     		ldr	r2, [r4, #60]
 6987              	.LVL644:
2677:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 6988              		.loc 1 2677 7 is_stmt 1 view .LVU2715
2677:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 6989              		.loc 1 2677 49 is_stmt 0 view .LVU2716
 6990 034c D968     		ldr	r1, [r3, #12]
2677:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 6991              		.loc 1 2677 32 view .LVU2717
 6992 034e 1160     		str	r1, [r2]
2678:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 6993              		.loc 1 2678 7 is_stmt 1 view .LVU2718
 6994              	.LVL645:
2679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 6995              		.loc 1 2679 7 view .LVU2719
2679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 6996              		.loc 1 2679 49 is_stmt 0 view .LVU2720
 6997 0350 D968     		ldr	r1, [r3, #12]
2679:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 6998              		.loc 1 2679 32 view .LVU2721
 6999 0352 5160     		str	r1, [r2, #4]
2680:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 7000              		.loc 1 2680 7 is_stmt 1 view .LVU2722
 7001              	.LVL646:
2681:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 7002              		.loc 1 2681 7 view .LVU2723
2681:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 7003              		.loc 1 2681 49 is_stmt 0 view .LVU2724
 7004 0354 D968     		ldr	r1, [r3, #12]
2681:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       outputaddr+=4U;
 7005              		.loc 1 2681 32 view .LVU2725
 7006 0356 9160     		str	r1, [r2, #8]
2682:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       *(uint32_t*)(outputaddr) = hcryp->Instance->DOUTR;
 7007              		.loc 1 2682 7 is_stmt 1 view .LVU2726
 7008              	.LVL647:
2683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 7009              		.loc 1 2683 7 view .LVU2727
2683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 7010              		.loc 1 2683 49 is_stmt 0 view .LVU2728
 7011 0358 D968     		ldr	r1, [r3, #12]
2683:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 7012              		.loc 1 2683 32 view .LVU2729
 7013 035a D160     		str	r1, [r2, #12]
2686:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Change the CRYP state */
 7014              		.loc 1 2686 7 is_stmt 1 view .LVU2730
 7015 035c 1A68     		ldr	r2, [r3]
 7016              	.LVL648:
2686:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Change the CRYP state */
 7017              		.loc 1 2686 7 is_stmt 0 view .LVU2731
 7018 035e 22F4C062 		bic	r2, r2, #1536
 7019 0362 1A60     		str	r2, [r3]
2688:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the header phase is over */
 7020              		.loc 1 2688 7 is_stmt 1 view .LVU2732
2688:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Mark that the header phase is over */
 7021              		.loc 1 2688 20 is_stmt 0 view .LVU2733
 7022 0364 0122     		movs	r2, #1
 7023 0366 84F85520 		strb	r2, [r4, #85]
2690:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 7024              		.loc 1 2690 7 is_stmt 1 view .LVU2734
2690:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c **** 
 7025              		.loc 1 2690 20 is_stmt 0 view .LVU2735
 7026 036a 0722     		movs	r2, #7
 7027 036c 84F84820 		strb	r2, [r4, #72]
2693:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       /* Process Unlocked */
 7028              		.loc 1 2693 7 is_stmt 1 view .LVU2736
 7029 0370 1A68     		ldr	r2, [r3]
 7030 0372 22F00102 		bic	r2, r2, #1
 7031 0376 1A60     		str	r2, [r3]
 7032 0378 76E7     		b	.L471
 7033              	.LVL649:
 7034              	.L451:
2709:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       hcryp->State = HAL_CRYP_STATE_ERROR;
 7035              		.loc 1 2709 7 view .LVU2737
2710:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_UNLOCK(hcryp);
 7036              		.loc 1 2710 7 view .LVU2738
2710:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       __HAL_UNLOCK(hcryp);
 7037              		.loc 1 2710 20 is_stmt 0 view .LVU2739
 7038 037a 0423     		movs	r3, #4
 7039 037c 84F85530 		strb	r3, [r4, #85]
2711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_ERROR;
 7040              		.loc 1 2711 7 is_stmt 1 view .LVU2740
2711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_ERROR;
 7041              		.loc 1 2711 7 view .LVU2741
 7042 0380 0023     		movs	r3, #0
 7043 0382 84F85430 		strb	r3, [r4, #84]
2711:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****       return HAL_ERROR;
 7044              		.loc 1 2711 7 view .LVU2742
2712:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 7045              		.loc 1 2712 7 view .LVU2743
2712:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****     }
 7046              		.loc 1 2712 14 is_stmt 0 view .LVU2744
 7047 0386 0120     		movs	r0, #1
 7048 0388 F2E6     		b	.L416
 7049              	.L452:
2717:.././hal/stm32l4/Src/stm32l4xx_hal_cryp_ex.c ****   }
 7050              		.loc 1 2717 12 view .LVU2745
 7051 038a 0220     		movs	r0, #2
 7052 038c F0E6     		b	.L416
 7053              		.cfi_endproc
 7054              	.LFE328:
 7056              		.text
 7057              	.Letext0:
 7058              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 7059              		.file 4 ".././hal/stm32l4/CMSIS/Include/core_cm4.h"
 7060              		.file 5 ".././hal/stm32l4/system_stm32l4xx.h"
 7061              		.file 6 ".././hal/stm32l4/stm32l443xx.h"
 7062              		.file 7 ".././hal/stm32l4/Inc/stm32l4xx_hal_def.h"
 7063              		.file 8 ".././hal/stm32l4/Inc/stm32l4xx_hal_dma.h"
 7064              		.file 9 ".././hal/stm32l4/Inc/stm32l4xx_hal_cryp.h"
 7065              		.file 10 ".././hal/stm32l4/Inc/stm32l4xx_hal.h"
 7066              		.file 11 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_cryp_ex.c
     /tmp/ccF8YBO8.s:16     .text.CRYP_WaitOnCCFlag:0000000000000000 $t
     /tmp/ccF8YBO8.s:23     .text.CRYP_WaitOnCCFlag:0000000000000000 CRYP_WaitOnCCFlag
     /tmp/ccF8YBO8.s:88     .text.CRYP_Padding:0000000000000000 $t
     /tmp/ccF8YBO8.s:94     .text.CRYP_Padding:0000000000000000 CRYP_Padding
     /tmp/ccF8YBO8.s:535    .text.CRYP_Authentication_SetDMAConfig:0000000000000000 $t
     /tmp/ccF8YBO8.s:541    .text.CRYP_Authentication_SetDMAConfig:0000000000000000 CRYP_Authentication_SetDMAConfig
     /tmp/ccF8YBO8.s:646    .text.CRYP_Authentication_SetDMAConfig:0000000000000064 $d
     /tmp/ccF8YBO8.s:878    .text.CRYP_Authentication_DMAInCplt:0000000000000000 CRYP_Authentication_DMAInCplt
     /tmp/ccF8YBO8.s:659    .text.CRYP_Authentication_DMAError:0000000000000000 CRYP_Authentication_DMAError
     /tmp/ccF8YBO8.s:769    .text.CRYP_Authentication_DMAOutCplt:0000000000000000 CRYP_Authentication_DMAOutCplt
     /tmp/ccF8YBO8.s:653    .text.CRYP_Authentication_DMAError:0000000000000000 $t
     /tmp/ccF8YBO8.s:703    .text.CRYP_DMAError:0000000000000000 $t
     /tmp/ccF8YBO8.s:709    .text.CRYP_DMAError:0000000000000000 CRYP_DMAError
     /tmp/ccF8YBO8.s:720    .text.CRYP_DMAOutCplt:0000000000000000 $t
     /tmp/ccF8YBO8.s:726    .text.CRYP_DMAOutCplt:0000000000000000 CRYP_DMAOutCplt
     /tmp/ccF8YBO8.s:763    .text.CRYP_Authentication_DMAOutCplt:0000000000000000 $t
     /tmp/ccF8YBO8.s:841    .text.CRYP_DMAInCplt:0000000000000000 $t
     /tmp/ccF8YBO8.s:847    .text.CRYP_DMAInCplt:0000000000000000 CRYP_DMAInCplt
     /tmp/ccF8YBO8.s:872    .text.CRYP_Authentication_DMAInCplt:0000000000000000 $t
     /tmp/ccF8YBO8.s:950    .text.CRYP_WaitOnBusyFlagReset.constprop.0:0000000000000000 $t
     /tmp/ccF8YBO8.s:956    .text.CRYP_WaitOnBusyFlagReset.constprop.0:0000000000000000 CRYP_WaitOnBusyFlagReset.constprop.0
     /tmp/ccF8YBO8.s:1014   .text.HAL_CRYPEx_ComputationCpltCallback:0000000000000000 $t
     /tmp/ccF8YBO8.s:1021   .text.HAL_CRYPEx_ComputationCpltCallback:0000000000000000 HAL_CRYPEx_ComputationCpltCallback
     /tmp/ccF8YBO8.s:1036   .text.HAL_CRYPEx_AES:0000000000000000 $t
     /tmp/ccF8YBO8.s:1043   .text.HAL_CRYPEx_AES:0000000000000000 HAL_CRYPEx_AES
     /tmp/ccF8YBO8.s:1516   .text.HAL_CRYPEx_AES_IT:0000000000000000 $t
     /tmp/ccF8YBO8.s:1523   .text.HAL_CRYPEx_AES_IT:0000000000000000 HAL_CRYPEx_AES_IT
     /tmp/ccF8YBO8.s:1682   .text.HAL_CRYPEx_AES_DMA:0000000000000000 $t
     /tmp/ccF8YBO8.s:1689   .text.HAL_CRYPEx_AES_DMA:0000000000000000 HAL_CRYPEx_AES_DMA
     /tmp/ccF8YBO8.s:1857   .text.HAL_CRYPEx_AES_DMA:0000000000000094 $d
     /tmp/ccF8YBO8.s:1864   .text.HAL_CRYPEx_AES_Auth:0000000000000000 $t
     /tmp/ccF8YBO8.s:1871   .text.HAL_CRYPEx_AES_Auth:0000000000000000 HAL_CRYPEx_AES_Auth
     /tmp/ccF8YBO8.s:3153   .text.HAL_CRYPEx_AES_Auth_IT:0000000000000000 $t
     /tmp/ccF8YBO8.s:3160   .text.HAL_CRYPEx_AES_Auth_IT:0000000000000000 HAL_CRYPEx_AES_Auth_IT
     /tmp/ccF8YBO8.s:4121   .text.HAL_CRYPEx_AES_Auth_DMA:0000000000000000 $t
     /tmp/ccF8YBO8.s:4128   .text.HAL_CRYPEx_AES_Auth_DMA:0000000000000000 HAL_CRYPEx_AES_Auth_DMA
     /tmp/ccF8YBO8.s:5094   .text.HAL_CRYPEx_Read_IVRegisters:0000000000000000 $t
     /tmp/ccF8YBO8.s:5101   .text.HAL_CRYPEx_Read_IVRegisters:0000000000000000 HAL_CRYPEx_Read_IVRegisters
     /tmp/ccF8YBO8.s:5192   .text.HAL_CRYPEx_Write_IVRegisters:0000000000000000 $t
     /tmp/ccF8YBO8.s:5199   .text.HAL_CRYPEx_Write_IVRegisters:0000000000000000 HAL_CRYPEx_Write_IVRegisters
     /tmp/ccF8YBO8.s:5288   .text.HAL_CRYPEx_Read_SuspendRegisters:0000000000000000 $t
     /tmp/ccF8YBO8.s:5295   .text.HAL_CRYPEx_Read_SuspendRegisters:0000000000000000 HAL_CRYPEx_Read_SuspendRegisters
     /tmp/ccF8YBO8.s:5524   .text.HAL_CRYPEx_Write_SuspendRegisters:0000000000000000 $t
     /tmp/ccF8YBO8.s:5531   .text.HAL_CRYPEx_Write_SuspendRegisters:0000000000000000 HAL_CRYPEx_Write_SuspendRegisters
     /tmp/ccF8YBO8.s:5688   .text.HAL_CRYPEx_Read_KeyRegisters:0000000000000000 $t
     /tmp/ccF8YBO8.s:5695   .text.HAL_CRYPEx_Read_KeyRegisters:0000000000000000 HAL_CRYPEx_Read_KeyRegisters
     /tmp/ccF8YBO8.s:5868   .text.HAL_CRYPEx_Write_KeyRegisters:0000000000000000 $t
     /tmp/ccF8YBO8.s:5875   .text.HAL_CRYPEx_Write_KeyRegisters:0000000000000000 HAL_CRYPEx_Write_KeyRegisters
     /tmp/ccF8YBO8.s:6031   .text.HAL_CRYPEx_Read_ControlRegister:0000000000000000 $t
     /tmp/ccF8YBO8.s:6038   .text.HAL_CRYPEx_Read_ControlRegister:0000000000000000 HAL_CRYPEx_Read_ControlRegister
     /tmp/ccF8YBO8.s:6059   .text.HAL_CRYPEx_Write_ControlRegister:0000000000000000 $t
     /tmp/ccF8YBO8.s:6066   .text.HAL_CRYPEx_Write_ControlRegister:0000000000000000 HAL_CRYPEx_Write_ControlRegister
     /tmp/ccF8YBO8.s:6091   .text.HAL_CRYPEx_ProcessSuspend:0000000000000000 $t
     /tmp/ccF8YBO8.s:6098   .text.HAL_CRYPEx_ProcessSuspend:0000000000000000 HAL_CRYPEx_ProcessSuspend
     /tmp/ccF8YBO8.s:6116   .text.CRYP_AES_Auth_IT:0000000000000000 $t
     /tmp/ccF8YBO8.s:6123   .text.CRYP_AES_Auth_IT:0000000000000000 CRYP_AES_Auth_IT

UNDEFINED SYMBOLS
HAL_GetTick
memset
HAL_CRYP_ErrorCallback
HAL_DMA_Start_IT
HAL_CRYP_OutCpltCallback
HAL_CRYP_InCpltCallback
