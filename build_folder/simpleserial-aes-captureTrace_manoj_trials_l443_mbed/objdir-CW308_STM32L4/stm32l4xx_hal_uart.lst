   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l4xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	UART_EndRxTransfer:
  24              	.LVL0:
  25              	.LFB354:
  26              		.file 1 ".././hal/stm32l4/Src/stm32l4xx_hal_uart.c"
   1:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
   2:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
  12:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
  13:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   @verbatim
  14:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   [..]
  18:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  20:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  31:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  44:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  47:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  50:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  53:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  56:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  59:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  62:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  65:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
  66:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  70:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  71:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     ==================================
  72:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  73:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
  74:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  77:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
  78:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
  95:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
  96:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
  97:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
  99:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 101:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
 117:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
 127:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 135:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
 136:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 140:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 141:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 142:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 143:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @attention
 144:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
 145:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 146:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
 147:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 148:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 149:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 150:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 151:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 152:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 153:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 154:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 155:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 156:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *      without specific prior written permission.
 157:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
 158:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 159:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 160:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 161:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 162:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 163:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 164:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 165:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 166:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 167:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 168:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
 169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 170:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 171:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 172:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 173:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 174:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 176:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
 177:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 179:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 180:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 181:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
 182:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 184:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 185:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 186:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 187:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 188:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 189:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
 190:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 192:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 193:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 194:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
 196:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 197:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 198:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 200:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 201:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 202:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
 204:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 206:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 207:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 208:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 209:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 210:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 211:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 212:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 214:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @}
 215:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 216:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 217:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 218:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 219:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 221:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
 222:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 224:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 226:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 227:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 228:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 229:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 230:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 231:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 232:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 233:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 234:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 235:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 236:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 237:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 238:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 240:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 241:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 242:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 243:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 244:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 245:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 246:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 247:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 248:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 249:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 250:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 251:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagForever(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Statu
 252:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 253:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 254:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @}
 255:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 256:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 257:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 259:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 260:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
 261:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 262:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 263:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 264:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 265:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
 266:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** @verbatim
 267:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 268:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 269:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 270:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
 271:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 272:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 273:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 274:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 275:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 276:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 277:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 278:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 279:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 280:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 281:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 282:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 285:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 286:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 287:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 288:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 289:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 290:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 291:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
 292:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 293:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 295:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 296:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 297:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** @endverbatim
 298:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 299:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 300:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 301:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   following table.
 302:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 303:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 305:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 306:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 307:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 308:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 309:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 310:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 311:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 312:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 313:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 314:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 315:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 316:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 317:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 318:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 319:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 320:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
 321:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 322:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 323:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 324:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 325:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 326:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 327:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 328:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 329:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 331:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 332:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 333:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 334:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 335:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 336:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 337:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 339:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 340:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 341:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 342:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
 343:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 344:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 345:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 346:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 347:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 348:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 349:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 350:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 351:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 352:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 353:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 354:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 355:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 356:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 357:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 358:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 359:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 360:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 361:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 362:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 363:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
 364:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 365:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 366:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 367:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 368:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 370:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 371:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 372:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 374:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 376:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 377:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 378:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 379:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 380:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 382:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 383:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 384:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 385:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 386:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 387:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 388:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 390:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 391:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 392:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 393:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 394:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 396:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 397:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 398:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 399:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 400:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 401:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 402:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 403:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 404:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 405:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 406:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 408:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 409:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 410:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 411:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 412:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 413:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 414:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 415:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 416:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 417:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 418:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 419:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 420:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 421:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 424:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 425:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 426:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 428:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 429:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 430:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
 431:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 432:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 433:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 434:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 435:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 436:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 437:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 438:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 440:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 441:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 442:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 443:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 444:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 445:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 446:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 447:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 448:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 449:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 450:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 451:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 452:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 453:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 454:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 455:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 456:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 457:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 458:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 459:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 460:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 461:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 462:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 463:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 464:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 465:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 466:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 467:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 468:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 470:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 472:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 473:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 474:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 475:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 476:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 477:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 478:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 479:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 480:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 481:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 483:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 484:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 486:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 487:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 489:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 490:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 491:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 492:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 493:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 494:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 495:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 496:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 497:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 498:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 499:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 500:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 501:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 502:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 504:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 505:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 506:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 507:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 508:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 509:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 510:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 511:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 512:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 513:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 514:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 515:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 516:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 517:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 518:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
 519:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 520:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 521:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 522:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 523:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 524:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 525:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 526:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 527:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 528:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 529:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 530:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 532:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 533:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 534:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 535:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 536:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 537:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 538:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 540:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 541:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 542:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 543:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 545:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 546:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 547:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 548:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 549:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 550:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 551:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 552:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 554:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 555:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 556:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 558:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 559:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 560:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 561:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 562:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 563:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 565:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 567:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 568:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 569:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 570:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 571:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 572:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 573:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 574:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 575:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 576:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 577:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 578:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 579:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 580:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 582:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 583:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 584:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 585:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 586:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 587:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 588:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 590:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 591:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 592:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 593:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 594:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 595:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 596:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 597:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 598:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 599:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 600:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 601:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 602:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 603:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 604:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
 605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 606:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 607:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 608:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 609:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 610:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 612:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 613:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 614:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 615:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 616:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 617:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 618:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 619:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 620:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 621:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 622:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 623:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 624:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 625:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 626:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 627:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 628:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 629:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 630:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 631:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 632:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 634:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 635:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 636:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 637:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 638:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 639:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 640:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 641:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 642:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 643:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 644:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 646:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 647:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 648:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 649:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 650:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 651:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 652:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 653:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 654:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 655:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 656:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 657:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 659:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 660:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 661:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 663:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 664:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 665:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 666:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 668:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 669:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 671:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 673:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 674:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 675:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 676:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 677:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 678:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 679:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 680:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 681:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
 682:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 683:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 684:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 685:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 686:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 688:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 689:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 690:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Unlock */
 691:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 692:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 693:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 695:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 696:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 697:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 698:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 699:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
 700:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 701:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 702:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 703:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 704:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 705:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 706:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 707:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 708:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
 709:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 710:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 711:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 712:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 713:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 714:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
 715:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 716:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 717:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 718:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 719:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 720:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 721:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 722:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 723:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
 724:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 725:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 726:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 727:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 728:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 729:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 730:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 731:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 732:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 733:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 734:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 735:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 736:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 737:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 738:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 739:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 740:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 741:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 742:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 743:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 744:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 746:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 747:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 748:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 749:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 750:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 751:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 752:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 753:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 754:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 755:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 756:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 757:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 758:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 759:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 760:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
 761:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 762:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 763:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 764:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 765:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 766:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 767:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 768:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 769:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 770:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 771:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 772:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 773:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 774:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 775:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 776:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 777:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 778:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 779:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 780:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 781:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 782:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 783:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 784:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 785:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 786:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 787:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 788:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 789:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 790:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 791:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 792:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 793:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 794:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 795:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 796:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 797:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 798:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 799:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 800:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 801:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 803:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 804:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 805:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 806:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 807:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 808:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 809:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 810:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 811:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 812:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 813:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 814:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 815:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 816:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 817:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 818:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 819:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 820:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 821:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       default :
 822:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 823:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 824:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 825:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 826:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 828:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 829:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 830:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 831:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 832:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 833:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 834:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 835:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 836:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 837:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 838:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 839:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 840:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 841:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 842:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       default :
 843:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 844:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 845:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 846:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 847:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 849:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 850:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 851:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
 852:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 853:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 854:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 855:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 856:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Return error status */
 857:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 858:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 859:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
 861:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 862:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return status;
 864:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 865:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 866:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 867:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 868:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 869:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 870:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 871:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 872:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 873:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 874:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 875:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 876:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 877:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 878:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 879:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 880:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 881:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 882:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 883:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 884:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 885:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 886:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
 887:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 888:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 889:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 890:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 891:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
 892:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 893:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 894:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 895:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 896:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 897:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 898:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 899:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 900:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 901:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 902:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 904:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 905:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 907:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 908:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 909:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 910:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 911:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 912:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 913:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 914:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 915:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 916:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 917:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 918:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 919:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 920:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 921:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 922:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 923:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 924:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 925:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 926:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 927:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 928:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 929:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 930:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 931:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 932:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 933:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 934:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 935:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 936:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 937:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 938:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 939:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 940:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 941:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 942:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 943:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 944:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 945:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 946:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 947:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 948:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 949:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 950:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 951:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 952:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       default :
 953:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 954:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 955:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 956:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 957:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 958:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 959:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 960:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 961:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 963:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 964:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 965:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 966:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 967:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 968:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 969:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 970:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 971:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 972:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 973:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       default :
 974:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 975:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 976:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 977:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 978:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 979:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 980:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 981:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 982:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
 983:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 984:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 985:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 986:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 987:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Return error status */
 988:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 989:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 990:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 991:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
 992:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 993:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 994:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return status;
 995:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 996:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 997:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 999:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @}
1000:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1001:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1002:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1003:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1004:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
1005:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** @verbatim
1006:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1007:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
1008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1009:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1010:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
1011:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1012:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
1013:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1014:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1015:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
1016:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1017:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1018:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1019:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1020:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
1021:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1022:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1023:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1024:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1025:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
1026:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1027:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1028:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1029:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1030:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1031:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1032:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1033:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1034:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1035:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1036:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1037:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1038:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1039:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1040:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1041:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1042:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1043:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1044:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1045:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1046:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1047:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1048:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1049:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1050:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1051:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1052:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1053:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1054:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1055:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1056:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1057:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1058:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1059:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1060:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1061:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1062:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1063:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1064:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1065:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1066:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1067:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1068:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1069:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1070:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1071:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1072:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1073:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1074:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1075:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** @endverbatim
1076:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
1077:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1078:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1079:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1080:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1081:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1082:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1083:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1084:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1085:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1086:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1087:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be sent.
1088:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1089:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1090:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1091:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1092:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1093:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
1094:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   //uint32_t tickstart = 0U;
1095:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1096:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1097:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1098:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1100:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1101:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1102:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1103:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1104:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1106:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1107:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1108:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1109:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1110:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1111:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     //tickstart = HAL_GetTick();
1112:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1113:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1114:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1115:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1117:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1118:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       //if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1119:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagForever(huart, UART_FLAG_TXE, RESET) != HAL_OK)
1120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1121:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1122:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1123:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1124:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1125:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1127:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
1128:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1129:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
1130:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1131:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
1132:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1133:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
1134:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1135:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1136:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     //if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1137:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagForever(huart, UART_FLAG_TC, RESET) != HAL_OK)
1138:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1139:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
1140:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1141:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1142:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1143:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1144:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1145:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1146:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1147:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1148:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1149:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1150:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
1151:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1152:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1153:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1154:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1155:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1156:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1157:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1158:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1159:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1160:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1161:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1162:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1163:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1164:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be received.
1165:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1166:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1167:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1168:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1170:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
1171:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1172:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0;
1173:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1174:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1176:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1177:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1179:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1180:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1181:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1182:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1184:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1185:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1186:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1187:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1188:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1189:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1190:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1192:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1193:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1194:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1196:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
1197:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1198:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1200:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1201:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1202:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1204:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1206:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1207:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) pData ;
1208:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1209:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
1210:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1211:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
1212:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1214:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1215:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
1216:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1217:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1218:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1219:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1221:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1222:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1224:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1226:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
1227:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1228:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1229:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1230:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1231:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1232:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1233:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1234:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1235:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1236:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1237:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1238:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1240:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1241:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1242:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1243:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1244:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1245:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1246:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1247:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1248:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1249:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1250:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1251:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1252:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1253:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1254:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1255:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
1256:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1257:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1259:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1260:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1261:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1262:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1263:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1264:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1265:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1266:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1267:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1268:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1269:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
1270:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1271:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1272:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1273:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1274:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1275:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1276:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1277:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1278:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1279:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1280:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
1281:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1282:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1285:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1286:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1287:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1288:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
1289:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1290:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1291:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1292:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1293:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1295:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1296:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1297:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1298:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1299:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
1300:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1301:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1302:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1303:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1305:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1306:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
1307:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1308:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1309:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1310:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1311:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1312:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1313:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1314:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1315:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1316:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1317:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1318:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1319:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1320:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1321:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1322:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1323:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1324:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1325:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1326:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1327:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1328:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1329:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1331:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1332:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1333:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1334:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1335:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
1336:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1337:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1339:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1340:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1341:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1342:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1343:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1344:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1345:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1346:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1347:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1348:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1349:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1350:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1351:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1352:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1353:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1354:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1355:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
1356:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1357:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1358:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1359:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1360:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1361:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1362:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1363:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1364:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1365:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1366:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1367:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
1368:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1370:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1371:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1372:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1374:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
1376:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1377:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1378:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1379:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1380:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1382:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1383:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1384:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1385:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1386:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
1387:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1388:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1390:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1391:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1392:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1393:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
1394:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1396:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1397:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1398:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1399:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1400:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1401:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1402:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1403:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1404:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1405:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1406:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1408:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1409:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1410:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1411:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1412:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1413:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1414:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1415:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1416:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1417:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1418:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1419:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1420:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1421:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1424:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1425:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1426:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1428:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1429:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1430:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1431:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1432:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
1433:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1434:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1435:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
1436:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1437:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1438:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1440:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1441:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1442:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1443:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1444:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1445:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1446:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1447:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1448:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1449:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1450:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1451:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1452:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1453:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
1454:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1455:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1456:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1457:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1458:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1459:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1460:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1461:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1462:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1463:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1464:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1465:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1466:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1467:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1468:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1470:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1472:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1473:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1474:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1475:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1476:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1477:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1478:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1479:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1480:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1481:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
1483:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1484:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1486:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1487:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1489:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1490:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1491:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1492:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1493:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
1494:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1495:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1496:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
1497:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1498:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1499:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA channel */
1500:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1501:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1502:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1504:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1505:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1506:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1507:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1508:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1509:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1510:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1511:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1512:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1513:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1514:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1515:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1516:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1517:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
1518:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1519:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1520:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1521:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1522:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1523:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1524:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1525:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1526:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1527:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1528:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1529:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1530:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1532:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1533:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1534:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1535:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1536:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1537:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1538:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1540:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1541:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1542:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1543:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1545:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1546:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1547:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1548:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1549:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1550:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1551:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1552:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1554:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1555:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1556:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1558:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1559:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1560:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1561:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1562:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1563:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1565:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1567:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1568:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1569:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1570:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1571:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1572:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1573:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1574:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1575:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1576:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1577:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1578:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1579:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1580:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1582:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1583:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1584:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1585:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1586:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1587:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1588:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1590:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1591:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1592:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1593:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1594:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
1595:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1596:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1597:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1598:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback() /
1599:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1600:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1601:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1602:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   the stream and the corresponding call back is executed. */
1603:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1604:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1606:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1607:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1608:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1609:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1610:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1612:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1613:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1614:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1615:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1616:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1617:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1618:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1619:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1620:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1621:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1622:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1623:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1624:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1625:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1626:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1627:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1628:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1629:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1630:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1631:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1632:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1634:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1635:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1636:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1637:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1638:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1639:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1640:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1641:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1642:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1643:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1644:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1646:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1647:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1648:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** */
1649:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1650:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1651:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1652:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1653:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1654:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1655:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
1656:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1657:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1659:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1660:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1661:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1663:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1664:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1665:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1666:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1668:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1669:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1671:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1673:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1674:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1675:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1676:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1677:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1678:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1679:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1680:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1681:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1682:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1683:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1684:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1685:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1686:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1688:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1689:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1690:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1691:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1692:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1693:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1695:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1696:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1697:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1698:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1699:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1700:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1701:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1702:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1703:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1704:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1705:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1706:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1707:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1708:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1709:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1710:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1711:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1712:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1713:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1714:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1715:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1716:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1717:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1718:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1719:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1720:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1721:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1722:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1723:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1724:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1725:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1726:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1727:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1728:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1729:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1730:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1731:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1732:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** */
1733:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1734:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1735:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1736:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1737:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1738:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1739:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
1740:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1741:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1742:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1743:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1744:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1746:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1747:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1748:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1749:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1750:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1751:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1752:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1753:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1754:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1755:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1756:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1757:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1758:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1759:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1760:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1761:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1762:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1763:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1764:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1765:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1766:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1767:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1768:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1769:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1770:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1771:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1772:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1773:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1774:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1775:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1776:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1777:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1778:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1779:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1780:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1781:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1782:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1783:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1784:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1785:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1786:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1787:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1788:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** */
1789:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1790:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1791:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1792:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1793:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1794:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1795:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
1796:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1797:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1798:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1799:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1800:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1801:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1803:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1804:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1805:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1806:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1807:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1808:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1809:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1810:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1811:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1812:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1813:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1814:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1815:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1816:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1817:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1818:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1819:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1820:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1821:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1822:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1823:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1824:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1825:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1826:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1828:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1829:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1830:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1831:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1832:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1833:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1834:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1835:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1836:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1837:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1838:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1839:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1840:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1841:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1842:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1843:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1844:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1845:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** */
1846:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1847:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1849:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1850:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1851:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1852:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1853:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1854:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
1855:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1856:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1857:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1858:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1859:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1861:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1862:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1864:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1865:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1866:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1867:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1868:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1869:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1870:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
1871:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1872:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1873:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1874:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1875:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1876:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1877:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1878:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1879:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1880:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1881:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1882:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1883:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1884:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
1885:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1886:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1887:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1888:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1889:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1890:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1891:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1892:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1893:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1894:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1895:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1896:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1897:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1898:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1899:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1900:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1901:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1902:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1904:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1905:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1907:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
1908:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1909:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1910:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1911:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1912:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1913:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1914:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1915:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1916:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1917:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1918:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1919:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1920:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1921:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1922:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1923:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1924:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1925:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1926:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1927:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1928:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1929:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
1930:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1931:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
1932:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
1933:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1934:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
1935:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1936:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1937:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1938:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1939:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
1940:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
1941:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1942:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1943:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
1944:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1945:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
1946:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
1947:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
1948:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1949:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
1950:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1951:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1952:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1953:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1954:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1955:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1956:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1957:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1958:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
1959:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1960:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
1961:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
1962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1963:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
1964:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1965:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1966:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1967:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1968:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1969:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1970:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1971:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1972:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1973:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1974:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
1975:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1976:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1977:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1978:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
1979:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1980:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1981:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
1982:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
1983:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
1984:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1985:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1986:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1987:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1988:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1989:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1990:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1991:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1992:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1993:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1994:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1995:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1996:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** */
1997:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
1999:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
2000:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2001:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2002:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2003:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2004:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2005:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2006:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2007:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2009:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2010:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2011:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2012:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2013:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2014:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2015:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2016:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2017:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2018:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2019:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2020:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2021:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
2022:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2023:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2024:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
2025:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2026:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
2027:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2028:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2029:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2030:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2031:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2032:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
2033:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2034:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2035:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2036:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2037:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2038:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2039:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2040:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2041:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2042:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2043:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2044:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2045:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2046:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2047:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
2048:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2049:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2050:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2051:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2052:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2053:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2054:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2055:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2056:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2057:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2058:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2059:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2060:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2061:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2062:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2063:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2064:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2065:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2066:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2067:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2068:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2069:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2070:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2071:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2072:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2073:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2074:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2075:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2076:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2077:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2078:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2079:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2080:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2081:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2082:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2083:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2084:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2085:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2086:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2087:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2088:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2089:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2090:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2091:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2092:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** */
2093:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2094:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2095:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2096:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2097:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2098:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2100:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2101:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2102:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2103:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2104:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2106:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2107:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2108:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2109:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2110:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2111:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2112:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2113:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2114:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2115:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2117:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2118:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
2119:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2121:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
2122:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2123:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
2124:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2125:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2127:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2128:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2129:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2130:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2131:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2132:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2133:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2134:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2135:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2136:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2137:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2138:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2139:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2140:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2141:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2142:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2143:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2144:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2145:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2146:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2147:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2148:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2149:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2150:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
2151:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2152:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2153:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2154:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2155:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2156:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2157:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2158:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2159:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2160:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2161:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2162:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2163:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2164:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2165:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2166:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2167:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2168:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2170:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2171:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2172:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2173:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2174:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2176:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2177:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2179:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2180:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2181:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2182:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2184:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2185:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2186:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2187:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2188:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2189:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2190:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
2191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (errorflags == RESET)
2192:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2193:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2194:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != RESET)
2196:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET)
2197:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != RESET)))
2198:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != RESET)
2200:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != RESET))
2201:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2202:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2204:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
2205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
2206:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
2207:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return;
2208:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2209:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2210:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2211:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2212:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != RESET)
2214:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)
2215:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != RESET))))
2216:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2217:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != RESET)
2218:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != RESET)
2219:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
2220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2221:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2222:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
2224:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2226:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2227:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2228:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2229:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2230:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2231:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2232:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2233:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2234:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2235:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2236:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2237:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2238:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2240:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2241:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2242:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2243:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2244:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2245:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2246:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2247:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2248:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != RESET)
2249:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET) ||
2250:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)))
2251:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2252:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != RESET)
2253:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != RESET) ||
2254:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
2255:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2256:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2257:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2259:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2260:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2261:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2262:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2263:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2264:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2265:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2266:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2267:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != RESET)
2268:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET)
2269:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != RESET)))
2270:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2271:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != RESET)
2272:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != RESET))
2273:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2274:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
2275:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2276:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
2277:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
2278:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         }
2279:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
2280:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2281:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2282:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****          consider error as blocking */
2283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
2284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
2285:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
2286:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2287:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2288:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2289:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2290:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2291:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2292:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2293:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
2294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2295:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2296:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2297:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2298:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           {
2299:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2300:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2301:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2302:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2303:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2305:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             {
2306:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2307:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2308:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             }
2309:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           }
2310:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           else
2311:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           {
2312:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2313:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2314:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2315:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2316:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2317:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2318:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2319:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2320:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2321:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           }
2322:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         }
2323:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         else
2324:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
2325:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2326:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2327:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2328:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2329:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2331:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2332:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2333:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         }
2334:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
2335:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
2336:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
2337:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2339:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2340:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2341:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2342:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2343:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2344:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2345:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2346:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2347:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
2348:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2349:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return;
2350:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2351:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2352:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2353:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2354:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
2355:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2356:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2357:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2358:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2359:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2360:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2361:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2362:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2363:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2364:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2365:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2366:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2367:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2368:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return;
2369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2370:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2371:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2372:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != RESET)
2374:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != RESET)
2375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != RESET)))
2376:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2377:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != RESET)
2378:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != RESET))
2379:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2380:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2382:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2383:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
2384:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2385:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return;
2386:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2387:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2388:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
2390:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2391:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2392:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return;
2393:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2394:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2396:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2397:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != RESET) && ((cr1its & USART_CR1_TXFEIE) != RESET))
2398:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2399:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2400:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2401:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2402:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2403:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2404:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2405:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2406:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return;
2407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2408:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2409:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2410:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != RESET) && ((cr1its & USART_CR1_RXFFIE) != RESET))
2411:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2412:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2413:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2414:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2415:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2416:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2417:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2418:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2419:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return;
2420:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2421:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2424:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2425:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2426:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2428:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2429:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2430:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2431:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2432:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2433:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2434:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2435:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2436:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
2437:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2438:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2440:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2441:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2442:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2443:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2444:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2445:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2446:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2447:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2448:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2449:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2450:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2451:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
2452:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2453:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2454:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2455:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
2456:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2457:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2458:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2459:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2460:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2461:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2462:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2463:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2464:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2465:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2466:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
2467:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2468:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2470:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2472:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2473:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2474:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2475:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2476:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2477:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2478:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2479:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2480:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2481:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
2482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2483:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2484:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief UART error callback.
2486:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2487:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2489:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2490:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2491:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2492:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2493:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2494:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2495:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2496:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
2497:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2498:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2499:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2500:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2501:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2502:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2504:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2505:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2506:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2507:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2508:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2509:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2510:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2511:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
2512:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2513:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2514:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2515:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2516:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2517:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2518:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2519:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2520:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2521:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2522:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2523:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2524:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2525:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2526:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
2527:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2528:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2529:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2530:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2532:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2533:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2534:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2535:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2536:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2537:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2538:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2540:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2541:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****    */
2542:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2543:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2545:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @}
2546:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2547:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2548:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2549:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2550:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *
2551:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** @verbatim
2552:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2554:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2555:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
2556:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2558:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2559:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2560:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2561:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2562:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2563:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) UART_Wakeup_AddressConfig() API configures the wake-up from stop mode parameters
2565:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2567:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2568:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** @endverbatim
2569:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
2570:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2571:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2572:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2573:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
2574:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2575:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2576:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2577:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2578:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2579:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2580:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2582:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2583:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2584:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2585:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2586:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2587:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2588:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2590:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2591:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2592:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2593:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2594:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Disable UART mute mode (does not mean the UART actually exits mute mode
2595:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
2596:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2597:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2598:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2599:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2600:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2601:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2602:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2603:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2604:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2606:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2607:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2608:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2609:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2610:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2612:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2613:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2614:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2615:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2616:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2617:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2618:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
2619:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2620:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2621:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2622:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2623:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2624:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2625:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2626:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2627:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2628:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2629:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2630:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2631:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2632:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2634:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2635:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2636:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2637:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2638:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2639:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2640:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2641:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2642:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2643:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2644:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2646:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2647:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2648:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2649:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2650:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2651:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2652:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2653:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2654:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2655:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2656:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2657:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2659:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2660:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2661:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2663:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2664:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2665:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2666:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2668:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2669:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2671:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2673:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2674:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2675:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2676:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2677:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
2678:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2679:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2680:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2681:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2682:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2683:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2684:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2685:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2686:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2688:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2689:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2690:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2691:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
2692:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
2693:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2695:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2696:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2697:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2698:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2699:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2700:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2701:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2702:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2703:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @}
2704:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2705:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2706:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2707:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2708:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****  *
2709:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** @verbatim
2710:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2711:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2712:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2713:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     [..]
2714:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
2715:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
2716:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
2717:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2718:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** @endverbatim
2719:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
2720:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2721:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2722:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2723:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
2724:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2725:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *              the configuration information for the specified UART.
2726:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
2727:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2728:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2729:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2730:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
2731:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
2732:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
2733:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2734:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2735:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2736:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2737:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2738:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** * @brief  Return the UART handle error code.
2739:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2740:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *              the configuration information for the specified UART.
2741:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** * @retval UART Error Code
2742:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** */
2743:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2744:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
2746:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2747:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2748:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @}
2749:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2750:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2751:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2752:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @}
2753:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2754:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2755:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2756:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @{
2757:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2758:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2759:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2760:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2761:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2762:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval none
2763:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2764:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2765:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2766:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2767:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
2768:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2769:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2770:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2771:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2772:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2773:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2774:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2775:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2776:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2777:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2778:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2779:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2780:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2781:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2782:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
2783:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2784:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2785:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
2786:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2787:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2788:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2789:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
2790:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2791:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
2792:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2793:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2794:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2795:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2796:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2797:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2798:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2799:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2800:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2801:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2803:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2804:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2805:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2806:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
2807:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2808:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2809:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2810:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2811:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2812:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2813:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2814:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2815:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2816:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2817:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2818:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2819:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2820:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2821:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2822:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2823:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2824:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2825:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2826:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2828:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2829:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
2830:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2831:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2832:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2833:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2834:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2835:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2836:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2837:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2838:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2839:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Configure
2840:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2841:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2842:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2843:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2844:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2845:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2846:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2847:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2849:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2850:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2851:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2852:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2853:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2854:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Configure
2855:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2856:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2857:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2858:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2859:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2861:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2862:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
2863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2864:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2865:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
2866:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2867:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2868:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2869:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2870:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
2871:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2872:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
2873:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2874:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2875:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2876:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2877:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2878:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2879:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
2880:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2881:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2882:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2883:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2884:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPres
2885:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2886:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
2887:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2888:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2889:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2890:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2891:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2892:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2893:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
2894:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2895:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2896:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2897:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       default:
2898:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
2899:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2900:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
2901:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2902:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* if proper clock source reported */
2903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
2904:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2905:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3 * huart->Init.BaudRate)) ||
2907:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
2908:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
2909:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
2910:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
2911:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else
2912:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
2913:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         switch (clocksource)
2914:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
2915:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_PCLK1:
2916:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2917:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
2918:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2919:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2920:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2921:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             break;
2922:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
2923:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2924:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2925:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2926:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
2927:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2928:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             break;
2929:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
2930:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2931:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
2932:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2933:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
2934:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2935:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             break;
2936:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
2937:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2938:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2939:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2940:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
2941:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2942:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             break;
2943:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_UNDEFINED:
2944:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           default:
2945:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             ret = HAL_ERROR;
2946:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             break;
2947:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         }
2948:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
2949:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
2950:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2951:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
2952:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2953:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         }
2954:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         else
2955:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
2956:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
2957:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         }
2958:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate
2959:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     } /* if (tmpreg != 0) */
2960:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
2961:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2963:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
2964:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2965:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
2966:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2967:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2968:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huar
2969:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2970:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2971:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2972:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2973:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2974:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2975:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, huar
2976:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2977:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2978:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2979:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2980:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2981:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2982:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
2983:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2984:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2985:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2986:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2987:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2988:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2989:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, h
2990:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2991:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2992:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
2993:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
2994:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2995:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2996:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate, huart->Init.Clock
2997:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
2998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2999:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3000:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
3001:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
3002:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       default:
3003:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3004:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
3005:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3006:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3007:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3009:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3010:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       brrtemp = usartdiv & 0xFFF0U;
3011:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3012:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
3013:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3014:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
3015:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3016:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
3017:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3018:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3019:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
3020:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3021:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
3022:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3023:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3024:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3025:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
3026:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3027:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
3028:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3029:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
3030:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3031:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3032:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, hua
3033:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3034:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
3035:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3036:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
3037:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3038:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3039:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3040:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3041:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
3042:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3043:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
3044:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3045:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3046:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
3047:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3048:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
3049:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3050:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
3051:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3052:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3053:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3054:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3055:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
3056:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3057:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
3058:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
3059:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       default:
3060:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3061:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
3062:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3063:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3064:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3065:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3066:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3067:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
3068:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3069:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
3070:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3071:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
3072:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3073:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3074:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3075:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3076:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3077:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3078:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3079:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3080:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3081:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3082:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
3083:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
3084:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3085:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return ret;
3086:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3087:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3088:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3089:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3090:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3091:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3092:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3093:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3094:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3095:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3096:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3097:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3098:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3100:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3101:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3102:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3103:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3104:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3106:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3107:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3108:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3109:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3110:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3111:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3112:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3113:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3114:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3115:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3117:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3118:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3119:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3121:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3122:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3123:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3124:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3125:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3127:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3128:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3129:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3130:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3131:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3132:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3133:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3134:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3135:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3136:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3137:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3138:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3139:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3140:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3141:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3142:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3143:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3144:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3145:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3146:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3147:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3148:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3149:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3150:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3151:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3152:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3153:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3154:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3155:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3156:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3157:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3158:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3159:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3160:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3161:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3162:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3163:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3164:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3165:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3166:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3167:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3168:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
3170:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3171:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3172:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3173:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3174:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3176:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3177:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3179:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3180:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3181:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3182:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3184:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3185:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3186:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3187:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3188:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3189:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3190:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3192:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3193:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3194:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3196:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3197:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3198:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3200:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3201:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3202:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
3203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3204:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3206:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3207:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3208:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3209:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3210:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3211:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3212:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3214:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3215:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3216:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3217:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3218:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3219:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3221:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3222:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3224:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
3226:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
3227:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3228:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3229:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3230:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3231:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3232:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3233:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3234:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3235:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3236:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3237:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3238:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Process Unlocked */
3239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3240:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3241:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
3242:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
3243:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3244:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3245:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3246:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3247:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3248:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3249:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3250:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3251:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3252:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3253:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3254:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3255:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagForever(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Statu
3256:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3257:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3259:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3260:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       ;
3261:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3262:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3263:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3264:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3265:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3266:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3267:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3268:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3269:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3270:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3271:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3272:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3273:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3274:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3275:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3276:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3277:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3278:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3279:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
3280:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3281:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3282:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3285:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3286:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3287:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3288:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3289:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3290:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3291:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3292:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3293:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
  27              		.loc 1 3293 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
3294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3295:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3296:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3297:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3298:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3299:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  32              		.loc 1 3299 3 view .LVU1
  33 0000 0368     		ldr	r3, [r0]
  34 0002 1A68     		ldr	r2, [r3]
  35 0004 22F49072 		bic	r2, r2, #288
  36 0008 1A60     		str	r2, [r3]
3300:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  37              		.loc 1 3300 3 view .LVU2
  38 000a 9A68     		ldr	r2, [r3, #8]
  39 000c 22F00102 		bic	r2, r2, #1
  40 0010 9A60     		str	r2, [r3, #8]
3301:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3302:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3303:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  41              		.loc 1 3304 3 view .LVU3
  42              		.loc 1 3304 18 is_stmt 0 view .LVU4
  43 0012 2023     		movs	r3, #32
  44 0014 80F87230 		strb	r3, [r0, #114]
3305:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3306:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3307:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
  45              		.loc 1 3307 3 is_stmt 1 view .LVU5
  46              		.loc 1 3307 16 is_stmt 0 view .LVU6
  47 0018 0023     		movs	r3, #0
  48 001a 0366     		str	r3, [r0, #96]
3308:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
  49              		.loc 1 3308 1 view .LVU7
  50 001c 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE354:
  54              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	UART_TxISR_8BIT:
  62              	.LVL1:
  63              	.LFB365:
3309:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3310:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3311:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3312:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3313:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3314:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3315:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3316:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3317:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3318:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3319:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3320:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3321:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3322:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3323:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3324:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3325:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3326:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3327:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3328:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3329:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3331:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3332:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3333:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
3334:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3335:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3336:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3337:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3339:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3340:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3341:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3342:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3343:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3344:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3345:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3346:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3347:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3348:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3349:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3350:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3351:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3352:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3353:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3354:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3355:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3356:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3357:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3358:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3359:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3360:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3361:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3362:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3363:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3364:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3365:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3366:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3367:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3368:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3370:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3371:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3372:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3374:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3376:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3377:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3378:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3379:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3380:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3382:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3383:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3384:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3385:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3386:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3387:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3388:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3390:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3391:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3392:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3393:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3394:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3396:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3397:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3398:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3399:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3400:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3401:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3402:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3403:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3404:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3405:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3406:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3408:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3409:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3410:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3411:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3412:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3413:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3414:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3415:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3416:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3417:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3418:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3419:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3420:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3421:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3424:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3425:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3426:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX)
3427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
3428:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3429:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3430:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3431:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3432:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3433:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3434:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX)
3435:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
3436:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3437:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3438:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3440:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3441:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3442:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3443:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3444:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3445:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3446:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3447:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3448:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3449:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3450:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3451:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3452:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3453:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3454:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3455:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3456:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3457:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3458:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3459:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3460:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3461:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3462:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3463:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3464:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3465:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3466:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3467:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3468:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3470:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3472:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3473:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3474:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3475:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3476:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3477:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3478:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3479:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3480:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3481:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3483:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3484:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3486:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3487:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3489:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3490:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3491:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3492:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return;
3493:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3494:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3495:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3496:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3497:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3498:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3499:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3500:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3501:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3502:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3504:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3505:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3506:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3507:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3508:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3509:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3510:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3511:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3512:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3513:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3514:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3515:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3516:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3517:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3518:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3519:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3520:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3521:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3522:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3523:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3524:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3525:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3526:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3527:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3528:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3529:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3530:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3532:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3533:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3534:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3535:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3536:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3537:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3538:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3540:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3541:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3542:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3543:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3545:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3546:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3547:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3548:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       return;
3549:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3550:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3551:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3552:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3554:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3555:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3556:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3558:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3559:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3560:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3561:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3562:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3563:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3565:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3567:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3568:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3569:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3570:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3571:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3572:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3573:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3574:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3575:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3576:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3577:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3578:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3579:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3580:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3582:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3583:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3584:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3585:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3586:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3587:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3588:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3590:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3591:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3592:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3593:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3594:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3595:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3596:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3597:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3598:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3599:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3600:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3601:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3602:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3603:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3604:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3606:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3607:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3608:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3609:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3610:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3612:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3613:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3614:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3615:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3616:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3617:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3618:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3619:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3620:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3621:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3622:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3623:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3624:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3625:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3626:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3627:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3628:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3629:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3630:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3631:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3632:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3634:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3635:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3636:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3637:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3638:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3639:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3640:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3641:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3642:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3643:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3644:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3646:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3647:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3648:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3649:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3650:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3651:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3652:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3653:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3654:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3655:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3656:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
  64              		.loc 1 3656 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
3657:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  69              		.loc 1 3658 3 view .LVU9
  70              		.loc 1 3658 12 is_stmt 0 view .LVU10
  71 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
  72              		.loc 1 3658 6 view .LVU11
  73 0004 212B     		cmp	r3, #33
  74 0006 18D1     		bne	.L2
3659:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3660:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0)
  75              		.loc 1 3660 5 is_stmt 1 view .LVU12
  76              		.loc 1 3660 14 is_stmt 0 view .LVU13
  77 0008 B0F85220 		ldrh	r2, [r0, #82]
  78 000c 0368     		ldr	r3, [r0]
  79 000e 92B2     		uxth	r2, r2
  80              		.loc 1 3660 8 view .LVU14
  81 0010 42B9     		cbnz	r2, .L4
3661:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3663:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3664:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3665:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3666:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
  82              		.loc 1 3666 7 is_stmt 1 view .LVU15
  83 0012 1A68     		ldr	r2, [r3]
  84 0014 22F08002 		bic	r2, r2, #128
  85 0018 1A60     		str	r2, [r3]
3667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3668:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3669:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
  86              		.loc 1 3670 7 view .LVU16
  87 001a 1A68     		ldr	r2, [r3]
  88 001c 42F04002 		orr	r2, r2, #64
  89 0020 1A60     		str	r2, [r3]
  90 0022 7047     		bx	lr
  91              	.L4:
  92              	.LVL2:
  93              	.LBB4:
  94              	.LBI4:
3655:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
  95              		.loc 1 3655 13 view .LVU17
  96              	.LBB5:
3671:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
3673:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3674:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
  97              		.loc 1 3674 7 view .LVU18
  98              		.loc 1 3674 46 is_stmt 0 view .LVU19
  99 0024 C26C     		ldr	r2, [r0, #76]
 100              		.loc 1 3674 58 view .LVU20
 101 0026 511C     		adds	r1, r2, #1
 102 0028 C164     		str	r1, [r0, #76]
 103              		.loc 1 3674 30 view .LVU21
 104 002a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 105              		.loc 1 3674 28 view .LVU22
 106 002c 1A85     		strh	r2, [r3, #40]	@ movhi
3675:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 107              		.loc 1 3675 7 is_stmt 1 view .LVU23
 108              		.loc 1 3675 12 is_stmt 0 view .LVU24
 109 002e B0F85230 		ldrh	r3, [r0, #82]
 110              		.loc 1 3675 25 view .LVU25
 111 0032 013B     		subs	r3, r3, #1
 112 0034 9BB2     		uxth	r3, r3
 113 0036 A0F85230 		strh	r3, [r0, #82]	@ movhi
 114              	.LVL3:
 115              	.L2:
 116              		.loc 1 3675 25 view .LVU26
 117              	.LBE5:
 118              	.LBE4:
3676:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3677:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3678:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 119              		.loc 1 3678 1 view .LVU27
 120 003a 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE365:
 124              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 125              		.align	1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	UART_TxISR_16BIT:
 132              	.LVL4:
 133              	.LFB366:
3679:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3680:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3681:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3682:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3683:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3684:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3685:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3686:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3688:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 134              		.loc 1 3688 1 is_stmt 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
3689:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 139              		.loc 1 3689 3 view .LVU29
3690:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3691:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3692:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 140              		.loc 1 3692 3 view .LVU30
 141              		.loc 1 3692 12 is_stmt 0 view .LVU31
 142 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 143              		.loc 1 3692 6 view .LVU32
 144 0004 212B     		cmp	r3, #33
 145 0006 1AD1     		bne	.L5
3693:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0)
 146              		.loc 1 3694 5 is_stmt 1 view .LVU33
 147              		.loc 1 3694 14 is_stmt 0 view .LVU34
 148 0008 B0F85220 		ldrh	r2, [r0, #82]
 149 000c 0368     		ldr	r3, [r0]
 150 000e 92B2     		uxth	r2, r2
 151              		.loc 1 3694 8 view .LVU35
 152 0010 42B9     		cbnz	r2, .L7
3695:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3696:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3697:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3698:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3699:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3700:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 153              		.loc 1 3700 7 is_stmt 1 view .LVU36
 154 0012 1A68     		ldr	r2, [r3]
 155 0014 22F08002 		bic	r2, r2, #128
 156 0018 1A60     		str	r2, [r3]
3701:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3702:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3703:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3704:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 157              		.loc 1 3704 7 view .LVU37
 158 001a 1A68     		ldr	r2, [r3]
 159 001c 42F04002 		orr	r2, r2, #64
 160 0020 1A60     		str	r2, [r3]
 161 0022 7047     		bx	lr
 162              	.L7:
 163              	.LVL5:
 164              	.LBB8:
 165              	.LBI8:
3687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 166              		.loc 1 3687 13 view .LVU38
 167              	.LBB9:
3705:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3706:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     else
3707:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3708:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 168              		.loc 1 3708 7 view .LVU39
3709:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 169              		.loc 1 3709 7 view .LVU40
 170              		.loc 1 3709 36 is_stmt 0 view .LVU41
 171 0024 C26C     		ldr	r2, [r0, #76]
 172 0026 32F8021B 		ldrh	r1, [r2], #2
 173 002a C1F30801 		ubfx	r1, r1, #0, #9
 174              		.loc 1 3709 28 view .LVU42
 175 002e 1985     		strh	r1, [r3, #40]	@ movhi
3710:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2;
 176              		.loc 1 3710 7 is_stmt 1 view .LVU43
3711:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 177              		.loc 1 3711 12 is_stmt 0 view .LVU44
 178 0030 B0F85230 		ldrh	r3, [r0, #82]
3710:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2;
 179              		.loc 1 3710 25 view .LVU45
 180 0034 C264     		str	r2, [r0, #76]
 181              	.LVL6:
 182              		.loc 1 3711 7 is_stmt 1 view .LVU46
 183              		.loc 1 3711 25 is_stmt 0 view .LVU47
 184 0036 013B     		subs	r3, r3, #1
 185 0038 9BB2     		uxth	r3, r3
 186 003a A0F85230 		strh	r3, [r0, #82]	@ movhi
 187              	.LVL7:
 188              	.L5:
 189              		.loc 1 3711 25 view .LVU48
 190              	.LBE9:
 191              	.LBE8:
3712:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3713:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3714:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 192              		.loc 1 3714 1 view .LVU49
 193 003e 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE366:
 197              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 198              		.align	1
 199              		.weak	HAL_UART_MspInit
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu softvfp
 205              	HAL_UART_MspInit:
 206              	.LVL8:
 207              	.LFB314:
 702:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 208              		.loc 1 702 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 704:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 213              		.loc 1 704 3 view .LVU51
 709:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 214              		.loc 1 709 1 is_stmt 0 view .LVU52
 215 0000 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE314:
 219              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 220              		.align	1
 221              		.weak	HAL_UART_MspDeInit
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	HAL_UART_MspDeInit:
 228              	.LFB376:
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 0000 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE376:
 237              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 238              		.align	1
 239              		.global	HAL_UART_DeInit
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu softvfp
 245              	HAL_UART_DeInit:
 246              	.LVL9:
 247              	.LFB313:
 655:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 248              		.loc 1 655 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 657:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 252              		.loc 1 657 3 view .LVU54
 655:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 253              		.loc 1 655 1 is_stmt 0 view .LVU55
 254 0000 38B5     		push	{r3, r4, r5, lr}
 255              	.LCFI0:
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 3, -16
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 5, -8
 260              		.cfi_offset 14, -4
 657:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 261              		.loc 1 657 6 view .LVU56
 262 0002 0546     		mov	r5, r0
 263 0004 B0B1     		cbz	r0, .L12
 663:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 264              		.loc 1 663 3 is_stmt 1 view .LVU57
 665:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 265              		.loc 1 665 3 view .LVU58
 665:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 266              		.loc 1 665 17 is_stmt 0 view .LVU59
 267 0006 2423     		movs	r3, #36
 268 0008 80F87130 		strb	r3, [r0, #113]
 668:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 269              		.loc 1 668 3 is_stmt 1 view .LVU60
 270 000c 0368     		ldr	r3, [r0]
 271 000e 1A68     		ldr	r2, [r3]
 670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 272              		.loc 1 670 24 is_stmt 0 view .LVU61
 273 0010 0024     		movs	r4, #0
 668:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 274              		.loc 1 668 3 view .LVU62
 275 0012 22F00102 		bic	r2, r2, #1
 276 0016 1A60     		str	r2, [r3]
 670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 277              		.loc 1 670 3 is_stmt 1 view .LVU63
 670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 278              		.loc 1 670 24 is_stmt 0 view .LVU64
 279 0018 1C60     		str	r4, [r3]
 671:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 280              		.loc 1 671 3 is_stmt 1 view .LVU65
 671:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 281              		.loc 1 671 24 is_stmt 0 view .LVU66
 282 001a 5C60     		str	r4, [r3, #4]
 672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 283              		.loc 1 672 3 is_stmt 1 view .LVU67
 672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 284              		.loc 1 672 24 is_stmt 0 view .LVU68
 285 001c 9C60     		str	r4, [r3, #8]
 683:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 286              		.loc 1 683 3 is_stmt 1 view .LVU69
 287 001e FFF7FEFF 		bl	HAL_UART_MspDeInit
 288              	.LVL10:
 686:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 289              		.loc 1 686 3 view .LVU70
 686:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 290              		.loc 1 686 20 is_stmt 0 view .LVU71
 291 0022 6C67     		str	r4, [r5, #116]
 687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 292              		.loc 1 687 3 is_stmt 1 view .LVU72
 691:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 293              		.loc 1 691 3 is_stmt 0 view .LVU73
 294 0024 85F87040 		strb	r4, [r5, #112]
 687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 295              		.loc 1 687 17 view .LVU74
 296 0028 85F87140 		strb	r4, [r5, #113]
 688:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 297              		.loc 1 688 3 is_stmt 1 view .LVU75
 693:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 298              		.loc 1 693 10 is_stmt 0 view .LVU76
 299 002c 2046     		mov	r0, r4
 688:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 300              		.loc 1 688 18 view .LVU77
 301 002e 85F87240 		strb	r4, [r5, #114]
 691:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 302              		.loc 1 691 3 is_stmt 1 view .LVU78
 691:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 303              		.loc 1 691 3 view .LVU79
 691:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 304              		.loc 1 691 3 view .LVU80
 693:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 305              		.loc 1 693 3 view .LVU81
 306              	.L11:
 694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 307              		.loc 1 694 1 is_stmt 0 view .LVU82
 308 0032 38BD     		pop	{r3, r4, r5, pc}
 309              	.LVL11:
 310              	.L12:
 659:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 311              		.loc 1 659 12 view .LVU83
 312 0034 0120     		movs	r0, #1
 313              	.LVL12:
 659:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 314              		.loc 1 659 12 view .LVU84
 315 0036 FCE7     		b	.L11
 316              		.cfi_endproc
 317              	.LFE313:
 319              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 320              		.align	1
 321              		.global	HAL_UART_Transmit_IT
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu softvfp
 327              	HAL_UART_Transmit_IT:
 328              	.LVL13:
 329              	.LFB318:
1240:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 330              		.loc 1 1240 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
1242:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 335              		.loc 1 1242 3 view .LVU86
1242:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 336              		.loc 1 1242 12 is_stmt 0 view .LVU87
 337 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
1242:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 338              		.loc 1 1242 6 view .LVU88
 339 0004 202B     		cmp	r3, #32
 340 0006 28D1     		bne	.L19
1244:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 341              		.loc 1 1244 5 is_stmt 1 view .LVU89
1244:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 342              		.loc 1 1244 8 is_stmt 0 view .LVU90
 343 0008 29B3     		cbz	r1, .L18
1244:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 344              		.loc 1 1244 25 discriminator 1 view .LVU91
 345 000a 22B3     		cbz	r2, .L18
1250:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 346              		.loc 1 1250 5 is_stmt 1 view .LVU92
1250:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 347              		.loc 1 1250 5 view .LVU93
 348 000c 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 349 0010 012B     		cmp	r3, #1
 350 0012 22D0     		beq	.L19
1250:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 351              		.loc 1 1250 5 discriminator 2 view .LVU94
1250:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 352              		.loc 1 1250 5 discriminator 2 view .LVU95
1252:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 353              		.loc 1 1252 5 discriminator 2 view .LVU96
1257:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 354              		.loc 1 1257 22 is_stmt 0 discriminator 2 view .LVU97
 355 0014 0023     		movs	r3, #0
1254:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 356              		.loc 1 1254 24 discriminator 2 view .LVU98
 357 0016 A0F85220 		strh	r2, [r0, #82]	@ movhi
1257:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 358              		.loc 1 1257 22 discriminator 2 view .LVU99
 359 001a 4367     		str	r3, [r0, #116]
1258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 360              		.loc 1 1258 19 discriminator 2 view .LVU100
 361 001c 2123     		movs	r3, #33
 362 001e 80F87130 		strb	r3, [r0, #113]
1284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 363              		.loc 1 1284 10 discriminator 2 view .LVU101
 364 0022 8368     		ldr	r3, [r0, #8]
1252:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 365              		.loc 1 1252 24 discriminator 2 view .LVU102
 366 0024 C164     		str	r1, [r0, #76]
1253:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 367              		.loc 1 1253 5 is_stmt 1 discriminator 2 view .LVU103
1284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 368              		.loc 1 1284 10 is_stmt 0 discriminator 2 view .LVU104
 369 0026 B3F5805F 		cmp	r3, #4096
1253:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 370              		.loc 1 1253 24 discriminator 2 view .LVU105
 371 002a A0F85020 		strh	r2, [r0, #80]	@ movhi
1254:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 372              		.loc 1 1254 5 is_stmt 1 discriminator 2 view .LVU106
1255:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 373              		.loc 1 1255 5 discriminator 2 view .LVU107
1257:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 374              		.loc 1 1257 5 discriminator 2 view .LVU108
1258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 375              		.loc 1 1258 5 discriminator 2 view .LVU109
1284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 376              		.loc 1 1284 7 discriminator 2 view .LVU110
1284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 377              		.loc 1 1284 10 is_stmt 0 discriminator 2 view .LVU111
 378 002e 10D1     		bne	.L20
1284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 379              		.loc 1 1284 58 discriminator 1 view .LVU112
 380 0030 0169     		ldr	r1, [r0, #16]
 381              	.LVL14:
1286:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 382              		.loc 1 1286 22 discriminator 1 view .LVU113
 383 0032 0B4B     		ldr	r3, .L22
 384 0034 0B4A     		ldr	r2, .L22+4
 385              	.LVL15:
1286:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 386              		.loc 1 1286 22 discriminator 1 view .LVU114
 387 0036 0029     		cmp	r1, #0
 388 0038 08BF     		it	eq
 389 003a 1346     		moveq	r3, r2
 390              	.L15:
1300:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 391              		.loc 1 1300 7 view .LVU115
 392 003c 0168     		ldr	r1, [r0]
 393 003e 4366     		str	r3, [r0, #100]
1294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 394              		.loc 1 1294 7 is_stmt 1 view .LVU116
1294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 395              		.loc 1 1294 7 view .LVU117
 396 0040 0023     		movs	r3, #0
 397 0042 80F87030 		strb	r3, [r0, #112]
1294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 398              		.loc 1 1294 7 view .LVU118
1300:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 399              		.loc 1 1300 7 view .LVU119
 400 0046 0A68     		ldr	r2, [r1]
 401 0048 42F08002 		orr	r2, r2, #128
 402 004c 0A60     		str	r2, [r1]
1304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 403              		.loc 1 1304 5 view .LVU120
1304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 404              		.loc 1 1304 12 is_stmt 0 view .LVU121
 405 004e 1846     		mov	r0, r3
 406              	.LVL16:
1304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 407              		.loc 1 1304 12 view .LVU122
 408 0050 7047     		bx	lr
 409              	.LVL17:
 410              	.L20:
1290:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 411              		.loc 1 1290 22 view .LVU123
 412 0052 034B     		ldr	r3, .L22
 413 0054 F2E7     		b	.L15
 414              	.L18:
1246:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 415              		.loc 1 1246 14 view .LVU124
 416 0056 0120     		movs	r0, #1
 417              	.LVL18:
1246:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 418              		.loc 1 1246 14 view .LVU125
 419 0058 7047     		bx	lr
 420              	.LVL19:
 421              	.L19:
1308:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 422              		.loc 1 1308 12 view .LVU126
 423 005a 0220     		movs	r0, #2
 424              	.LVL20:
1310:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 425              		.loc 1 1310 1 view .LVU127
 426 005c 7047     		bx	lr
 427              	.L23:
 428 005e 00BF     		.align	2
 429              	.L22:
 430 0060 00000000 		.word	UART_TxISR_8BIT
 431 0064 00000000 		.word	UART_TxISR_16BIT
 432              		.cfi_endproc
 433              	.LFE318:
 435              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_UART_Receive_IT
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu softvfp
 443              	HAL_UART_Receive_IT:
 444              	.LVL21:
 445              	.LFB319:
1320:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 446              		.loc 1 1320 1 is_stmt 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
1322:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 450              		.loc 1 1322 3 view .LVU129
1320:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 451              		.loc 1 1320 1 is_stmt 0 view .LVU130
 452 0000 10B5     		push	{r4, lr}
 453              	.LCFI1:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
 456              		.cfi_offset 14, -4
1322:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 457              		.loc 1 1322 12 view .LVU131
 458 0002 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
1322:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 459              		.loc 1 1322 6 view .LVU132
 460 0006 202B     		cmp	r3, #32
 461 0008 47D1     		bne	.L35
1324:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 462              		.loc 1 1324 5 is_stmt 1 view .LVU133
1324:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 463              		.loc 1 1324 8 is_stmt 0 view .LVU134
 464 000a 0029     		cmp	r1, #0
 465 000c 43D0     		beq	.L34
1324:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 466              		.loc 1 1324 25 discriminator 1 view .LVU135
 467 000e 002A     		cmp	r2, #0
 468 0010 41D0     		beq	.L34
1330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 469              		.loc 1 1330 5 is_stmt 1 view .LVU136
1330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 470              		.loc 1 1330 5 view .LVU137
 471 0012 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 472 0016 012B     		cmp	r3, #1
 473 0018 3FD0     		beq	.L35
1330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 474              		.loc 1 1330 5 discriminator 2 view .LVU138
1330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 475              		.loc 1 1330 5 discriminator 2 view .LVU139
1332:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 476              		.loc 1 1332 5 discriminator 2 view .LVU140
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 477              		.loc 1 1338 5 is_stmt 0 discriminator 2 view .LVU141
 478 001a 8368     		ldr	r3, [r0, #8]
1332:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 479              		.loc 1 1332 24 discriminator 2 view .LVU142
 480 001c 4165     		str	r1, [r0, #84]
1333:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 481              		.loc 1 1333 5 is_stmt 1 discriminator 2 view .LVU143
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 482              		.loc 1 1338 5 is_stmt 0 discriminator 2 view .LVU144
 483 001e B3F5805F 		cmp	r3, #4096
1333:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 484              		.loc 1 1333 24 discriminator 2 view .LVU145
 485 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
1334:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 486              		.loc 1 1334 5 is_stmt 1 discriminator 2 view .LVU146
1334:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 487              		.loc 1 1334 24 is_stmt 0 discriminator 2 view .LVU147
 488 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
1335:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 489              		.loc 1 1335 5 is_stmt 1 discriminator 2 view .LVU148
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 490              		.loc 1 1338 5 discriminator 2 view .LVU149
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 491              		.loc 1 1338 5 discriminator 2 view .LVU150
 492 002a 24D1     		bne	.L26
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 493              		.loc 1 1338 5 discriminator 1 view .LVU151
 494 002c 0269     		ldr	r2, [r0, #16]
 495              	.LVL22:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 496              		.loc 1 1338 5 is_stmt 0 discriminator 1 view .LVU152
 497 002e 02BB     		cbnz	r2, .L27
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 498              		.loc 1 1338 5 is_stmt 1 discriminator 3 view .LVU153
 499 0030 40F2FF12 		movw	r2, #511
 500              	.L44:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 501              		.loc 1 1338 5 is_stmt 0 discriminator 12 view .LVU154
 502 0034 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 503              	.L28:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 504              		.loc 1 1338 5 is_stmt 1 discriminator 14 view .LVU155
1340:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 505              		.loc 1 1340 5 discriminator 14 view .LVU156
1340:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 506              		.loc 1 1340 22 is_stmt 0 discriminator 14 view .LVU157
 507 0038 0022     		movs	r2, #0
 508 003a 4267     		str	r2, [r0, #116]
1341:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 509              		.loc 1 1341 5 is_stmt 1 discriminator 14 view .LVU158
1341:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 510              		.loc 1 1341 20 is_stmt 0 discriminator 14 view .LVU159
 511 003c 2222     		movs	r2, #34
 512 003e 80F87220 		strb	r2, [r0, #114]
1344:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 513              		.loc 1 1344 5 is_stmt 1 discriminator 14 view .LVU160
 514 0042 0268     		ldr	r2, [r0]
 515 0044 9168     		ldr	r1, [r2, #8]
 516              	.LVL23:
1371:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 517              		.loc 1 1371 10 is_stmt 0 discriminator 14 view .LVU161
 518 0046 B3F5805F 		cmp	r3, #4096
1344:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 519              		.loc 1 1344 5 discriminator 14 view .LVU162
 520 004a 41F00101 		orr	r1, r1, #1
 521 004e 9160     		str	r1, [r2, #8]
1371:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 522              		.loc 1 1371 7 is_stmt 1 discriminator 14 view .LVU163
1371:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 523              		.loc 1 1371 10 is_stmt 0 discriminator 14 view .LVU164
 524 0050 1FD1     		bne	.L36
1371:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 525              		.loc 1 1371 58 discriminator 1 view .LVU165
 526 0052 0469     		ldr	r4, [r0, #16]
1373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 527              		.loc 1 1373 22 discriminator 1 view .LVU166
 528 0054 124B     		ldr	r3, .L45
 529 0056 1349     		ldr	r1, .L45+4
 530 0058 002C     		cmp	r4, #0
 531 005a 08BF     		it	eq
 532 005c 0B46     		moveq	r3, r1
 533              	.L31:
 534 005e 0366     		str	r3, [r0, #96]
1381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 535              		.loc 1 1381 7 is_stmt 1 view .LVU167
1381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 536              		.loc 1 1381 7 view .LVU168
 537 0060 0023     		movs	r3, #0
 538 0062 80F87030 		strb	r3, [r0, #112]
1381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 539              		.loc 1 1381 7 view .LVU169
1387:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 540              		.loc 1 1387 7 view .LVU170
 541 0066 1168     		ldr	r1, [r2]
 542 0068 41F49071 		orr	r1, r1, #288
 543 006c 1160     		str	r1, [r2]
1391:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 544              		.loc 1 1391 5 view .LVU171
1391:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 545              		.loc 1 1391 12 is_stmt 0 view .LVU172
 546 006e 1846     		mov	r0, r3
 547              	.LVL24:
 548              	.L25:
1397:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 549              		.loc 1 1397 1 view .LVU173
 550 0070 10BD     		pop	{r4, pc}
 551              	.LVL25:
 552              	.L27:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 553              		.loc 1 1338 5 is_stmt 1 discriminator 4 view .LVU174
 554 0072 FF22     		movs	r2, #255
 555 0074 DEE7     		b	.L44
 556              	.LVL26:
 557              	.L26:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 558              		.loc 1 1338 5 discriminator 2 view .LVU175
 559 0076 23B9     		cbnz	r3, .L29
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 560              		.loc 1 1338 5 discriminator 5 view .LVU176
 561 0078 0269     		ldr	r2, [r0, #16]
 562              	.LVL27:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 563              		.loc 1 1338 5 is_stmt 0 discriminator 5 view .LVU177
 564 007a 002A     		cmp	r2, #0
 565 007c F9D0     		beq	.L27
 566              	.L30:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 567              		.loc 1 1338 5 is_stmt 1 discriminator 8 view .LVU178
 568 007e 7F22     		movs	r2, #127
 569 0080 D8E7     		b	.L44
 570              	.LVL28:
 571              	.L29:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 572              		.loc 1 1338 5 discriminator 6 view .LVU179
 573 0082 B3F1805F 		cmp	r3, #268435456
 574 0086 D7D1     		bne	.L28
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 575              		.loc 1 1338 5 discriminator 9 view .LVU180
 576 0088 0269     		ldr	r2, [r0, #16]
 577              	.LVL29:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 578              		.loc 1 1338 5 is_stmt 0 discriminator 9 view .LVU181
 579 008a 002A     		cmp	r2, #0
 580 008c F7D0     		beq	.L30
1338:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 581              		.loc 1 1338 5 is_stmt 1 discriminator 12 view .LVU182
 582 008e 3F22     		movs	r2, #63
 583 0090 D0E7     		b	.L44
 584              	.LVL30:
 585              	.L36:
1377:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 586              		.loc 1 1377 22 is_stmt 0 view .LVU183
 587 0092 034B     		ldr	r3, .L45
 588 0094 E3E7     		b	.L31
 589              	.LVL31:
 590              	.L34:
1326:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 591              		.loc 1 1326 14 view .LVU184
 592 0096 0120     		movs	r0, #1
 593              	.LVL32:
1326:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 594              		.loc 1 1326 14 view .LVU185
 595 0098 EAE7     		b	.L25
 596              	.LVL33:
 597              	.L35:
1395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 598              		.loc 1 1395 12 view .LVU186
 599 009a 0220     		movs	r0, #2
 600              	.LVL34:
1395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 601              		.loc 1 1395 12 view .LVU187
 602 009c E8E7     		b	.L25
 603              	.L46:
 604 009e 00BF     		.align	2
 605              	.L45:
 606 00a0 00000000 		.word	UART_RxISR_8BIT
 607 00a4 00000000 		.word	UART_RxISR_16BIT
 608              		.cfi_endproc
 609              	.LFE319:
 611              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 612              		.align	1
 613              		.global	HAL_UART_Transmit_DMA
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu softvfp
 619              	HAL_UART_Transmit_DMA:
 620              	.LVL35:
 621              	.LFB320:
1407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 622              		.loc 1 1407 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
1409:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 626              		.loc 1 1409 3 view .LVU189
1407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 627              		.loc 1 1407 1 is_stmt 0 view .LVU190
 628 0000 38B5     		push	{r3, r4, r5, lr}
 629              	.LCFI2:
 630              		.cfi_def_cfa_offset 16
 631              		.cfi_offset 3, -16
 632              		.cfi_offset 4, -12
 633              		.cfi_offset 5, -8
 634              		.cfi_offset 14, -4
1407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 635              		.loc 1 1407 1 view .LVU191
 636 0002 0446     		mov	r4, r0
 637 0004 1346     		mov	r3, r2
1409:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 638              		.loc 1 1409 12 view .LVU192
 639 0006 94F87120 		ldrb	r2, [r4, #113]	@ zero_extendqisi2
 640              	.LVL36:
1409:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 641              		.loc 1 1409 6 view .LVU193
 642 000a 202A     		cmp	r2, #32
 643 000c 2BD1     		bne	.L52
1411:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 644              		.loc 1 1411 5 is_stmt 1 view .LVU194
1411:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 645              		.loc 1 1411 8 is_stmt 0 view .LVU195
 646 000e 41B3     		cbz	r1, .L51
1411:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 647              		.loc 1 1411 25 discriminator 1 view .LVU196
 648 0010 3BB3     		cbz	r3, .L51
1417:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 649              		.loc 1 1417 5 is_stmt 1 view .LVU197
1417:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 650              		.loc 1 1417 5 view .LVU198
 651 0012 94F87020 		ldrb	r2, [r4, #112]	@ zero_extendqisi2
 652 0016 012A     		cmp	r2, #1
 653 0018 25D0     		beq	.L52
1417:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 654              		.loc 1 1417 5 discriminator 2 view .LVU199
 655 001a 0122     		movs	r2, #1
 656 001c 84F87020 		strb	r2, [r4, #112]
1417:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 657              		.loc 1 1417 5 discriminator 2 view .LVU200
1419:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 658              		.loc 1 1419 5 discriminator 2 view .LVU201
1427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 659              		.loc 1 1427 10 is_stmt 0 discriminator 2 view .LVU202
 660 0020 A06E     		ldr	r0, [r4, #104]
 661              	.LVL37:
1421:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 662              		.loc 1 1421 24 discriminator 2 view .LVU203
 663 0022 A4F85230 		strh	r3, [r4, #82]	@ movhi
1423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 664              		.loc 1 1423 22 discriminator 2 view .LVU204
 665 0026 0025     		movs	r5, #0
1424:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 666              		.loc 1 1424 19 discriminator 2 view .LVU205
 667 0028 2122     		movs	r2, #33
1423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 668              		.loc 1 1423 22 discriminator 2 view .LVU206
 669 002a 6567     		str	r5, [r4, #116]
1424:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 670              		.loc 1 1424 19 discriminator 2 view .LVU207
 671 002c 84F87120 		strb	r2, [r4, #113]
1427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 672              		.loc 1 1427 37 discriminator 2 view .LVU208
 673 0030 0E4A     		ldr	r2, .L53
1420:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 674              		.loc 1 1420 24 discriminator 2 view .LVU209
 675 0032 A4F85030 		strh	r3, [r4, #80]	@ movhi
1419:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 676              		.loc 1 1419 24 discriminator 2 view .LVU210
 677 0036 E164     		str	r1, [r4, #76]
1420:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 678              		.loc 1 1420 5 is_stmt 1 discriminator 2 view .LVU211
1421:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 679              		.loc 1 1421 5 discriminator 2 view .LVU212
1423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 680              		.loc 1 1423 5 discriminator 2 view .LVU213
1424:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 681              		.loc 1 1424 5 discriminator 2 view .LVU214
1427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 682              		.loc 1 1427 5 discriminator 2 view .LVU215
1427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 683              		.loc 1 1427 37 is_stmt 0 discriminator 2 view .LVU216
 684 0038 C262     		str	r2, [r0, #44]
1430:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 685              		.loc 1 1430 5 is_stmt 1 discriminator 2 view .LVU217
1430:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 686              		.loc 1 1430 41 is_stmt 0 discriminator 2 view .LVU218
 687 003a 0D4A     		ldr	r2, .L53+4
 688 003c 0263     		str	r2, [r0, #48]
1433:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 689              		.loc 1 1433 5 is_stmt 1 discriminator 2 view .LVU219
1433:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 690              		.loc 1 1433 38 is_stmt 0 discriminator 2 view .LVU220
 691 003e 0D4A     		ldr	r2, .L53+8
1436:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 692              		.loc 1 1436 38 discriminator 2 view .LVU221
 693 0040 C0E90D25 		strd	r2, r5, [r0, #52]
1439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 694              		.loc 1 1439 5 is_stmt 1 discriminator 2 view .LVU222
1439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 695              		.loc 1 1439 76 is_stmt 0 discriminator 2 view .LVU223
 696 0044 2268     		ldr	r2, [r4]
1439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 697              		.loc 1 1439 5 discriminator 2 view .LVU224
 698 0046 2832     		adds	r2, r2, #40
 699 0048 FFF7FEFF 		bl	HAL_DMA_Start_IT
 700              	.LVL38:
1442:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 701              		.loc 1 1442 5 is_stmt 1 discriminator 2 view .LVU225
 702 004c 2368     		ldr	r3, [r4]
 703 004e 4022     		movs	r2, #64
 704 0050 1A62     		str	r2, [r3, #32]
1445:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 705              		.loc 1 1445 5 discriminator 2 view .LVU226
1445:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 706              		.loc 1 1445 5 discriminator 2 view .LVU227
 707 0052 84F87050 		strb	r5, [r4, #112]
1445:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 708              		.loc 1 1445 5 discriminator 2 view .LVU228
1449:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 709              		.loc 1 1449 5 discriminator 2 view .LVU229
 710 0056 9A68     		ldr	r2, [r3, #8]
 711 0058 42F08002 		orr	r2, r2, #128
 712 005c 9A60     		str	r2, [r3, #8]
1451:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 713              		.loc 1 1451 5 discriminator 2 view .LVU230
1451:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 714              		.loc 1 1451 12 is_stmt 0 discriminator 2 view .LVU231
 715 005e 2846     		mov	r0, r5
 716              	.L48:
1457:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 717              		.loc 1 1457 1 view .LVU232
 718 0060 38BD     		pop	{r3, r4, r5, pc}
 719              	.LVL39:
 720              	.L51:
1413:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 721              		.loc 1 1413 14 view .LVU233
 722 0062 0120     		movs	r0, #1
 723              	.LVL40:
1413:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 724              		.loc 1 1413 14 view .LVU234
 725 0064 FCE7     		b	.L48
 726              	.LVL41:
 727              	.L52:
1455:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 728              		.loc 1 1455 12 view .LVU235
 729 0066 0220     		movs	r0, #2
 730              	.LVL42:
1455:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 731              		.loc 1 1455 12 view .LVU236
 732 0068 FAE7     		b	.L48
 733              	.L54:
 734 006a 00BF     		.align	2
 735              	.L53:
 736 006c 00000000 		.word	UART_DMATransmitCplt
 737 0070 00000000 		.word	UART_DMATxHalfCplt
 738 0074 00000000 		.word	UART_DMAError
 739              		.cfi_endproc
 740              	.LFE320:
 742              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 743              		.align	1
 744              		.global	HAL_UART_Receive_DMA
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 748              		.fpu softvfp
 750              	HAL_UART_Receive_DMA:
 751              	.LVL43:
 752              	.LFB321:
1469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 753              		.loc 1 1469 1 is_stmt 1 view -0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
1471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 757              		.loc 1 1471 3 view .LVU238
1469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 758              		.loc 1 1469 1 is_stmt 0 view .LVU239
 759 0000 70B5     		push	{r4, r5, r6, lr}
 760              	.LCFI3:
 761              		.cfi_def_cfa_offset 16
 762              		.cfi_offset 4, -16
 763              		.cfi_offset 5, -12
 764              		.cfi_offset 6, -8
 765              		.cfi_offset 14, -4
1469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 766              		.loc 1 1469 1 view .LVU240
 767 0002 1346     		mov	r3, r2
1471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 768              		.loc 1 1471 12 view .LVU241
 769 0004 90F87220 		ldrb	r2, [r0, #114]	@ zero_extendqisi2
 770              	.LVL44:
1471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 771              		.loc 1 1471 6 view .LVU242
 772 0008 202A     		cmp	r2, #32
1469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 773              		.loc 1 1469 1 view .LVU243
 774 000a 0446     		mov	r4, r0
1471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 775              		.loc 1 1471 6 view .LVU244
 776 000c 31D1     		bne	.L60
1473:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 777              		.loc 1 1473 5 is_stmt 1 view .LVU245
1473:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 778              		.loc 1 1473 8 is_stmt 0 view .LVU246
 779 000e 71B3     		cbz	r1, .L59
1473:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 780              		.loc 1 1473 25 discriminator 1 view .LVU247
 781 0010 6BB3     		cbz	r3, .L59
1479:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 782              		.loc 1 1479 5 is_stmt 1 view .LVU248
1479:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 783              		.loc 1 1479 5 view .LVU249
 784 0012 90F87020 		ldrb	r2, [r0, #112]	@ zero_extendqisi2
 785 0016 012A     		cmp	r2, #1
 786 0018 2BD0     		beq	.L60
1479:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 787              		.loc 1 1479 5 discriminator 2 view .LVU250
 788 001a 0122     		movs	r2, #1
 789 001c 80F87020 		strb	r2, [r0, #112]
1479:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 790              		.loc 1 1479 5 discriminator 2 view .LVU251
1481:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 791              		.loc 1 1481 5 discriminator 2 view .LVU252
1484:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 792              		.loc 1 1484 22 is_stmt 0 discriminator 2 view .LVU253
 793 0020 0025     		movs	r5, #0
1485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 794              		.loc 1 1485 20 discriminator 2 view .LVU254
 795 0022 2222     		movs	r2, #34
1481:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 796              		.loc 1 1481 23 discriminator 2 view .LVU255
 797 0024 4165     		str	r1, [r0, #84]
1482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 798              		.loc 1 1482 5 is_stmt 1 discriminator 2 view .LVU256
1482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 799              		.loc 1 1482 23 is_stmt 0 discriminator 2 view .LVU257
 800 0026 A0F85830 		strh	r3, [r0, #88]	@ movhi
1484:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 801              		.loc 1 1484 5 is_stmt 1 discriminator 2 view .LVU258
1484:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 802              		.loc 1 1484 22 is_stmt 0 discriminator 2 view .LVU259
 803 002a 4567     		str	r5, [r0, #116]
1485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 804              		.loc 1 1485 5 is_stmt 1 discriminator 2 view .LVU260
1485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 805              		.loc 1 1485 20 is_stmt 0 discriminator 2 view .LVU261
 806 002c 80F87220 		strb	r2, [r0, #114]
1488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 807              		.loc 1 1488 5 is_stmt 1 discriminator 2 view .LVU262
1488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 808              		.loc 1 1488 10 is_stmt 0 discriminator 2 view .LVU263
 809 0030 C06E     		ldr	r0, [r0, #108]
 810              	.LVL45:
1488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 811              		.loc 1 1488 37 discriminator 2 view .LVU264
 812 0032 114A     		ldr	r2, .L61
 813 0034 C262     		str	r2, [r0, #44]
1491:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 814              		.loc 1 1491 5 is_stmt 1 discriminator 2 view .LVU265
1491:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 815              		.loc 1 1491 41 is_stmt 0 discriminator 2 view .LVU266
 816 0036 114A     		ldr	r2, .L61+4
1500:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 817              		.loc 1 1500 47 discriminator 2 view .LVU267
 818 0038 2668     		ldr	r6, [r4]
1491:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 819              		.loc 1 1491 41 discriminator 2 view .LVU268
 820 003a 0263     		str	r2, [r0, #48]
1494:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 821              		.loc 1 1494 5 is_stmt 1 discriminator 2 view .LVU269
1494:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 822              		.loc 1 1494 38 is_stmt 0 discriminator 2 view .LVU270
 823 003c 104A     		ldr	r2, .L61+8
1497:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 824              		.loc 1 1497 38 discriminator 2 view .LVU271
 825 003e C0E90D25 		strd	r2, r5, [r0, #52]
1500:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 826              		.loc 1 1500 5 is_stmt 1 discriminator 2 view .LVU272
 827 0042 0A46     		mov	r2, r1
 828 0044 06F12401 		add	r1, r6, #36
 829              	.LVL46:
1500:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 830              		.loc 1 1500 5 is_stmt 0 discriminator 2 view .LVU273
 831 0048 FFF7FEFF 		bl	HAL_DMA_Start_IT
 832              	.LVL47:
1503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 833              		.loc 1 1503 5 is_stmt 1 discriminator 2 view .LVU274
1503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 834              		.loc 1 1503 5 discriminator 2 view .LVU275
1506:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 835              		.loc 1 1506 5 is_stmt 0 discriminator 2 view .LVU276
 836 004c 2368     		ldr	r3, [r4]
1503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 837              		.loc 1 1503 5 discriminator 2 view .LVU277
 838 004e 84F87050 		strb	r5, [r4, #112]
1503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 839              		.loc 1 1503 5 is_stmt 1 discriminator 2 view .LVU278
1506:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 840              		.loc 1 1506 5 discriminator 2 view .LVU279
 841 0052 1A68     		ldr	r2, [r3]
 842 0054 42F48072 		orr	r2, r2, #256
 843 0058 1A60     		str	r2, [r3]
1509:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 844              		.loc 1 1509 5 discriminator 2 view .LVU280
 845 005a 9A68     		ldr	r2, [r3, #8]
 846 005c 42F00102 		orr	r2, r2, #1
 847 0060 9A60     		str	r2, [r3, #8]
1513:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 848              		.loc 1 1513 5 discriminator 2 view .LVU281
 849 0062 9A68     		ldr	r2, [r3, #8]
 850 0064 42F04002 		orr	r2, r2, #64
 851 0068 9A60     		str	r2, [r3, #8]
1515:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 852              		.loc 1 1515 5 discriminator 2 view .LVU282
1515:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 853              		.loc 1 1515 12 is_stmt 0 discriminator 2 view .LVU283
 854 006a 2846     		mov	r0, r5
 855              	.L56:
1521:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 856              		.loc 1 1521 1 view .LVU284
 857 006c 70BD     		pop	{r4, r5, r6, pc}
 858              	.LVL48:
 859              	.L59:
1475:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 860              		.loc 1 1475 14 view .LVU285
 861 006e 0120     		movs	r0, #1
 862              	.LVL49:
1475:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 863              		.loc 1 1475 14 view .LVU286
 864 0070 FCE7     		b	.L56
 865              	.LVL50:
 866              	.L60:
1519:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 867              		.loc 1 1519 12 view .LVU287
 868 0072 0220     		movs	r0, #2
 869              	.LVL51:
1519:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 870              		.loc 1 1519 12 view .LVU288
 871 0074 FAE7     		b	.L56
 872              	.L62:
 873 0076 00BF     		.align	2
 874              	.L61:
 875 0078 00000000 		.word	UART_DMAReceiveCplt
 876 007c 00000000 		.word	UART_DMARxHalfCplt
 877 0080 00000000 		.word	UART_DMAError
 878              		.cfi_endproc
 879              	.LFE321:
 881              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 882              		.align	1
 883              		.global	HAL_UART_DMAPause
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 887              		.fpu softvfp
 889              	HAL_UART_DMAPause:
 890              	.LVL52:
 891              	.LFB322:
1529:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 892              		.loc 1 1529 1 is_stmt 1 view -0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              		@ link register save eliminated.
1531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 897              		.loc 1 1531 3 view .LVU290
1531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 898              		.loc 1 1531 3 view .LVU291
 899 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 900 0004 012B     		cmp	r3, #1
 901 0006 27D0     		beq	.L67
1531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 902              		.loc 1 1531 3 discriminator 2 view .LVU292
 903 0008 0123     		movs	r3, #1
 904 000a 80F87030 		strb	r3, [r0, #112]
1531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 905              		.loc 1 1531 3 discriminator 2 view .LVU293
1533:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 906              		.loc 1 1533 3 discriminator 2 view .LVU294
1533:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 907              		.loc 1 1533 13 is_stmt 0 discriminator 2 view .LVU295
 908 000e 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
1533:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 909              		.loc 1 1533 6 discriminator 2 view .LVU296
 910 0012 212B     		cmp	r3, #33
 911 0014 07D1     		bne	.L65
1534:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 912              		.loc 1 1534 8 discriminator 1 view .LVU297
 913 0016 0368     		ldr	r3, [r0]
 914 0018 9A68     		ldr	r2, [r3, #8]
1533:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 915              		.loc 1 1533 49 discriminator 1 view .LVU298
 916 001a 1106     		lsls	r1, r2, #24
1537:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 917              		.loc 1 1537 5 is_stmt 1 discriminator 1 view .LVU299
 918 001c 42BF     		ittt	mi
 919 001e 9A68     		ldrmi	r2, [r3, #8]
 920 0020 22F08002 		bicmi	r2, r2, #128
 921 0024 9A60     		strmi	r2, [r3, #8]
 922              	.L65:
1539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 923              		.loc 1 1539 3 view .LVU300
1539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 924              		.loc 1 1539 13 is_stmt 0 view .LVU301
 925 0026 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
1539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 926              		.loc 1 1539 6 view .LVU302
 927 002a 222B     		cmp	r3, #34
 928 002c 0FD1     		bne	.L66
1540:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 929              		.loc 1 1540 8 discriminator 1 view .LVU303
 930 002e 0368     		ldr	r3, [r0]
 931 0030 9A68     		ldr	r2, [r3, #8]
1539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 932              		.loc 1 1539 50 discriminator 1 view .LVU304
 933 0032 5206     		lsls	r2, r2, #25
 934 0034 0BD5     		bpl	.L66
1543:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 935              		.loc 1 1543 5 is_stmt 1 view .LVU305
 936 0036 1A68     		ldr	r2, [r3]
 937 0038 22F48072 		bic	r2, r2, #256
 938 003c 1A60     		str	r2, [r3]
1544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 939              		.loc 1 1544 5 view .LVU306
 940 003e 9A68     		ldr	r2, [r3, #8]
 941 0040 22F00102 		bic	r2, r2, #1
 942 0044 9A60     		str	r2, [r3, #8]
1547:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 943              		.loc 1 1547 5 view .LVU307
 944 0046 9A68     		ldr	r2, [r3, #8]
 945 0048 22F04002 		bic	r2, r2, #64
 946 004c 9A60     		str	r2, [r3, #8]
 947              	.L66:
1551:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 948              		.loc 1 1551 3 view .LVU308
1551:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 949              		.loc 1 1551 3 view .LVU309
 950 004e 0023     		movs	r3, #0
 951 0050 80F87030 		strb	r3, [r0, #112]
1551:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 952              		.loc 1 1551 3 view .LVU310
1553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 953              		.loc 1 1553 3 view .LVU311
1553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 954              		.loc 1 1553 10 is_stmt 0 view .LVU312
 955 0054 1846     		mov	r0, r3
 956              	.LVL53:
1553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 957              		.loc 1 1553 10 view .LVU313
 958 0056 7047     		bx	lr
 959              	.LVL54:
 960              	.L67:
1531:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 961              		.loc 1 1531 3 view .LVU314
 962 0058 0220     		movs	r0, #2
 963              	.LVL55:
1554:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 964              		.loc 1 1554 1 view .LVU315
 965 005a 7047     		bx	lr
 966              		.cfi_endproc
 967              	.LFE322:
 969              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 970              		.align	1
 971              		.global	HAL_UART_DMAResume
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 975              		.fpu softvfp
 977              	HAL_UART_DMAResume:
 978              	.LVL56:
 979              	.LFB323:
1562:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 980              		.loc 1 1562 1 is_stmt 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
1564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 985              		.loc 1 1564 3 view .LVU317
1564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 986              		.loc 1 1564 3 view .LVU318
 987 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 988 0004 012B     		cmp	r3, #1
 989 0006 23D0     		beq	.L78
1564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 990              		.loc 1 1564 3 discriminator 2 view .LVU319
 991 0008 0123     		movs	r3, #1
 992 000a 80F87030 		strb	r3, [r0, #112]
1564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 993              		.loc 1 1564 3 discriminator 2 view .LVU320
1566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 994              		.loc 1 1566 3 discriminator 2 view .LVU321
1566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 995              		.loc 1 1566 12 is_stmt 0 discriminator 2 view .LVU322
 996 000e 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
1566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 997              		.loc 1 1566 6 discriminator 2 view .LVU323
 998 0012 212B     		cmp	r3, #33
1569:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 999              		.loc 1 1569 5 is_stmt 1 discriminator 2 view .LVU324
 1000 0014 01BF     		itttt	eq
 1001 0016 0268     		ldreq	r2, [r0]
 1002 0018 9368     		ldreq	r3, [r2, #8]
 1003 001a 43F08003 		orreq	r3, r3, #128
 1004 001e 9360     		streq	r3, [r2, #8]
1571:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1005              		.loc 1 1571 3 discriminator 2 view .LVU325
1571:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1006              		.loc 1 1571 12 is_stmt 0 discriminator 2 view .LVU326
 1007 0020 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
1571:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1008              		.loc 1 1571 6 discriminator 2 view .LVU327
 1009 0024 222B     		cmp	r3, #34
 1010 0026 0ED1     		bne	.L77
1574:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1011              		.loc 1 1574 5 is_stmt 1 view .LVU328
 1012 0028 0368     		ldr	r3, [r0]
 1013 002a 0822     		movs	r2, #8
 1014 002c 1A62     		str	r2, [r3, #32]
1577:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1015              		.loc 1 1577 5 view .LVU329
 1016 002e 1A68     		ldr	r2, [r3]
 1017 0030 42F48072 		orr	r2, r2, #256
 1018 0034 1A60     		str	r2, [r3]
1578:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1019              		.loc 1 1578 5 view .LVU330
 1020 0036 9A68     		ldr	r2, [r3, #8]
 1021 0038 42F00102 		orr	r2, r2, #1
 1022 003c 9A60     		str	r2, [r3, #8]
1581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1023              		.loc 1 1581 5 view .LVU331
 1024 003e 9A68     		ldr	r2, [r3, #8]
 1025 0040 42F04002 		orr	r2, r2, #64
 1026 0044 9A60     		str	r2, [r3, #8]
 1027              	.L77:
1585:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1028              		.loc 1 1585 3 view .LVU332
1585:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1029              		.loc 1 1585 3 view .LVU333
 1030 0046 0023     		movs	r3, #0
 1031 0048 80F87030 		strb	r3, [r0, #112]
1585:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1032              		.loc 1 1585 3 view .LVU334
1587:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1033              		.loc 1 1587 3 view .LVU335
1587:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1034              		.loc 1 1587 10 is_stmt 0 view .LVU336
 1035 004c 1846     		mov	r0, r3
 1036              	.LVL57:
1587:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1037              		.loc 1 1587 10 view .LVU337
 1038 004e 7047     		bx	lr
 1039              	.LVL58:
 1040              	.L78:
1564:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1041              		.loc 1 1564 3 view .LVU338
 1042 0050 0220     		movs	r0, #2
 1043              	.LVL59:
1588:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1044              		.loc 1 1588 1 view .LVU339
 1045 0052 7047     		bx	lr
 1046              		.cfi_endproc
 1047              	.LFE323:
 1049              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1050              		.align	1
 1051              		.global	HAL_UART_DMAStop
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1055              		.fpu softvfp
 1057              	HAL_UART_DMAStop:
 1058              	.LVL60:
 1059              	.LFB324:
1596:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1060              		.loc 1 1596 1 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
1605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1064              		.loc 1 1605 3 view .LVU341
1596:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1065              		.loc 1 1596 1 is_stmt 0 view .LVU342
 1066 0000 10B5     		push	{r4, lr}
 1067              	.LCFI4:
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 4, -8
 1070              		.cfi_offset 14, -4
1605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1071              		.loc 1 1605 13 view .LVU343
 1072 0002 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
1605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1073              		.loc 1 1605 6 view .LVU344
 1074 0006 212B     		cmp	r3, #33
1596:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1075              		.loc 1 1596 1 view .LVU345
 1076 0008 0446     		mov	r4, r0
1605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1077              		.loc 1 1605 6 view .LVU346
 1078 000a 13D1     		bne	.L80
1606:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1079              		.loc 1 1606 8 discriminator 1 view .LVU347
 1080 000c 0368     		ldr	r3, [r0]
 1081 000e 9A68     		ldr	r2, [r3, #8]
1605:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1082              		.loc 1 1605 49 discriminator 1 view .LVU348
 1083 0010 1106     		lsls	r1, r2, #24
 1084 0012 0FD5     		bpl	.L80
1608:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1085              		.loc 1 1608 5 is_stmt 1 view .LVU349
 1086 0014 9A68     		ldr	r2, [r3, #8]
1611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1087              		.loc 1 1611 14 is_stmt 0 view .LVU350
 1088 0016 806E     		ldr	r0, [r0, #104]
 1089              	.LVL61:
1608:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1090              		.loc 1 1608 5 view .LVU351
 1091 0018 22F08002 		bic	r2, r2, #128
 1092 001c 9A60     		str	r2, [r3, #8]
1611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1093              		.loc 1 1611 5 is_stmt 1 view .LVU352
1611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1094              		.loc 1 1611 8 is_stmt 0 view .LVU353
 1095 001e 08B1     		cbz	r0, .L81
1613:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 1096              		.loc 1 1613 7 is_stmt 1 view .LVU354
 1097 0020 FFF7FEFF 		bl	HAL_DMA_Abort
 1098              	.LVL62:
 1099              	.L81:
1616:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1100              		.loc 1 1616 5 view .LVU355
 1101              	.LBB12:
 1102              	.LBI12:
3271:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 1103              		.loc 1 3271 13 view .LVU356
 1104              	.LBB13:
3279:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 1105              		.loc 1 3279 3 view .LVU357
 1106 0024 2268     		ldr	r2, [r4]
 1107 0026 1368     		ldr	r3, [r2]
 1108 0028 23F0C003 		bic	r3, r3, #192
 1109 002c 1360     		str	r3, [r2]
3283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1110              		.loc 1 3283 3 view .LVU358
3283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1111              		.loc 1 3283 17 is_stmt 0 view .LVU359
 1112 002e 2023     		movs	r3, #32
 1113 0030 84F87130 		strb	r3, [r4, #113]
 1114              	.LVL63:
 1115              	.L80:
3283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1116              		.loc 1 3283 17 view .LVU360
 1117              	.LBE13:
 1118              	.LBE12:
1620:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1119              		.loc 1 1620 3 is_stmt 1 view .LVU361
1620:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1120              		.loc 1 1620 13 is_stmt 0 view .LVU362
 1121 0034 94F87230 		ldrb	r3, [r4, #114]	@ zero_extendqisi2
1620:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1122              		.loc 1 1620 6 view .LVU363
 1123 0038 222B     		cmp	r3, #34
 1124 003a 0ED1     		bne	.L82
1621:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1125              		.loc 1 1621 8 discriminator 1 view .LVU364
 1126 003c 2368     		ldr	r3, [r4]
 1127 003e 9A68     		ldr	r2, [r3, #8]
1620:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1128              		.loc 1 1620 50 discriminator 1 view .LVU365
 1129 0040 5206     		lsls	r2, r2, #25
 1130 0042 0AD5     		bpl	.L82
1623:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1131              		.loc 1 1623 5 is_stmt 1 view .LVU366
 1132 0044 9A68     		ldr	r2, [r3, #8]
1626:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1133              		.loc 1 1626 14 is_stmt 0 view .LVU367
 1134 0046 E06E     		ldr	r0, [r4, #108]
1623:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1135              		.loc 1 1623 5 view .LVU368
 1136 0048 22F04002 		bic	r2, r2, #64
 1137 004c 9A60     		str	r2, [r3, #8]
1626:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1138              		.loc 1 1626 5 is_stmt 1 view .LVU369
1626:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1139              		.loc 1 1626 8 is_stmt 0 view .LVU370
 1140 004e 08B1     		cbz	r0, .L83
1628:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 1141              		.loc 1 1628 7 is_stmt 1 view .LVU371
 1142 0050 FFF7FEFF 		bl	HAL_DMA_Abort
 1143              	.LVL64:
 1144              	.L83:
1631:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1145              		.loc 1 1631 5 view .LVU372
 1146 0054 2046     		mov	r0, r4
 1147 0056 FFF7FEFF 		bl	UART_EndRxTransfer
 1148              	.LVL65:
 1149              	.L82:
1634:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1150              		.loc 1 1634 3 view .LVU373
1635:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1151              		.loc 1 1635 1 is_stmt 0 view .LVU374
 1152 005a 0020     		movs	r0, #0
 1153 005c 10BD     		pop	{r4, pc}
1635:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1154              		.loc 1 1635 1 view .LVU375
 1155              		.cfi_endproc
 1156              	.LFE324:
 1158              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1159              		.align	1
 1160              		.global	HAL_UART_Abort
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu softvfp
 1166              	HAL_UART_Abort:
 1167              	.LVL66:
 1168              	.LFB325:
1650:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1169              		.loc 1 1650 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
1657:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1173              		.loc 1 1657 3 view .LVU377
 1174 0000 0368     		ldr	r3, [r0]
 1175 0002 1A68     		ldr	r2, [r3]
 1176 0004 22F4F072 		bic	r2, r2, #480
1650:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1177              		.loc 1 1650 1 is_stmt 0 view .LVU378
 1178 0008 10B5     		push	{r4, lr}
 1179              	.LCFI5:
 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 4, -8
 1182              		.cfi_offset 14, -4
1657:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1183              		.loc 1 1657 3 view .LVU379
 1184 000a 1A60     		str	r2, [r3]
1658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 1185              		.loc 1 1658 3 is_stmt 1 view .LVU380
 1186 000c 9A68     		ldr	r2, [r3, #8]
 1187 000e 22F00102 		bic	r2, r2, #1
 1188 0012 9A60     		str	r2, [r3, #8]
1662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1189              		.loc 1 1662 3 view .LVU381
1662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1190              		.loc 1 1662 7 is_stmt 0 view .LVU382
 1191 0014 9A68     		ldr	r2, [r3, #8]
1662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1192              		.loc 1 1662 6 view .LVU383
 1193 0016 1106     		lsls	r1, r2, #24
1650:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1194              		.loc 1 1650 1 view .LVU384
 1195 0018 0446     		mov	r4, r0
1662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1196              		.loc 1 1662 6 view .LVU385
 1197 001a 09D5     		bpl	.L98
1664:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1198              		.loc 1 1664 5 is_stmt 1 view .LVU386
 1199 001c 9A68     		ldr	r2, [r3, #8]
1667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1200              		.loc 1 1667 14 is_stmt 0 view .LVU387
 1201 001e 806E     		ldr	r0, [r0, #104]
 1202              	.LVL67:
1664:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1203              		.loc 1 1664 5 view .LVU388
 1204 0020 22F08002 		bic	r2, r2, #128
 1205 0024 9A60     		str	r2, [r3, #8]
1667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1206              		.loc 1 1667 5 is_stmt 1 view .LVU389
1667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1207              		.loc 1 1667 8 is_stmt 0 view .LVU390
 1208 0026 18B1     		cbz	r0, .L98
1671:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1209              		.loc 1 1671 7 is_stmt 1 view .LVU391
1671:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1210              		.loc 1 1671 40 is_stmt 0 view .LVU392
 1211 0028 0023     		movs	r3, #0
 1212 002a 8363     		str	r3, [r0, #56]
1673:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 1213              		.loc 1 1673 7 is_stmt 1 view .LVU393
 1214 002c FFF7FEFF 		bl	HAL_DMA_Abort
 1215              	.LVL68:
 1216              	.L98:
1678:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1217              		.loc 1 1678 3 view .LVU394
1678:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1218              		.loc 1 1678 7 is_stmt 0 view .LVU395
 1219 0030 2368     		ldr	r3, [r4]
 1220 0032 9A68     		ldr	r2, [r3, #8]
1678:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1221              		.loc 1 1678 6 view .LVU396
 1222 0034 5206     		lsls	r2, r2, #25
 1223 0036 09D5     		bpl	.L101
1680:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1224              		.loc 1 1680 5 is_stmt 1 view .LVU397
 1225 0038 9A68     		ldr	r2, [r3, #8]
1683:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1226              		.loc 1 1683 14 is_stmt 0 view .LVU398
 1227 003a E06E     		ldr	r0, [r4, #108]
1680:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1228              		.loc 1 1680 5 view .LVU399
 1229 003c 22F04002 		bic	r2, r2, #64
 1230 0040 9A60     		str	r2, [r3, #8]
1683:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1231              		.loc 1 1683 5 is_stmt 1 view .LVU400
1683:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1232              		.loc 1 1683 8 is_stmt 0 view .LVU401
 1233 0042 18B1     		cbz	r0, .L101
1687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1234              		.loc 1 1687 7 is_stmt 1 view .LVU402
1687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1235              		.loc 1 1687 40 is_stmt 0 view .LVU403
 1236 0044 0023     		movs	r3, #0
 1237 0046 8363     		str	r3, [r0, #56]
1689:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 1238              		.loc 1 1689 7 is_stmt 1 view .LVU404
 1239 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 1240              	.LVL69:
 1241              	.L101:
1694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1242              		.loc 1 1694 3 view .LVU405
1698:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1243              		.loc 1 1698 3 is_stmt 0 view .LVU406
 1244 004c 2268     		ldr	r2, [r4]
1694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1245              		.loc 1 1694 22 view .LVU407
 1246 004e 0020     		movs	r0, #0
1698:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1247              		.loc 1 1698 3 view .LVU408
 1248 0050 0F23     		movs	r3, #15
1694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1249              		.loc 1 1694 22 view .LVU409
 1250 0052 A4F85200 		strh	r0, [r4, #82]	@ movhi
1695:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1251              		.loc 1 1695 3 is_stmt 1 view .LVU410
1695:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1252              		.loc 1 1695 22 is_stmt 0 view .LVU411
 1253 0056 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1698:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1254              		.loc 1 1698 3 is_stmt 1 view .LVU412
 1255 005a 1362     		str	r3, [r2, #32]
1709:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1256              		.loc 1 1709 3 view .LVU413
 1257 005c 138B     		ldrh	r3, [r2, #24]
 1258 005e 9BB2     		uxth	r3, r3
 1259 0060 43F00803 		orr	r3, r3, #8
 1260 0064 1383     		strh	r3, [r2, #24]	@ movhi
1712:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1261              		.loc 1 1712 3 view .LVU414
1712:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1262              		.loc 1 1712 18 is_stmt 0 view .LVU415
 1263 0066 2023     		movs	r3, #32
 1264 0068 84F87130 		strb	r3, [r4, #113]
1713:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1265              		.loc 1 1713 3 is_stmt 1 view .LVU416
1713:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1266              		.loc 1 1713 18 is_stmt 0 view .LVU417
 1267 006c 84F87230 		strb	r3, [r4, #114]
1716:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1268              		.loc 1 1716 3 is_stmt 1 view .LVU418
1716:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1269              		.loc 1 1716 20 is_stmt 0 view .LVU419
 1270 0070 6067     		str	r0, [r4, #116]
1718:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1271              		.loc 1 1718 3 is_stmt 1 view .LVU420
1719:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1272              		.loc 1 1719 1 is_stmt 0 view .LVU421
 1273 0072 10BD     		pop	{r4, pc}
1719:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1274              		.loc 1 1719 1 view .LVU422
 1275              		.cfi_endproc
 1276              	.LFE325:
 1278              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1279              		.align	1
 1280              		.global	HAL_UART_AbortTransmit
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1284              		.fpu softvfp
 1286              	HAL_UART_AbortTransmit:
 1287              	.LVL70:
 1288              	.LFB326:
1734:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1289              		.loc 1 1734 1 is_stmt 1 view -0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
1741:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 1293              		.loc 1 1741 3 view .LVU424
 1294 0000 0368     		ldr	r3, [r0]
 1295 0002 1A68     		ldr	r2, [r3]
 1296 0004 22F0C002 		bic	r2, r2, #192
1734:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1297              		.loc 1 1734 1 is_stmt 0 view .LVU425
 1298 0008 10B5     		push	{r4, lr}
 1299              	.LCFI6:
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 4, -8
 1302              		.cfi_offset 14, -4
1741:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 1303              		.loc 1 1741 3 view .LVU426
 1304 000a 1A60     		str	r2, [r3]
1745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1305              		.loc 1 1745 3 is_stmt 1 view .LVU427
1745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1306              		.loc 1 1745 7 is_stmt 0 view .LVU428
 1307 000c 9A68     		ldr	r2, [r3, #8]
1745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1308              		.loc 1 1745 6 view .LVU429
 1309 000e 1206     		lsls	r2, r2, #24
1734:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1310              		.loc 1 1734 1 view .LVU430
 1311 0010 0446     		mov	r4, r0
1745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1312              		.loc 1 1745 6 view .LVU431
 1313 0012 09D5     		bpl	.L111
1747:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1314              		.loc 1 1747 5 is_stmt 1 view .LVU432
 1315 0014 9A68     		ldr	r2, [r3, #8]
1750:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1316              		.loc 1 1750 14 is_stmt 0 view .LVU433
 1317 0016 806E     		ldr	r0, [r0, #104]
 1318              	.LVL71:
1747:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1319              		.loc 1 1747 5 view .LVU434
 1320 0018 22F08002 		bic	r2, r2, #128
 1321 001c 9A60     		str	r2, [r3, #8]
1750:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1322              		.loc 1 1750 5 is_stmt 1 view .LVU435
1750:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1323              		.loc 1 1750 8 is_stmt 0 view .LVU436
 1324 001e 18B1     		cbz	r0, .L111
1754:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1325              		.loc 1 1754 7 is_stmt 1 view .LVU437
1754:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1326              		.loc 1 1754 40 is_stmt 0 view .LVU438
 1327 0020 0023     		movs	r3, #0
 1328 0022 8363     		str	r3, [r0, #56]
1756:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 1329              		.loc 1 1756 7 is_stmt 1 view .LVU439
 1330 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 1331              	.LVL72:
 1332              	.L111:
1761:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1333              		.loc 1 1761 3 view .LVU440
1761:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1334              		.loc 1 1761 22 is_stmt 0 view .LVU441
 1335 0028 0020     		movs	r0, #0
1772:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1336              		.loc 1 1772 17 view .LVU442
 1337 002a 2023     		movs	r3, #32
1761:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1338              		.loc 1 1761 22 view .LVU443
 1339 002c A4F85200 		strh	r0, [r4, #82]	@ movhi
1772:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1340              		.loc 1 1772 3 is_stmt 1 view .LVU444
1772:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1341              		.loc 1 1772 17 is_stmt 0 view .LVU445
 1342 0030 84F87130 		strb	r3, [r4, #113]
1774:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1343              		.loc 1 1774 3 is_stmt 1 view .LVU446
1775:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1344              		.loc 1 1775 1 is_stmt 0 view .LVU447
 1345 0034 10BD     		pop	{r4, pc}
1775:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1346              		.loc 1 1775 1 view .LVU448
 1347              		.cfi_endproc
 1348              	.LFE326:
 1350              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1351              		.align	1
 1352              		.global	HAL_UART_AbortReceive
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1356              		.fpu softvfp
 1358              	HAL_UART_AbortReceive:
 1359              	.LVL73:
 1360              	.LFB327:
1790:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1361              		.loc 1 1790 1 is_stmt 1 view -0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
1797:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1365              		.loc 1 1797 3 view .LVU450
 1366 0000 0368     		ldr	r3, [r0]
 1367 0002 1A68     		ldr	r2, [r3]
 1368 0004 22F49072 		bic	r2, r2, #288
1790:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1369              		.loc 1 1790 1 is_stmt 0 view .LVU451
 1370 0008 10B5     		push	{r4, lr}
 1371              	.LCFI7:
 1372              		.cfi_def_cfa_offset 8
 1373              		.cfi_offset 4, -8
 1374              		.cfi_offset 14, -4
1797:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1375              		.loc 1 1797 3 view .LVU452
 1376 000a 1A60     		str	r2, [r3]
1798:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 1377              		.loc 1 1798 3 is_stmt 1 view .LVU453
 1378 000c 9A68     		ldr	r2, [r3, #8]
 1379 000e 22F00102 		bic	r2, r2, #1
 1380 0012 9A60     		str	r2, [r3, #8]
1802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1381              		.loc 1 1802 3 view .LVU454
1802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1382              		.loc 1 1802 7 is_stmt 0 view .LVU455
 1383 0014 9A68     		ldr	r2, [r3, #8]
1802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1384              		.loc 1 1802 6 view .LVU456
 1385 0016 5206     		lsls	r2, r2, #25
1790:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1386              		.loc 1 1790 1 view .LVU457
 1387 0018 0446     		mov	r4, r0
1802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1388              		.loc 1 1802 6 view .LVU458
 1389 001a 09D5     		bpl	.L118
1804:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1390              		.loc 1 1804 5 is_stmt 1 view .LVU459
 1391 001c 9A68     		ldr	r2, [r3, #8]
1807:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1392              		.loc 1 1807 14 is_stmt 0 view .LVU460
 1393 001e C06E     		ldr	r0, [r0, #108]
 1394              	.LVL74:
1804:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1395              		.loc 1 1804 5 view .LVU461
 1396 0020 22F04002 		bic	r2, r2, #64
 1397 0024 9A60     		str	r2, [r3, #8]
1807:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1398              		.loc 1 1807 5 is_stmt 1 view .LVU462
1807:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 1399              		.loc 1 1807 8 is_stmt 0 view .LVU463
 1400 0026 18B1     		cbz	r0, .L118
1811:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1401              		.loc 1 1811 7 is_stmt 1 view .LVU464
1811:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1402              		.loc 1 1811 40 is_stmt 0 view .LVU465
 1403 0028 0023     		movs	r3, #0
 1404 002a 8363     		str	r3, [r0, #56]
1813:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 1405              		.loc 1 1813 7 is_stmt 1 view .LVU466
 1406 002c FFF7FEFF 		bl	HAL_DMA_Abort
 1407              	.LVL75:
 1408              	.L118:
1818:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1409              		.loc 1 1818 3 view .LVU467
1821:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1410              		.loc 1 1821 3 is_stmt 0 view .LVU468
 1411 0030 2268     		ldr	r2, [r4]
1818:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1412              		.loc 1 1818 22 view .LVU469
 1413 0032 0020     		movs	r0, #0
1821:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1414              		.loc 1 1821 3 view .LVU470
 1415 0034 0F23     		movs	r3, #15
1818:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1416              		.loc 1 1818 22 view .LVU471
 1417 0036 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1821:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1418              		.loc 1 1821 3 is_stmt 1 view .LVU472
 1419 003a 1362     		str	r3, [r2, #32]
1824:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1420              		.loc 1 1824 3 view .LVU473
 1421 003c 138B     		ldrh	r3, [r2, #24]
 1422 003e 9BB2     		uxth	r3, r3
 1423 0040 43F00803 		orr	r3, r3, #8
 1424 0044 1383     		strh	r3, [r2, #24]	@ movhi
1827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1425              		.loc 1 1827 3 view .LVU474
1827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1426              		.loc 1 1827 18 is_stmt 0 view .LVU475
 1427 0046 2023     		movs	r3, #32
 1428 0048 84F87230 		strb	r3, [r4, #114]
1829:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1429              		.loc 1 1829 3 is_stmt 1 view .LVU476
1830:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1430              		.loc 1 1830 1 is_stmt 0 view .LVU477
 1431 004c 10BD     		pop	{r4, pc}
1830:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1432              		.loc 1 1830 1 view .LVU478
 1433              		.cfi_endproc
 1434              	.LFE327:
 1436              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1437              		.align	1
 1438              		.weak	HAL_UART_TxCpltCallback
 1439              		.syntax unified
 1440              		.thumb
 1441              		.thumb_func
 1442              		.fpu softvfp
 1444              	HAL_UART_TxCpltCallback:
 1445              	.LFB380:
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
 1449              		@ link register save eliminated.
 1450 0000 7047     		bx	lr
 1451              		.cfi_endproc
 1452              	.LFE380:
 1454              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1455              		.align	1
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1459              		.fpu softvfp
 1461              	UART_DMATransmitCplt:
 1462              	.LVL76:
 1463              	.LFB355:
3317:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1464              		.loc 1 3317 1 is_stmt 1 view -0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
3318:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1468              		.loc 1 3318 3 view .LVU480
3317:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1469              		.loc 1 3317 1 is_stmt 0 view .LVU481
 1470 0000 08B5     		push	{r3, lr}
 1471              	.LCFI8:
 1472              		.cfi_def_cfa_offset 8
 1473              		.cfi_offset 3, -8
 1474              		.cfi_offset 14, -4
3317:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1475              		.loc 1 3317 1 view .LVU482
 1476 0002 0346     		mov	r3, r0
3318:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1477              		.loc 1 3318 23 view .LVU483
 1478 0004 806A     		ldr	r0, [r0, #40]
 1479              	.LVL77:
3321:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1480              		.loc 1 3321 3 is_stmt 1 view .LVU484
3321:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1481              		.loc 1 3321 7 is_stmt 0 view .LVU485
 1482 0006 1B68     		ldr	r3, [r3]
 1483              	.LVL78:
3321:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1484              		.loc 1 3321 7 view .LVU486
 1485 0008 1B68     		ldr	r3, [r3]
3321:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1486              		.loc 1 3321 6 view .LVU487
 1487 000a 13F02003 		ands	r3, r3, #32
 1488 000e 0BD1     		bne	.L125
3323:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1489              		.loc 1 3323 5 is_stmt 1 view .LVU488
3323:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1490              		.loc 1 3323 24 is_stmt 0 view .LVU489
 1491 0010 A0F85230 		strh	r3, [r0, #82]	@ movhi
3327:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1492              		.loc 1 3327 5 is_stmt 1 view .LVU490
 1493 0014 0368     		ldr	r3, [r0]
 1494 0016 9A68     		ldr	r2, [r3, #8]
 1495 0018 22F08002 		bic	r2, r2, #128
 1496 001c 9A60     		str	r2, [r3, #8]
3330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1497              		.loc 1 3330 5 view .LVU491
 1498 001e 1A68     		ldr	r2, [r3]
 1499 0020 42F04002 		orr	r2, r2, #64
 1500 0024 1A60     		str	r2, [r3]
 1501              	.LVL79:
 1502              	.L124:
3343:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1503              		.loc 1 3343 1 is_stmt 0 view .LVU492
 1504 0026 08BD     		pop	{r3, pc}
 1505              	.LVL80:
 1506              	.L125:
3340:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1507              		.loc 1 3340 5 is_stmt 1 view .LVU493
 1508 0028 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1509              	.LVL81:
3343:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1510              		.loc 1 3343 1 is_stmt 0 view .LVU494
 1511 002c FBE7     		b	.L124
 1512              		.cfi_endproc
 1513              	.LFE355:
 1515              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1516              		.align	1
 1517              		.weak	HAL_UART_TxHalfCpltCallback
 1518              		.syntax unified
 1519              		.thumb
 1520              		.thumb_func
 1521              		.fpu softvfp
 1523              	HAL_UART_TxHalfCpltCallback:
 1524              	.LFB378:
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528              		@ link register save eliminated.
 1529 0000 7047     		bx	lr
 1530              		.cfi_endproc
 1531              	.LFE378:
 1533              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1534              		.align	1
 1535              		.syntax unified
 1536              		.thumb
 1537              		.thumb_func
 1538              		.fpu softvfp
 1540              	UART_DMATxHalfCplt:
 1541              	.LVL82:
 1542              	.LFB356:
3351:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1543              		.loc 1 3351 1 is_stmt 1 view -0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
3352:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1547              		.loc 1 3352 3 view .LVU496
3359:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1548              		.loc 1 3359 3 view .LVU497
3351:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1549              		.loc 1 3351 1 is_stmt 0 view .LVU498
 1550 0000 08B5     		push	{r3, lr}
 1551              	.LCFI9:
 1552              		.cfi_def_cfa_offset 8
 1553              		.cfi_offset 3, -8
 1554              		.cfi_offset 14, -4
3359:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1555              		.loc 1 3359 3 view .LVU499
 1556 0002 806A     		ldr	r0, [r0, #40]
 1557              	.LVL83:
3359:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1558              		.loc 1 3359 3 view .LVU500
 1559 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1560              	.LVL84:
3361:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1561              		.loc 1 3361 1 view .LVU501
 1562 0008 08BD     		pop	{r3, pc}
 1563              		.cfi_endproc
 1564              	.LFE356:
 1566              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1567              		.align	1
 1568              		.weak	HAL_UART_RxCpltCallback
 1569              		.syntax unified
 1570              		.thumb
 1571              		.thumb_func
 1572              		.fpu softvfp
 1574              	HAL_UART_RxCpltCallback:
 1575              	.LFB384:
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 0
 1578              		@ frame_needed = 0, uses_anonymous_args = 0
 1579              		@ link register save eliminated.
 1580 0000 7047     		bx	lr
 1581              		.cfi_endproc
 1582              	.LFE384:
 1584              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1585              		.align	1
 1586              		.syntax unified
 1587              		.thumb
 1588              		.thumb_func
 1589              		.fpu softvfp
 1591              	UART_RxISR_8BIT:
 1592              	.LVL85:
 1593              	.LFB368:
3715:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3716:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3717:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3718:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3719:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3720:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3721:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3722:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3723:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3724:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3725:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3726:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint8_t   nb_tx_data;
3727:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3728:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3729:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3730:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3731:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0 ; nb_tx_data--)
3732:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3733:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3734:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
3735:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3736:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3737:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3738:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3739:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3740:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3741:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3742:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
3743:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != RESET)
3744:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
3745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
3746:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3747:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
3748:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3749:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3750:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3751:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3752:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3753:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3754:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3755:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3756:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3757:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3758:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3759:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3760:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3761:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3762:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint8_t   nb_tx_data;
3763:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3764:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3765:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3766:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3767:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0 ; nb_tx_data--)
3768:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3769:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3770:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
3771:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3772:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3773:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3774:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3775:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3776:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3777:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3778:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
3779:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != RESET)
3780:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
3781:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3782:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
3783:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3784:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3785:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
3786:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3787:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3788:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3789:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3790:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3791:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3792:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3793:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart pointer to a UART_HandleTypeDef structure that contains
3794:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3795:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3796:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3797:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3798:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
3799:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3800:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3801:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3803:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3804:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3805:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3806:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
3807:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3808:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3809:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3810:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3811:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3812:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3813:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
3814:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3815:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
3816:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3817:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3818:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3819:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3820:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3821:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3822:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3823:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 1594              		.loc 1 3823 1 is_stmt 1 view -0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 0
 1597              		@ frame_needed = 0, uses_anonymous_args = 0
3824:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1598              		.loc 1 3824 3 view .LVU503
3825:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
 1599              		.loc 1 3825 3 view .LVU504
3826:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3828:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1600              		.loc 1 3828 3 view .LVU505
 1601              		.loc 1 3828 12 is_stmt 0 view .LVU506
 1602 0000 90F87210 		ldrb	r1, [r0, #114]	@ zero_extendqisi2
 1603 0004 0268     		ldr	r2, [r0]
 1604              		.loc 1 3828 6 view .LVU507
 1605 0006 2229     		cmp	r1, #34
3823:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1606              		.loc 1 3823 1 view .LVU508
 1607 0008 38B5     		push	{r3, r4, r5, lr}
 1608              	.LCFI10:
 1609              		.cfi_def_cfa_offset 16
 1610              		.cfi_offset 3, -16
 1611              		.cfi_offset 4, -12
 1612              		.cfi_offset 5, -8
 1613              		.cfi_offset 14, -4
 1614              		.loc 1 3828 6 view .LVU509
 1615 000a 1ED1     		bne	.L131
3829:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3830:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1616              		.loc 1 3830 5 is_stmt 1 view .LVU510
 1617              		.loc 1 3830 12 is_stmt 0 view .LVU511
 1618 000c 948C     		ldrh	r4, [r2, #36]
 1619              	.LVL86:
3831:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 1620              		.loc 1 3831 5 is_stmt 1 view .LVU512
 1621              		.loc 1 3831 11 is_stmt 0 view .LVU513
 1622 000e 416D     		ldr	r1, [r0, #84]
 1623              		.loc 1 3831 47 view .LVU514
 1624 0010 90F85C20 		ldrb	r2, [r0, #92]	@ zero_extendqisi2
 1625              		.loc 1 3831 23 view .LVU515
 1626 0014 4D1C     		adds	r5, r1, #1
 1627              		.loc 1 3831 28 view .LVU516
 1628 0016 2240     		ands	r2, r2, r4
 1629              		.loc 1 3831 23 view .LVU517
 1630 0018 4565     		str	r5, [r0, #84]
 1631              		.loc 1 3831 26 view .LVU518
 1632 001a 0A70     		strb	r2, [r1]
 1633              	.LVL87:
3832:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3833:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (--huart->RxXferCount == 0)
 1634              		.loc 1 3833 5 is_stmt 1 view .LVU519
 1635              		.loc 1 3833 16 is_stmt 0 view .LVU520
 1636 001c B0F85A20 		ldrh	r2, [r0, #90]
 1637              		.loc 1 3833 9 view .LVU521
 1638 0020 013A     		subs	r2, r2, #1
 1639 0022 92B2     		uxth	r2, r2
 1640              		.loc 1 3833 8 view .LVU522
 1641 0024 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 1642 0028 72B9     		cbnz	r2, .L130
 1643              	.LVL88:
 1644              	.LBB16:
 1645              	.LBI16:
3822:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 1646              		.loc 1 3822 13 is_stmt 1 view .LVU523
 1647              	.LBB17:
3834:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3835:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3836:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3837:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3838:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3839:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1648              		.loc 1 3839 7 view .LVU524
 1649 002a 0168     		ldr	r1, [r0]
 1650 002c 0C68     		ldr	r4, [r1]
 1651              	.LVL89:
 1652              		.loc 1 3839 7 is_stmt 0 view .LVU525
 1653 002e 24F49074 		bic	r4, r4, #288
 1654 0032 0C60     		str	r4, [r1]
3840:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3841:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3842:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3843:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1655              		.loc 1 3843 7 is_stmt 1 view .LVU526
 1656 0034 8C68     		ldr	r4, [r1, #8]
 1657 0036 24F00104 		bic	r4, r4, #1
 1658 003a 8C60     		str	r4, [r1, #8]
3844:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3845:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3846:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1659              		.loc 1 3846 7 view .LVU527
 1660              		.loc 1 3846 22 is_stmt 0 view .LVU528
 1661 003c 2021     		movs	r1, #32
 1662 003e 80F87210 		strb	r1, [r0, #114]
3847:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3849:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 1663              		.loc 1 3849 7 is_stmt 1 view .LVU529
 1664              		.loc 1 3849 20 is_stmt 0 view .LVU530
 1665 0042 0266     		str	r2, [r0, #96]
3850:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3851:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3852:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3853:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3854:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3855:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3856:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1666              		.loc 1 3856 7 is_stmt 1 view .LVU531
 1667 0044 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1668              	.LVL90:
 1669              	.L130:
 1670              		.loc 1 3856 7 is_stmt 0 view .LVU532
 1671              	.LBE17:
 1672              	.LBE16:
3857:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3858:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3859:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
3861:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3862:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3864:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3865:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1673              		.loc 1 3865 1 view .LVU533
 1674 0048 38BD     		pop	{r3, r4, r5, pc}
 1675              	.LVL91:
 1676              	.L131:
3863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1677              		.loc 1 3863 5 is_stmt 1 view .LVU534
 1678 004a 138B     		ldrh	r3, [r2, #24]
 1679 004c 9BB2     		uxth	r3, r3
 1680 004e 43F00803 		orr	r3, r3, #8
 1681 0052 1383     		strh	r3, [r2, #24]	@ movhi
 1682              		.loc 1 3865 1 is_stmt 0 view .LVU535
 1683 0054 F8E7     		b	.L130
 1684              		.cfi_endproc
 1685              	.LFE368:
 1687              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1688              		.align	1
 1689              		.syntax unified
 1690              		.thumb
 1691              		.thumb_func
 1692              		.fpu softvfp
 1694              	UART_RxISR_16BIT:
 1695              	.LVL92:
 1696              	.LFB369:
3866:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3867:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
3868:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3869:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3870:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3871:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3872:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   * @retval None
3873:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   */
3874:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3875:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 1697              		.loc 1 3875 1 is_stmt 1 view -0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 0
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
3876:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 1701              		.loc 1 3876 3 view .LVU537
3877:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1702              		.loc 1 3877 3 view .LVU538
3878:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
 1703              		.loc 1 3878 3 view .LVU539
3879:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3880:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3881:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1704              		.loc 1 3881 3 view .LVU540
 1705              		.loc 1 3881 12 is_stmt 0 view .LVU541
 1706 0000 90F87210 		ldrb	r1, [r0, #114]	@ zero_extendqisi2
 1707 0004 0268     		ldr	r2, [r0]
 1708              		.loc 1 3881 6 view .LVU542
 1709 0006 2229     		cmp	r1, #34
3875:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 1710              		.loc 1 3875 1 view .LVU543
 1711 0008 10B5     		push	{r4, lr}
 1712              	.LCFI11:
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 4, -8
 1715              		.cfi_offset 14, -4
 1716              		.loc 1 3881 6 view .LVU544
 1717 000a 1DD1     		bne	.L134
3882:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3883:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1718              		.loc 1 3883 5 is_stmt 1 view .LVU545
 1719              		.loc 1 3883 12 is_stmt 0 view .LVU546
 1720 000c 948C     		ldrh	r4, [r2, #36]
 1721              	.LVL93:
3884:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 1722              		.loc 1 3884 5 is_stmt 1 view .LVU547
3885:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1723              		.loc 1 3885 5 view .LVU548
 1724              		.loc 1 3885 12 is_stmt 0 view .LVU549
 1725 000e B0F85C10 		ldrh	r1, [r0, #92]
 1726 0012 0C40     		ands	r4, r4, r1
 1727              	.LVL94:
 1728              		.loc 1 3885 10 view .LVU550
 1729 0014 416D     		ldr	r1, [r0, #84]
 1730 0016 21F8024B 		strh	r4, [r1], #2	@ movhi
 1731              	.LVL95:
3886:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2;
 1732              		.loc 1 3886 5 is_stmt 1 view .LVU551
 1733              		.loc 1 3886 23 is_stmt 0 view .LVU552
 1734 001a 4165     		str	r1, [r0, #84]
 1735              	.LVL96:
3887:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3888:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     if (--huart->RxXferCount == 0)
 1736              		.loc 1 3888 5 is_stmt 1 view .LVU553
 1737              		.loc 1 3888 16 is_stmt 0 view .LVU554
 1738 001c B0F85A10 		ldrh	r1, [r0, #90]
 1739              	.LVL97:
 1740              		.loc 1 3888 9 view .LVU555
 1741 0020 0139     		subs	r1, r1, #1
 1742 0022 89B2     		uxth	r1, r1
 1743              		.loc 1 3888 8 view .LVU556
 1744 0024 A0F85A10 		strh	r1, [r0, #90]	@ movhi
 1745 0028 69B9     		cbnz	r1, .L133
3889:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
3890:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3891:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3892:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3893:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3894:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1746              		.loc 1 3894 7 is_stmt 1 view .LVU557
 1747 002a 1468     		ldr	r4, [r2]
 1748 002c 24F49074 		bic	r4, r4, #288
 1749 0030 1460     		str	r4, [r2]
3895:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
3896:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3897:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3898:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1750              		.loc 1 3898 7 view .LVU558
 1751 0032 9468     		ldr	r4, [r2, #8]
 1752 0034 24F00104 		bic	r4, r4, #1
 1753 0038 9460     		str	r4, [r2, #8]
3899:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3900:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3901:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1754              		.loc 1 3901 7 view .LVU559
 1755              		.loc 1 3901 22 is_stmt 0 view .LVU560
 1756 003a 2022     		movs	r2, #32
 1757 003c 80F87220 		strb	r2, [r0, #114]
3902:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3904:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 1758              		.loc 1 3904 7 is_stmt 1 view .LVU561
 1759              		.loc 1 3904 20 is_stmt 0 view .LVU562
 1760 0040 0166     		str	r1, [r0, #96]
3905:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
3906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3907:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3908:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3909:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #else
3910:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3911:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1761              		.loc 1 3911 7 is_stmt 1 view .LVU563
 1762 0042 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1763              	.LVL98:
 1764              	.L133:
3912:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3913:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
3914:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3915:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   else
3916:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
3917:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3918:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3919:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
3920:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1765              		.loc 1 3920 1 is_stmt 0 view .LVU564
 1766 0046 10BD     		pop	{r4, pc}
 1767              	.LVL99:
 1768              	.L134:
 1769              	.LBB20:
 1770              	.LBI20:
3874:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 1771              		.loc 1 3874 13 is_stmt 1 view .LVU565
 1772              	.LBB21:
3918:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1773              		.loc 1 3918 5 view .LVU566
 1774 0048 138B     		ldrh	r3, [r2, #24]
 1775 004a 9BB2     		uxth	r3, r3
 1776 004c 43F00803 		orr	r3, r3, #8
 1777 0050 1383     		strh	r3, [r2, #24]	@ movhi
 1778              	.LVL100:
3918:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1779              		.loc 1 3918 5 is_stmt 0 view .LVU567
 1780              	.LBE21:
 1781              	.LBE20:
 1782              		.loc 1 3920 1 view .LVU568
 1783 0052 F8E7     		b	.L133
 1784              		.cfi_endproc
 1785              	.LFE369:
 1787              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1788              		.align	1
 1789              		.syntax unified
 1790              		.thumb
 1791              		.thumb_func
 1792              		.fpu softvfp
 1794              	UART_DMAReceiveCplt:
 1795              	.LVL101:
 1796              	.LFB357:
3369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1797              		.loc 1 3369 1 is_stmt 1 view -0
 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 0
 1800              		@ frame_needed = 0, uses_anonymous_args = 0
3370:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1801              		.loc 1 3370 3 view .LVU570
3369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1802              		.loc 1 3369 1 is_stmt 0 view .LVU571
 1803 0000 08B5     		push	{r3, lr}
 1804              	.LCFI12:
 1805              		.cfi_def_cfa_offset 8
 1806              		.cfi_offset 3, -8
 1807              		.cfi_offset 14, -4
3369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1808              		.loc 1 3369 1 view .LVU572
 1809 0002 0346     		mov	r3, r0
3370:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1810              		.loc 1 3370 23 view .LVU573
 1811 0004 806A     		ldr	r0, [r0, #40]
 1812              	.LVL102:
3373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1813              		.loc 1 3373 3 is_stmt 1 view .LVU574
3373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1814              		.loc 1 3373 7 is_stmt 0 view .LVU575
 1815 0006 1B68     		ldr	r3, [r3]
 1816              	.LVL103:
3373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1817              		.loc 1 3373 7 view .LVU576
 1818 0008 1B68     		ldr	r3, [r3]
3373:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1819              		.loc 1 3373 6 view .LVU577
 1820 000a 13F02003 		ands	r3, r3, #32
 1821 000e 11D1     		bne	.L137
3375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1822              		.loc 1 3375 5 is_stmt 1 view .LVU578
3375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1823              		.loc 1 3375 24 is_stmt 0 view .LVU579
 1824 0010 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3378:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1825              		.loc 1 3378 5 is_stmt 1 view .LVU580
 1826 0014 0368     		ldr	r3, [r0]
 1827 0016 1A68     		ldr	r2, [r3]
 1828 0018 22F48072 		bic	r2, r2, #256
 1829 001c 1A60     		str	r2, [r3]
3379:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1830              		.loc 1 3379 5 view .LVU581
 1831 001e 9A68     		ldr	r2, [r3, #8]
 1832 0020 22F00102 		bic	r2, r2, #1
 1833 0024 9A60     		str	r2, [r3, #8]
3383:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1834              		.loc 1 3383 5 view .LVU582
 1835 0026 9A68     		ldr	r2, [r3, #8]
 1836 0028 22F04002 		bic	r2, r2, #64
 1837 002c 9A60     		str	r2, [r3, #8]
3386:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1838              		.loc 1 3386 5 view .LVU583
3386:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1839              		.loc 1 3386 20 is_stmt 0 view .LVU584
 1840 002e 2023     		movs	r3, #32
 1841 0030 80F87230 		strb	r3, [r0, #114]
 1842              	.L137:
3394:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1843              		.loc 1 3394 3 is_stmt 1 view .LVU585
 1844 0034 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1845              	.LVL104:
3396:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1846              		.loc 1 3396 1 is_stmt 0 view .LVU586
 1847 0038 08BD     		pop	{r3, pc}
 1848              		.cfi_endproc
 1849              	.LFE357:
 1851              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1852              		.align	1
 1853              		.weak	HAL_UART_RxHalfCpltCallback
 1854              		.syntax unified
 1855              		.thumb
 1856              		.thumb_func
 1857              		.fpu softvfp
 1859              	HAL_UART_RxHalfCpltCallback:
 1860              	.LFB382:
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 0
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 1864              		@ link register save eliminated.
 1865 0000 7047     		bx	lr
 1866              		.cfi_endproc
 1867              	.LFE382:
 1869              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1870              		.align	1
 1871              		.syntax unified
 1872              		.thumb
 1873              		.thumb_func
 1874              		.fpu softvfp
 1876              	UART_DMARxHalfCplt:
 1877              	.LVL105:
 1878              	.LFB358:
3404:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1879              		.loc 1 3404 1 is_stmt 1 view -0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
3405:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1883              		.loc 1 3405 3 view .LVU588
3412:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1884              		.loc 1 3412 3 view .LVU589
3404:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1885              		.loc 1 3404 1 is_stmt 0 view .LVU590
 1886 0000 08B5     		push	{r3, lr}
 1887              	.LCFI13:
 1888              		.cfi_def_cfa_offset 8
 1889              		.cfi_offset 3, -8
 1890              		.cfi_offset 14, -4
3412:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1891              		.loc 1 3412 3 view .LVU591
 1892 0002 806A     		ldr	r0, [r0, #40]
 1893              	.LVL106:
3412:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1894              		.loc 1 3412 3 view .LVU592
 1895 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1896              	.LVL107:
3414:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1897              		.loc 1 3414 1 view .LVU593
 1898 0008 08BD     		pop	{r3, pc}
 1899              		.cfi_endproc
 1900              	.LFE358:
 1902              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1903              		.align	1
 1904              		.weak	HAL_UART_ErrorCallback
 1905              		.syntax unified
 1906              		.thumb
 1907              		.thumb_func
 1908              		.fpu softvfp
 1910              	HAL_UART_ErrorCallback:
 1911              	.LFB386:
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              		@ link register save eliminated.
 1916 0000 7047     		bx	lr
 1917              		.cfi_endproc
 1918              	.LFE386:
 1920              		.section	.text.UART_DMAError,"ax",%progbits
 1921              		.align	1
 1922              		.syntax unified
 1923              		.thumb
 1924              		.thumb_func
 1925              		.fpu softvfp
 1927              	UART_DMAError:
 1928              	.LVL108:
 1929              	.LFB359:
3422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1930              		.loc 1 3422 1 is_stmt 1 view -0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
3423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1934              		.loc 1 3423 3 view .LVU595
3422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1935              		.loc 1 3422 1 is_stmt 0 view .LVU596
 1936 0000 08B5     		push	{r3, lr}
 1937              	.LCFI14:
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 3, -8
 1940              		.cfi_offset 14, -4
3423:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1941              		.loc 1 3423 23 view .LVU597
 1942 0002 806A     		ldr	r0, [r0, #40]
 1943              	.LVL109:
3426:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1944              		.loc 1 3426 3 is_stmt 1 view .LVU598
3426:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1945              		.loc 1 3426 13 is_stmt 0 view .LVU599
 1946 0004 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
3426:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1947              		.loc 1 3426 6 view .LVU600
 1948 0008 212B     		cmp	r3, #33
 1949 000a 0DD1     		bne	.L142
3427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1950              		.loc 1 3427 11 view .LVU601
 1951 000c 0368     		ldr	r3, [r0]
 1952 000e 9A68     		ldr	r2, [r3, #8]
3427:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1953              		.loc 1 3427 7 view .LVU602
 1954 0010 1206     		lsls	r2, r2, #24
 1955 0012 09D5     		bpl	.L142
3429:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1956              		.loc 1 3429 5 is_stmt 1 view .LVU603
3429:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1957              		.loc 1 3429 24 is_stmt 0 view .LVU604
 1958 0014 0022     		movs	r2, #0
 1959 0016 A0F85220 		strh	r2, [r0, #82]	@ movhi
3430:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1960              		.loc 1 3430 5 is_stmt 1 view .LVU605
 1961              	.LVL110:
 1962              	.LBB24:
 1963              	.LBI24:
3271:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 1964              		.loc 1 3271 13 view .LVU606
 1965              	.LBB25:
3279:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 1966              		.loc 1 3279 3 view .LVU607
 1967 001a 1A68     		ldr	r2, [r3]
 1968 001c 22F0C002 		bic	r2, r2, #192
 1969 0020 1A60     		str	r2, [r3]
3283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1970              		.loc 1 3283 3 view .LVU608
3283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1971              		.loc 1 3283 17 is_stmt 0 view .LVU609
 1972 0022 2023     		movs	r3, #32
 1973 0024 80F87130 		strb	r3, [r0, #113]
 1974              	.LVL111:
 1975              	.L142:
3283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 1976              		.loc 1 3283 17 view .LVU610
 1977              	.LBE25:
 1978              	.LBE24:
3434:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1979              		.loc 1 3434 3 is_stmt 1 view .LVU611
3434:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1980              		.loc 1 3434 13 is_stmt 0 view .LVU612
 1981 0028 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
3434:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1982              		.loc 1 3434 6 view .LVU613
 1983 002c 222B     		cmp	r3, #34
 1984 002e 08D1     		bne	.L143
3435:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1985              		.loc 1 3435 11 view .LVU614
 1986 0030 0368     		ldr	r3, [r0]
 1987 0032 9B68     		ldr	r3, [r3, #8]
3435:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 1988              		.loc 1 3435 7 view .LVU615
 1989 0034 5B06     		lsls	r3, r3, #25
 1990 0036 04D5     		bpl	.L143
3437:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1991              		.loc 1 3437 5 is_stmt 1 view .LVU616
3437:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1992              		.loc 1 3437 24 is_stmt 0 view .LVU617
 1993 0038 0023     		movs	r3, #0
 1994 003a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3438:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 1995              		.loc 1 3438 5 is_stmt 1 view .LVU618
 1996 003e FFF7FEFF 		bl	UART_EndRxTransfer
 1997              	.LVL112:
 1998              	.L143:
3441:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 1999              		.loc 1 3441 3 view .LVU619
3441:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2000              		.loc 1 3441 20 is_stmt 0 view .LVU620
 2001 0042 436F     		ldr	r3, [r0, #116]
 2002 0044 43F01003 		orr	r3, r3, #16
 2003 0048 4367     		str	r3, [r0, #116]
3448:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2004              		.loc 1 3448 3 is_stmt 1 view .LVU621
 2005 004a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2006              	.LVL113:
3450:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2007              		.loc 1 3450 1 is_stmt 0 view .LVU622
 2008 004e 08BD     		pop	{r3, pc}
 2009              		.cfi_endproc
 2010              	.LFE359:
 2012              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2013              		.align	1
 2014              		.global	HAL_UART_IRQHandler
 2015              		.syntax unified
 2016              		.thumb
 2017              		.thumb_func
 2018              		.fpu softvfp
 2020              	HAL_UART_IRQHandler:
 2021              	.LVL114:
 2022              	.LFB331:
2183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2023              		.loc 1 2183 1 is_stmt 1 view -0
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 0
 2026              		@ frame_needed = 0, uses_anonymous_args = 0
2184:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2027              		.loc 1 2184 3 view .LVU624
2184:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2028              		.loc 1 2184 25 is_stmt 0 view .LVU625
 2029 0000 0368     		ldr	r3, [r0]
2184:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2030              		.loc 1 2184 12 view .LVU626
 2031 0002 DA69     		ldr	r2, [r3, #28]
 2032              	.LVL115:
2185:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2033              		.loc 1 2185 3 is_stmt 1 view .LVU627
2185:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2034              		.loc 1 2185 12 is_stmt 0 view .LVU628
 2035 0004 1968     		ldr	r1, [r3]
 2036              	.LVL116:
2186:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
 2037              		.loc 1 2186 3 is_stmt 1 view .LVU629
2183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2038              		.loc 1 2183 1 is_stmt 0 view .LVU630
 2039 0006 70B5     		push	{r4, r5, r6, lr}
 2040              	.LCFI15:
 2041              		.cfi_def_cfa_offset 16
 2042              		.cfi_offset 4, -16
 2043              		.cfi_offset 5, -12
 2044              		.cfi_offset 6, -8
 2045              		.cfi_offset 14, -4
2191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2046              		.loc 1 2191 6 view .LVU631
 2047 0008 1607     		lsls	r6, r2, #28
2186:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
 2048              		.loc 1 2186 12 view .LVU632
 2049 000a 9D68     		ldr	r5, [r3, #8]
 2050              	.LVL117:
2187:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2051              		.loc 1 2187 3 is_stmt 1 view .LVU633
2190:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (errorflags == RESET)
 2052              		.loc 1 2190 3 view .LVU634
2191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2053              		.loc 1 2191 3 view .LVU635
2183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2054              		.loc 1 2183 1 is_stmt 0 view .LVU636
 2055 000c 0446     		mov	r4, r0
2191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2056              		.loc 1 2191 6 view .LVU637
 2057 000e 09D1     		bne	.L151
2199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2058              		.loc 1 2199 5 is_stmt 1 view .LVU638
2199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2059              		.loc 1 2199 8 is_stmt 0 view .LVU639
 2060 0010 9606     		lsls	r6, r2, #26
 2061 0012 63D5     		bpl	.L152
2200:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2062              		.loc 1 2200 9 view .LVU640
 2063 0014 8E06     		lsls	r6, r1, #26
 2064 0016 61D5     		bpl	.L152
2203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2065              		.loc 1 2203 7 is_stmt 1 view .LVU641
2203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2066              		.loc 1 2203 16 is_stmt 0 view .LVU642
 2067 0018 036E     		ldr	r3, [r0, #96]
2203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2068              		.loc 1 2203 10 view .LVU643
 2069 001a 002B     		cmp	r3, #0
 2070 001c 59D0     		beq	.L150
 2071              	.LVL118:
 2072              	.L241:
2422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2073              		.loc 1 2422 1 view .LVU644
 2074 001e BDE87040 		pop	{r4, r5, r6, lr}
 2075              	.LCFI16:
 2076              		.cfi_remember_state
 2077              		.cfi_restore 14
 2078              		.cfi_restore 6
 2079              		.cfi_restore 5
 2080              		.cfi_restore 4
 2081              		.cfi_def_cfa_offset 0
 2082              	.LVL119:
2383:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2083              		.loc 1 2383 7 view .LVU645
 2084 0022 1847     		bx	r3	@ indirect register sibling call
 2085              	.LVL120:
 2086              	.L151:
 2087              	.LCFI17:
 2088              		.cfi_restore_state
2217:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != RESET)
 2089              		.loc 1 2217 3 is_stmt 1 view .LVU646
2218:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 2090              		.loc 1 2218 20 is_stmt 0 view .LVU647
 2091 0024 05F00100 		and	r0, r5, #1
 2092              	.LVL121:
2219:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2093              		.loc 1 2219 23 view .LVU648
 2094 0028 01F49076 		and	r6, r1, #288
2219:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2095              		.loc 1 2219 11 view .LVU649
 2096 002c 0643     		orrs	r6, r6, r0
 2097 002e 55D0     		beq	.L152
2223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2098              		.loc 1 2223 5 is_stmt 1 view .LVU650
2223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2099              		.loc 1 2223 8 is_stmt 0 view .LVU651
 2100 0030 D607     		lsls	r6, r2, #31
 2101 0032 07D5     		bpl	.L155
2223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2102              		.loc 1 2223 46 discriminator 1 view .LVU652
 2103 0034 CD05     		lsls	r5, r1, #23
 2104              	.LVL122:
2223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2105              		.loc 1 2223 46 discriminator 1 view .LVU653
 2106 0036 05D5     		bpl	.L155
2225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2107              		.loc 1 2225 7 is_stmt 1 view .LVU654
 2108 0038 0125     		movs	r5, #1
 2109 003a 1D62     		str	r5, [r3, #32]
2227:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2110              		.loc 1 2227 7 view .LVU655
2227:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2111              		.loc 1 2227 24 is_stmt 0 view .LVU656
 2112 003c 656F     		ldr	r5, [r4, #116]
 2113 003e 45F00105 		orr	r5, r5, #1
 2114 0042 6567     		str	r5, [r4, #116]
 2115              	.L155:
2231:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2116              		.loc 1 2231 5 is_stmt 1 view .LVU657
2231:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2117              		.loc 1 2231 8 is_stmt 0 view .LVU658
 2118 0044 9607     		lsls	r6, r2, #30
 2119 0046 06D5     		bpl	.L156
2231:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2120              		.loc 1 2231 46 discriminator 1 view .LVU659
 2121 0048 28B1     		cbz	r0, .L156
2233:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2122              		.loc 1 2233 7 is_stmt 1 view .LVU660
 2123 004a 0225     		movs	r5, #2
 2124 004c 1D62     		str	r5, [r3, #32]
2235:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2125              		.loc 1 2235 7 view .LVU661
2235:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2126              		.loc 1 2235 24 is_stmt 0 view .LVU662
 2127 004e 656F     		ldr	r5, [r4, #116]
 2128 0050 45F00405 		orr	r5, r5, #4
 2129 0054 6567     		str	r5, [r4, #116]
 2130              	.L156:
2239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2131              		.loc 1 2239 5 is_stmt 1 view .LVU663
2239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2132              		.loc 1 2239 8 is_stmt 0 view .LVU664
 2133 0056 5507     		lsls	r5, r2, #29
 2134 0058 06D5     		bpl	.L157
2239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2135              		.loc 1 2239 46 discriminator 1 view .LVU665
 2136 005a 28B1     		cbz	r0, .L157
2241:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2137              		.loc 1 2241 7 is_stmt 1 view .LVU666
 2138 005c 0425     		movs	r5, #4
 2139 005e 1D62     		str	r5, [r3, #32]
2243:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2140              		.loc 1 2243 7 view .LVU667
2243:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2141              		.loc 1 2243 24 is_stmt 0 view .LVU668
 2142 0060 656F     		ldr	r5, [r4, #116]
 2143 0062 45F00205 		orr	r5, r5, #2
 2144 0066 6567     		str	r5, [r4, #116]
 2145              	.L157:
2252:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != RESET) ||
 2146              		.loc 1 2252 5 is_stmt 1 view .LVU669
2252:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != RESET) ||
 2147              		.loc 1 2252 8 is_stmt 0 view .LVU670
 2148 0068 1607     		lsls	r6, r2, #28
 2149 006a 08D5     		bpl	.L158
2253:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
 2150              		.loc 1 2253 22 view .LVU671
 2151 006c 01F02005 		and	r5, r1, #32
2253:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
 2152              		.loc 1 2253 9 view .LVU672
 2153 0070 2843     		orrs	r0, r5, r0
 2154 0072 04D0     		beq	.L158
2257:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2155              		.loc 1 2257 7 is_stmt 1 view .LVU673
 2156 0074 0820     		movs	r0, #8
 2157 0076 1862     		str	r0, [r3, #32]
2259:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2158              		.loc 1 2259 7 view .LVU674
2259:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2159              		.loc 1 2259 24 is_stmt 0 view .LVU675
 2160 0078 636F     		ldr	r3, [r4, #116]
 2161 007a 0343     		orrs	r3, r3, r0
 2162 007c 6367     		str	r3, [r4, #116]
 2163              	.L158:
2263:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2164              		.loc 1 2263 5 is_stmt 1 view .LVU676
2263:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2165              		.loc 1 2263 14 is_stmt 0 view .LVU677
 2166 007e 636F     		ldr	r3, [r4, #116]
2263:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2167              		.loc 1 2263 8 view .LVU678
 2168 0080 3BB3     		cbz	r3, .L150
2271:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2169              		.loc 1 2271 7 is_stmt 1 view .LVU679
2271:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2170              		.loc 1 2271 10 is_stmt 0 view .LVU680
 2171 0082 9506     		lsls	r5, r2, #26
 2172 0084 05D5     		bpl	.L160
2272:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2173              		.loc 1 2272 11 view .LVU681
 2174 0086 8806     		lsls	r0, r1, #26
 2175 0088 03D5     		bpl	.L160
2275:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 2176              		.loc 1 2275 9 is_stmt 1 view .LVU682
2275:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 2177              		.loc 1 2275 18 is_stmt 0 view .LVU683
 2178 008a 236E     		ldr	r3, [r4, #96]
2275:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 2179              		.loc 1 2275 12 view .LVU684
 2180 008c 0BB1     		cbz	r3, .L160
2277:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         }
 2181              		.loc 1 2277 11 is_stmt 1 view .LVU685
 2182 008e 2046     		mov	r0, r4
 2183 0090 9847     		blx	r3
 2184              	.LVL123:
 2185              	.L160:
2283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2186              		.loc 1 2283 7 view .LVU686
2283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2187              		.loc 1 2283 18 is_stmt 0 view .LVU687
 2188 0092 636F     		ldr	r3, [r4, #116]
2283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2189              		.loc 1 2283 10 view .LVU688
 2190 0094 1907     		lsls	r1, r3, #28
2289:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2191              		.loc 1 2289 9 view .LVU689
 2192 0096 2046     		mov	r0, r4
2283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2193              		.loc 1 2283 10 view .LVU690
 2194 0098 04D4     		bmi	.L161
 2195              	.LVL124:
2284:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2196              		.loc 1 2284 12 discriminator 1 view .LVU691
 2197 009a 2368     		ldr	r3, [r4]
 2198 009c 9D68     		ldr	r5, [r3, #8]
2283:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2199              		.loc 1 2283 62 discriminator 1 view .LVU692
 2200 009e 15F04005 		ands	r5, r5, #64
 2201 00a2 17D0     		beq	.L162
 2202              	.L161:
2289:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2203              		.loc 1 2289 9 is_stmt 1 view .LVU693
 2204 00a4 FFF7FEFF 		bl	UART_EndRxTransfer
 2205              	.LVL125:
2292:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 2206              		.loc 1 2292 9 view .LVU694
2292:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 2207              		.loc 1 2292 13 is_stmt 0 view .LVU695
 2208 00a8 2368     		ldr	r3, [r4]
 2209 00aa 9A68     		ldr	r2, [r3, #8]
2292:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 2210              		.loc 1 2292 12 view .LVU696
 2211 00ac 5206     		lsls	r2, r2, #25
 2212 00ae 0DD5     		bpl	.L163
2294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2213              		.loc 1 2294 11 is_stmt 1 view .LVU697
 2214 00b0 9A68     		ldr	r2, [r3, #8]
2297:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           {
 2215              		.loc 1 2297 20 is_stmt 0 view .LVU698
 2216 00b2 E06E     		ldr	r0, [r4, #108]
 2217              	.LVL126:
2294:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2218              		.loc 1 2294 11 view .LVU699
 2219 00b4 22F04002 		bic	r2, r2, #64
 2220 00b8 9A60     		str	r2, [r3, #8]
2297:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           {
 2221              		.loc 1 2297 11 is_stmt 1 view .LVU700
2297:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           {
 2222              		.loc 1 2297 14 is_stmt 0 view .LVU701
 2223 00ba 38B1     		cbz	r0, .L163
2301:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2224              		.loc 1 2301 13 is_stmt 1 view .LVU702
2301:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2225              		.loc 1 2301 46 is_stmt 0 view .LVU703
 2226 00bc 1A4B     		ldr	r3, .L242
 2227 00be 8363     		str	r3, [r0, #56]
2304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             {
 2228              		.loc 1 2304 13 is_stmt 1 view .LVU704
2304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             {
 2229              		.loc 1 2304 17 is_stmt 0 view .LVU705
 2230 00c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2231              	.LVL127:
2304:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             {
 2232              		.loc 1 2304 16 view .LVU706
 2233 00c4 28B1     		cbz	r0, .L150
2307:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             }
 2234              		.loc 1 2307 15 is_stmt 1 view .LVU707
2307:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             }
 2235              		.loc 1 2307 20 is_stmt 0 view .LVU708
 2236 00c6 E06E     		ldr	r0, [r4, #108]
2307:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****             }
 2237              		.loc 1 2307 15 view .LVU709
 2238 00c8 836B     		ldr	r3, [r0, #56]
 2239 00ca A8E7     		b	.L241
 2240              	.L163:
2318:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2241              		.loc 1 2318 13 is_stmt 1 view .LVU710
 2242 00cc 2046     		mov	r0, r4
 2243 00ce FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2244              	.LVL128:
 2245              	.L150:
2422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2246              		.loc 1 2422 1 is_stmt 0 view .LVU711
 2247 00d2 70BD     		pop	{r4, r5, r6, pc}
 2248              	.LVL129:
 2249              	.L162:
2344:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2250              		.loc 1 2344 9 is_stmt 1 view .LVU712
 2251 00d4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2252              	.LVL130:
2346:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2253              		.loc 1 2346 9 view .LVU713
2346:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2254              		.loc 1 2346 26 is_stmt 0 view .LVU714
 2255 00d8 6567     		str	r5, [r4, #116]
 2256 00da FAE7     		b	.L150
 2257              	.LVL131:
 2258              	.L152:
2354:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2259              		.loc 1 2354 3 is_stmt 1 view .LVU715
2354:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2260              		.loc 1 2354 6 is_stmt 0 view .LVU716
 2261 00dc D602     		lsls	r6, r2, #11
 2262 00de 09D5     		bpl	.L164
2354:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2263              		.loc 1 2354 45 discriminator 1 view .LVU717
 2264 00e0 6802     		lsls	r0, r5, #9
 2265 00e2 07D5     		bpl	.L164
2356:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2266              		.loc 1 2356 5 is_stmt 1 view .LVU718
 2267 00e4 4FF48012 		mov	r2, #1048576
 2268              	.LVL132:
2366:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2269              		.loc 1 2366 5 is_stmt 0 view .LVU719
 2270 00e8 2046     		mov	r0, r4
2356:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2271              		.loc 1 2356 5 view .LVU720
 2272 00ea 1A62     		str	r2, [r3, #32]
2366:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2273              		.loc 1 2366 5 is_stmt 1 view .LVU721
2422:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2274              		.loc 1 2422 1 is_stmt 0 view .LVU722
 2275 00ec BDE87040 		pop	{r4, r5, r6, lr}
 2276              	.LCFI18:
 2277              		.cfi_remember_state
 2278              		.cfi_restore 14
 2279              		.cfi_restore 6
 2280              		.cfi_restore 5
 2281              		.cfi_restore 4
 2282              		.cfi_def_cfa_offset 0
 2283              	.LVL133:
2366:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2284              		.loc 1 2366 5 view .LVU723
 2285 00f0 FFF7FEBF 		b	HAL_UARTEx_WakeupCallback
 2286              	.LVL134:
 2287              	.L164:
 2288              	.LCFI19:
 2289              		.cfi_restore_state
2377:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != RESET))
 2290              		.loc 1 2377 3 is_stmt 1 view .LVU724
2377:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != RESET))
 2291              		.loc 1 2377 6 is_stmt 0 view .LVU725
 2292 00f4 1606     		lsls	r6, r2, #24
 2293 00f6 06D5     		bpl	.L165
2378:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2294              		.loc 1 2378 7 view .LVU726
 2295 00f8 0D06     		lsls	r5, r1, #24
 2296              	.LVL135:
2378:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2297              		.loc 1 2378 7 view .LVU727
 2298 00fa 04D5     		bpl	.L165
2381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2299              		.loc 1 2381 5 is_stmt 1 view .LVU728
2381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2300              		.loc 1 2381 14 is_stmt 0 view .LVU729
 2301 00fc 636E     		ldr	r3, [r4, #100]
2381:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2302              		.loc 1 2381 8 view .LVU730
 2303 00fe 002B     		cmp	r3, #0
 2304 0100 E7D0     		beq	.L150
2383:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2305              		.loc 1 2383 7 is_stmt 1 view .LVU731
 2306 0102 2046     		mov	r0, r4
 2307 0104 8BE7     		b	.L241
 2308              	.L165:
2389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2309              		.loc 1 2389 3 view .LVU732
2389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2310              		.loc 1 2389 6 is_stmt 0 view .LVU733
 2311 0106 5006     		lsls	r0, r2, #25
 2312 0108 E3D5     		bpl	.L150
2389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2313              		.loc 1 2389 44 discriminator 1 view .LVU734
 2314 010a 4A06     		lsls	r2, r1, #25
 2315              	.LVL136:
2389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2316              		.loc 1 2389 44 discriminator 1 view .LVU735
 2317 010c E1D5     		bpl	.L150
2391:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     return;
 2318              		.loc 1 2391 5 is_stmt 1 view .LVU736
 2319              	.LVL137:
 2320              	.LBB28:
 2321              	.LBI28:
3797:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 2322              		.loc 1 3797 13 view .LVU737
 2323              	.LBB29:
3800:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2324              		.loc 1 3800 3 view .LVU738
 2325 010e 1A68     		ldr	r2, [r3]
 2326 0110 22F04002 		bic	r2, r2, #64
 2327 0114 1A60     		str	r2, [r3]
3803:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2328              		.loc 1 3803 3 view .LVU739
3803:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2329              		.loc 1 3803 17 is_stmt 0 view .LVU740
 2330 0116 2023     		movs	r3, #32
 2331 0118 84F87130 		strb	r3, [r4, #113]
3806:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2332              		.loc 1 3806 3 is_stmt 1 view .LVU741
3806:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2333              		.loc 1 3806 16 is_stmt 0 view .LVU742
 2334 011c 0023     		movs	r3, #0
 2335 011e 6366     		str	r3, [r4, #100]
3813:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2336              		.loc 1 3813 3 is_stmt 1 view .LVU743
 2337 0120 2046     		mov	r0, r4
 2338 0122 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2339              	.LVL138:
3815:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2340              		.loc 1 3815 1 is_stmt 0 view .LVU744
 2341 0126 D4E7     		b	.L150
 2342              	.L243:
 2343              		.align	2
 2344              	.L242:
 2345 0128 00000000 		.word	UART_DMAAbortOnError
 2346              	.LBE29:
 2347              	.LBE28:
 2348              		.cfi_endproc
 2349              	.LFE331:
 2351              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2352              		.align	1
 2353              		.syntax unified
 2354              		.thumb
 2355              		.thumb_func
 2356              		.fpu softvfp
 2358              	UART_DMAAbortOnError:
 2359              	.LVL139:
 2360              	.LFB360:
3459:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2361              		.loc 1 3459 1 is_stmt 1 view -0
 2362              		.cfi_startproc
 2363              		@ args = 0, pretend = 0, frame = 0
 2364              		@ frame_needed = 0, uses_anonymous_args = 0
3460:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2365              		.loc 1 3460 3 view .LVU746
3459:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2366              		.loc 1 3459 1 is_stmt 0 view .LVU747
 2367 0000 08B5     		push	{r3, lr}
 2368              	.LCFI20:
 2369              		.cfi_def_cfa_offset 8
 2370              		.cfi_offset 3, -8
 2371              		.cfi_offset 14, -4
3460:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2372              		.loc 1 3460 23 view .LVU748
 2373 0002 806A     		ldr	r0, [r0, #40]
 2374              	.LVL140:
3461:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2375              		.loc 1 3461 3 is_stmt 1 view .LVU749
3461:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2376              		.loc 1 3461 22 is_stmt 0 view .LVU750
 2377 0004 0023     		movs	r3, #0
 2378 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3462:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2379              		.loc 1 3462 3 is_stmt 1 view .LVU751
3462:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2380              		.loc 1 3462 22 is_stmt 0 view .LVU752
 2381 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
3469:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2382              		.loc 1 3469 3 is_stmt 1 view .LVU753
 2383 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2384              	.LVL141:
3471:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2385              		.loc 1 3471 1 is_stmt 0 view .LVU754
 2386 0012 08BD     		pop	{r3, pc}
 2387              		.cfi_endproc
 2388              	.LFE360:
 2390              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2391              		.align	1
 2392              		.weak	HAL_UART_AbortCpltCallback
 2393              		.syntax unified
 2394              		.thumb
 2395              		.thumb_func
 2396              		.fpu softvfp
 2398              	HAL_UART_AbortCpltCallback:
 2399              	.LFB388:
 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              		@ link register save eliminated.
 2404 0000 7047     		bx	lr
 2405              		.cfi_endproc
 2406              	.LFE388:
 2408              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2409              		.align	1
 2410              		.global	HAL_UART_Abort_IT
 2411              		.syntax unified
 2412              		.thumb
 2413              		.thumb_func
 2414              		.fpu softvfp
 2416              	HAL_UART_Abort_IT:
 2417              	.LVL142:
 2418              	.LFB328:
1847:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2419              		.loc 1 1847 1 is_stmt 1 view -0
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 0
 2422              		@ frame_needed = 0, uses_anonymous_args = 0
1848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2423              		.loc 1 1848 3 view .LVU756
1855:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2424              		.loc 1 1855 3 view .LVU757
 2425 0000 0368     		ldr	r3, [r0]
 2426 0002 1A68     		ldr	r2, [r3]
 2427 0004 22F4F072 		bic	r2, r2, #480
1847:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2428              		.loc 1 1847 1 is_stmt 0 view .LVU758
 2429 0008 10B5     		push	{r4, lr}
 2430              	.LCFI21:
 2431              		.cfi_def_cfa_offset 8
 2432              		.cfi_offset 4, -8
 2433              		.cfi_offset 14, -4
1855:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2434              		.loc 1 1855 3 view .LVU759
 2435 000a 1A60     		str	r2, [r3]
1856:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2436              		.loc 1 1856 3 is_stmt 1 view .LVU760
 2437 000c 9A68     		ldr	r2, [r3, #8]
1847:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2438              		.loc 1 1847 1 is_stmt 0 view .LVU761
 2439 000e 0446     		mov	r4, r0
1862:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2440              		.loc 1 1862 12 view .LVU762
 2441 0010 806E     		ldr	r0, [r0, #104]
 2442              	.LVL143:
1856:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2443              		.loc 1 1856 3 view .LVU763
 2444 0012 22F00102 		bic	r2, r2, #1
 2445 0016 9A60     		str	r2, [r3, #8]
1862:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2446              		.loc 1 1862 3 is_stmt 1 view .LVU764
1862:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2447              		.loc 1 1862 6 is_stmt 0 view .LVU765
 2448 0018 28B1     		cbz	r0, .L247
1866:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2449              		.loc 1 1866 5 is_stmt 1 view .LVU766
1866:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2450              		.loc 1 1866 9 is_stmt 0 view .LVU767
 2451 001a 9A68     		ldr	r2, [r3, #8]
1866:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2452              		.loc 1 1866 8 view .LVU768
 2453 001c 12F08002 		ands	r2, r2, #128
1868:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2454              		.loc 1 1868 7 is_stmt 1 view .LVU769
1868:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2455              		.loc 1 1868 40 is_stmt 0 view .LVU770
 2456 0020 18BF     		it	ne
 2457 0022 254A     		ldrne	r2, .L276
1872:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2458              		.loc 1 1872 7 is_stmt 1 view .LVU771
1872:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2459              		.loc 1 1872 40 is_stmt 0 view .LVU772
 2460 0024 8263     		str	r2, [r0, #56]
 2461              	.L247:
1876:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2462              		.loc 1 1876 3 is_stmt 1 view .LVU773
1876:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2463              		.loc 1 1876 12 is_stmt 0 view .LVU774
 2464 0026 E16E     		ldr	r1, [r4, #108]
1876:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2465              		.loc 1 1876 6 view .LVU775
 2466 0028 29B1     		cbz	r1, .L249
1880:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2467              		.loc 1 1880 5 is_stmt 1 view .LVU776
1880:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2468              		.loc 1 1880 9 is_stmt 0 view .LVU777
 2469 002a 9A68     		ldr	r2, [r3, #8]
1880:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2470              		.loc 1 1880 8 view .LVU778
 2471 002c 12F04002 		ands	r2, r2, #64
1882:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2472              		.loc 1 1882 7 is_stmt 1 view .LVU779
1882:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2473              		.loc 1 1882 40 is_stmt 0 view .LVU780
 2474 0030 18BF     		it	ne
 2475 0032 224A     		ldrne	r2, .L276+4
1886:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2476              		.loc 1 1886 7 is_stmt 1 view .LVU781
1886:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 2477              		.loc 1 1886 40 is_stmt 0 view .LVU782
 2478 0034 8A63     		str	r2, [r1, #56]
 2479              	.L249:
1891:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2480              		.loc 1 1891 3 is_stmt 1 view .LVU783
1891:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2481              		.loc 1 1891 7 is_stmt 0 view .LVU784
 2482 0036 9A68     		ldr	r2, [r3, #8]
1891:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2483              		.loc 1 1891 6 view .LVU785
 2484 0038 1206     		lsls	r2, r2, #24
 2485 003a 29D4     		bmi	.L251
 2486              	.L275:
1848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2487              		.loc 1 1848 12 view .LVU786
 2488 003c 0123     		movs	r3, #1
 2489              	.L252:
 2490              	.LVL144:
1915:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2491              		.loc 1 1915 3 is_stmt 1 view .LVU787
1915:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2492              		.loc 1 1915 7 is_stmt 0 view .LVU788
 2493 003e 2268     		ldr	r2, [r4]
 2494 0040 9168     		ldr	r1, [r2, #8]
1915:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2495              		.loc 1 1915 6 view .LVU789
 2496 0042 4906     		lsls	r1, r1, #25
 2497 0044 33D5     		bpl	.L254
1917:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2498              		.loc 1 1917 5 is_stmt 1 view .LVU790
 2499 0046 9168     		ldr	r1, [r2, #8]
1920:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2500              		.loc 1 1920 14 is_stmt 0 view .LVU791
 2501 0048 E06E     		ldr	r0, [r4, #108]
1917:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2502              		.loc 1 1917 5 view .LVU792
 2503 004a 21F04001 		bic	r1, r1, #64
 2504 004e 9160     		str	r1, [r2, #8]
1920:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2505              		.loc 1 1920 5 is_stmt 1 view .LVU793
1920:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2506              		.loc 1 1920 8 is_stmt 0 view .LVU794
 2507 0050 68B3     		cbz	r0, .L254
1926:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2508              		.loc 1 1926 7 is_stmt 1 view .LVU795
1926:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2509              		.loc 1 1926 11 is_stmt 0 view .LVU796
 2510 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2511              	.LVL145:
1926:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2512              		.loc 1 1926 10 view .LVU797
 2513 0056 60B3     		cbz	r0, .L256
1928:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 2514              		.loc 1 1928 9 is_stmt 1 view .LVU798
1928:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 2515              		.loc 1 1928 42 is_stmt 0 view .LVU799
 2516 0058 E36E     		ldr	r3, [r4, #108]
 2517 005a 0022     		movs	r2, #0
 2518 005c 9A63     		str	r2, [r3, #56]
1929:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2519              		.loc 1 1929 9 is_stmt 1 view .LVU800
 2520              	.LVL146:
1939:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2521              		.loc 1 1939 3 view .LVU801
 2522              	.L257:
1942:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2523              		.loc 1 1942 5 view .LVU802
1942:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2524              		.loc 1 1942 24 is_stmt 0 view .LVU803
 2525 005e 0023     		movs	r3, #0
1953:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2526              		.loc 1 1953 5 view .LVU804
 2527 0060 2268     		ldr	r2, [r4]
1942:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2528              		.loc 1 1942 24 view .LVU805
 2529 0062 A4F85230 		strh	r3, [r4, #82]	@ movhi
1943:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2530              		.loc 1 1943 5 is_stmt 1 view .LVU806
1947:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2531              		.loc 1 1947 18 is_stmt 0 view .LVU807
 2532 0066 C4E91833 		strd	r3, r3, [r4, #96]
1943:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2533              		.loc 1 1943 24 view .LVU808
 2534 006a A4F85A30 		strh	r3, [r4, #90]	@ movhi
1946:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 2535              		.loc 1 1946 5 is_stmt 1 view .LVU809
1950:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2536              		.loc 1 1950 5 view .LVU810
1950:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2537              		.loc 1 1950 22 is_stmt 0 view .LVU811
 2538 006e 6367     		str	r3, [r4, #116]
1953:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2539              		.loc 1 1953 5 is_stmt 1 view .LVU812
 2540 0070 0F23     		movs	r3, #15
 2541 0072 1362     		str	r3, [r2, #32]
1964:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2542              		.loc 1 1964 5 view .LVU813
 2543 0074 138B     		ldrh	r3, [r2, #24]
 2544 0076 9BB2     		uxth	r3, r3
 2545 0078 43F00803 		orr	r3, r3, #8
 2546 007c 1383     		strh	r3, [r2, #24]	@ movhi
1967:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2547              		.loc 1 1967 5 view .LVU814
1967:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2548              		.loc 1 1967 20 is_stmt 0 view .LVU815
 2549 007e 2023     		movs	r3, #32
 2550 0080 84F87130 		strb	r3, [r4, #113]
1968:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2551              		.loc 1 1968 5 is_stmt 1 view .LVU816
1976:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2552              		.loc 1 1976 5 is_stmt 0 view .LVU817
 2553 0084 2046     		mov	r0, r4
1968:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2554              		.loc 1 1968 20 view .LVU818
 2555 0086 84F87230 		strb	r3, [r4, #114]
1976:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2556              		.loc 1 1976 5 is_stmt 1 view .LVU819
 2557 008a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2558              	.LVL147:
 2559 008e 10E0     		b	.L256
 2560              	.LVL148:
 2561              	.L251:
1894:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2562              		.loc 1 1894 5 view .LVU820
 2563 0090 9A68     		ldr	r2, [r3, #8]
 2564 0092 22F08002 		bic	r2, r2, #128
 2565 0096 9A60     		str	r2, [r3, #8]
1897:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2566              		.loc 1 1897 5 view .LVU821
1897:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2567              		.loc 1 1897 8 is_stmt 0 view .LVU822
 2568 0098 0028     		cmp	r0, #0
 2569 009a CFD0     		beq	.L275
1903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2570              		.loc 1 1903 7 is_stmt 1 view .LVU823
1903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2571              		.loc 1 1903 11 is_stmt 0 view .LVU824
 2572 009c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2573              	.LVL149:
1903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2574              		.loc 1 1903 10 view .LVU825
 2575 00a0 0346     		mov	r3, r0
 2576 00a2 0028     		cmp	r0, #0
 2577 00a4 CBD0     		beq	.L252
1905:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2578              		.loc 1 1905 9 is_stmt 1 view .LVU826
1905:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2579              		.loc 1 1905 42 is_stmt 0 view .LVU827
 2580 00a6 A36E     		ldr	r3, [r4, #104]
 2581 00a8 0022     		movs	r2, #0
 2582 00aa 9A63     		str	r2, [r3, #56]
 2583 00ac C6E7     		b	.L275
 2584              	.LVL150:
 2585              	.L254:
1939:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2586              		.loc 1 1939 3 is_stmt 1 view .LVU828
1939:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2587              		.loc 1 1939 6 is_stmt 0 view .LVU829
 2588 00ae 002B     		cmp	r3, #0
 2589 00b0 D5D1     		bne	.L257
 2590              	.LVL151:
 2591              	.L256:
1980:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 2592              		.loc 1 1980 3 is_stmt 1 view .LVU830
1981:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2593              		.loc 1 1981 1 is_stmt 0 view .LVU831
 2594 00b2 0020     		movs	r0, #0
 2595 00b4 10BD     		pop	{r4, pc}
 2596              	.LVL152:
 2597              	.L277:
1981:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2598              		.loc 1 1981 1 view .LVU832
 2599 00b6 00BF     		.align	2
 2600              	.L276:
 2601 00b8 00000000 		.word	UART_DMATxAbortCallback
 2602 00bc 00000000 		.word	UART_DMARxAbortCallback
 2603              		.cfi_endproc
 2604              	.LFE328:
 2606              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2607              		.align	1
 2608              		.syntax unified
 2609              		.thumb
 2610              		.thumb_func
 2611              		.fpu softvfp
 2613              	UART_DMARxAbortCallback:
 2614              	.LVL153:
 2615              	.LFB362:
3538:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2616              		.loc 1 3538 1 is_stmt 1 view -0
 2617              		.cfi_startproc
 2618              		@ args = 0, pretend = 0, frame = 0
 2619              		@ frame_needed = 0, uses_anonymous_args = 0
3539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2620              		.loc 1 3539 3 view .LVU834
3539:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2621              		.loc 1 3539 23 is_stmt 0 view .LVU835
 2622 0000 806A     		ldr	r0, [r0, #40]
 2623              	.LVL154:
3541:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2624              		.loc 1 3541 3 is_stmt 1 view .LVU836
3541:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2625              		.loc 1 3541 36 is_stmt 0 view .LVU837
 2626 0002 C26E     		ldr	r2, [r0, #108]
3538:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2627              		.loc 1 3538 1 view .LVU838
 2628 0004 08B5     		push	{r3, lr}
 2629              	.LCFI22:
 2630              		.cfi_def_cfa_offset 8
 2631              		.cfi_offset 3, -8
 2632              		.cfi_offset 14, -4
3541:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2633              		.loc 1 3541 36 view .LVU839
 2634 0006 0023     		movs	r3, #0
 2635 0008 9363     		str	r3, [r2, #56]
3544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2636              		.loc 1 3544 3 is_stmt 1 view .LVU840
3544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2637              		.loc 1 3544 12 is_stmt 0 view .LVU841
 2638 000a 826E     		ldr	r2, [r0, #104]
3544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2639              		.loc 1 3544 6 view .LVU842
 2640 000c 0AB1     		cbz	r2, .L279
3546:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2641              		.loc 1 3546 5 is_stmt 1 view .LVU843
3546:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2642              		.loc 1 3546 8 is_stmt 0 view .LVU844
 2643 000e 926B     		ldr	r2, [r2, #56]
 2644 0010 9AB9     		cbnz	r2, .L278
 2645              	.L279:
3553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2646              		.loc 1 3553 3 is_stmt 1 view .LVU845
3560:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2647              		.loc 1 3560 3 is_stmt 0 view .LVU846
 2648 0012 0268     		ldr	r2, [r0]
3553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2649              		.loc 1 3553 22 view .LVU847
 2650 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
3554:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2651              		.loc 1 3554 3 is_stmt 1 view .LVU848
3554:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2652              		.loc 1 3554 22 is_stmt 0 view .LVU849
 2653 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2654              		.loc 1 3557 3 is_stmt 1 view .LVU850
3557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2655              		.loc 1 3557 20 is_stmt 0 view .LVU851
 2656 001c 4367     		str	r3, [r0, #116]
3560:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2657              		.loc 1 3560 3 is_stmt 1 view .LVU852
 2658 001e 0F23     		movs	r3, #15
 2659 0020 1362     		str	r3, [r2, #32]
3563:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2660              		.loc 1 3563 3 view .LVU853
 2661 0022 138B     		ldrh	r3, [r2, #24]
 2662 0024 9BB2     		uxth	r3, r3
 2663 0026 43F00803 		orr	r3, r3, #8
 2664 002a 1383     		strh	r3, [r2, #24]	@ movhi
3566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2665              		.loc 1 3566 3 view .LVU854
3566:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2666              		.loc 1 3566 18 is_stmt 0 view .LVU855
 2667 002c 2023     		movs	r3, #32
 2668 002e 80F87130 		strb	r3, [r0, #113]
3567:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2669              		.loc 1 3567 3 is_stmt 1 view .LVU856
3567:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2670              		.loc 1 3567 18 is_stmt 0 view .LVU857
 2671 0032 80F87230 		strb	r3, [r0, #114]
3575:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2672              		.loc 1 3575 3 is_stmt 1 view .LVU858
 2673 0036 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2674              	.LVL155:
 2675              	.L278:
3577:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2676              		.loc 1 3577 1 is_stmt 0 view .LVU859
 2677 003a 08BD     		pop	{r3, pc}
 2678              		.cfi_endproc
 2679              	.LFE362:
 2681              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2682              		.align	1
 2683              		.syntax unified
 2684              		.thumb
 2685              		.thumb_func
 2686              		.fpu softvfp
 2688              	UART_DMATxAbortCallback:
 2689              	.LVL156:
 2690              	.LFB361:
3482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2691              		.loc 1 3482 1 is_stmt 1 view -0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 0
 2694              		@ frame_needed = 0, uses_anonymous_args = 0
3483:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2695              		.loc 1 3483 3 view .LVU861
3483:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2696              		.loc 1 3483 23 is_stmt 0 view .LVU862
 2697 0000 806A     		ldr	r0, [r0, #40]
 2698              	.LVL157:
3485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2699              		.loc 1 3485 3 is_stmt 1 view .LVU863
3485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2700              		.loc 1 3485 36 is_stmt 0 view .LVU864
 2701 0002 826E     		ldr	r2, [r0, #104]
3482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2702              		.loc 1 3482 1 view .LVU865
 2703 0004 08B5     		push	{r3, lr}
 2704              	.LCFI23:
 2705              		.cfi_def_cfa_offset 8
 2706              		.cfi_offset 3, -8
 2707              		.cfi_offset 14, -4
3485:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2708              		.loc 1 3485 36 view .LVU866
 2709 0006 0023     		movs	r3, #0
 2710 0008 9363     		str	r3, [r2, #56]
3488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2711              		.loc 1 3488 3 is_stmt 1 view .LVU867
3488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2712              		.loc 1 3488 12 is_stmt 0 view .LVU868
 2713 000a C26E     		ldr	r2, [r0, #108]
3488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2714              		.loc 1 3488 6 view .LVU869
 2715 000c 0AB1     		cbz	r2, .L285
3490:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2716              		.loc 1 3490 5 is_stmt 1 view .LVU870
3490:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2717              		.loc 1 3490 8 is_stmt 0 view .LVU871
 2718 000e 926B     		ldr	r2, [r2, #56]
 2719 0010 72B9     		cbnz	r2, .L284
 2720              	.L285:
3497:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2721              		.loc 1 3497 3 is_stmt 1 view .LVU872
3497:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2722              		.loc 1 3497 22 is_stmt 0 view .LVU873
 2723 0012 A0F85230 		strh	r3, [r0, #82]	@ movhi
3498:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2724              		.loc 1 3498 3 is_stmt 1 view .LVU874
3498:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2725              		.loc 1 3498 22 is_stmt 0 view .LVU875
 2726 0016 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3501:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2727              		.loc 1 3501 3 is_stmt 1 view .LVU876
3501:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2728              		.loc 1 3501 20 is_stmt 0 view .LVU877
 2729 001a 4367     		str	r3, [r0, #116]
3504:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2730              		.loc 1 3504 3 is_stmt 1 view .LVU878
 2731 001c 0368     		ldr	r3, [r0]
 2732 001e 0F22     		movs	r2, #15
 2733 0020 1A62     		str	r2, [r3, #32]
3515:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2734              		.loc 1 3515 3 view .LVU879
3515:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2735              		.loc 1 3515 18 is_stmt 0 view .LVU880
 2736 0022 2023     		movs	r3, #32
 2737 0024 80F87130 		strb	r3, [r0, #113]
3516:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2738              		.loc 1 3516 3 is_stmt 1 view .LVU881
3516:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2739              		.loc 1 3516 18 is_stmt 0 view .LVU882
 2740 0028 80F87230 		strb	r3, [r0, #114]
3524:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2741              		.loc 1 3524 3 is_stmt 1 view .LVU883
 2742 002c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2743              	.LVL158:
 2744              	.L284:
3526:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2745              		.loc 1 3526 1 is_stmt 0 view .LVU884
 2746 0030 08BD     		pop	{r3, pc}
 2747              		.cfi_endproc
 2748              	.LFE361:
 2750              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2751              		.align	1
 2752              		.weak	HAL_UART_AbortTransmitCpltCallback
 2753              		.syntax unified
 2754              		.thumb
 2755              		.thumb_func
 2756              		.fpu softvfp
 2758              	HAL_UART_AbortTransmitCpltCallback:
 2759              	.LFB390:
 2760              		.cfi_startproc
 2761              		@ args = 0, pretend = 0, frame = 0
 2762              		@ frame_needed = 0, uses_anonymous_args = 0
 2763              		@ link register save eliminated.
 2764 0000 7047     		bx	lr
 2765              		.cfi_endproc
 2766              	.LFE390:
 2768              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2769              		.align	1
 2770              		.global	HAL_UART_AbortTransmit_IT
 2771              		.syntax unified
 2772              		.thumb
 2773              		.thumb_func
 2774              		.fpu softvfp
 2776              	HAL_UART_AbortTransmit_IT:
 2777              	.LVL159:
 2778              	.LFB329:
1998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 2779              		.loc 1 1998 1 is_stmt 1 view -0
 2780              		.cfi_startproc
 2781              		@ args = 0, pretend = 0, frame = 0
 2782              		@ frame_needed = 0, uses_anonymous_args = 0
2004:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2783              		.loc 1 2004 3 view .LVU886
 2784 0000 0268     		ldr	r2, [r0]
 2785 0002 1368     		ldr	r3, [r2]
 2786 0004 23F0C003 		bic	r3, r3, #192
1998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 2787              		.loc 1 1998 1 is_stmt 0 view .LVU887
 2788 0008 10B5     		push	{r4, lr}
 2789              	.LCFI24:
 2790              		.cfi_def_cfa_offset 8
 2791              		.cfi_offset 4, -8
 2792              		.cfi_offset 14, -4
2004:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2793              		.loc 1 2004 3 view .LVU888
 2794 000a 1360     		str	r3, [r2]
2008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2795              		.loc 1 2008 3 is_stmt 1 view .LVU889
2008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2796              		.loc 1 2008 7 is_stmt 0 view .LVU890
 2797 000c 9368     		ldr	r3, [r2, #8]
2008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2798              		.loc 1 2008 6 view .LVU891
 2799 000e 13F08003 		ands	r3, r3, #128
1998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 2800              		.loc 1 1998 1 view .LVU892
 2801 0012 0446     		mov	r4, r0
2008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2802              		.loc 1 2008 6 view .LVU893
 2803 0014 10D0     		beq	.L292
2010:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2804              		.loc 1 2010 5 is_stmt 1 view .LVU894
 2805 0016 9368     		ldr	r3, [r2, #8]
 2806 0018 23F08003 		bic	r3, r3, #128
 2807 001c 9360     		str	r3, [r2, #8]
2013:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2808              		.loc 1 2013 5 view .LVU895
2013:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2809              		.loc 1 2013 14 is_stmt 0 view .LVU896
 2810 001e 836E     		ldr	r3, [r0, #104]
2013:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2811              		.loc 1 2013 8 view .LVU897
 2812 0020 53B1     		cbz	r3, .L292
2017:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2813              		.loc 1 2017 7 is_stmt 1 view .LVU898
2017:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2814              		.loc 1 2017 40 is_stmt 0 view .LVU899
 2815 0022 0A4A     		ldr	r2, .L298
 2816 0024 9A63     		str	r2, [r3, #56]
2020:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2817              		.loc 1 2020 7 is_stmt 1 view .LVU900
2020:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2818              		.loc 1 2020 11 is_stmt 0 view .LVU901
 2819 0026 1846     		mov	r0, r3
 2820              	.LVL160:
2020:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2821              		.loc 1 2020 11 view .LVU902
 2822 0028 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2823              	.LVL161:
2020:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2824              		.loc 1 2020 10 view .LVU903
 2825 002c 10B1     		cbz	r0, .L294
2023:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2826              		.loc 1 2023 9 is_stmt 1 view .LVU904
2023:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2827              		.loc 1 2023 14 is_stmt 0 view .LVU905
 2828 002e A06E     		ldr	r0, [r4, #104]
2023:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2829              		.loc 1 2023 9 view .LVU906
 2830 0030 836B     		ldr	r3, [r0, #56]
 2831 0032 9847     		blx	r3
 2832              	.LVL162:
 2833              	.L294:
2076:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 2834              		.loc 1 2076 3 is_stmt 1 view .LVU907
2077:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2835              		.loc 1 2077 1 is_stmt 0 view .LVU908
 2836 0034 0020     		movs	r0, #0
 2837 0036 10BD     		pop	{r4, pc}
 2838              	.LVL163:
 2839              	.L292:
2050:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2840              		.loc 1 2050 5 is_stmt 1 view .LVU909
2050:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2841              		.loc 1 2050 24 is_stmt 0 view .LVU910
 2842 0038 A4F85230 		strh	r3, [r4, #82]	@ movhi
2053:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2843              		.loc 1 2053 5 is_stmt 1 view .LVU911
2053:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2844              		.loc 1 2053 18 is_stmt 0 view .LVU912
 2845 003c 6366     		str	r3, [r4, #100]
2064:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2846              		.loc 1 2064 5 is_stmt 1 view .LVU913
2064:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2847              		.loc 1 2064 19 is_stmt 0 view .LVU914
 2848 003e 2023     		movs	r3, #32
 2849 0040 84F87130 		strb	r3, [r4, #113]
2072:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2850              		.loc 1 2072 5 is_stmt 1 view .LVU915
 2851 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2852              	.LVL164:
2072:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2853              		.loc 1 2072 5 is_stmt 0 view .LVU916
 2854 0048 F4E7     		b	.L294
 2855              	.L299:
 2856 004a 00BF     		.align	2
 2857              	.L298:
 2858 004c 00000000 		.word	UART_DMATxOnlyAbortCallback
 2859              		.cfi_endproc
 2860              	.LFE329:
 2862              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2863              		.align	1
 2864              		.syntax unified
 2865              		.thumb
 2866              		.thumb_func
 2867              		.fpu softvfp
 2869              	UART_DMATxOnlyAbortCallback:
 2870              	.LVL165:
 2871              	.LFB363:
3589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2872              		.loc 1 3589 1 is_stmt 1 view -0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 0
 2875              		@ frame_needed = 0, uses_anonymous_args = 0
3590:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2876              		.loc 1 3590 3 view .LVU918
3589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2877              		.loc 1 3589 1 is_stmt 0 view .LVU919
 2878 0000 08B5     		push	{r3, lr}
 2879              	.LCFI25:
 2880              		.cfi_def_cfa_offset 8
 2881              		.cfi_offset 3, -8
 2882              		.cfi_offset 14, -4
3590:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2883              		.loc 1 3590 23 view .LVU920
 2884 0002 806A     		ldr	r0, [r0, #40]
 2885              	.LVL166:
3592:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2886              		.loc 1 3592 3 is_stmt 1 view .LVU921
3592:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2887              		.loc 1 3592 22 is_stmt 0 view .LVU922
 2888 0004 0023     		movs	r3, #0
 2889 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
3603:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2890              		.loc 1 3603 3 is_stmt 1 view .LVU923
3603:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2891              		.loc 1 3603 17 is_stmt 0 view .LVU924
 2892 000a 2023     		movs	r3, #32
 2893 000c 80F87130 		strb	r3, [r0, #113]
3611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2894              		.loc 1 3611 3 is_stmt 1 view .LVU925
 2895 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2896              	.LVL167:
3613:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2897              		.loc 1 3613 1 is_stmt 0 view .LVU926
 2898 0014 08BD     		pop	{r3, pc}
 2899              		.cfi_endproc
 2900              	.LFE363:
 2902              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2903              		.align	1
 2904              		.weak	HAL_UART_AbortReceiveCpltCallback
 2905              		.syntax unified
 2906              		.thumb
 2907              		.thumb_func
 2908              		.fpu softvfp
 2910              	HAL_UART_AbortReceiveCpltCallback:
 2911              	.LFB392:
 2912              		.cfi_startproc
 2913              		@ args = 0, pretend = 0, frame = 0
 2914              		@ frame_needed = 0, uses_anonymous_args = 0
 2915              		@ link register save eliminated.
 2916 0000 7047     		bx	lr
 2917              		.cfi_endproc
 2918              	.LFE392:
 2920              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2921              		.align	1
 2922              		.global	HAL_UART_AbortReceive_IT
 2923              		.syntax unified
 2924              		.thumb
 2925              		.thumb_func
 2926              		.fpu softvfp
 2928              	HAL_UART_AbortReceive_IT:
 2929              	.LVL168:
 2930              	.LFB330:
2094:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2931              		.loc 1 2094 1 is_stmt 1 view -0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 0
 2934              		@ frame_needed = 0, uses_anonymous_args = 0
2100:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2935              		.loc 1 2100 3 view .LVU928
 2936 0000 0368     		ldr	r3, [r0]
 2937 0002 1A68     		ldr	r2, [r3]
 2938 0004 22F49072 		bic	r2, r2, #288
2094:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2939              		.loc 1 2094 1 is_stmt 0 view .LVU929
 2940 0008 10B5     		push	{r4, lr}
 2941              	.LCFI26:
 2942              		.cfi_def_cfa_offset 8
 2943              		.cfi_offset 4, -8
 2944              		.cfi_offset 14, -4
2100:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2945              		.loc 1 2100 3 view .LVU930
 2946 000a 1A60     		str	r2, [r3]
2101:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 2947              		.loc 1 2101 3 is_stmt 1 view .LVU931
 2948 000c 9A68     		ldr	r2, [r3, #8]
 2949 000e 22F00102 		bic	r2, r2, #1
 2950 0012 9A60     		str	r2, [r3, #8]
2105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2951              		.loc 1 2105 3 view .LVU932
2105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2952              		.loc 1 2105 7 is_stmt 0 view .LVU933
 2953 0014 9A68     		ldr	r2, [r3, #8]
2105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2954              		.loc 1 2105 6 view .LVU934
 2955 0016 12F04002 		ands	r2, r2, #64
2094:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2956              		.loc 1 2094 1 view .LVU935
 2957 001a 0446     		mov	r4, r0
2105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 2958              		.loc 1 2105 6 view .LVU936
 2959 001c 20D0     		beq	.L303
2107:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2960              		.loc 1 2107 5 is_stmt 1 view .LVU937
 2961 001e 9A68     		ldr	r2, [r3, #8]
 2962 0020 22F04002 		bic	r2, r2, #64
 2963 0024 9A60     		str	r2, [r3, #8]
2110:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2964              		.loc 1 2110 5 view .LVU938
2110:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2965              		.loc 1 2110 14 is_stmt 0 view .LVU939
 2966 0026 C26E     		ldr	r2, [r0, #108]
2110:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 2967              		.loc 1 2110 8 view .LVU940
 2968 0028 52B1     		cbz	r2, .L304
2114:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2969              		.loc 1 2114 7 is_stmt 1 view .LVU941
2114:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2970              		.loc 1 2114 40 is_stmt 0 view .LVU942
 2971 002a 104B     		ldr	r3, .L310
 2972 002c 9363     		str	r3, [r2, #56]
2117:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2973              		.loc 1 2117 7 is_stmt 1 view .LVU943
2117:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2974              		.loc 1 2117 11 is_stmt 0 view .LVU944
 2975 002e 1046     		mov	r0, r2
 2976              	.LVL169:
2117:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2977              		.loc 1 2117 11 view .LVU945
 2978 0030 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2979              	.LVL170:
2117:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 2980              		.loc 1 2117 10 view .LVU946
 2981 0034 10B1     		cbz	r0, .L305
2120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2982              		.loc 1 2120 9 is_stmt 1 view .LVU947
2120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2983              		.loc 1 2120 14 is_stmt 0 view .LVU948
 2984 0036 E06E     		ldr	r0, [r4, #108]
2120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 2985              		.loc 1 2120 9 view .LVU949
 2986 0038 836B     		ldr	r3, [r0, #56]
 2987 003a 9847     		blx	r3
 2988              	.LVL171:
 2989              	.L305:
2174:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 2990              		.loc 1 2174 3 is_stmt 1 view .LVU950
2175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2991              		.loc 1 2175 1 is_stmt 0 view .LVU951
 2992 003c 0020     		movs	r0, #0
 2993 003e 10BD     		pop	{r4, pc}
 2994              	.LVL172:
 2995              	.L304:
2126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2996              		.loc 1 2126 7 is_stmt 1 view .LVU952
2126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2997              		.loc 1 2126 26 is_stmt 0 view .LVU953
 2998 0040 A0F85A20 		strh	r2, [r0, #90]	@ movhi
2129:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 2999              		.loc 1 2129 7 is_stmt 1 view .LVU954
2129:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3000              		.loc 1 2129 25 is_stmt 0 view .LVU955
 3001 0044 4265     		str	r2, [r0, #84]
2132:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3002              		.loc 1 2132 7 is_stmt 1 view .LVU956
 3003 0046 0F22     		movs	r2, #15
 3004 0048 1A62     		str	r2, [r3, #32]
2135:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3005              		.loc 1 2135 7 view .LVU957
 3006 004a 1A8B     		ldrh	r2, [r3, #24]
 3007 004c 92B2     		uxth	r2, r2
 3008 004e 42F00802 		orr	r2, r2, #8
 3009 0052 1A83     		strh	r2, [r3, #24]	@ movhi
2138:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3010              		.loc 1 2138 7 view .LVU958
 3011              	.L309:
2162:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3012              		.loc 1 2162 5 view .LVU959
2162:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3013              		.loc 1 2162 20 is_stmt 0 view .LVU960
 3014 0054 2023     		movs	r3, #32
 3015 0056 84F87230 		strb	r3, [r4, #114]
2170:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3016              		.loc 1 2170 5 is_stmt 1 view .LVU961
 3017 005a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3018              	.LVL173:
2170:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3019              		.loc 1 2170 5 is_stmt 0 view .LVU962
 3020 005e EDE7     		b	.L305
 3021              	.LVL174:
 3022              	.L303:
2153:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3023              		.loc 1 2153 5 is_stmt 1 view .LVU963
2153:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3024              		.loc 1 2153 24 is_stmt 0 view .LVU964
 3025 0060 A0F85A20 		strh	r2, [r0, #90]	@ movhi
2156:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3026              		.loc 1 2156 5 is_stmt 1 view .LVU965
2156:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3027              		.loc 1 2156 23 is_stmt 0 view .LVU966
 3028 0064 4265     		str	r2, [r0, #84]
2159:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3029              		.loc 1 2159 5 is_stmt 1 view .LVU967
 3030 0066 0F22     		movs	r2, #15
 3031 0068 1A62     		str	r2, [r3, #32]
 3032 006a F3E7     		b	.L309
 3033              	.L311:
 3034              		.align	2
 3035              	.L310:
 3036 006c 00000000 		.word	UART_DMARxOnlyAbortCallback
 3037              		.cfi_endproc
 3038              	.LFE330:
 3040              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3041              		.align	1
 3042              		.syntax unified
 3043              		.thumb
 3044              		.thumb_func
 3045              		.fpu softvfp
 3047              	UART_DMARxOnlyAbortCallback:
 3048              	.LVL175:
 3049              	.LFB364:
3624:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3050              		.loc 1 3624 1 view -0
 3051              		.cfi_startproc
 3052              		@ args = 0, pretend = 0, frame = 0
 3053              		@ frame_needed = 0, uses_anonymous_args = 0
3625:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3054              		.loc 1 3625 3 view .LVU969
3625:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3055              		.loc 1 3625 23 is_stmt 0 view .LVU970
 3056 0000 806A     		ldr	r0, [r0, #40]
 3057              	.LVL176:
3627:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3058              		.loc 1 3627 3 is_stmt 1 view .LVU971
3624:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3059              		.loc 1 3624 1 is_stmt 0 view .LVU972
 3060 0002 08B5     		push	{r3, lr}
 3061              	.LCFI27:
 3062              		.cfi_def_cfa_offset 8
 3063              		.cfi_offset 3, -8
 3064              		.cfi_offset 14, -4
3630:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3065              		.loc 1 3630 3 view .LVU973
 3066 0004 0268     		ldr	r2, [r0]
3627:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3067              		.loc 1 3627 22 view .LVU974
 3068 0006 0023     		movs	r3, #0
 3069 0008 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3630:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3070              		.loc 1 3630 3 is_stmt 1 view .LVU975
 3071 000c 0F23     		movs	r3, #15
 3072 000e 1362     		str	r3, [r2, #32]
3633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3073              		.loc 1 3633 3 view .LVU976
 3074 0010 138B     		ldrh	r3, [r2, #24]
 3075 0012 9BB2     		uxth	r3, r3
 3076 0014 43F00803 		orr	r3, r3, #8
 3077 0018 1383     		strh	r3, [r2, #24]	@ movhi
3636:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3078              		.loc 1 3636 3 view .LVU977
3636:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3079              		.loc 1 3636 18 is_stmt 0 view .LVU978
 3080 001a 2023     		movs	r3, #32
 3081 001c 80F87230 		strb	r3, [r0, #114]
3644:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3082              		.loc 1 3644 3 is_stmt 1 view .LVU979
 3083 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3084              	.LVL177:
3646:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3085              		.loc 1 3646 1 is_stmt 0 view .LVU980
 3086 0024 08BD     		pop	{r3, pc}
 3087              		.cfi_endproc
 3088              	.LFE364:
 3090              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3091              		.align	1
 3092              		.global	HAL_MultiProcessor_EnterMuteMode
 3093              		.syntax unified
 3094              		.thumb
 3095              		.thumb_func
 3096              		.fpu softvfp
 3098              	HAL_MultiProcessor_EnterMuteMode:
 3099              	.LVL178:
 3100              	.LFB342:
2621:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3101              		.loc 1 2621 1 is_stmt 1 view -0
 3102              		.cfi_startproc
 3103              		@ args = 0, pretend = 0, frame = 0
 3104              		@ frame_needed = 0, uses_anonymous_args = 0
 3105              		@ link register save eliminated.
2622:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3106              		.loc 1 2622 3 view .LVU982
 3107 0000 0268     		ldr	r2, [r0]
 3108 0002 138B     		ldrh	r3, [r2, #24]
 3109 0004 9BB2     		uxth	r3, r3
 3110 0006 43F00403 		orr	r3, r3, #4
 3111 000a 1383     		strh	r3, [r2, #24]	@ movhi
2623:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3112              		.loc 1 2623 1 is_stmt 0 view .LVU983
 3113 000c 7047     		bx	lr
 3114              		.cfi_endproc
 3115              	.LFE342:
 3117              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3118              		.align	1
 3119              		.global	HAL_HalfDuplex_EnableTransmitter
 3120              		.syntax unified
 3121              		.thumb
 3122              		.thumb_func
 3123              		.fpu softvfp
 3125              	HAL_HalfDuplex_EnableTransmitter:
 3126              	.LVL179:
 3127              	.LFB343:
2631:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 3128              		.loc 1 2631 1 is_stmt 1 view -0
 3129              		.cfi_startproc
 3130              		@ args = 0, pretend = 0, frame = 0
 3131              		@ frame_needed = 0, uses_anonymous_args = 0
 3132              		@ link register save eliminated.
2633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3133              		.loc 1 2633 3 view .LVU985
2633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3134              		.loc 1 2633 3 view .LVU986
 3135 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3136 0004 012B     		cmp	r3, #1
 3137 0006 13D0     		beq	.L316
2633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3138              		.loc 1 2633 3 discriminator 2 view .LVU987
2633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3139              		.loc 1 2633 3 discriminator 2 view .LVU988
2634:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3140              		.loc 1 2634 3 discriminator 2 view .LVU989
2634:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3141              		.loc 1 2634 17 is_stmt 0 discriminator 2 view .LVU990
 3142 0008 2423     		movs	r3, #36
 3143 000a 80F87130 		strb	r3, [r0, #113]
2637:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3144              		.loc 1 2637 3 is_stmt 1 discriminator 2 view .LVU991
 3145 000e 0368     		ldr	r3, [r0]
 3146 0010 1A68     		ldr	r2, [r3]
 3147 0012 22F00C02 		bic	r2, r2, #12
 3148 0016 1A60     		str	r2, [r3]
2640:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3149              		.loc 1 2640 3 discriminator 2 view .LVU992
 3150 0018 1A68     		ldr	r2, [r3]
 3151 001a 42F00802 		orr	r2, r2, #8
 3152 001e 1A60     		str	r2, [r3]
2642:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3153              		.loc 1 2642 3 discriminator 2 view .LVU993
2642:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3154              		.loc 1 2642 17 is_stmt 0 discriminator 2 view .LVU994
 3155 0020 2023     		movs	r3, #32
 3156 0022 80F87130 		strb	r3, [r0, #113]
2645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3157              		.loc 1 2645 3 is_stmt 1 discriminator 2 view .LVU995
2645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3158              		.loc 1 2645 3 discriminator 2 view .LVU996
 3159 0026 0023     		movs	r3, #0
 3160 0028 80F87030 		strb	r3, [r0, #112]
2645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3161              		.loc 1 2645 3 discriminator 2 view .LVU997
2647:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3162              		.loc 1 2647 3 discriminator 2 view .LVU998
2647:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3163              		.loc 1 2647 10 is_stmt 0 discriminator 2 view .LVU999
 3164 002c 1846     		mov	r0, r3
 3165              	.LVL180:
2647:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3166              		.loc 1 2647 10 discriminator 2 view .LVU1000
 3167 002e 7047     		bx	lr
 3168              	.LVL181:
 3169              	.L316:
2633:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3170              		.loc 1 2633 3 view .LVU1001
 3171 0030 0220     		movs	r0, #2
 3172              	.LVL182:
2648:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3173              		.loc 1 2648 1 view .LVU1002
 3174 0032 7047     		bx	lr
 3175              		.cfi_endproc
 3176              	.LFE343:
 3178              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3179              		.align	1
 3180              		.global	HAL_HalfDuplex_EnableReceiver
 3181              		.syntax unified
 3182              		.thumb
 3183              		.thumb_func
 3184              		.fpu softvfp
 3186              	HAL_HalfDuplex_EnableReceiver:
 3187              	.LVL183:
 3188              	.LFB344:
2656:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 3189              		.loc 1 2656 1 is_stmt 1 view -0
 3190              		.cfi_startproc
 3191              		@ args = 0, pretend = 0, frame = 0
 3192              		@ frame_needed = 0, uses_anonymous_args = 0
 3193              		@ link register save eliminated.
2658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3194              		.loc 1 2658 3 view .LVU1004
2658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3195              		.loc 1 2658 3 view .LVU1005
 3196 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3197 0004 012B     		cmp	r3, #1
 3198 0006 13D0     		beq	.L319
2658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3199              		.loc 1 2658 3 discriminator 2 view .LVU1006
2658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3200              		.loc 1 2658 3 discriminator 2 view .LVU1007
2659:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3201              		.loc 1 2659 3 discriminator 2 view .LVU1008
2659:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3202              		.loc 1 2659 17 is_stmt 0 discriminator 2 view .LVU1009
 3203 0008 2423     		movs	r3, #36
 3204 000a 80F87130 		strb	r3, [r0, #113]
2662:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3205              		.loc 1 2662 3 is_stmt 1 discriminator 2 view .LVU1010
 3206 000e 0368     		ldr	r3, [r0]
 3207 0010 1A68     		ldr	r2, [r3]
 3208 0012 22F00C02 		bic	r2, r2, #12
 3209 0016 1A60     		str	r2, [r3]
2665:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3210              		.loc 1 2665 3 discriminator 2 view .LVU1011
 3211 0018 1A68     		ldr	r2, [r3]
 3212 001a 42F00402 		orr	r2, r2, #4
 3213 001e 1A60     		str	r2, [r3]
2667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3214              		.loc 1 2667 3 discriminator 2 view .LVU1012
2667:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3215              		.loc 1 2667 17 is_stmt 0 discriminator 2 view .LVU1013
 3216 0020 2023     		movs	r3, #32
 3217 0022 80F87130 		strb	r3, [r0, #113]
2670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3218              		.loc 1 2670 3 is_stmt 1 discriminator 2 view .LVU1014
2670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3219              		.loc 1 2670 3 discriminator 2 view .LVU1015
 3220 0026 0023     		movs	r3, #0
 3221 0028 80F87030 		strb	r3, [r0, #112]
2670:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3222              		.loc 1 2670 3 discriminator 2 view .LVU1016
2672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3223              		.loc 1 2672 3 discriminator 2 view .LVU1017
2672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3224              		.loc 1 2672 10 is_stmt 0 discriminator 2 view .LVU1018
 3225 002c 1846     		mov	r0, r3
 3226              	.LVL184:
2672:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3227              		.loc 1 2672 10 discriminator 2 view .LVU1019
 3228 002e 7047     		bx	lr
 3229              	.LVL185:
 3230              	.L319:
2658:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3231              		.loc 1 2658 3 view .LVU1020
 3232 0030 0220     		movs	r0, #2
 3233              	.LVL186:
2673:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3234              		.loc 1 2673 1 view .LVU1021
 3235 0032 7047     		bx	lr
 3236              		.cfi_endproc
 3237              	.LFE344:
 3239              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3240              		.align	1
 3241              		.global	HAL_LIN_SendBreak
 3242              		.syntax unified
 3243              		.thumb
 3244              		.thumb_func
 3245              		.fpu softvfp
 3247              	HAL_LIN_SendBreak:
 3248              	.LVL187:
 3249              	.LFB345:
2682:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 3250              		.loc 1 2682 1 is_stmt 1 view -0
 3251              		.cfi_startproc
 3252              		@ args = 0, pretend = 0, frame = 0
 3253              		@ frame_needed = 0, uses_anonymous_args = 0
 3254              		@ link register save eliminated.
2684:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3255              		.loc 1 2684 3 view .LVU1023
2687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3256              		.loc 1 2687 3 view .LVU1024
2687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3257              		.loc 1 2687 3 view .LVU1025
 3258 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3259 0004 012B     		cmp	r3, #1
 3260 0006 10D0     		beq	.L322
2687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3261              		.loc 1 2687 3 discriminator 2 view .LVU1026
2687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3262              		.loc 1 2687 3 discriminator 2 view .LVU1027
2689:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3263              		.loc 1 2689 3 discriminator 2 view .LVU1028
2692:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3264              		.loc 1 2692 3 is_stmt 0 discriminator 2 view .LVU1029
 3265 0008 0268     		ldr	r2, [r0]
2689:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3266              		.loc 1 2689 17 discriminator 2 view .LVU1030
 3267 000a 2423     		movs	r3, #36
 3268 000c 80F87130 		strb	r3, [r0, #113]
2692:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3269              		.loc 1 2692 3 is_stmt 1 discriminator 2 view .LVU1031
 3270 0010 138B     		ldrh	r3, [r2, #24]
 3271 0012 9BB2     		uxth	r3, r3
 3272 0014 43F00203 		orr	r3, r3, #2
 3273 0018 1383     		strh	r3, [r2, #24]	@ movhi
2694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3274              		.loc 1 2694 3 discriminator 2 view .LVU1032
2694:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3275              		.loc 1 2694 17 is_stmt 0 discriminator 2 view .LVU1033
 3276 001a 2023     		movs	r3, #32
 3277 001c 80F87130 		strb	r3, [r0, #113]
2697:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3278              		.loc 1 2697 3 is_stmt 1 discriminator 2 view .LVU1034
2697:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3279              		.loc 1 2697 3 discriminator 2 view .LVU1035
 3280 0020 0023     		movs	r3, #0
 3281 0022 80F87030 		strb	r3, [r0, #112]
2697:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3282              		.loc 1 2697 3 discriminator 2 view .LVU1036
2699:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3283              		.loc 1 2699 3 discriminator 2 view .LVU1037
2699:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3284              		.loc 1 2699 10 is_stmt 0 discriminator 2 view .LVU1038
 3285 0026 1846     		mov	r0, r3
 3286              	.LVL188:
2699:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3287              		.loc 1 2699 10 discriminator 2 view .LVU1039
 3288 0028 7047     		bx	lr
 3289              	.LVL189:
 3290              	.L322:
2687:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3291              		.loc 1 2687 3 view .LVU1040
 3292 002a 0220     		movs	r0, #2
 3293              	.LVL190:
2700:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3294              		.loc 1 2700 1 view .LVU1041
 3295 002c 7047     		bx	lr
 3296              		.cfi_endproc
 3297              	.LFE345:
 3299              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3300              		.align	1
 3301              		.global	HAL_UART_GetState
 3302              		.syntax unified
 3303              		.thumb
 3304              		.thumb_func
 3305              		.fpu softvfp
 3307              	HAL_UART_GetState:
 3308              	.LVL191:
 3309              	.LFB346:
2729:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 3310              		.loc 1 2729 1 is_stmt 1 view -0
 3311              		.cfi_startproc
 3312              		@ args = 0, pretend = 0, frame = 0
 3313              		@ frame_needed = 0, uses_anonymous_args = 0
 3314              		@ link register save eliminated.
2730:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
 3315              		.loc 1 2730 3 view .LVU1043
2731:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 3316              		.loc 1 2731 3 view .LVU1044
2731:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 3317              		.loc 1 2731 16 is_stmt 0 view .LVU1045
 3318 0000 90F87120 		ldrb	r2, [r0, #113]	@ zero_extendqisi2
 3319              	.LVL192:
2732:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3320              		.loc 1 2732 3 is_stmt 1 view .LVU1046
2732:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3321              		.loc 1 2732 16 is_stmt 0 view .LVU1047
 3322 0004 90F87200 		ldrb	r0, [r0, #114]	@ zero_extendqisi2
 3323              	.LVL193:
2734:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3324              		.loc 1 2734 3 is_stmt 1 view .LVU1048
2735:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3325              		.loc 1 2735 1 is_stmt 0 view .LVU1049
 3326 0008 1043     		orrs	r0, r0, r2
 3327              	.LVL194:
2735:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3328              		.loc 1 2735 1 view .LVU1050
 3329 000a 7047     		bx	lr
 3330              		.cfi_endproc
 3331              	.LFE346:
 3333              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3334              		.align	1
 3335              		.global	HAL_UART_GetError
 3336              		.syntax unified
 3337              		.thumb
 3338              		.thumb_func
 3339              		.fpu softvfp
 3341              	HAL_UART_GetError:
 3342              	.LVL195:
 3343              	.LFB347:
2744:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 3344              		.loc 1 2744 1 is_stmt 1 view -0
 3345              		.cfi_startproc
 3346              		@ args = 0, pretend = 0, frame = 0
 3347              		@ frame_needed = 0, uses_anonymous_args = 0
 3348              		@ link register save eliminated.
2745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3349              		.loc 1 2745 3 view .LVU1052
2745:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3350              		.loc 1 2745 15 is_stmt 0 view .LVU1053
 3351 0000 406F     		ldr	r0, [r0, #116]
 3352              	.LVL196:
2746:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** /**
 3353              		.loc 1 2746 1 view .LVU1054
 3354 0002 7047     		bx	lr
 3355              		.cfi_endproc
 3356              	.LFE347:
 3358              		.global	__aeabi_uldivmod
 3359              		.global	__aeabi_ldivmod
 3360              		.section	.text.UART_SetConfig,"ax",%progbits
 3361              		.align	1
 3362              		.global	UART_SetConfig
 3363              		.syntax unified
 3364              		.thumb
 3365              		.thumb_func
 3366              		.fpu softvfp
 3368              	UART_SetConfig:
 3369              	.LVL197:
 3370              	.LFB348:
2791:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 3371              		.loc 1 2791 1 is_stmt 1 view -0
 3372              		.cfi_startproc
 3373              		@ args = 0, pretend = 0, frame = 0
 3374              		@ frame_needed = 0, uses_anonymous_args = 0
2792:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 3375              		.loc 1 2792 3 view .LVU1056
2793:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3376              		.loc 1 2793 3 view .LVU1057
2794:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
 3377              		.loc 1 2794 3 view .LVU1058
2795:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3378              		.loc 1 2795 3 view .LVU1059
2796:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3379              		.loc 1 2796 3 view .LVU1060
2797:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3380              		.loc 1 2797 3 view .LVU1061
2800:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 3381              		.loc 1 2800 3 view .LVU1062
2801:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 3382              		.loc 1 2801 3 view .LVU1063
2802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3383              		.loc 1 2802 3 view .LVU1064
2791:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 3384              		.loc 1 2791 1 is_stmt 0 view .LVU1065
 3385 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3386              	.LCFI28:
 3387              		.cfi_def_cfa_offset 24
 3388              		.cfi_offset 3, -24
 3389              		.cfi_offset 4, -20
 3390              		.cfi_offset 5, -16
 3391              		.cfi_offset 6, -12
 3392              		.cfi_offset 7, -8
 3393              		.cfi_offset 14, -4
2827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3394              		.loc 1 2827 98 view .LVU1066
 3395 0002 C169     		ldr	r1, [r0, #28]
2802:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3396              		.loc 1 2802 7 view .LVU1067
 3397 0004 0368     		ldr	r3, [r0]
2808:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 3398              		.loc 1 2808 5 is_stmt 1 view .LVU1068
2809:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 3399              		.loc 1 2809 5 view .LVU1069
2812:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 3400              		.loc 1 2812 3 view .LVU1070
2813:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 3401              		.loc 1 2813 3 view .LVU1071
2814:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 3402              		.loc 1 2814 3 view .LVU1072
2815:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 3403              		.loc 1 2815 3 view .LVU1073
2827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3404              		.loc 1 2827 3 view .LVU1074
 3405              	.LVL198:
2831:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3406              		.loc 1 2831 3 view .LVU1075
2827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3407              		.loc 1 2827 45 is_stmt 0 view .LVU1076
 3408 0006 8268     		ldr	r2, [r0, #8]
2831:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3409              		.loc 1 2831 3 view .LVU1077
 3410 0008 1D68     		ldr	r5, [r3]
2791:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 3411              		.loc 1 2791 1 view .LVU1078
 3412 000a 0446     		mov	r4, r0
2827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3413              		.loc 1 2827 45 view .LVU1079
 3414 000c 0069     		ldr	r0, [r0, #16]
 3415              	.LVL199:
2827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3416              		.loc 1 2827 45 view .LVU1080
 3417 000e 0243     		orrs	r2, r2, r0
2827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3418              		.loc 1 2827 66 view .LVU1081
 3419 0010 6069     		ldr	r0, [r4, #20]
 3420 0012 0243     		orrs	r2, r2, r0
2831:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3421              		.loc 1 2831 3 view .LVU1082
 3422 0014 A348     		ldr	r0, .L400
2827:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3423              		.loc 1 2827 10 view .LVU1083
 3424 0016 0A43     		orrs	r2, r2, r1
2831:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3425              		.loc 1 2831 3 view .LVU1084
 3426 0018 2840     		ands	r0, r0, r5
 3427 001a 0243     		orrs	r2, r2, r0
 3428 001c 1A60     		str	r2, [r3]
2836:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3429              		.loc 1 2836 3 is_stmt 1 view .LVU1085
 3430 001e 5A68     		ldr	r2, [r3, #4]
 3431 0020 E068     		ldr	r0, [r4, #12]
 3432 0022 22F44052 		bic	r2, r2, #12288
 3433 0026 0243     		orrs	r2, r2, r0
 3434 0028 5A60     		str	r2, [r3, #4]
2844:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3435              		.loc 1 2844 3 view .LVU1086
2846:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3436              		.loc 1 2846 6 is_stmt 0 view .LVU1087
 3437 002a 9F4A     		ldr	r2, .L400+4
2844:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3438              		.loc 1 2844 10 view .LVU1088
 3439 002c A069     		ldr	r0, [r4, #24]
 3440              	.LVL200:
2846:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3441              		.loc 1 2846 3 is_stmt 1 view .LVU1089
2846:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3442              		.loc 1 2846 6 is_stmt 0 view .LVU1090
 3443 002e 9342     		cmp	r3, r2
2848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 3444              		.loc 1 2848 5 is_stmt 1 view .LVU1091
2848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 3445              		.loc 1 2848 12 is_stmt 0 view .LVU1092
 3446 0030 1CBF     		itt	ne
 3447 0032 226A     		ldrne	r2, [r4, #32]
 3448              	.LVL201:
2848:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 3449              		.loc 1 2848 12 view .LVU1093
 3450 0034 1043     		orrne	r0, r0, r2
 3451              	.LVL202:
2850:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3452              		.loc 1 2850 3 is_stmt 1 view .LVU1094
 3453 0036 9A68     		ldr	r2, [r3, #8]
 3454              	.LVL203:
2850:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3455              		.loc 1 2850 3 is_stmt 0 view .LVU1095
 3456 0038 22F43062 		bic	r2, r2, #2816
 3457 003c 0243     		orrs	r2, r2, r0
 3458 003e 9A60     		str	r2, [r3, #8]
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3459              		.loc 1 2860 3 is_stmt 1 view .LVU1096
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3460              		.loc 1 2860 3 view .LVU1097
 3461 0040 9A4A     		ldr	r2, .L400+8
 3462 0042 9342     		cmp	r3, r2
 3463              	.LVL204:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3464              		.loc 1 2860 3 is_stmt 0 view .LVU1098
 3465 0044 18D1     		bne	.L327
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3466              		.loc 1 2860 3 is_stmt 1 discriminator 1 view .LVU1099
 3467 0046 9A4B     		ldr	r3, .L400+12
 3468              	.LVL205:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3469              		.loc 1 2860 3 is_stmt 0 discriminator 1 view .LVU1100
 3470 0048 D3F88830 		ldr	r3, [r3, #136]
 3471 004c 03F00303 		and	r3, r3, #3
 3472 0050 013B     		subs	r3, r3, #1
 3473 0052 022B     		cmp	r3, #2
 3474 0054 00F2FE80 		bhi	.L328
 3475 0058 964A     		ldr	r2, .L400+16
 3476 005a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3477              	.LVL206:
 3478              	.L329:
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3479              		.loc 1 2962 8 is_stmt 1 view .LVU1101
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3480              		.loc 1 2962 11 is_stmt 0 view .LVU1102
 3481 005c B1F5004F 		cmp	r1, #32768
 3482 0060 40F0DE80 		bne	.L352
2964:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3483              		.loc 1 2964 5 is_stmt 1 view .LVU1103
 3484 0064 082B     		cmp	r3, #8
 3485 0066 00F2D880 		bhi	.L373
 3486 006a DFE803F0 		tbb	[pc, r3]
 3487              	.L355:
 3488 006e AA       		.byte	(.L359-.L355)/2
 3489 006f C2       		.byte	(.L358-.L355)/2
 3490 0070 C5       		.byte	(.L357-.L355)/2
 3491 0071 D6       		.byte	(.L373-.L355)/2
 3492 0072 CE       		.byte	(.L356-.L355)/2
 3493 0073 D6       		.byte	(.L373-.L355)/2
 3494 0074 D6       		.byte	(.L373-.L355)/2
 3495 0075 D6       		.byte	(.L373-.L355)/2
 3496 0076 D1       		.byte	(.L354-.L355)/2
 3497              	.LVL207:
 3498 0077 00       		.p2align 1
 3499              	.L327:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3500              		.loc 1 2860 3 discriminator 2 view .LVU1104
 3501 0078 8F4A     		ldr	r2, .L400+20
 3502 007a 9342     		cmp	r3, r2
 3503 007c 08D1     		bne	.L330
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3504              		.loc 1 2860 3 discriminator 14 view .LVU1105
 3505 007e 8C4B     		ldr	r3, .L400+12
 3506              	.LVL208:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3507              		.loc 1 2860 3 is_stmt 0 discriminator 14 view .LVU1106
 3508 0080 D3F88820 		ldr	r2, [r3, #136]
 3509 0084 8B4B     		ldr	r3, .L400+16
 3510 0086 02F00C02 		and	r2, r2, #12
 3511 008a 1344     		add	r3, r3, r2
 3512 008c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3513              	.LVL209:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3514              		.loc 1 2860 3 is_stmt 1 discriminator 14 view .LVU1107
2863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3515              		.loc 1 2863 3 discriminator 14 view .LVU1108
 3516 008e E5E7     		b	.L329
 3517              	.LVL210:
 3518              	.L330:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3519              		.loc 1 2860 3 discriminator 15 view .LVU1109
 3520 0090 8A4A     		ldr	r2, .L400+24
 3521 0092 9342     		cmp	r3, r2
 3522 0094 20D1     		bne	.L331
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3523              		.loc 1 2860 3 discriminator 27 view .LVU1110
 3524 0096 864B     		ldr	r3, .L400+12
 3525              	.LVL211:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3526              		.loc 1 2860 3 is_stmt 0 discriminator 27 view .LVU1111
 3527 0098 D3F88830 		ldr	r3, [r3, #136]
 3528 009c 03F03003 		and	r3, r3, #48
 3529 00a0 202B     		cmp	r3, #32
 3530 00a2 00F0DD80 		beq	.L332
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3531              		.loc 1 2860 3 view .LVU1112
 3532 00a6 0CD8     		bhi	.L333
 3533 00a8 002B     		cmp	r3, #0
 3534 00aa 00F0E980 		beq	.L334
 3535 00ae 102B     		cmp	r3, #16
 3536 00b0 00F0E080 		beq	.L335
 3537              	.L336:
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3538              		.loc 1 2962 8 is_stmt 1 view .LVU1113
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3539              		.loc 1 2962 11 is_stmt 0 view .LVU1114
 3540 00b4 B1F5004F 		cmp	r1, #32768
 3541 00b8 00F0AF80 		beq	.L373
 3542              	.LVL212:
 3543              	.L372:
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3544              		.loc 1 2962 11 view .LVU1115
 3545 00bc 0125     		movs	r5, #1
 3546 00be 0020     		movs	r0, #0
 3547 00c0 EAE0     		b	.L360
 3548              	.LVL213:
 3549              	.L333:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3550              		.loc 1 2860 3 view .LVU1116
 3551 00c2 302B     		cmp	r3, #48
 3552 00c4 F6D1     		bne	.L336
 3553              	.LVL214:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3554              		.loc 1 2860 3 is_stmt 1 view .LVU1117
2863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3555              		.loc 1 2863 3 view .LVU1118
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3556              		.loc 1 2962 8 view .LVU1119
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3557              		.loc 1 2962 11 is_stmt 0 view .LVU1120
 3558 00c6 B1F5004F 		cmp	r1, #32768
 3559 00ca 00F0A180 		beq	.L354
 3560              	.LVL215:
 3561              	.L361:
3055:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3562              		.loc 1 3055 9 is_stmt 1 view .LVU1121
3055:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3563              		.loc 1 3055 31 is_stmt 0 view .LVU1122
 3564 00ce 6368     		ldr	r3, [r4, #4]
 3565 00d0 5808     		lsrs	r0, r3, #1
 3566 00d2 00F50040 		add	r0, r0, #32768
 3567 00d6 DBE0     		b	.L395
 3568              	.LVL216:
 3569              	.L331:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3570              		.loc 1 2860 3 is_stmt 1 discriminator 28 view .LVU1123
 3571 00d8 734A     		ldr	r2, .L400+4
 3572              	.LVL217:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3573              		.loc 1 2860 3 is_stmt 0 discriminator 28 view .LVU1124
 3574 00da 9342     		cmp	r3, r2
 3575 00dc EAD1     		bne	.L336
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3576              		.loc 1 2860 3 is_stmt 1 discriminator 40 view .LVU1125
 3577 00de 744B     		ldr	r3, .L400+12
 3578              	.LVL218:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3579              		.loc 1 2860 3 is_stmt 0 discriminator 40 view .LVU1126
 3580 00e0 D3F88850 		ldr	r5, [r3, #136]
 3581 00e4 05F44065 		and	r5, r5, #3072
 3582 00e8 B5F5006F 		cmp	r5, #2048
 3583 00ec 2BD0     		beq	.L367
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3584              		.loc 1 2860 3 view .LVU1127
 3585 00ee 09D8     		bhi	.L339
 3586 00f0 7DB1     		cbz	r5, .L340
 3587 00f2 B5F5806F 		cmp	r5, #1024
 3588 00f6 22D0     		beq	.L341
 3589              	.LVL219:
 3590              	.L342:
2909:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 3591              		.loc 1 2909 13 view .LVU1128
 3592 00f8 0125     		movs	r5, #1
 3593              	.LVL220:
 3594              	.L344:
3082:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 3595              		.loc 1 3082 3 is_stmt 1 view .LVU1129
3082:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 3596              		.loc 1 3082 16 is_stmt 0 view .LVU1130
 3597 00fa 0023     		movs	r3, #0
3083:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3598              		.loc 1 3083 16 view .LVU1131
 3599 00fc C4E91833 		strd	r3, r3, [r4, #96]
3085:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 3600              		.loc 1 3085 3 is_stmt 1 view .LVU1132
3086:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3601              		.loc 1 3086 1 is_stmt 0 view .LVU1133
 3602 0100 2846     		mov	r0, r5
 3603 0102 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3604              	.LVL221:
 3605              	.L339:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3606              		.loc 1 2860 3 view .LVU1134
 3607 0104 B5F5406F 		cmp	r5, #3072
 3608 0108 F6D1     		bne	.L342
 3609 010a 0825     		movs	r5, #8
2893:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3610              		.loc 1 2893 28 view .LVU1135
 3611 010c 4FF40040 		mov	r0, #32768
 3612 0110 04E0     		b	.L338
 3613              	.L340:
 3614              	.LVL222:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3615              		.loc 1 2860 3 is_stmt 1 view .LVU1136
2863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3616              		.loc 1 2863 3 view .LVU1137
2866:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3617              		.loc 1 2866 5 view .LVU1138
2872:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3618              		.loc 1 2872 9 view .LVU1139
2872:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3619              		.loc 1 2872 30 is_stmt 0 view .LVU1140
 3620 0112 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3621              	.LVL223:
2874:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3622              		.loc 1 2874 9 is_stmt 1 view .LVU1141
 3623              	.L343:
2903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3624              		.loc 1 2903 5 view .LVU1142
2903:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3625              		.loc 1 2903 8 is_stmt 0 view .LVU1143
 3626 0116 0028     		cmp	r0, #0
 3627 0118 00F09A80 		beq	.L369
 3628              	.LVL224:
 3629              	.L338:
2906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3630              		.loc 1 2906 7 is_stmt 1 view .LVU1144
2906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3631              		.loc 1 2906 49 is_stmt 0 view .LVU1145
 3632 011c 6268     		ldr	r2, [r4, #4]
2906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3633              		.loc 1 2906 36 view .LVU1146
 3634 011e 02EB4203 		add	r3, r2, r2, lsl #1
2906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3635              		.loc 1 2906 10 view .LVU1147
 3636 0122 8342     		cmp	r3, r0
 3637 0124 E8D8     		bhi	.L342
2906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3638              		.loc 1 2906 61 discriminator 1 view .LVU1148
 3639 0126 B0EB023F 		cmp	r0, r2, lsl #12
 3640 012a E5D8     		bhi	.L342
2913:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 3641              		.loc 1 2913 9 is_stmt 1 view .LVU1149
 3642 012c 082D     		cmp	r5, #8
 3643 012e 45D8     		bhi	.L370
 3644 0130 DFE805F0 		tbb	[pc, r5]
 3645              	.L348:
 3646 0134 0C       		.byte	(.L351-.L348)/2
 3647 0135 44       		.byte	(.L370-.L348)/2
 3648 0136 22       		.byte	(.L350-.L348)/2
 3649 0137 44       		.byte	(.L370-.L348)/2
 3650 0138 2E       		.byte	(.L349-.L348)/2
 3651 0139 44       		.byte	(.L370-.L348)/2
 3652 013a 44       		.byte	(.L370-.L348)/2
 3653 013b 44       		.byte	(.L370-.L348)/2
 3654 013c 3B       		.byte	(.L347-.L348)/2
 3655              	.LVL225:
 3656 013d 00       		.p2align 1
 3657              	.L341:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3658              		.loc 1 2860 3 view .LVU1150
2863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3659              		.loc 1 2863 3 view .LVU1151
2886:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3660              		.loc 1 2886 9 view .LVU1152
2886:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3661              		.loc 1 2886 30 is_stmt 0 view .LVU1153
 3662 013e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3663              	.LVL226:
2888:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3664              		.loc 1 2888 9 is_stmt 1 view .LVU1154
 3665 0142 0425     		movs	r5, #4
 3666 0144 E7E7     		b	.L343
 3667              	.LVL227:
 3668              	.L367:
2879:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3669              		.loc 1 2879 28 is_stmt 0 view .LVU1155
 3670 0146 5E48     		ldr	r0, .L400+28
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3671              		.loc 1 2860 3 view .LVU1156
 3672 0148 0225     		movs	r5, #2
 3673 014a E7E7     		b	.L338
 3674              	.LVL228:
 3675              	.L351:
2919:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3676              		.loc 1 2919 13 is_stmt 1 view .LVU1157
2919:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3677              		.loc 1 2919 35 is_stmt 0 view .LVU1158
 3678 014c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3679              	.LVL229:
 3680 0150 6268     		ldr	r2, [r4, #4]
 3681 0152 4FF48071 		mov	r1, #256
 3682 0156 5608     		lsrs	r6, r2, #1
 3683 0158 0027     		movs	r7, #0
 3684 015a E1FB0067 		umlal	r6, r7, r1, r0
 3685 015e 0023     		movs	r3, #0
 3686 0160 3046     		mov	r0, r6
 3687 0162 3946     		mov	r1, r7
 3688 0164 FFF7FEFF 		bl	__aeabi_uldivmod
 3689              	.LVL230:
2921:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
 3690              		.loc 1 2921 13 is_stmt 1 view .LVU1159
 3691              	.L346:
2950:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 3692              		.loc 1 2950 9 view .LVU1160
2950:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 3693              		.loc 1 2950 12 is_stmt 0 view .LVU1161
 3694 0168 564B     		ldr	r3, .L400+32
2950:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         {
 3695              		.loc 1 2950 42 view .LVU1162
 3696 016a A0F54072 		sub	r2, r0, #768
 3697              	.L399:
3065:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3698              		.loc 1 3065 8 view .LVU1163
 3699 016e 9A42     		cmp	r2, r3
 3700 0170 C2D8     		bhi	.L342
3067:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 3701              		.loc 1 3067 7 is_stmt 1 view .LVU1164
3067:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 3702              		.loc 1 3067 12 is_stmt 0 view .LVU1165
 3703 0172 2368     		ldr	r3, [r4]
3067:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 3704              		.loc 1 3067 28 view .LVU1166
 3705 0174 D860     		str	r0, [r3, #12]
 3706 0176 C0E7     		b	.L344
 3707              	.LVL231:
 3708              	.L350:
2926:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3709              		.loc 1 2926 13 is_stmt 1 view .LVU1167
2926:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3710              		.loc 1 2926 35 is_stmt 0 view .LVU1168
 3711 0178 5348     		ldr	r0, .L400+36
 3712 017a 5508     		lsrs	r5, r2, #1
 3713 017c 0021     		movs	r1, #0
 3714 017e 4019     		adds	r0, r0, r5
 3715 0180 4FF00003 		mov	r3, #0
 3716 0184 41F10001 		adc	r1, r1, #0
 3717              	.L390:
2940:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3718              		.loc 1 2940 35 view .LVU1169
 3719 0188 FFF7FEFF 		bl	__aeabi_uldivmod
 3720              	.LVL232:
2942:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_UNDEFINED:
 3721              		.loc 1 2942 13 is_stmt 1 view .LVU1170
 3722 018c 0025     		movs	r5, #0
 3723 018e EBE7     		b	.L346
 3724              	.LVL233:
 3725              	.L349:
2933:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3726              		.loc 1 2933 13 view .LVU1171
2933:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3727              		.loc 1 2933 35 is_stmt 0 view .LVU1172
 3728 0190 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3729              	.LVL234:
 3730 0194 6268     		ldr	r2, [r4, #4]
 3731 0196 4FF48071 		mov	r1, #256
 3732 019a 5608     		lsrs	r6, r2, #1
 3733 019c 0027     		movs	r7, #0
 3734 019e E1FB0067 		umlal	r6, r7, r1, r0
 3735 01a2 0023     		movs	r3, #0
 3736 01a4 3046     		mov	r0, r6
 3737 01a6 3946     		mov	r1, r7
 3738 01a8 EEE7     		b	.L390
 3739              	.L347:
2940:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3740              		.loc 1 2940 13 is_stmt 1 view .LVU1173
2940:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3741              		.loc 1 2940 35 is_stmt 0 view .LVU1174
 3742 01aa 5008     		lsrs	r0, r2, #1
 3743 01ac 10F50000 		adds	r0, r0, #8388608
 3744 01b0 4FF00003 		mov	r3, #0
 3745 01b4 2CBF     		ite	cs
 3746 01b6 0121     		movcs	r1, #1
 3747 01b8 0021     		movcc	r1, #0
 3748 01ba E5E7     		b	.L390
 3749              	.L370:
2906:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3750              		.loc 1 2906 61 view .LVU1175
 3751 01bc 0125     		movs	r5, #1
 3752 01be 0020     		movs	r0, #0
 3753 01c0 D2E7     		b	.L346
 3754              	.LVL235:
 3755              	.L359:
2970:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3756              		.loc 1 2970 9 is_stmt 1 view .LVU1176
2970:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3757              		.loc 1 2970 31 is_stmt 0 view .LVU1177
 3758 01c2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3759              	.LVL236:
 3760              	.L397:
2991:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3761              		.loc 1 2991 31 view .LVU1178
 3762 01c6 6168     		ldr	r1, [r4, #4]
 3763 01c8 4A08     		lsrs	r2, r1, #1
 3764 01ca 02EB4003 		add	r3, r2, r0, lsl #1
 3765 01ce B3FBF1F3 		udiv	r3, r3, r1
 3766              	.L391:
2991:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3767              		.loc 1 2991 31 view .LVU1179
 3768 01d2 9BB2     		uxth	r3, r3
 3769              	.LVL237:
3000:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3770              		.loc 1 3000 9 is_stmt 1 view .LVU1180
2796:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3771              		.loc 1 2796 21 is_stmt 0 view .LVU1181
 3772 01d4 0025     		movs	r5, #0
 3773              	.LVL238:
 3774              	.L353:
3008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3775              		.loc 1 3008 5 is_stmt 1 view .LVU1182
3008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3776              		.loc 1 3008 36 is_stmt 0 view .LVU1183
 3777 01d6 A3F11001 		sub	r1, r3, #16
3008:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3778              		.loc 1 3008 8 view .LVU1184
 3779 01da 4FF6EF72 		movw	r2, #65519
 3780 01de 9142     		cmp	r1, r2
 3781 01e0 8AD8     		bhi	.L342
3010:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3782              		.loc 1 3010 7 is_stmt 1 view .LVU1185
3010:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3783              		.loc 1 3010 15 is_stmt 0 view .LVU1186
 3784 01e2 23F00F02 		bic	r2, r3, #15
 3785              	.LVL239:
3011:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 3786              		.loc 1 3011 7 is_stmt 1 view .LVU1187
3012:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 3787              		.loc 1 3012 7 view .LVU1188
3012:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 3788              		.loc 1 3012 12 is_stmt 0 view .LVU1189
 3789 01e6 2168     		ldr	r1, [r4]
3011:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 3790              		.loc 1 3011 18 view .LVU1190
 3791 01e8 C3F34203 		ubfx	r3, r3, #1, #3
 3792              	.LVL240:
3012:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 3793              		.loc 1 3012 28 view .LVU1191
 3794 01ec 1343     		orrs	r3, r3, r2
 3795 01ee CB60     		str	r3, [r1, #12]
 3796 01f0 83E7     		b	.L344
 3797              	.LVL241:
 3798              	.L358:
2977:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3799              		.loc 1 2977 9 is_stmt 1 view .LVU1192
2977:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3800              		.loc 1 2977 31 is_stmt 0 view .LVU1193
 3801 01f2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3802              	.LVL242:
2977:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3803              		.loc 1 2977 31 view .LVU1194
 3804 01f6 E6E7     		b	.L397
 3805              	.LVL243:
 3806              	.L357:
2984:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3807              		.loc 1 2984 9 is_stmt 1 view .LVU1195
2984:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3808              		.loc 1 2984 31 is_stmt 0 view .LVU1196
 3809 01f8 6268     		ldr	r2, [r4, #4]
 3810 01fa 5308     		lsrs	r3, r2, #1
 3811 01fc 03F1F473 		add	r3, r3, #31981568
 3812 0200 03F59043 		add	r3, r3, #18432
 3813              	.L392:
2998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3814              		.loc 1 2998 31 view .LVU1197
 3815 0204 B3FBF2F3 		udiv	r3, r3, r2
 3816 0208 E3E7     		b	.L391
 3817              	.L356:
2991:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3818              		.loc 1 2991 9 is_stmt 1 view .LVU1198
2991:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3819              		.loc 1 2991 31 is_stmt 0 view .LVU1199
 3820 020a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3821              	.LVL244:
2991:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3822              		.loc 1 2991 31 view .LVU1200
 3823 020e DAE7     		b	.L397
 3824              	.LVL245:
 3825              	.L354:
2998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3826              		.loc 1 2998 9 is_stmt 1 view .LVU1201
2998:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3827              		.loc 1 2998 31 is_stmt 0 view .LVU1202
 3828 0210 6268     		ldr	r2, [r4, #4]
 3829 0212 5308     		lsrs	r3, r2, #1
 3830 0214 03F58033 		add	r3, r3, #65536
 3831 0218 F4E7     		b	.L392
 3832              	.L373:
3003:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         break;
 3833              		.loc 1 3003 13 view .LVU1203
 3834 021a 0125     		movs	r5, #1
2795:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3835              		.loc 1 2795 12 view .LVU1204
 3836 021c 0023     		movs	r3, #0
 3837 021e DAE7     		b	.L353
 3838              	.LVL246:
 3839              	.L352:
3021:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3840              		.loc 1 3021 5 is_stmt 1 view .LVU1205
 3841 0220 082B     		cmp	r3, #8
 3842 0222 3FF64BAF 		bhi	.L372
 3843 0226 01A2     		adr	r2, .L362
 3844 0228 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3845              		.p2align 2
 3846              	.L362:
 3847 022c 87020000 		.word	.L366+1
 3848 0230 5B020000 		.word	.L365+1
 3849 0234 67020000 		.word	.L364+1
 3850 0238 BD000000 		.word	.L372+1
 3851 023c 7B020000 		.word	.L363+1
 3852 0240 BD000000 		.word	.L372+1
 3853 0244 BD000000 		.word	.L372+1
 3854 0248 BD000000 		.word	.L372+1
 3855 024c CF000000 		.word	.L361+1
 3856              	.LVL247:
 3857              		.p2align 1
 3858              	.L369:
3021:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3859              		.loc 1 3021 5 is_stmt 0 view .LVU1206
 3860 0250 0546     		mov	r5, r0
 3861 0252 52E7     		b	.L344
 3862              	.LVL248:
 3863              	.L328:
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3864              		.loc 1 2962 8 is_stmt 1 view .LVU1207
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3865              		.loc 1 2962 11 is_stmt 0 view .LVU1208
 3866 0254 B1F5004F 		cmp	r1, #32768
 3867 0258 CBD0     		beq	.L358
 3868              	.LVL249:
 3869              	.L365:
3034:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3870              		.loc 1 3034 9 is_stmt 1 view .LVU1209
3034:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3871              		.loc 1 3034 31 is_stmt 0 view .LVU1210
 3872 025a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3873              	.LVL250:
3034:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3874              		.loc 1 3034 31 view .LVU1211
 3875 025e 14E0     		b	.L394
 3876              	.LVL251:
 3877              	.L332:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3878              		.loc 1 2860 3 is_stmt 1 view .LVU1212
2863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3879              		.loc 1 2863 3 view .LVU1213
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3880              		.loc 1 2962 8 view .LVU1214
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3881              		.loc 1 2962 11 is_stmt 0 view .LVU1215
 3882 0260 B1F5004F 		cmp	r1, #32768
 3883 0264 C8D0     		beq	.L357
 3884              	.LVL252:
 3885              	.L364:
3041:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3886              		.loc 1 3041 9 is_stmt 1 view .LVU1216
3041:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3887              		.loc 1 3041 31 is_stmt 0 view .LVU1217
 3888 0266 6368     		ldr	r3, [r4, #4]
 3889 0268 5808     		lsrs	r0, r3, #1
 3890 026a 00F57400 		add	r0, r0, #15990784
 3891 026e 00F51050 		add	r0, r0, #9216
 3892 0272 0DE0     		b	.L395
 3893              	.LVL253:
 3894              	.L335:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3895              		.loc 1 2860 3 is_stmt 1 view .LVU1218
2863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3896              		.loc 1 2863 3 view .LVU1219
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3897              		.loc 1 2962 8 view .LVU1220
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3898              		.loc 1 2962 11 is_stmt 0 view .LVU1221
 3899 0274 B1F5004F 		cmp	r1, #32768
 3900 0278 C7D0     		beq	.L356
 3901              	.LVL254:
 3902              	.L363:
3048:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3903              		.loc 1 3048 9 is_stmt 1 view .LVU1222
3048:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3904              		.loc 1 3048 31 is_stmt 0 view .LVU1223
 3905 027a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3906              	.LVL255:
3048:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3907              		.loc 1 3048 31 view .LVU1224
 3908 027e 04E0     		b	.L394
 3909              	.LVL256:
 3910              	.L334:
2860:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3911              		.loc 1 2860 3 is_stmt 1 view .LVU1225
2863:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3912              		.loc 1 2863 3 view .LVU1226
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3913              		.loc 1 2962 8 view .LVU1227
2962:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3914              		.loc 1 2962 11 is_stmt 0 view .LVU1228
 3915 0280 B1F5004F 		cmp	r1, #32768
 3916 0284 9DD0     		beq	.L359
 3917              	.LVL257:
 3918              	.L366:
3027:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3919              		.loc 1 3027 9 is_stmt 1 view .LVU1229
3027:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3920              		.loc 1 3027 31 is_stmt 0 view .LVU1230
 3921 0286 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3922              	.LVL258:
 3923              	.L394:
3034:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3924              		.loc 1 3034 31 view .LVU1231
 3925 028a 6368     		ldr	r3, [r4, #4]
 3926 028c 00EB5300 		add	r0, r0, r3, lsr #1
 3927              	.L395:
3034:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 3928              		.loc 1 3034 31 view .LVU1232
 3929 0290 B0FBF3F0 		udiv	r0, r0, r3
2796:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3930              		.loc 1 2796 21 view .LVU1233
 3931 0294 0025     		movs	r5, #0
 3932 0296 80B2     		uxth	r0, r0
 3933              	.LVL259:
3036:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3934              		.loc 1 3036 9 is_stmt 1 view .LVU1234
 3935              	.L360:
3065:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3936              		.loc 1 3065 5 view .LVU1235
3065:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3937              		.loc 1 3065 36 is_stmt 0 view .LVU1236
 3938 0298 A0F11002 		sub	r2, r0, #16
3065:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 3939              		.loc 1 3065 8 view .LVU1237
 3940 029c 4FF6EF73 		movw	r3, #65519
 3941 02a0 65E7     		b	.L399
 3942              	.L401:
 3943 02a2 00BF     		.align	2
 3944              	.L400:
 3945 02a4 F369FFEF 		.word	-268473869
 3946 02a8 00800040 		.word	1073774592
 3947 02ac 00380140 		.word	1073821696
 3948 02b0 00100240 		.word	1073876992
 3949 02b4 00000000 		.word	.LANCHOR0
 3950 02b8 00440040 		.word	1073759232
 3951 02bc 00480040 		.word	1073760256
 3952 02c0 0024F400 		.word	16000000
 3953 02c4 FFFC0F00 		.word	1047807
 3954 02c8 000024F4 		.word	-198967296
 3955              		.cfi_endproc
 3956              	.LFE348:
 3958              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3959              		.align	1
 3960              		.global	UART_AdvFeatureConfig
 3961              		.syntax unified
 3962              		.thumb
 3963              		.thumb_func
 3964              		.fpu softvfp
 3966              	UART_AdvFeatureConfig:
 3967              	.LVL260:
 3968              	.LFB349:
3094:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3969              		.loc 1 3094 1 is_stmt 1 view -0
 3970              		.cfi_startproc
 3971              		@ args = 0, pretend = 0, frame = 0
 3972              		@ frame_needed = 0, uses_anonymous_args = 0
3096:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 3973              		.loc 1 3096 3 view .LVU1239
3099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3974              		.loc 1 3099 3 view .LVU1240
3099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3975              		.loc 1 3099 7 is_stmt 0 view .LVU1241
 3976 0000 436A     		ldr	r3, [r0, #36]
3099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3977              		.loc 1 3099 6 view .LVU1242
 3978 0002 DA07     		lsls	r2, r3, #31
3094:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3979              		.loc 1 3094 1 view .LVU1243
 3980 0004 10B5     		push	{r4, lr}
 3981              	.LCFI29:
 3982              		.cfi_def_cfa_offset 8
 3983              		.cfi_offset 4, -8
 3984              		.cfi_offset 14, -4
3099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3985              		.loc 1 3099 6 view .LVU1244
 3986 0006 06D5     		bpl	.L403
3101:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3987              		.loc 1 3101 5 is_stmt 1 view .LVU1245
3102:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 3988              		.loc 1 3102 5 view .LVU1246
 3989 0008 0168     		ldr	r1, [r0]
 3990 000a 846A     		ldr	r4, [r0, #40]
 3991 000c 4A68     		ldr	r2, [r1, #4]
 3992 000e 22F40032 		bic	r2, r2, #131072
 3993 0012 2243     		orrs	r2, r2, r4
 3994 0014 4A60     		str	r2, [r1, #4]
 3995              	.L403:
3106:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3996              		.loc 1 3106 3 view .LVU1247
3106:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 3997              		.loc 1 3106 6 is_stmt 0 view .LVU1248
 3998 0016 9C07     		lsls	r4, r3, #30
 3999 0018 06D5     		bpl	.L404
3108:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 4000              		.loc 1 3108 5 is_stmt 1 view .LVU1249
3109:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4001              		.loc 1 3109 5 view .LVU1250
 4002 001a 0168     		ldr	r1, [r0]
 4003 001c C46A     		ldr	r4, [r0, #44]
 4004 001e 4A68     		ldr	r2, [r1, #4]
 4005 0020 22F48032 		bic	r2, r2, #65536
 4006 0024 2243     		orrs	r2, r2, r4
 4007 0026 4A60     		str	r2, [r1, #4]
 4008              	.L404:
3113:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4009              		.loc 1 3113 3 view .LVU1251
3113:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4010              		.loc 1 3113 6 is_stmt 0 view .LVU1252
 4011 0028 5907     		lsls	r1, r3, #29
 4012 002a 06D5     		bpl	.L405
3115:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 4013              		.loc 1 3115 5 is_stmt 1 view .LVU1253
3116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4014              		.loc 1 3116 5 view .LVU1254
 4015 002c 0168     		ldr	r1, [r0]
 4016 002e 046B     		ldr	r4, [r0, #48]
 4017 0030 4A68     		ldr	r2, [r1, #4]
 4018 0032 22F48022 		bic	r2, r2, #262144
 4019 0036 2243     		orrs	r2, r2, r4
 4020 0038 4A60     		str	r2, [r1, #4]
 4021              	.L405:
3120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4022              		.loc 1 3120 3 view .LVU1255
3120:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4023              		.loc 1 3120 6 is_stmt 0 view .LVU1256
 4024 003a 1A07     		lsls	r2, r3, #28
 4025 003c 06D5     		bpl	.L406
3122:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 4026              		.loc 1 3122 5 is_stmt 1 view .LVU1257
3123:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4027              		.loc 1 3123 5 view .LVU1258
 4028 003e 0168     		ldr	r1, [r0]
 4029 0040 446B     		ldr	r4, [r0, #52]
 4030 0042 4A68     		ldr	r2, [r1, #4]
 4031 0044 22F40042 		bic	r2, r2, #32768
 4032 0048 2243     		orrs	r2, r2, r4
 4033 004a 4A60     		str	r2, [r1, #4]
 4034              	.L406:
3127:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4035              		.loc 1 3127 3 view .LVU1259
3127:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4036              		.loc 1 3127 6 is_stmt 0 view .LVU1260
 4037 004c DC06     		lsls	r4, r3, #27
 4038 004e 06D5     		bpl	.L407
3129:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 4039              		.loc 1 3129 5 is_stmt 1 view .LVU1261
3130:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4040              		.loc 1 3130 5 view .LVU1262
 4041 0050 0168     		ldr	r1, [r0]
 4042 0052 846B     		ldr	r4, [r0, #56]
 4043 0054 8A68     		ldr	r2, [r1, #8]
 4044 0056 22F48052 		bic	r2, r2, #4096
 4045 005a 2243     		orrs	r2, r2, r4
 4046 005c 8A60     		str	r2, [r1, #8]
 4047              	.L407:
3134:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4048              		.loc 1 3134 3 view .LVU1263
3134:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4049              		.loc 1 3134 6 is_stmt 0 view .LVU1264
 4050 005e 9906     		lsls	r1, r3, #26
 4051 0060 06D5     		bpl	.L408
3136:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 4052              		.loc 1 3136 5 is_stmt 1 view .LVU1265
3137:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4053              		.loc 1 3137 5 view .LVU1266
 4054 0062 0168     		ldr	r1, [r0]
 4055 0064 C46B     		ldr	r4, [r0, #60]
 4056 0066 8A68     		ldr	r2, [r1, #8]
 4057 0068 22F40052 		bic	r2, r2, #8192
 4058 006c 2243     		orrs	r2, r2, r4
 4059 006e 8A60     		str	r2, [r1, #8]
 4060              	.L408:
3141:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4061              		.loc 1 3141 3 view .LVU1267
3141:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4062              		.loc 1 3141 6 is_stmt 0 view .LVU1268
 4063 0070 5A06     		lsls	r2, r3, #25
 4064 0072 0FD5     		bpl	.L410
3143:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 4065              		.loc 1 3143 5 is_stmt 1 view .LVU1269
3144:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 4066              		.loc 1 3144 5 view .LVU1270
3145:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 4067              		.loc 1 3145 5 view .LVU1271
 4068 0074 0168     		ldr	r1, [r0]
 4069 0076 046C     		ldr	r4, [r0, #64]
 4070 0078 4A68     		ldr	r2, [r1, #4]
 4071 007a 22F48012 		bic	r2, r2, #1048576
 4072 007e 2243     		orrs	r2, r2, r4
3147:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4073              		.loc 1 3147 8 is_stmt 0 view .LVU1272
 4074 0080 B4F5801F 		cmp	r4, #1048576
3145:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 4075              		.loc 1 3145 5 view .LVU1273
 4076 0084 4A60     		str	r2, [r1, #4]
3147:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4077              		.loc 1 3147 5 is_stmt 1 view .LVU1274
3147:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4078              		.loc 1 3147 8 is_stmt 0 view .LVU1275
 4079 0086 05D1     		bne	.L410
3149:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 4080              		.loc 1 3149 7 is_stmt 1 view .LVU1276
3150:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 4081              		.loc 1 3150 7 view .LVU1277
 4082 0088 4A68     		ldr	r2, [r1, #4]
 4083 008a 446C     		ldr	r4, [r0, #68]
 4084 008c 22F4C002 		bic	r2, r2, #6291456
 4085 0090 2243     		orrs	r2, r2, r4
 4086 0092 4A60     		str	r2, [r1, #4]
 4087              	.L410:
3155:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4088              		.loc 1 3155 3 view .LVU1278
3155:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4089              		.loc 1 3155 6 is_stmt 0 view .LVU1279
 4090 0094 1B06     		lsls	r3, r3, #24
 4091 0096 06D5     		bpl	.L402
3157:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 4092              		.loc 1 3157 5 is_stmt 1 view .LVU1280
3158:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4093              		.loc 1 3158 5 view .LVU1281
 4094 0098 0268     		ldr	r2, [r0]
 4095 009a 816C     		ldr	r1, [r0, #72]
 4096 009c 5368     		ldr	r3, [r2, #4]
 4097 009e 23F40023 		bic	r3, r3, #524288
 4098 00a2 0B43     		orrs	r3, r3, r1
 4099 00a4 5360     		str	r3, [r2, #4]
 4100              	.L402:
3160:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4101              		.loc 1 3160 1 is_stmt 0 view .LVU1282
 4102 00a6 10BD     		pop	{r4, pc}
 4103              		.cfi_endproc
 4104              	.LFE349:
 4106              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4107              		.align	1
 4108              		.global	UART_WaitOnFlagUntilTimeout
 4109              		.syntax unified
 4110              		.thumb
 4111              		.thumb_func
 4112              		.fpu softvfp
 4114              	UART_WaitOnFlagUntilTimeout:
 4115              	.LVL261:
 4116              	.LFB351:
3218:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
 4117              		.loc 1 3218 1 is_stmt 1 view -0
 4118              		.cfi_startproc
 4119              		@ args = 4, pretend = 0, frame = 0
 4120              		@ frame_needed = 0, uses_anonymous_args = 0
3218:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
 4121              		.loc 1 3218 1 is_stmt 0 view .LVU1284
 4122 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4123              	.LCFI30:
 4124              		.cfi_def_cfa_offset 24
 4125              		.cfi_offset 4, -24
 4126              		.cfi_offset 5, -20
 4127              		.cfi_offset 6, -16
 4128              		.cfi_offset 7, -12
 4129              		.cfi_offset 8, -8
 4130              		.cfi_offset 14, -4
 4131 0004 DDF81880 		ldr	r8, [sp, #24]
 4132 0008 0446     		mov	r4, r0
 4133 000a 0E46     		mov	r6, r1
 4134 000c 1546     		mov	r5, r2
 4135 000e 1F46     		mov	r7, r3
3220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4136              		.loc 1 3220 3 is_stmt 1 view .LVU1285
 4137              	.LVL262:
 4138              	.L435:
3220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4139              		.loc 1 3220 11 is_stmt 0 view .LVU1286
 4140 0010 2268     		ldr	r2, [r4]
 4141              	.L436:
3220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4142              		.loc 1 3220 9 is_stmt 1 view .LVU1287
3220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4143              		.loc 1 3220 11 is_stmt 0 view .LVU1288
 4144 0012 D369     		ldr	r3, [r2, #28]
3220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4145              		.loc 1 3220 50 view .LVU1289
 4146 0014 36EA0303 		bics	r3, r6, r3
 4147 0018 0CBF     		ite	eq
 4148 001a 0123     		moveq	r3, #1
 4149 001c 0023     		movne	r3, #0
3220:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4150              		.loc 1 3220 9 view .LVU1290
 4151 001e AB42     		cmp	r3, r5
 4152 0020 01D0     		beq	.L440
3245:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4153              		.loc 1 3245 10 view .LVU1291
 4154 0022 0020     		movs	r0, #0
 4155 0024 17E0     		b	.L438
 4156              	.L440:
3223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4157              		.loc 1 3223 5 is_stmt 1 view .LVU1292
3223:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4158              		.loc 1 3223 8 is_stmt 0 view .LVU1293
 4159 0026 B8F1FF3F 		cmp	r8, #-1
 4160 002a F2D0     		beq	.L436
3225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4161              		.loc 1 3225 7 is_stmt 1 view .LVU1294
3225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4162              		.loc 1 3225 10 is_stmt 0 view .LVU1295
 4163 002c B8F1000F 		cmp	r8, #0
 4164 0030 13D1     		bne	.L437
 4165              	.L439:
 4166              	.LVL263:
 4167              	.LBB32:
 4168              	.LBI32:
3217:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** {
 4169              		.loc 1 3217 19 is_stmt 1 view .LVU1296
 4170              	.LBB33:
3231:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif
 4171              		.loc 1 3231 9 view .LVU1297
 4172 0032 2368     		ldr	r3, [r4]
 4173 0034 1A68     		ldr	r2, [r3]
 4174 0036 22F4D072 		bic	r2, r2, #416
 4175 003a 1A60     		str	r2, [r3]
3233:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4176              		.loc 1 3233 9 view .LVU1298
 4177 003c 9A68     		ldr	r2, [r3, #8]
 4178 003e 22F00102 		bic	r2, r2, #1
 4179 0042 9A60     		str	r2, [r3, #8]
3235:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4180              		.loc 1 3235 9 view .LVU1299
3235:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4181              		.loc 1 3235 23 is_stmt 0 view .LVU1300
 4182 0044 2023     		movs	r3, #32
 4183 0046 84F87130 		strb	r3, [r4, #113]
3236:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4184              		.loc 1 3236 9 is_stmt 1 view .LVU1301
3236:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4185              		.loc 1 3236 24 is_stmt 0 view .LVU1302
 4186 004a 84F87230 		strb	r3, [r4, #114]
3239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4187              		.loc 1 3239 9 is_stmt 1 view .LVU1303
3239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4188              		.loc 1 3239 9 view .LVU1304
 4189 004e 0023     		movs	r3, #0
 4190 0050 84F87030 		strb	r3, [r4, #112]
3239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4191              		.loc 1 3239 9 view .LVU1305
3241:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 4192              		.loc 1 3241 9 view .LVU1306
 4193              	.LVL264:
3239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4194              		.loc 1 3239 9 is_stmt 0 view .LVU1307
 4195 0054 0320     		movs	r0, #3
 4196              	.L438:
3239:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4197              		.loc 1 3239 9 view .LVU1308
 4198              	.LBE33:
 4199              	.LBE32:
3246:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4200              		.loc 1 3246 1 view .LVU1309
 4201 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4202              	.LVL265:
 4203              	.L437:
3225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4204              		.loc 1 3225 32 discriminator 1 view .LVU1310
 4205 005a FFF7FEFF 		bl	HAL_GetTick
 4206              	.LVL266:
3225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4207              		.loc 1 3225 46 discriminator 1 view .LVU1311
 4208 005e C01B     		subs	r0, r0, r7
3225:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4209              		.loc 1 3225 27 discriminator 1 view .LVU1312
 4210 0060 4045     		cmp	r0, r8
 4211 0062 D5D9     		bls	.L435
 4212 0064 E5E7     		b	.L439
 4213              		.cfi_endproc
 4214              	.LFE351:
 4216              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4217              		.align	1
 4218              		.global	HAL_UART_Receive
 4219              		.syntax unified
 4220              		.thumb
 4221              		.thumb_func
 4222              		.fpu softvfp
 4224              	HAL_UART_Receive:
 4225              	.LVL267:
 4226              	.LFB317:
1169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 4227              		.loc 1 1169 1 is_stmt 1 view -0
 4228              		.cfi_startproc
 4229              		@ args = 0, pretend = 0, frame = 0
 4230              		@ frame_needed = 0, uses_anonymous_args = 0
1170:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
 4231              		.loc 1 1170 3 view .LVU1314
1171:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0;
 4232              		.loc 1 1171 3 view .LVU1315
1172:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4233              		.loc 1 1172 3 view .LVU1316
1175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4234              		.loc 1 1175 3 view .LVU1317
1169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 4235              		.loc 1 1169 1 is_stmt 0 view .LVU1318
 4236 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 4237              	.LCFI31:
 4238              		.cfi_def_cfa_offset 32
 4239              		.cfi_offset 4, -24
 4240              		.cfi_offset 5, -20
 4241              		.cfi_offset 6, -16
 4242              		.cfi_offset 7, -12
 4243              		.cfi_offset 8, -8
 4244              		.cfi_offset 14, -4
1169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 4245              		.loc 1 1169 1 view .LVU1319
 4246 0004 1E46     		mov	r6, r3
1175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4247              		.loc 1 1175 12 view .LVU1320
 4248 0006 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 4249              	.LVL268:
1175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4250              		.loc 1 1175 6 view .LVU1321
 4251 000a 202B     		cmp	r3, #32
1169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 4252              		.loc 1 1169 1 view .LVU1322
 4253 000c 0446     		mov	r4, r0
 4254 000e 0D46     		mov	r5, r1
 4255 0010 1746     		mov	r7, r2
1175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4256              		.loc 1 1175 6 view .LVU1323
 4257 0012 5FD1     		bne	.L457
1177:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4258              		.loc 1 1177 5 is_stmt 1 view .LVU1324
1177:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4259              		.loc 1 1177 8 is_stmt 0 view .LVU1325
 4260 0014 0029     		cmp	r1, #0
 4261 0016 5BD0     		beq	.L456
1177:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4262              		.loc 1 1177 25 discriminator 1 view .LVU1326
 4263 0018 002A     		cmp	r2, #0
 4264 001a 59D0     		beq	.L456
1183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4265              		.loc 1 1183 5 is_stmt 1 view .LVU1327
1183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4266              		.loc 1 1183 5 view .LVU1328
 4267 001c 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4268 0020 012B     		cmp	r3, #1
 4269 0022 57D0     		beq	.L457
1183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4270              		.loc 1 1183 5 discriminator 2 view .LVU1329
 4271 0024 0123     		movs	r3, #1
 4272 0026 80F87030 		strb	r3, [r0, #112]
1183:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4273              		.loc 1 1183 5 discriminator 2 view .LVU1330
1185:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4274              		.loc 1 1185 5 discriminator 2 view .LVU1331
1185:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4275              		.loc 1 1185 22 is_stmt 0 discriminator 2 view .LVU1332
 4276 002a 0023     		movs	r3, #0
 4277 002c 4367     		str	r3, [r0, #116]
1186:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4278              		.loc 1 1186 5 is_stmt 1 discriminator 2 view .LVU1333
1186:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4279              		.loc 1 1186 20 is_stmt 0 discriminator 2 view .LVU1334
 4280 002e 2223     		movs	r3, #34
 4281 0030 80F87230 		strb	r3, [r0, #114]
1189:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4282              		.loc 1 1189 5 is_stmt 1 discriminator 2 view .LVU1335
1189:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4283              		.loc 1 1189 17 is_stmt 0 discriminator 2 view .LVU1336
 4284 0034 FFF7FEFF 		bl	HAL_GetTick
 4285              	.LVL269:
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4286              		.loc 1 1195 5 discriminator 2 view .LVU1337
 4287 0038 A368     		ldr	r3, [r4, #8]
1191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 4288              		.loc 1 1191 24 discriminator 2 view .LVU1338
 4289 003a A4F85870 		strh	r7, [r4, #88]	@ movhi
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4290              		.loc 1 1195 5 discriminator 2 view .LVU1339
 4291 003e B3F5805F 		cmp	r3, #4096
1189:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4292              		.loc 1 1189 17 discriminator 2 view .LVU1340
 4293 0042 8046     		mov	r8, r0
 4294              	.LVL270:
1191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 4295              		.loc 1 1191 5 is_stmt 1 discriminator 2 view .LVU1341
1192:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4296              		.loc 1 1192 5 discriminator 2 view .LVU1342
1192:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4297              		.loc 1 1192 24 is_stmt 0 discriminator 2 view .LVU1343
 4298 0044 A4F85A70 		strh	r7, [r4, #90]	@ movhi
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4299              		.loc 1 1195 5 is_stmt 1 discriminator 2 view .LVU1344
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4300              		.loc 1 1195 5 discriminator 2 view .LVU1345
 4301 0048 15D1     		bne	.L445
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4302              		.loc 1 1195 5 discriminator 1 view .LVU1346
 4303 004a 2369     		ldr	r3, [r4, #16]
 4304 004c 8BB9     		cbnz	r3, .L446
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4305              		.loc 1 1195 5 discriminator 3 view .LVU1347
 4306 004e 40F2FF13 		movw	r3, #511
 4307              	.L465:
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4308              		.loc 1 1195 5 is_stmt 0 discriminator 12 view .LVU1348
 4309 0052 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4310              	.L447:
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4311              		.loc 1 1195 5 is_stmt 1 discriminator 14 view .LVU1349
1196:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4312              		.loc 1 1196 5 discriminator 14 view .LVU1350
1196:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4313              		.loc 1 1196 12 is_stmt 0 discriminator 14 view .LVU1351
 4314 0056 B4F85C70 		ldrh	r7, [r4, #92]
 4315              	.LVL271:
1199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4316              		.loc 1 1199 5 is_stmt 1 discriminator 14 view .LVU1352
 4317              	.L450:
1199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4318              		.loc 1 1199 11 view .LVU1353
1199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4319              		.loc 1 1199 17 is_stmt 0 view .LVU1354
 4320 005a B4F85A00 		ldrh	r0, [r4, #90]
 4321 005e 80B2     		uxth	r0, r0
1199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4322              		.loc 1 1199 11 view .LVU1355
 4323 0060 B8B9     		cbnz	r0, .L453
1219:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4324              		.loc 1 1219 5 is_stmt 1 view .LVU1356
1219:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4325              		.loc 1 1219 20 is_stmt 0 view .LVU1357
 4326 0062 2023     		movs	r3, #32
 4327 0064 84F87230 		strb	r3, [r4, #114]
1222:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4328              		.loc 1 1222 5 is_stmt 1 view .LVU1358
1222:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4329              		.loc 1 1222 5 view .LVU1359
 4330 0068 84F87000 		strb	r0, [r4, #112]
1222:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4331              		.loc 1 1222 5 view .LVU1360
1224:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4332              		.loc 1 1224 5 view .LVU1361
 4333              	.LVL272:
 4334              	.L444:
1230:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4335              		.loc 1 1230 1 is_stmt 0 view .LVU1362
 4336 006c 02B0     		add	sp, sp, #8
 4337              	.LCFI32:
 4338              		.cfi_remember_state
 4339              		.cfi_def_cfa_offset 24
 4340              		@ sp needed
 4341 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4342              	.LVL273:
 4343              	.L446:
 4344              	.LCFI33:
 4345              		.cfi_restore_state
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4346              		.loc 1 1195 5 is_stmt 1 discriminator 4 view .LVU1363
 4347 0072 FF23     		movs	r3, #255
 4348 0074 EDE7     		b	.L465
 4349              	.L445:
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4350              		.loc 1 1195 5 discriminator 2 view .LVU1364
 4351 0076 23B9     		cbnz	r3, .L448
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4352              		.loc 1 1195 5 discriminator 5 view .LVU1365
 4353 0078 2369     		ldr	r3, [r4, #16]
 4354 007a 002B     		cmp	r3, #0
 4355 007c F9D0     		beq	.L446
 4356              	.L449:
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4357              		.loc 1 1195 5 discriminator 8 view .LVU1366
 4358 007e 7F23     		movs	r3, #127
 4359 0080 E7E7     		b	.L465
 4360              	.L448:
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4361              		.loc 1 1195 5 discriminator 6 view .LVU1367
 4362 0082 B3F1805F 		cmp	r3, #268435456
 4363 0086 E6D1     		bne	.L447
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4364              		.loc 1 1195 5 discriminator 9 view .LVU1368
 4365 0088 2369     		ldr	r3, [r4, #16]
 4366 008a 002B     		cmp	r3, #0
 4367 008c F7D0     		beq	.L449
1195:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4368              		.loc 1 1195 5 discriminator 12 view .LVU1369
 4369 008e 3F23     		movs	r3, #63
 4370 0090 DFE7     		b	.L465
 4371              	.LVL274:
 4372              	.L453:
1201:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4373              		.loc 1 1201 7 view .LVU1370
1201:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4374              		.loc 1 1201 11 is_stmt 0 view .LVU1371
 4375 0092 0096     		str	r6, [sp]
 4376 0094 4346     		mov	r3, r8
 4377 0096 0022     		movs	r2, #0
 4378 0098 2021     		movs	r1, #32
 4379 009a 2046     		mov	r0, r4
 4380 009c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4381              	.LVL275:
1201:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4382              		.loc 1 1201 10 view .LVU1372
 4383 00a0 D0B9     		cbnz	r0, .L458
1205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4384              		.loc 1 1205 7 is_stmt 1 view .LVU1373
1205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4385              		.loc 1 1205 10 is_stmt 0 view .LVU1374
 4386 00a2 A268     		ldr	r2, [r4, #8]
 4387 00a4 2368     		ldr	r3, [r4]
 4388 00a6 B2F5805F 		cmp	r2, #4096
 4389 00aa 0CD1     		bne	.L451
1205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 4390              		.loc 1 1205 58 discriminator 1 view .LVU1375
 4391 00ac 2269     		ldr	r2, [r4, #16]
 4392 00ae 52B9     		cbnz	r2, .L451
1207:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 4393              		.loc 1 1207 9 is_stmt 1 view .LVU1376
 4394              	.LVL276:
1208:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 4395              		.loc 1 1208 9 view .LVU1377
1208:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 4396              		.loc 1 1208 42 is_stmt 0 view .LVU1378
 4397 00b0 9B8C     		ldrh	r3, [r3, #36]
1208:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 4398              		.loc 1 1208 16 view .LVU1379
 4399 00b2 3B40     		ands	r3, r3, r7
1208:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 4400              		.loc 1 1208 14 view .LVU1380
 4401 00b4 25F8023B 		strh	r3, [r5], #2	@ movhi
 4402              	.LVL277:
1209:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 4403              		.loc 1 1209 9 is_stmt 1 view .LVU1381
 4404              	.L452:
1215:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 4405              		.loc 1 1215 7 view .LVU1382
1215:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 4406              		.loc 1 1215 12 is_stmt 0 view .LVU1383
 4407 00b8 B4F85A20 		ldrh	r2, [r4, #90]
1215:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 4408              		.loc 1 1215 25 view .LVU1384
 4409 00bc 013A     		subs	r2, r2, #1
 4410 00be 92B2     		uxth	r2, r2
 4411 00c0 A4F85A20 		strh	r2, [r4, #90]	@ movhi
 4412 00c4 C9E7     		b	.L450
 4413              	.L451:
1213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 4414              		.loc 1 1213 9 is_stmt 1 view .LVU1385
 4415              	.LVL278:
1213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 4416              		.loc 1 1213 45 is_stmt 0 view .LVU1386
 4417 00c6 9B8C     		ldrh	r3, [r3, #36]
1213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 4418              		.loc 1 1213 20 view .LVU1387
 4419 00c8 3B40     		ands	r3, r3, r7
1213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 4420              		.loc 1 1213 18 view .LVU1388
 4421 00ca 05F8013B 		strb	r3, [r5], #1
 4422              	.LVL279:
1213:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 4423              		.loc 1 1213 18 view .LVU1389
 4424 00ce F3E7     		b	.L452
 4425              	.LVL280:
 4426              	.L456:
1179:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 4427              		.loc 1 1179 15 view .LVU1390
 4428 00d0 0120     		movs	r0, #1
 4429              	.LVL281:
1179:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 4430              		.loc 1 1179 15 view .LVU1391
 4431 00d2 CBE7     		b	.L444
 4432              	.LVL282:
 4433              	.L457:
1228:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4434              		.loc 1 1228 12 view .LVU1392
 4435 00d4 0220     		movs	r0, #2
 4436              	.LVL283:
1228:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4437              		.loc 1 1228 12 view .LVU1393
 4438 00d6 C9E7     		b	.L444
 4439              	.LVL284:
 4440              	.L458:
1203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 4441              		.loc 1 1203 16 view .LVU1394
 4442 00d8 0320     		movs	r0, #3
 4443 00da C7E7     		b	.L444
 4444              		.cfi_endproc
 4445              	.LFE317:
 4447              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4448              		.align	1
 4449              		.global	UART_CheckIdleState
 4450              		.syntax unified
 4451              		.thumb
 4452              		.thumb_func
 4453              		.fpu softvfp
 4455              	UART_CheckIdleState:
 4456              	.LVL285:
 4457              	.LFB350:
3168:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 4458              		.loc 1 3168 1 is_stmt 1 view -0
 4459              		.cfi_startproc
 4460              		@ args = 0, pretend = 0, frame = 0
 4461              		@ frame_needed = 0, uses_anonymous_args = 0
3169:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4462              		.loc 1 3169 3 view .LVU1396
3172:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4463              		.loc 1 3172 3 view .LVU1397
3168:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 4464              		.loc 1 3168 1 is_stmt 0 view .LVU1398
 4465 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 4466              	.LCFI34:
 4467              		.cfi_def_cfa_offset 24
 4468              		.cfi_offset 4, -16
 4469              		.cfi_offset 5, -12
 4470              		.cfi_offset 6, -8
 4471              		.cfi_offset 14, -4
3168:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 4472              		.loc 1 3168 1 view .LVU1399
 4473 0002 0446     		mov	r4, r0
3172:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4474              		.loc 1 3172 20 view .LVU1400
 4475 0004 0026     		movs	r6, #0
 4476 0006 4667     		str	r6, [r0, #116]
3175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4477              		.loc 1 3175 3 is_stmt 1 view .LVU1401
3175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4478              		.loc 1 3175 15 is_stmt 0 view .LVU1402
 4479 0008 FFF7FEFF 		bl	HAL_GetTick
 4480              	.LVL286:
3178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4481              		.loc 1 3178 13 view .LVU1403
 4482 000c 2368     		ldr	r3, [r4]
3178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4483              		.loc 1 3178 23 view .LVU1404
 4484 000e 1B68     		ldr	r3, [r3]
3178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4485              		.loc 1 3178 6 view .LVU1405
 4486 0010 1A07     		lsls	r2, r3, #28
3175:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4487              		.loc 1 3175 15 view .LVU1406
 4488 0012 0546     		mov	r5, r0
 4489              	.LVL287:
3178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4490              		.loc 1 3178 3 is_stmt 1 view .LVU1407
3178:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4491              		.loc 1 3178 6 is_stmt 0 view .LVU1408
 4492 0014 17D4     		bmi	.L467
 4493              	.LVL288:
 4494              	.L470:
3188:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4495              		.loc 1 3188 3 is_stmt 1 view .LVU1409
3188:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4496              		.loc 1 3188 13 is_stmt 0 view .LVU1410
 4497 0016 2368     		ldr	r3, [r4]
3188:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4498              		.loc 1 3188 23 view .LVU1411
 4499 0018 1B68     		ldr	r3, [r3]
3188:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4500              		.loc 1 3188 6 view .LVU1412
 4501 001a 5B07     		lsls	r3, r3, #29
 4502 001c 0AD5     		bpl	.L469
3191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4503              		.loc 1 3191 5 is_stmt 1 view .LVU1413
3191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4504              		.loc 1 3191 9 is_stmt 0 view .LVU1414
 4505 001e 6FF07E43 		mvn	r3, #-33554432
 4506 0022 0093     		str	r3, [sp]
 4507 0024 0022     		movs	r2, #0
 4508 0026 2B46     		mov	r3, r5
 4509 0028 4FF48001 		mov	r1, #4194304
 4510 002c 2046     		mov	r0, r4
 4511 002e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4512              	.LVL289:
3191:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4513              		.loc 1 3191 8 view .LVU1415
 4514 0032 A0B9     		cbnz	r0, .L472
 4515              	.L469:
3199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4516              		.loc 1 3199 3 is_stmt 1 view .LVU1416
3199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4517              		.loc 1 3199 17 is_stmt 0 view .LVU1417
 4518 0034 2023     		movs	r3, #32
3203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4519              		.loc 1 3203 3 view .LVU1418
 4520 0036 0020     		movs	r0, #0
3199:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4521              		.loc 1 3199 17 view .LVU1419
 4522 0038 84F87130 		strb	r3, [r4, #113]
3200:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4523              		.loc 1 3200 3 is_stmt 1 view .LVU1420
3203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4524              		.loc 1 3203 3 is_stmt 0 view .LVU1421
 4525 003c 84F87000 		strb	r0, [r4, #112]
3200:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4526              		.loc 1 3200 18 view .LVU1422
 4527 0040 84F87230 		strb	r3, [r4, #114]
3203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4528              		.loc 1 3203 3 is_stmt 1 view .LVU1423
3203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4529              		.loc 1 3203 3 view .LVU1424
3203:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4530              		.loc 1 3203 3 view .LVU1425
3205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4531              		.loc 1 3205 3 view .LVU1426
3205:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4532              		.loc 1 3205 10 is_stmt 0 view .LVU1427
 4533 0044 0CE0     		b	.L471
 4534              	.LVL290:
 4535              	.L467:
3181:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4536              		.loc 1 3181 5 is_stmt 1 view .LVU1428
3181:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4537              		.loc 1 3181 9 is_stmt 0 view .LVU1429
 4538 0046 6FF07E43 		mvn	r3, #-33554432
 4539 004a 0093     		str	r3, [sp]
 4540 004c 3246     		mov	r2, r6
 4541 004e 0346     		mov	r3, r0
 4542 0050 4FF40011 		mov	r1, #2097152
 4543 0054 2046     		mov	r0, r4
 4544              	.LVL291:
3181:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4545              		.loc 1 3181 9 view .LVU1430
 4546 0056 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4547              	.LVL292:
3181:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 4548              		.loc 1 3181 8 view .LVU1431
 4549 005a 0028     		cmp	r0, #0
 4550 005c DBD0     		beq	.L470
 4551              	.L472:
3184:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 4552              		.loc 1 3184 14 view .LVU1432
 4553 005e 0320     		movs	r0, #3
 4554              	.L471:
3206:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4555              		.loc 1 3206 1 view .LVU1433
 4556 0060 02B0     		add	sp, sp, #8
 4557              	.LCFI35:
 4558              		.cfi_def_cfa_offset 16
 4559              		@ sp needed
 4560 0062 70BD     		pop	{r4, r5, r6, pc}
3206:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4561              		.loc 1 3206 1 view .LVU1434
 4562              		.cfi_endproc
 4563              	.LFE350:
 4565              		.section	.text.HAL_UART_Init,"ax",%progbits
 4566              		.align	1
 4567              		.global	HAL_UART_Init
 4568              		.syntax unified
 4569              		.thumb
 4570              		.thumb_func
 4571              		.fpu softvfp
 4573              	HAL_UART_Init:
 4574              	.LVL293:
 4575              	.LFB309:
 330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4576              		.loc 1 330 1 is_stmt 1 view -0
 4577              		.cfi_startproc
 4578              		@ args = 0, pretend = 0, frame = 0
 4579              		@ frame_needed = 0, uses_anonymous_args = 0
 332:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4580              		.loc 1 332 3 view .LVU1436
 330:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4581              		.loc 1 330 1 is_stmt 0 view .LVU1437
 4582 0000 10B5     		push	{r4, lr}
 4583              	.LCFI36:
 4584              		.cfi_def_cfa_offset 8
 4585              		.cfi_offset 4, -8
 4586              		.cfi_offset 14, -4
 332:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4587              		.loc 1 332 6 view .LVU1438
 4588 0002 0446     		mov	r4, r0
 4589 0004 60B3     		cbz	r0, .L478
 337:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4590              		.loc 1 337 3 is_stmt 1 view .LVU1439
 345:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4591              		.loc 1 345 5 view .LVU1440
 348:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4592              		.loc 1 348 3 view .LVU1441
 348:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4593              		.loc 1 348 12 is_stmt 0 view .LVU1442
 4594 0006 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 348:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4595              		.loc 1 348 6 view .LVU1443
 4596 000a 03F0FF02 		and	r2, r3, #255
 4597 000e 1BB9     		cbnz	r3, .L479
 351:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4598              		.loc 1 351 5 is_stmt 1 view .LVU1444
 351:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4599              		.loc 1 351 17 is_stmt 0 view .LVU1445
 4600 0010 80F87020 		strb	r2, [r0, #112]
 365:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4601              		.loc 1 365 5 is_stmt 1 view .LVU1446
 4602 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 4603              	.LVL294:
 4604              	.L479:
 369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4605              		.loc 1 369 3 view .LVU1447
 372:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4606              		.loc 1 372 3 is_stmt 0 view .LVU1448
 4607 0018 2268     		ldr	r2, [r4]
 369:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4608              		.loc 1 369 17 view .LVU1449
 4609 001a 2423     		movs	r3, #36
 4610 001c 84F87130 		strb	r3, [r4, #113]
 372:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4611              		.loc 1 372 3 is_stmt 1 view .LVU1450
 4612 0020 1368     		ldr	r3, [r2]
 4613 0022 23F00103 		bic	r3, r3, #1
 4614 0026 1360     		str	r3, [r2]
 375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4615              		.loc 1 375 3 view .LVU1451
 375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4616              		.loc 1 375 7 is_stmt 0 view .LVU1452
 4617 0028 2046     		mov	r0, r4
 4618 002a FFF7FEFF 		bl	UART_SetConfig
 4619              	.LVL295:
 375:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4620              		.loc 1 375 6 view .LVU1453
 4621 002e 0128     		cmp	r0, #1
 4622 0030 16D0     		beq	.L478
 380:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4623              		.loc 1 380 3 is_stmt 1 view .LVU1454
 380:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4624              		.loc 1 380 6 is_stmt 0 view .LVU1455
 4625 0032 636A     		ldr	r3, [r4, #36]
 4626 0034 13B1     		cbz	r3, .L481
 382:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4627              		.loc 1 382 5 is_stmt 1 view .LVU1456
 4628 0036 2046     		mov	r0, r4
 4629 0038 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4630              	.LVL296:
 4631              	.L481:
 388:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4632              		.loc 1 388 3 view .LVU1457
 4633 003c 2368     		ldr	r3, [r4]
 4634 003e 5A68     		ldr	r2, [r3, #4]
 4635 0040 22F49042 		bic	r2, r2, #18432
 4636 0044 5A60     		str	r2, [r3, #4]
 389:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4637              		.loc 1 389 3 view .LVU1458
 4638 0046 9A68     		ldr	r2, [r3, #8]
 4639 0048 22F02A02 		bic	r2, r2, #42
 4640 004c 9A60     		str	r2, [r3, #8]
 392:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4641              		.loc 1 392 3 view .LVU1459
 4642 004e 1A68     		ldr	r2, [r3]
 4643 0050 42F00102 		orr	r2, r2, #1
 395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4644              		.loc 1 395 11 is_stmt 0 view .LVU1460
 4645 0054 2046     		mov	r0, r4
 392:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4646              		.loc 1 392 3 view .LVU1461
 4647 0056 1A60     		str	r2, [r3]
 395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4648              		.loc 1 395 3 is_stmt 1 view .LVU1462
 396:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4649              		.loc 1 396 1 is_stmt 0 view .LVU1463
 4650 0058 BDE81040 		pop	{r4, lr}
 4651              	.LCFI37:
 4652              		.cfi_remember_state
 4653              		.cfi_restore 14
 4654              		.cfi_restore 4
 4655              		.cfi_def_cfa_offset 0
 4656              	.LVL297:
 395:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4657              		.loc 1 395 11 view .LVU1464
 4658 005c FFF7FEBF 		b	UART_CheckIdleState
 4659              	.LVL298:
 4660              	.L478:
 4661              	.LCFI38:
 4662              		.cfi_restore_state
 396:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4663              		.loc 1 396 1 view .LVU1465
 4664 0060 0120     		movs	r0, #1
 4665 0062 10BD     		pop	{r4, pc}
 396:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4666              		.loc 1 396 1 view .LVU1466
 4667              		.cfi_endproc
 4668              	.LFE309:
 4670              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4671              		.align	1
 4672              		.global	HAL_HalfDuplex_Init
 4673              		.syntax unified
 4674              		.thumb
 4675              		.thumb_func
 4676              		.fpu softvfp
 4678              	HAL_HalfDuplex_Init:
 4679              	.LVL299:
 4680              	.LFB310:
 405:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4681              		.loc 1 405 1 is_stmt 1 view -0
 4682              		.cfi_startproc
 4683              		@ args = 0, pretend = 0, frame = 0
 4684              		@ frame_needed = 0, uses_anonymous_args = 0
 407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4685              		.loc 1 407 3 view .LVU1468
 405:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4686              		.loc 1 405 1 is_stmt 0 view .LVU1469
 4687 0000 10B5     		push	{r4, lr}
 4688              	.LCFI39:
 4689              		.cfi_def_cfa_offset 8
 4690              		.cfi_offset 4, -8
 4691              		.cfi_offset 14, -4
 407:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4692              		.loc 1 407 6 view .LVU1470
 4693 0002 0446     		mov	r4, r0
 4694 0004 80B3     		cbz	r0, .L490
 413:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4695              		.loc 1 413 3 is_stmt 1 view .LVU1471
 415:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4696              		.loc 1 415 3 view .LVU1472
 415:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4697              		.loc 1 415 12 is_stmt 0 view .LVU1473
 4698 0006 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 415:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4699              		.loc 1 415 6 view .LVU1474
 4700 000a 03F0FF02 		and	r2, r3, #255
 4701 000e 1BB9     		cbnz	r3, .L491
 418:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4702              		.loc 1 418 5 is_stmt 1 view .LVU1475
 418:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4703              		.loc 1 418 17 is_stmt 0 view .LVU1476
 4704 0010 80F87020 		strb	r2, [r0, #112]
 432:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4705              		.loc 1 432 5 is_stmt 1 view .LVU1477
 4706 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 4707              	.LVL300:
 4708              	.L491:
 436:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4709              		.loc 1 436 3 view .LVU1478
 439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4710              		.loc 1 439 3 is_stmt 0 view .LVU1479
 4711 0018 2268     		ldr	r2, [r4]
 436:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4712              		.loc 1 436 17 view .LVU1480
 4713 001a 2423     		movs	r3, #36
 4714 001c 84F87130 		strb	r3, [r4, #113]
 439:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4715              		.loc 1 439 3 is_stmt 1 view .LVU1481
 4716 0020 1368     		ldr	r3, [r2]
 4717 0022 23F00103 		bic	r3, r3, #1
 4718 0026 1360     		str	r3, [r2]
 442:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4719              		.loc 1 442 3 view .LVU1482
 442:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4720              		.loc 1 442 7 is_stmt 0 view .LVU1483
 4721 0028 2046     		mov	r0, r4
 4722 002a FFF7FEFF 		bl	UART_SetConfig
 4723              	.LVL301:
 442:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4724              		.loc 1 442 6 view .LVU1484
 4725 002e 0128     		cmp	r0, #1
 4726 0030 1AD0     		beq	.L490
 447:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4727              		.loc 1 447 3 is_stmt 1 view .LVU1485
 447:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4728              		.loc 1 447 6 is_stmt 0 view .LVU1486
 4729 0032 636A     		ldr	r3, [r4, #36]
 4730 0034 13B1     		cbz	r3, .L493
 449:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4731              		.loc 1 449 5 is_stmt 1 view .LVU1487
 4732 0036 2046     		mov	r0, r4
 4733 0038 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4734              	.LVL302:
 4735              	.L493:
 455:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4736              		.loc 1 455 3 view .LVU1488
 4737 003c 2368     		ldr	r3, [r4]
 4738 003e 5A68     		ldr	r2, [r3, #4]
 4739 0040 22F49042 		bic	r2, r2, #18432
 4740 0044 5A60     		str	r2, [r3, #4]
 456:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4741              		.loc 1 456 3 view .LVU1489
 4742 0046 9A68     		ldr	r2, [r3, #8]
 4743 0048 22F02202 		bic	r2, r2, #34
 4744 004c 9A60     		str	r2, [r3, #8]
 459:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4745              		.loc 1 459 3 view .LVU1490
 4746 004e 9A68     		ldr	r2, [r3, #8]
 4747 0050 42F00802 		orr	r2, r2, #8
 4748 0054 9A60     		str	r2, [r3, #8]
 462:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4749              		.loc 1 462 3 view .LVU1491
 4750 0056 1A68     		ldr	r2, [r3]
 4751 0058 42F00102 		orr	r2, r2, #1
 465:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4752              		.loc 1 465 11 is_stmt 0 view .LVU1492
 4753 005c 2046     		mov	r0, r4
 462:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4754              		.loc 1 462 3 view .LVU1493
 4755 005e 1A60     		str	r2, [r3]
 465:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4756              		.loc 1 465 3 is_stmt 1 view .LVU1494
 466:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4757              		.loc 1 466 1 is_stmt 0 view .LVU1495
 4758 0060 BDE81040 		pop	{r4, lr}
 4759              	.LCFI40:
 4760              		.cfi_remember_state
 4761              		.cfi_restore 14
 4762              		.cfi_restore 4
 4763              		.cfi_def_cfa_offset 0
 4764              	.LVL303:
 465:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4765              		.loc 1 465 11 view .LVU1496
 4766 0064 FFF7FEBF 		b	UART_CheckIdleState
 4767              	.LVL304:
 4768              	.L490:
 4769              	.LCFI41:
 4770              		.cfi_restore_state
 466:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4771              		.loc 1 466 1 view .LVU1497
 4772 0068 0120     		movs	r0, #1
 4773 006a 10BD     		pop	{r4, pc}
 466:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4774              		.loc 1 466 1 view .LVU1498
 4775              		.cfi_endproc
 4776              	.LFE310:
 4778              		.section	.text.HAL_LIN_Init,"ax",%progbits
 4779              		.align	1
 4780              		.global	HAL_LIN_Init
 4781              		.syntax unified
 4782              		.thumb
 4783              		.thumb_func
 4784              		.fpu softvfp
 4786              	HAL_LIN_Init:
 4787              	.LVL305:
 4788              	.LFB311:
 480:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4789              		.loc 1 480 1 is_stmt 1 view -0
 4790              		.cfi_startproc
 4791              		@ args = 0, pretend = 0, frame = 0
 4792              		@ frame_needed = 0, uses_anonymous_args = 0
 482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4793              		.loc 1 482 3 view .LVU1500
 480:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4794              		.loc 1 480 1 is_stmt 0 view .LVU1501
 4795 0000 38B5     		push	{r3, r4, r5, lr}
 4796              	.LCFI42:
 4797              		.cfi_def_cfa_offset 16
 4798              		.cfi_offset 3, -16
 4799              		.cfi_offset 4, -12
 4800              		.cfi_offset 5, -8
 4801              		.cfi_offset 14, -4
 480:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4802              		.loc 1 480 1 view .LVU1502
 4803 0002 0D46     		mov	r5, r1
 482:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4804              		.loc 1 482 6 view .LVU1503
 4805 0004 0446     		mov	r4, r0
 4806 0006 0028     		cmp	r0, #0
 4807 0008 3CD0     		beq	.L502
 488:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 4808              		.loc 1 488 3 is_stmt 1 view .LVU1504
 490:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4809              		.loc 1 490 3 view .LVU1505
 493:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4810              		.loc 1 493 3 view .LVU1506
 493:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4811              		.loc 1 493 6 is_stmt 0 view .LVU1507
 4812 000a C369     		ldr	r3, [r0, #28]
 4813 000c B3F5004F 		cmp	r3, #32768
 4814 0010 38D0     		beq	.L502
 498:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4815              		.loc 1 498 3 is_stmt 1 view .LVU1508
 498:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4816              		.loc 1 498 6 is_stmt 0 view .LVU1509
 4817 0012 8368     		ldr	r3, [r0, #8]
 4818 0014 002B     		cmp	r3, #0
 4819 0016 35D1     		bne	.L502
 503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4820              		.loc 1 503 3 is_stmt 1 view .LVU1510
 503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4821              		.loc 1 503 12 is_stmt 0 view .LVU1511
 4822 0018 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 503:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4823              		.loc 1 503 6 view .LVU1512
 4824 001c 03F0FF02 		and	r2, r3, #255
 4825 0020 1BB9     		cbnz	r3, .L504
 506:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4826              		.loc 1 506 5 is_stmt 1 view .LVU1513
 506:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4827              		.loc 1 506 17 is_stmt 0 view .LVU1514
 4828 0022 80F87020 		strb	r2, [r0, #112]
 520:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4829              		.loc 1 520 5 is_stmt 1 view .LVU1515
 4830 0026 FFF7FEFF 		bl	HAL_UART_MspInit
 4831              	.LVL306:
 4832              	.L504:
 524:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4833              		.loc 1 524 3 view .LVU1516
 527:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4834              		.loc 1 527 3 is_stmt 0 view .LVU1517
 4835 002a 2268     		ldr	r2, [r4]
 524:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4836              		.loc 1 524 17 view .LVU1518
 4837 002c 2423     		movs	r3, #36
 4838 002e 84F87130 		strb	r3, [r4, #113]
 527:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4839              		.loc 1 527 3 is_stmt 1 view .LVU1519
 4840 0032 1368     		ldr	r3, [r2]
 4841 0034 23F00103 		bic	r3, r3, #1
 4842 0038 1360     		str	r3, [r2]
 530:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4843              		.loc 1 530 3 view .LVU1520
 530:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4844              		.loc 1 530 7 is_stmt 0 view .LVU1521
 4845 003a 2046     		mov	r0, r4
 4846 003c FFF7FEFF 		bl	UART_SetConfig
 4847              	.LVL307:
 530:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4848              		.loc 1 530 6 view .LVU1522
 4849 0040 0128     		cmp	r0, #1
 4850 0042 1FD0     		beq	.L502
 535:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4851              		.loc 1 535 3 is_stmt 1 view .LVU1523
 535:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4852              		.loc 1 535 6 is_stmt 0 view .LVU1524
 4853 0044 636A     		ldr	r3, [r4, #36]
 4854 0046 13B1     		cbz	r3, .L505
 537:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4855              		.loc 1 537 5 is_stmt 1 view .LVU1525
 4856 0048 2046     		mov	r0, r4
 4857 004a FFF7FEFF 		bl	UART_AdvFeatureConfig
 4858              	.LVL308:
 4859              	.L505:
 543:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 4860              		.loc 1 543 3 view .LVU1526
 4861 004e 2368     		ldr	r3, [r4]
 4862 0050 5A68     		ldr	r2, [r3, #4]
 4863 0052 22F40062 		bic	r2, r2, #2048
 4864 0056 5A60     		str	r2, [r3, #4]
 544:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4865              		.loc 1 544 3 view .LVU1527
 4866 0058 9A68     		ldr	r2, [r3, #8]
 4867 005a 22F02A02 		bic	r2, r2, #42
 4868 005e 9A60     		str	r2, [r3, #8]
 547:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4869              		.loc 1 547 3 view .LVU1528
 4870 0060 5A68     		ldr	r2, [r3, #4]
 4871 0062 42F48042 		orr	r2, r2, #16384
 4872 0066 5A60     		str	r2, [r3, #4]
 550:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4873              		.loc 1 550 3 view .LVU1529
 4874 0068 5A68     		ldr	r2, [r3, #4]
 4875 006a 22F02002 		bic	r2, r2, #32
 4876 006e 2A43     		orrs	r2, r2, r5
 4877 0070 5A60     		str	r2, [r3, #4]
 553:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4878              		.loc 1 553 3 view .LVU1530
 4879 0072 1A68     		ldr	r2, [r3]
 4880 0074 42F00102 		orr	r2, r2, #1
 4881 0078 1A60     		str	r2, [r3]
 556:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4882              		.loc 1 556 3 view .LVU1531
 556:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4883              		.loc 1 556 11 is_stmt 0 view .LVU1532
 4884 007a 2046     		mov	r0, r4
 557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4885              		.loc 1 557 1 view .LVU1533
 4886 007c BDE83840 		pop	{r3, r4, r5, lr}
 4887              	.LCFI43:
 4888              		.cfi_remember_state
 4889              		.cfi_restore 14
 4890              		.cfi_restore 5
 4891              		.cfi_restore 4
 4892              		.cfi_restore 3
 4893              		.cfi_def_cfa_offset 0
 4894              	.LVL309:
 556:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 4895              		.loc 1 556 11 view .LVU1534
 4896 0080 FFF7FEBF 		b	UART_CheckIdleState
 4897              	.LVL310:
 4898              	.L502:
 4899              	.LCFI44:
 4900              		.cfi_restore_state
 557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4901              		.loc 1 557 1 view .LVU1535
 4902 0084 0120     		movs	r0, #1
 4903 0086 38BD     		pop	{r3, r4, r5, pc}
 557:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4904              		.loc 1 557 1 view .LVU1536
 4905              		.cfi_endproc
 4906              	.LFE311:
 4908              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4909              		.align	1
 4910              		.global	HAL_MultiProcessor_Init
 4911              		.syntax unified
 4912              		.thumb
 4913              		.thumb_func
 4914              		.fpu softvfp
 4916              	HAL_MultiProcessor_Init:
 4917              	.LVL311:
 4918              	.LFB312:
 579:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4919              		.loc 1 579 1 is_stmt 1 view -0
 4920              		.cfi_startproc
 4921              		@ args = 0, pretend = 0, frame = 0
 4922              		@ frame_needed = 0, uses_anonymous_args = 0
 581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4923              		.loc 1 581 3 view .LVU1538
 579:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4924              		.loc 1 579 1 is_stmt 0 view .LVU1539
 4925 0000 70B5     		push	{r4, r5, r6, lr}
 4926              	.LCFI45:
 4927              		.cfi_def_cfa_offset 16
 4928              		.cfi_offset 4, -16
 4929              		.cfi_offset 5, -12
 4930              		.cfi_offset 6, -8
 4931              		.cfi_offset 14, -4
 579:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4932              		.loc 1 579 1 view .LVU1540
 4933 0002 0E46     		mov	r6, r1
 4934 0004 1546     		mov	r5, r2
 581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4935              		.loc 1 581 6 view .LVU1541
 4936 0006 0446     		mov	r4, r0
 4937 0008 0028     		cmp	r0, #0
 4938 000a 3AD0     		beq	.L517
 587:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4939              		.loc 1 587 3 is_stmt 1 view .LVU1542
 589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4940              		.loc 1 589 3 view .LVU1543
 589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4941              		.loc 1 589 12 is_stmt 0 view .LVU1544
 4942 000c 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4943              		.loc 1 589 6 view .LVU1545
 4944 0010 03F0FF02 		and	r2, r3, #255
 4945              	.LVL312:
 589:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4946              		.loc 1 589 6 view .LVU1546
 4947 0014 1BB9     		cbnz	r3, .L518
 592:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4948              		.loc 1 592 5 is_stmt 1 view .LVU1547
 592:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4949              		.loc 1 592 17 is_stmt 0 view .LVU1548
 4950 0016 80F87020 		strb	r2, [r0, #112]
 606:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4951              		.loc 1 606 5 is_stmt 1 view .LVU1549
 4952 001a FFF7FEFF 		bl	HAL_UART_MspInit
 4953              	.LVL313:
 4954              	.L518:
 610:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4955              		.loc 1 610 3 view .LVU1550
 613:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4956              		.loc 1 613 3 is_stmt 0 view .LVU1551
 4957 001e 2268     		ldr	r2, [r4]
 610:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4958              		.loc 1 610 17 view .LVU1552
 4959 0020 2423     		movs	r3, #36
 4960 0022 84F87130 		strb	r3, [r4, #113]
 613:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4961              		.loc 1 613 3 is_stmt 1 view .LVU1553
 4962 0026 1368     		ldr	r3, [r2]
 4963 0028 23F00103 		bic	r3, r3, #1
 4964 002c 1360     		str	r3, [r2]
 616:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4965              		.loc 1 616 3 view .LVU1554
 616:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4966              		.loc 1 616 7 is_stmt 0 view .LVU1555
 4967 002e 2046     		mov	r0, r4
 4968 0030 FFF7FEFF 		bl	UART_SetConfig
 4969              	.LVL314:
 616:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4970              		.loc 1 616 6 view .LVU1556
 4971 0034 0128     		cmp	r0, #1
 4972 0036 24D0     		beq	.L517
 621:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4973              		.loc 1 621 3 is_stmt 1 view .LVU1557
 621:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4974              		.loc 1 621 6 is_stmt 0 view .LVU1558
 4975 0038 636A     		ldr	r3, [r4, #36]
 4976 003a 13B1     		cbz	r3, .L520
 623:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4977              		.loc 1 623 5 is_stmt 1 view .LVU1559
 4978 003c 2046     		mov	r0, r4
 4979 003e FFF7FEFF 		bl	UART_AdvFeatureConfig
 4980              	.LVL315:
 4981              	.L520:
 629:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4982              		.loc 1 629 3 view .LVU1560
 4983 0042 2368     		ldr	r3, [r4]
 4984 0044 5A68     		ldr	r2, [r3, #4]
 4985 0046 22F49042 		bic	r2, r2, #18432
 4986 004a 5A60     		str	r2, [r3, #4]
 630:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 4987              		.loc 1 630 3 view .LVU1561
 4988 004c 9A68     		ldr	r2, [r3, #8]
 4989 004e 22F02A02 		bic	r2, r2, #42
 4990 0052 9A60     		str	r2, [r3, #8]
 632:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4991              		.loc 1 632 3 view .LVU1562
 632:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 4992              		.loc 1 632 6 is_stmt 0 view .LVU1563
 4993 0054 B5F5006F 		cmp	r5, #2048
 635:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 4994              		.loc 1 635 5 is_stmt 1 view .LVU1564
 4995 0058 01BF     		itttt	eq
 4996 005a 5868     		ldreq	r0, [r3, #4]
 4997 005c 20F07F40 		biceq	r0, r0, #-16777216
 4998 0060 40EA0660 		orreq	r0, r0, r6, lsl #24
 4999 0064 5860     		streq	r0, [r3, #4]
 639:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5000              		.loc 1 639 3 view .LVU1565
 5001 0066 1968     		ldr	r1, [r3]
 5002 0068 21F40061 		bic	r1, r1, #2048
 5003 006c 2943     		orrs	r1, r1, r5
 5004 006e 1960     		str	r1, [r3]
 642:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5005              		.loc 1 642 3 view .LVU1566
 5006 0070 1A68     		ldr	r2, [r3]
 5007 0072 42F00102 		orr	r2, r2, #1
 645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 5008              		.loc 1 645 11 is_stmt 0 view .LVU1567
 5009 0076 2046     		mov	r0, r4
 642:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5010              		.loc 1 642 3 view .LVU1568
 5011 0078 1A60     		str	r2, [r3]
 645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 5012              		.loc 1 645 3 is_stmt 1 view .LVU1569
 646:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5013              		.loc 1 646 1 is_stmt 0 view .LVU1570
 5014 007a BDE87040 		pop	{r4, r5, r6, lr}
 5015              	.LCFI46:
 5016              		.cfi_remember_state
 5017              		.cfi_restore 14
 5018              		.cfi_restore 6
 5019              		.cfi_restore 5
 5020              		.cfi_restore 4
 5021              		.cfi_def_cfa_offset 0
 5022              	.LVL316:
 645:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 5023              		.loc 1 645 11 view .LVU1571
 5024 007e FFF7FEBF 		b	UART_CheckIdleState
 5025              	.LVL317:
 5026              	.L517:
 5027              	.LCFI47:
 5028              		.cfi_restore_state
 646:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5029              		.loc 1 646 1 view .LVU1572
 5030 0082 0120     		movs	r0, #1
 5031 0084 70BD     		pop	{r4, r5, r6, pc}
 646:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5032              		.loc 1 646 1 view .LVU1573
 5033              		.cfi_endproc
 5034              	.LFE312:
 5036              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5037              		.align	1
 5038              		.global	HAL_MultiProcessor_EnableMuteMode
 5039              		.syntax unified
 5040              		.thumb
 5041              		.thumb_func
 5042              		.fpu softvfp
 5044              	HAL_MultiProcessor_EnableMuteMode:
 5045              	.LVL318:
 5046              	.LFB340:
2579:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 5047              		.loc 1 2579 1 is_stmt 1 view -0
 5048              		.cfi_startproc
 5049              		@ args = 0, pretend = 0, frame = 0
 5050              		@ frame_needed = 0, uses_anonymous_args = 0
 5051              		@ link register save eliminated.
2581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5052              		.loc 1 2581 3 view .LVU1575
2581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5053              		.loc 1 2581 3 view .LVU1576
 5054 0000 90F87020 		ldrb	r2, [r0, #112]	@ zero_extendqisi2
 5055 0004 012A     		cmp	r2, #1
 5056 0006 0FD0     		beq	.L529
2581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5057              		.loc 1 2581 3 discriminator 2 view .LVU1577
 5058 0008 0122     		movs	r2, #1
 5059 000a 80F87020 		strb	r2, [r0, #112]
2581:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5060              		.loc 1 2581 3 discriminator 2 view .LVU1578
2583:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5061              		.loc 1 2583 3 discriminator 2 view .LVU1579
2586:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5062              		.loc 1 2586 3 is_stmt 0 discriminator 2 view .LVU1580
 5063 000e 0168     		ldr	r1, [r0]
2583:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5064              		.loc 1 2583 17 discriminator 2 view .LVU1581
 5065 0010 2422     		movs	r2, #36
 5066 0012 80F87120 		strb	r2, [r0, #113]
2586:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5067              		.loc 1 2586 3 is_stmt 1 discriminator 2 view .LVU1582
 5068 0016 0A68     		ldr	r2, [r1]
 5069 0018 42F40052 		orr	r2, r2, #8192
 5070 001c 0A60     		str	r2, [r1]
2588:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5071              		.loc 1 2588 3 discriminator 2 view .LVU1583
2588:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5072              		.loc 1 2588 17 is_stmt 0 discriminator 2 view .LVU1584
 5073 001e 2022     		movs	r2, #32
 5074 0020 80F87120 		strb	r2, [r0, #113]
2590:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 5075              		.loc 1 2590 3 is_stmt 1 discriminator 2 view .LVU1585
2590:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 5076              		.loc 1 2590 11 is_stmt 0 discriminator 2 view .LVU1586
 5077 0024 FFF7FEBF 		b	UART_CheckIdleState
 5078              	.LVL319:
 5079              	.L529:
2591:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5080              		.loc 1 2591 1 view .LVU1587
 5081 0028 0220     		movs	r0, #2
 5082              	.LVL320:
2591:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5083              		.loc 1 2591 1 view .LVU1588
 5084 002a 7047     		bx	lr
 5085              		.cfi_endproc
 5086              	.LFE340:
 5088              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5089              		.align	1
 5090              		.global	HAL_MultiProcessor_DisableMuteMode
 5091              		.syntax unified
 5092              		.thumb
 5093              		.thumb_func
 5094              		.fpu softvfp
 5096              	HAL_MultiProcessor_DisableMuteMode:
 5097              	.LVL321:
 5098              	.LFB341:
2600:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 5099              		.loc 1 2600 1 is_stmt 1 view -0
 5100              		.cfi_startproc
 5101              		@ args = 0, pretend = 0, frame = 0
 5102              		@ frame_needed = 0, uses_anonymous_args = 0
 5103              		@ link register save eliminated.
2602:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5104              		.loc 1 2602 3 view .LVU1590
2602:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5105              		.loc 1 2602 3 view .LVU1591
 5106 0000 90F87020 		ldrb	r2, [r0, #112]	@ zero_extendqisi2
 5107 0004 012A     		cmp	r2, #1
 5108 0006 0FD0     		beq	.L531
2602:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5109              		.loc 1 2602 3 discriminator 2 view .LVU1592
 5110 0008 0122     		movs	r2, #1
 5111 000a 80F87020 		strb	r2, [r0, #112]
2602:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5112              		.loc 1 2602 3 discriminator 2 view .LVU1593
2604:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5113              		.loc 1 2604 3 discriminator 2 view .LVU1594
2607:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5114              		.loc 1 2607 3 is_stmt 0 discriminator 2 view .LVU1595
 5115 000e 0168     		ldr	r1, [r0]
2604:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5116              		.loc 1 2604 17 discriminator 2 view .LVU1596
 5117 0010 2422     		movs	r2, #36
 5118 0012 80F87120 		strb	r2, [r0, #113]
2607:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5119              		.loc 1 2607 3 is_stmt 1 discriminator 2 view .LVU1597
 5120 0016 0A68     		ldr	r2, [r1]
 5121 0018 22F40052 		bic	r2, r2, #8192
 5122 001c 0A60     		str	r2, [r1]
2609:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5123              		.loc 1 2609 3 discriminator 2 view .LVU1598
2609:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5124              		.loc 1 2609 17 is_stmt 0 discriminator 2 view .LVU1599
 5125 001e 2022     		movs	r2, #32
 5126 0020 80F87120 		strb	r2, [r0, #113]
2611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 5127              		.loc 1 2611 3 is_stmt 1 discriminator 2 view .LVU1600
2611:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 5128              		.loc 1 2611 11 is_stmt 0 discriminator 2 view .LVU1601
 5129 0024 FFF7FEBF 		b	UART_CheckIdleState
 5130              	.LVL322:
 5131              	.L531:
2612:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5132              		.loc 1 2612 1 view .LVU1602
 5133 0028 0220     		movs	r0, #2
 5134              	.LVL323:
2612:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5135              		.loc 1 2612 1 view .LVU1603
 5136 002a 7047     		bx	lr
 5137              		.cfi_endproc
 5138              	.LFE341:
 5140              		.section	.text.UART_WaitOnFlagForever,"ax",%progbits
 5141              		.align	1
 5142              		.global	UART_WaitOnFlagForever
 5143              		.syntax unified
 5144              		.thumb
 5145              		.thumb_func
 5146              		.fpu softvfp
 5148              	UART_WaitOnFlagForever:
 5149              	.LVL324:
 5150              	.LFB352:
3256:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
 5151              		.loc 1 3256 1 is_stmt 1 view -0
 5152              		.cfi_startproc
 5153              		@ args = 0, pretend = 0, frame = 0
 5154              		@ frame_needed = 0, uses_anonymous_args = 0
 5155              		@ link register save eliminated.
3258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5156              		.loc 1 3258 3 view .LVU1605
3258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5157              		.loc 1 3258 11 is_stmt 0 view .LVU1606
 5158 0000 0068     		ldr	r0, [r0]
 5159              	.LVL325:
 5160              	.L533:
3260:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 5161              		.loc 1 3260 7 is_stmt 1 discriminator 1 view .LVU1607
3258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5162              		.loc 1 3258 9 discriminator 1 view .LVU1608
3258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5163              		.loc 1 3258 11 is_stmt 0 discriminator 1 view .LVU1609
 5164 0002 C369     		ldr	r3, [r0, #28]
3258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5165              		.loc 1 3258 50 discriminator 1 view .LVU1610
 5166 0004 31EA0303 		bics	r3, r1, r3
 5167 0008 0CBF     		ite	eq
 5168 000a 0123     		moveq	r3, #1
 5169 000c 0023     		movne	r3, #0
3258:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5170              		.loc 1 3258 9 discriminator 1 view .LVU1611
 5171 000e 9342     		cmp	r3, r2
 5172 0010 F7D0     		beq	.L533
3262:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** }
 5173              		.loc 1 3262 3 is_stmt 1 view .LVU1612
3263:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5174              		.loc 1 3263 1 is_stmt 0 view .LVU1613
 5175 0012 0020     		movs	r0, #0
 5176 0014 7047     		bx	lr
 5177              		.cfi_endproc
 5178              	.LFE352:
 5180              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 5181              		.align	1
 5182              		.global	HAL_UART_Transmit
 5183              		.syntax unified
 5184              		.thumb
 5185              		.thumb_func
 5186              		.fpu softvfp
 5188              	HAL_UART_Transmit:
 5189              	.LVL326:
 5190              	.LFB316:
1092:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 5191              		.loc 1 1092 1 is_stmt 1 view -0
 5192              		.cfi_startproc
 5193              		@ args = 0, pretend = 0, frame = 0
 5194              		@ frame_needed = 0, uses_anonymous_args = 0
1093:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   //uint32_t tickstart = 0U;
 5195              		.loc 1 1093 3 view .LVU1615
1097:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5196              		.loc 1 1097 3 view .LVU1616
1092:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 5197              		.loc 1 1092 1 is_stmt 0 view .LVU1617
 5198 0000 38B5     		push	{r3, r4, r5, lr}
 5199              	.LCFI48:
 5200              		.cfi_def_cfa_offset 16
 5201              		.cfi_offset 3, -16
 5202              		.cfi_offset 4, -12
 5203              		.cfi_offset 5, -8
 5204              		.cfi_offset 14, -4
1097:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5205              		.loc 1 1097 12 view .LVU1618
 5206 0002 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 5207              	.LVL327:
1097:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5208              		.loc 1 1097 6 view .LVU1619
 5209 0006 202B     		cmp	r3, #32
1092:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 5210              		.loc 1 1092 1 view .LVU1620
 5211 0008 0446     		mov	r4, r0
 5212 000a 0D46     		mov	r5, r1
1097:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   {
 5213              		.loc 1 1097 6 view .LVU1621
 5214 000c 42D1     		bne	.L546
1099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5215              		.loc 1 1099 5 is_stmt 1 view .LVU1622
1099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5216              		.loc 1 1099 8 is_stmt 0 view .LVU1623
 5217 000e 0029     		cmp	r1, #0
 5218 0010 3ED0     		beq	.L545
1099:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5219              		.loc 1 1099 25 discriminator 1 view .LVU1624
 5220 0012 002A     		cmp	r2, #0
 5221 0014 3CD0     		beq	.L545
1105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5222              		.loc 1 1105 5 is_stmt 1 view .LVU1625
1105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5223              		.loc 1 1105 5 view .LVU1626
 5224 0016 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5225 001a 012B     		cmp	r3, #1
 5226 001c 3AD0     		beq	.L546
1105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5227              		.loc 1 1105 5 discriminator 2 view .LVU1627
 5228 001e 0123     		movs	r3, #1
 5229 0020 80F87030 		strb	r3, [r0, #112]
1105:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5230              		.loc 1 1105 5 discriminator 2 view .LVU1628
1107:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 5231              		.loc 1 1107 5 discriminator 2 view .LVU1629
1107:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 5232              		.loc 1 1107 22 is_stmt 0 discriminator 2 view .LVU1630
 5233 0024 0023     		movs	r3, #0
 5234 0026 4367     		str	r3, [r0, #116]
1108:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5235              		.loc 1 1108 5 is_stmt 1 discriminator 2 view .LVU1631
1108:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5236              		.loc 1 1108 19 is_stmt 0 discriminator 2 view .LVU1632
 5237 0028 2123     		movs	r3, #33
 5238 002a 80F87130 		strb	r3, [r0, #113]
1113:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 5239              		.loc 1 1113 5 is_stmt 1 discriminator 2 view .LVU1633
1113:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 5240              		.loc 1 1113 24 is_stmt 0 discriminator 2 view .LVU1634
 5241 002e A0F85020 		strh	r2, [r0, #80]	@ movhi
1114:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5242              		.loc 1 1114 5 is_stmt 1 discriminator 2 view .LVU1635
1114:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5243              		.loc 1 1114 24 is_stmt 0 discriminator 2 view .LVU1636
 5244 0032 A0F85220 		strh	r2, [r0, #82]	@ movhi
1116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5245              		.loc 1 1116 5 is_stmt 1 discriminator 2 view .LVU1637
 5246              	.LVL328:
 5247              	.L537:
1116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5248              		.loc 1 1116 11 view .LVU1638
1116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5249              		.loc 1 1116 17 is_stmt 0 view .LVU1639
 5250 0036 B4F85220 		ldrh	r2, [r4, #82]
 5251 003a 92B2     		uxth	r2, r2
1116:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5252              		.loc 1 1116 11 view .LVU1640
 5253 003c 52B9     		cbnz	r2, .L541
1137:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5254              		.loc 1 1137 5 is_stmt 1 view .LVU1641
1137:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5255              		.loc 1 1137 9 is_stmt 0 view .LVU1642
 5256 003e 4021     		movs	r1, #64
 5257 0040 2046     		mov	r0, r4
 5258 0042 FFF7FEFF 		bl	UART_WaitOnFlagForever
 5259              	.LVL329:
1137:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     {
 5260              		.loc 1 1137 8 view .LVU1643
 5261 0046 58B9     		cbnz	r0, .L542
1143:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5262              		.loc 1 1143 5 is_stmt 1 view .LVU1644
1143:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5263              		.loc 1 1143 19 is_stmt 0 view .LVU1645
 5264 0048 2023     		movs	r3, #32
 5265 004a 84F87130 		strb	r3, [r4, #113]
1146:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5266              		.loc 1 1146 5 is_stmt 1 view .LVU1646
1146:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5267              		.loc 1 1146 5 view .LVU1647
 5268 004e 84F87000 		strb	r0, [r4, #112]
1146:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5269              		.loc 1 1146 5 view .LVU1648
1148:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 5270              		.loc 1 1148 5 view .LVU1649
1148:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 5271              		.loc 1 1148 12 is_stmt 0 view .LVU1650
 5272 0052 06E0     		b	.L536
 5273              	.L541:
1119:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 5274              		.loc 1 1119 7 is_stmt 1 view .LVU1651
1119:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 5275              		.loc 1 1119 11 is_stmt 0 view .LVU1652
 5276 0054 0022     		movs	r2, #0
 5277 0056 8021     		movs	r1, #128
 5278 0058 2046     		mov	r0, r4
 5279 005a FFF7FEFF 		bl	UART_WaitOnFlagForever
 5280              	.LVL330:
1119:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 5281              		.loc 1 1119 10 view .LVU1653
 5282 005e 08B1     		cbz	r0, .L538
 5283              	.L542:
1121:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 5284              		.loc 1 1121 16 view .LVU1654
 5285 0060 0320     		movs	r0, #3
 5286              	.L536:
1154:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c **** 
 5287              		.loc 1 1154 1 view .LVU1655
 5288 0062 38BD     		pop	{r3, r4, r5, pc}
 5289              	.LVL331:
 5290              	.L538:
1123:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 5291              		.loc 1 1123 7 is_stmt 1 view .LVU1656
1123:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 5292              		.loc 1 1123 10 is_stmt 0 view .LVU1657
 5293 0064 A368     		ldr	r3, [r4, #8]
 5294 0066 2268     		ldr	r2, [r4]
 5295 0068 B3F5805F 		cmp	r3, #4096
 5296 006c 0DD1     		bne	.L539
1123:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       {
 5297              		.loc 1 1123 58 discriminator 1 view .LVU1658
 5298 006e 2369     		ldr	r3, [r4, #16]
 5299 0070 5BB9     		cbnz	r3, .L539
1125:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 5300              		.loc 1 1125 9 is_stmt 1 view .LVU1659
 5301              	.LVL332:
1126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 5302              		.loc 1 1126 9 view .LVU1660
1126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 5303              		.loc 1 1126 38 is_stmt 0 view .LVU1661
 5304 0072 35F8023B 		ldrh	r3, [r5], #2
 5305              	.LVL333:
1126:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 5306              		.loc 1 1126 38 view .LVU1662
 5307 0076 C3F30803 		ubfx	r3, r3, #0, #9
 5308              	.LVL334:
 5309              	.L547:
1131:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 5310              		.loc 1 1131 30 view .LVU1663
 5311 007a 1385     		strh	r3, [r2, #40]	@ movhi
 5312              	.LVL335:
1133:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 5313              		.loc 1 1133 7 is_stmt 1 view .LVU1664
1133:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 5314              		.loc 1 1133 12 is_stmt 0 view .LVU1665
 5315 007c B4F85230 		ldrh	r3, [r4, #82]
1133:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 5316              		.loc 1 1133 25 view .LVU1666
 5317 0080 013B     		subs	r3, r3, #1
 5318 0082 9BB2     		uxth	r3, r3
 5319 0084 A4F85230 		strh	r3, [r4, #82]	@ movhi
 5320 0088 D5E7     		b	.L537
 5321              	.L539:
1131:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 5322              		.loc 1 1131 9 is_stmt 1 view .LVU1667
 5323              	.LVL336:
1131:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 5324              		.loc 1 1131 33 is_stmt 0 view .LVU1668
 5325 008a 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 5326              	.LVL337:
1131:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****       }
 5327              		.loc 1 1131 33 view .LVU1669
 5328 008e F4E7     		b	.L547
 5329              	.LVL338:
 5330              	.L545:
1101:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 5331              		.loc 1 1101 15 view .LVU1670
 5332 0090 0120     		movs	r0, #1
 5333              	.LVL339:
1101:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****     }
 5334              		.loc 1 1101 15 view .LVU1671
 5335 0092 E6E7     		b	.L536
 5336              	.LVL340:
 5337              	.L546:
1152:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 5338              		.loc 1 1152 12 view .LVU1672
 5339 0094 0220     		movs	r0, #2
 5340              	.LVL341:
1152:.././hal/stm32l4/Src/stm32l4xx_hal_uart.c ****   }
 5341              		.loc 1 1152 12 view .LVU1673
 5342 0096 E4E7     		b	.L536
 5343              		.cfi_endproc
 5344              	.LFE316:
 5346              		.section	.rodata
 5347              		.set	.LANCHOR0,. + 0
 5350              	CSWTCH.51:
 5351 0000 04       		.byte	4
 5352 0001 02       		.byte	2
 5353 0002 08       		.byte	8
 5356              	CSWTCH.52:
 5357 0003 00       		.byte	0
 5358 0004 10       		.byte	16
 5359 0005 10       		.byte	16
 5360 0006 10       		.byte	16
 5361 0007 04       		.byte	4
 5362 0008 10       		.byte	16
 5363 0009 10       		.byte	16
 5364 000a 10       		.byte	16
 5365 000b 02       		.byte	2
 5366 000c 10       		.byte	16
 5367 000d 10       		.byte	16
 5368 000e 10       		.byte	16
 5369 000f 08       		.byte	8
 5370              		.text
 5371              	.Letext0:
 5372              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 5373              		.file 3 ".././hal/stm32l4/CMSIS/Include/core_cm4.h"
 5374              		.file 4 ".././hal/stm32l4/system_stm32l4xx.h"
 5375              		.file 5 ".././hal/stm32l4/stm32l443xx.h"
 5376              		.file 6 ".././hal/stm32l4/stm32l4xx.h"
 5377              		.file 7 ".././hal/stm32l4/Inc/stm32l4xx_hal_def.h"
 5378              		.file 8 ".././hal/stm32l4/Inc/stm32l4xx_hal_dma.h"
 5379              		.file 9 ".././hal/stm32l4/Inc/stm32l4xx_hal_uart.h"
 5380              		.file 10 ".././hal/stm32l4/Inc/stm32l4xx_hal.h"
 5381              		.file 11 ".././hal/stm32l4/Inc/stm32l4xx_hal_rcc.h"
 5382              		.file 12 ".././hal/stm32l4/Inc/stm32l4xx_hal_uart_ex.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/ccwMGdvT.s:16     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccwMGdvT.s:23     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccwMGdvT.s:55     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccwMGdvT.s:61     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccwMGdvT.s:125    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccwMGdvT.s:131    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccwMGdvT.s:198    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccwMGdvT.s:205    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccwMGdvT.s:220    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccwMGdvT.s:227    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccwMGdvT.s:238    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccwMGdvT.s:245    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccwMGdvT.s:320    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccwMGdvT.s:327    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccwMGdvT.s:430    .text.HAL_UART_Transmit_IT:0000000000000060 $d
     /tmp/ccwMGdvT.s:436    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccwMGdvT.s:443    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccwMGdvT.s:606    .text.HAL_UART_Receive_IT:00000000000000a0 $d
     /tmp/ccwMGdvT.s:1591   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccwMGdvT.s:1694   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccwMGdvT.s:612    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccwMGdvT.s:619    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccwMGdvT.s:736    .text.HAL_UART_Transmit_DMA:000000000000006c $d
     /tmp/ccwMGdvT.s:1461   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccwMGdvT.s:1540   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccwMGdvT.s:1927   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccwMGdvT.s:743    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccwMGdvT.s:750    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccwMGdvT.s:875    .text.HAL_UART_Receive_DMA:0000000000000078 $d
     /tmp/ccwMGdvT.s:1794   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccwMGdvT.s:1876   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccwMGdvT.s:882    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccwMGdvT.s:889    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccwMGdvT.s:970    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccwMGdvT.s:977    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccwMGdvT.s:1050   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccwMGdvT.s:1057   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccwMGdvT.s:1159   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccwMGdvT.s:1166   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccwMGdvT.s:1279   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccwMGdvT.s:1286   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccwMGdvT.s:1351   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccwMGdvT.s:1358   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccwMGdvT.s:1437   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:1444   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccwMGdvT.s:1455   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccwMGdvT.s:1516   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:1523   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccwMGdvT.s:1534   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccwMGdvT.s:1567   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:1574   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccwMGdvT.s:1585   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccwMGdvT.s:1688   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccwMGdvT.s:1788   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccwMGdvT.s:1852   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:1859   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccwMGdvT.s:1870   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccwMGdvT.s:1903   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:1910   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccwMGdvT.s:1921   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccwMGdvT.s:2013   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccwMGdvT.s:2020   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccwMGdvT.s:2345   .text.HAL_UART_IRQHandler:0000000000000128 $d
     /tmp/ccwMGdvT.s:2358   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccwMGdvT.s:2352   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccwMGdvT.s:2391   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:2398   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccwMGdvT.s:2409   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccwMGdvT.s:2416   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccwMGdvT.s:2601   .text.HAL_UART_Abort_IT:00000000000000b8 $d
     /tmp/ccwMGdvT.s:2688   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccwMGdvT.s:2613   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccwMGdvT.s:2607   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:2682   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:2751   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:2758   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccwMGdvT.s:2769   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccwMGdvT.s:2776   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccwMGdvT.s:2858   .text.HAL_UART_AbortTransmit_IT:000000000000004c $d
     /tmp/ccwMGdvT.s:2869   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccwMGdvT.s:2863   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:2903   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:2910   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccwMGdvT.s:2921   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccwMGdvT.s:2928   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccwMGdvT.s:3036   .text.HAL_UART_AbortReceive_IT:000000000000006c $d
     /tmp/ccwMGdvT.s:3047   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccwMGdvT.s:3041   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccwMGdvT.s:3091   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccwMGdvT.s:3098   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccwMGdvT.s:3118   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccwMGdvT.s:3125   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccwMGdvT.s:3179   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccwMGdvT.s:3186   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccwMGdvT.s:3240   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccwMGdvT.s:3247   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccwMGdvT.s:3300   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccwMGdvT.s:3307   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccwMGdvT.s:3334   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccwMGdvT.s:3341   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccwMGdvT.s:3361   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccwMGdvT.s:3368   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccwMGdvT.s:3488   .text.UART_SetConfig:000000000000006e $d
     /tmp/ccwMGdvT.s:3646   .text.UART_SetConfig:0000000000000134 $d
     /tmp/ccwMGdvT.s:3847   .text.UART_SetConfig:000000000000022c $d
     /tmp/ccwMGdvT.s:3857   .text.UART_SetConfig:0000000000000250 $t
     /tmp/ccwMGdvT.s:3945   .text.UART_SetConfig:00000000000002a4 $d
     /tmp/ccwMGdvT.s:3959   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccwMGdvT.s:3966   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccwMGdvT.s:4107   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccwMGdvT.s:4114   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccwMGdvT.s:4217   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccwMGdvT.s:4224   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccwMGdvT.s:4448   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccwMGdvT.s:4455   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccwMGdvT.s:4566   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccwMGdvT.s:4573   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccwMGdvT.s:4671   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccwMGdvT.s:4678   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccwMGdvT.s:4779   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccwMGdvT.s:4786   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccwMGdvT.s:4909   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccwMGdvT.s:4916   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccwMGdvT.s:5037   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccwMGdvT.s:5044   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccwMGdvT.s:5089   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccwMGdvT.s:5096   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccwMGdvT.s:5141   .text.UART_WaitOnFlagForever:0000000000000000 $t
     /tmp/ccwMGdvT.s:5148   .text.UART_WaitOnFlagForever:0000000000000000 UART_WaitOnFlagForever
     /tmp/ccwMGdvT.s:5181   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccwMGdvT.s:5188   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccwMGdvT.s:5350   .rodata:0000000000000000 CSWTCH.51
     /tmp/ccwMGdvT.s:5356   .rodata:0000000000000003 CSWTCH.52
     /tmp/ccwMGdvT.s:3498   .text.UART_SetConfig:0000000000000077 $d
     /tmp/ccwMGdvT.s:3498   .text.UART_SetConfig:0000000000000078 $t
     /tmp/ccwMGdvT.s:3656   .text.UART_SetConfig:000000000000013d $d
     /tmp/ccwMGdvT.s:3656   .text.UART_SetConfig:000000000000013e $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
__aeabi_ldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
