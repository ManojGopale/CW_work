   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l4xx_hal_cortex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_NVIC_SetPriorityGrouping
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_NVIC_SetPriorityGrouping:
  25              	.LVL0:
  26              	.LFB309:
  27              		.file 1 ".././hal/stm32l4/Src/stm32l4xx_hal_cortex.c"
   1:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
   2:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
   3:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @file    stm32l4xx_hal_cortex.c
   4:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *           + Initialization and Configuration functions
   9:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *           + Peripheral Control functions
  10:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *
  11:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   @verbatim
  12:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  13:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  15:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  16:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     [..]
  17:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     ===========================================================
  19:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     [..]
  20:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  23:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping() function.
  24:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  25:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  26:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  27:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  28:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  29:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  30:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  31:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
  32:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest sub priority
  33:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  34:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  35:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     [..]
  36:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     *** How to configure SysTick using CORTEX HAL driver ***
  37:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     ========================================================
  38:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     [..]
  39:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  40:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  41:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  42:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        is a CMSIS function that:
  43:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  44:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  45:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  46:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  47:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  48:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  49:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  50:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  51:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  52:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  53:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        inside the stm32l4xx_hal_cortex.h file.
  54:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  55:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  56:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  57:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  58:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  59:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  60:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  61:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  62:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  63:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  64:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  65:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   @endverbatim
  66:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  67:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  68:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   The table below gives the allowed values of the pre-emption priority and subpriority according
  69:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function.
  70:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   
  71:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  72:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****       NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |     
  73:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  74:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0 bi
  75:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 4 bi
  76:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  77:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1 bi
  78:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 3 bi
  79:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  80:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2 bi
  81:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 2 bi
  82:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  83:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3 bi
  84:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 1 bi
  85:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  86:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4 bi
  87:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 0 bi
  88:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  89:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
  90:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  91:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @attention
  92:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *
  93:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  94:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *
  95:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  96:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  97:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  98:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
  99:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 100:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
 101:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
 102:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 103:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
 104:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *      without specific prior written permission.
 105:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *
 106:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 107:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 108:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 109:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 110:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 111:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 112:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 113:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 114:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 115:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 116:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *
 117:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
 118:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 119:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 120:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 121:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** #include "stm32l4xx_hal.h"
 122:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 123:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup STM32L4xx_HAL_Driver
 124:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @{
 125:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 126:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 127:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX
 128:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @{
 129:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 130:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 131:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 132:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 133:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 134:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 135:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 136:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 137:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 138:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 139:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 140:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions
 141:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @{
 142:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 143:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 144:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 145:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group1
 146:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 147:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****  *
 148:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** @verbatim
 149:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 150:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****               ##### Initialization and Configuration functions #####
 151:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 152:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     [..]
 153:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 154:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****       SysTick functionalities
 155:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 156:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 157:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @{
 158:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 159:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 160:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 161:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 162:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority grouping field (pre-emption priority and subpriority)
 163:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         using the required unlock sequence.
 164:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length.
 165:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 166:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bit  for pre-emption priority,
 167:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                    4 bits for subpriority
 168:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bit  for pre-emption priority,
 169:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                    3 bits for subpriority
 170:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 171:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 172:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 173:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                    1 bit  for subpriority
 174:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 175:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                    0 bit  for subpriority
 176:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
 177:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 178:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 179:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 180:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 181:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
  28              		.loc 1 181 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 183:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  33              		.loc 1 183 3 view .LVU1
 184:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 185:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 186:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
  34              		.loc 1 186 3 view .LVU2
  35              	.LBB18:
  36              	.LBI18:
  37              		.file 2 ".././hal/stm32l4/CMSIS/Include/core_cm4.h"
   1:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  * @version  V4.30
   5:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  * @date     20. October 2015
   6:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
   9:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    All rights reserved.
  10:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  19:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  20:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    *
  21:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  34:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  35:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
  40:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  41:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  44:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  45:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  46:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  47:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  extern "C" {
  48:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
  49:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  50:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
  51:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  54:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  57:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  60:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
  63:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  64:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  65:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  66:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  67:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  68:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
  69:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  70:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
  71:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
  72:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  73:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  79:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  81:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  82:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  83:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  87:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  92:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  93:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
  97:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 102:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 103:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 106:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 107:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 111:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 112:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __packed
 113:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 117:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #else
 118:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #error Unknown compiler
 119:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
 120:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 121:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** */
 124:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 125:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #else
 129:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #endif
 132:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #else
 133:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 135:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 136:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #else
 141:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #endif
 144:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #else
 145:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 147:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 148:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 149:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #else
 153:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #endif
 156:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #else
 157:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 159:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 160:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 162:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 164:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #else
 165:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 167:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #endif
 168:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #else
 169:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 170:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 171:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 172:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 173:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 176:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #else
 177:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 179:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #endif
 180:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #else
 181:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 182:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 183:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 184:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 185:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 186:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 188:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #else
 189:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 191:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #endif
 192:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #else
 193:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 194:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 195:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 196:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 197:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 200:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #else
 201:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 203:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #endif
 204:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #else
 205:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 206:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 207:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 208:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
 209:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 210:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 214:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 215:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 216:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
 217:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 218:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 220:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 222:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 225:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 226:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  extern "C" {
 227:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
 228:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 229:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 230:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 232:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 235:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 236:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 240:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 241:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 245:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 246:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 250:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 251:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #endif
 255:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
 256:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 257:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 259:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 261:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** */
 265:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 266:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #else
 268:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
 270:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 273:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 274:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 278:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 280:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 281:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 282:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 283:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 284:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   Core Register contain:
 285:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core Register
 286:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 287:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 288:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 289:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 290:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 291:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 292:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 293:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 294:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** */
 297:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 298:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 299:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 302:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
 303:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 304:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 305:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 306:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 308:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef union
 309:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 310:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   struct
 311:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 312:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } APSR_Type;
 323:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 324:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 325:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 328:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 331:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 334:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 337:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 340:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 343:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 344:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 345:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 347:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef union
 348:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 349:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   struct
 350:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 351:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 356:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 357:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 358:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 361:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 362:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 363:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 365:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef union
 366:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 367:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   struct
 368:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 369:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 383:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 384:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 385:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 388:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 391:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 394:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 397:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 400:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 403:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 406:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 409:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 412:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 413:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 414:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 416:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef union
 417:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 418:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   struct
 419:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 420:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 427:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 428:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 429:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 432:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 435:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 438:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 440:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 441:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 442:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
 446:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 447:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 448:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 449:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 451:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
 452:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 453:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 467:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 468:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 472:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 474:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 475:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 476:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
 480:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 481:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 482:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 483:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 485:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
 486:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 487:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } SCB_Type;
 509:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 510:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 514:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 517:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 520:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 523:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 526:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 530:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 533:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 536:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 539:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 542:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 545:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 548:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 551:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 554:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 557:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 561:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 565:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 568:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 571:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 574:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 577:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 580:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 583:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 584:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 587:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 590:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 593:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 597:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 600:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 603:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 606:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 609:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 612:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 616:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 619:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 622:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 625:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 628:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 631:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 634:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 637:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 640:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 643:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 646:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 649:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 652:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 655:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 659:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 662:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 665:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 669:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 672:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 675:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 679:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 682:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 685:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 688:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 691:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 693:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 694:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 695:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
 699:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 700:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 701:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 704:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
 705:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 706:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 710:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 711:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 715:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 719:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 722:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 725:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 728:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 731:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 733:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 734:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 735:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
 739:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 740:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 741:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 742:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 744:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
 745:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 746:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 751:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 752:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 756:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 759:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 762:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 765:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 769:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 770:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 773:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 777:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 780:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 783:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 785:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 786:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 787:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
 791:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 792:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 793:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 794:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 796:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
 797:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 798:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __OM  union
 799:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 800:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } ITM_Type;
 831:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 832:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 836:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 840:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 843:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 846:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 849:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 852:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 855:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 858:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 861:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 864:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 868:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 872:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 876:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 880:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 883:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 886:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 888:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 889:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 890:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
 894:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 895:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 896:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
 897:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
 899:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
 900:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 901:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 926:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 930:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 933:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 936:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 939:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 942:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 945:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 948:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 951:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 954:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 957:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 960:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 963:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 966:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 969:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 972:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 975:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 978:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 981:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 985:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 989:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 993:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 997:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1001:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1005:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1009:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1012:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1015:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1018:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1021:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1024:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1027:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1030:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1033:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1035:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1036:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1037:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
1041:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1042:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1043:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1044:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1046:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
1047:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1048:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1074:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1078:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1082:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1086:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1089:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1092:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1095:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1099:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1102:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1106:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1110:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1113:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1116:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1119:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1122:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1125:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1128:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1132:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1136:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1139:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1142:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1145:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1148:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1151:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1154:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1158:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1162:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1166:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1169:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1172:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1175:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1178:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1181:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1185:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1188:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1190:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1191:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1193:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
1197:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1198:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1199:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1200:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1202:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
1203:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1204:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } MPU_Type;
1216:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1217:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1218:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1221:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1224:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1227:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1228:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1231:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1234:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1237:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1241:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1245:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1248:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1251:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1255:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1258:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1261:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1264:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1267:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1270:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1273:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1276:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1279:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1282:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
1284:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1285:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1286:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1288:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
1292:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1293:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1294:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1295:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1297:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
1298:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1299:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } FPU_Type;
1306:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1307:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1311:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1314:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1317:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1320:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1323:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1326:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1329:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1332:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1335:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1339:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1343:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1346:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1349:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1352:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1356:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1359:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1362:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1365:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1368:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1371:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1374:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1377:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1381:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1384:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1387:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1390:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
1392:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1393:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1394:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1395:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
1399:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1400:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1401:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1402:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1404:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** typedef struct
1405:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1406:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1411:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1412:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1416:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1419:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1422:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1425:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1428:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1431:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1434:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1437:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1440:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1443:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1446:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1449:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1453:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1456:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1460:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1463:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1466:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1469:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1472:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1475:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1478:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1481:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1484:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1487:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1490:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1493:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1496:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1498:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1499:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1500:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
1504:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1505:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1506:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1507:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1511:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** */
1512:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1514:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1515:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register.
1518:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** */
1520:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1522:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1524:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1525:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1526:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
1530:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1531:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1532:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1542:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1551:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
1555:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1556:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #endif
1560:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1561:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} */
1562:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1563:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1564:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1565:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1566:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1567:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1568:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1569:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1570:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1571:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1572:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1573:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1574:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** */
1576:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1577:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1578:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1579:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1581:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
1585:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1586:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1587:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1588:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1589:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1592:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1596:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
  38              		.loc 2 1596 22 view .LVU3
  39              	.LBB19:
1597:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1598:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
  40              		.loc 2 1598 3 view .LVU4
1599:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  41              		.loc 2 1599 3 view .LVU5
1600:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1601:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  42              		.loc 2 1601 3 view .LVU6
  43              		.loc 2 1601 14 is_stmt 0 view .LVU7
  44 0000 0749     		ldr	r1, .L2
  45 0002 CA68     		ldr	r2, [r1, #12]
  46              	.LVL1:
1602:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  47              		.loc 2 1602 3 is_stmt 1 view .LVU8
1603:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  48              		.loc 2 1603 3 view .LVU9
1602:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  49              		.loc 2 1602 13 is_stmt 0 view .LVU10
  50 0004 22F4E062 		bic	r2, r2, #1792
  51              	.LVL2:
1604:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  52              		.loc 2 1605 35 view .LVU11
  53 0008 0302     		lsls	r3, r0, #8
1602:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  54              		.loc 2 1602 13 view .LVU12
  55 000a 1204     		lsls	r2, r2, #16
  56              		.loc 2 1605 35 view .LVU13
  57 000c 03F4E063 		and	r3, r3, #1792
1602:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  58              		.loc 2 1602 13 view .LVU14
  59 0010 120C     		lsrs	r2, r2, #16
1604:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
  60              		.loc 2 1604 62 view .LVU15
  61 0012 1343     		orrs	r3, r3, r2
1603:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  62              		.loc 2 1603 14 view .LVU16
  63 0014 43F0BF63 		orr	r3, r3, #100139008
  64 0018 43F40033 		orr	r3, r3, #131072
  65              	.LVL3:
1606:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  66              		.loc 2 1606 3 is_stmt 1 view .LVU17
  67              		.loc 2 1606 14 is_stmt 0 view .LVU18
  68 001c CB60     		str	r3, [r1, #12]
  69              	.LVL4:
  70              		.loc 2 1606 14 view .LVU19
  71              	.LBE19:
  72              	.LBE18:
 187:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
  73              		.loc 1 187 1 view .LVU20
  74 001e 7047     		bx	lr
  75              	.L3:
  76              		.align	2
  77              	.L2:
  78 0020 00ED00E0 		.word	-536810240
  79              		.cfi_endproc
  80              	.LFE309:
  82              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  83              		.align	1
  84              		.global	HAL_NVIC_SetPriority
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  90              	HAL_NVIC_SetPriority:
  91              	.LVL5:
  92              	.LFB310:
 188:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 189:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 190:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority of an interrupt.
 191:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 192:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 193:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 194:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 195:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 196:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 197:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 198:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 199:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 200:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 201:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 202:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 203:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
  93              		.loc 1 203 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
 204:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
  97              		.loc 1 204 3 view .LVU22
 205:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 206:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 207:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  98              		.loc 1 207 3 view .LVU23
 208:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  99              		.loc 1 208 3 view .LVU24
 209:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 210:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 100              		.loc 1 210 3 view .LVU25
 101              	.LBB26:
 102              	.LBI26:
1607:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1608:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1609:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1610:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1611:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1612:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1615:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
 103              		.loc 2 1615 26 view .LVU26
 104              	.LBB27:
1616:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1617:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 105              		.loc 2 1617 3 view .LVU27
 106              		.loc 2 1617 26 is_stmt 0 view .LVU28
 107 0000 164B     		ldr	r3, .L9
 108              	.LBE27:
 109              	.LBE26:
 203:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 110              		.loc 1 203 1 view .LVU29
 111 0002 30B5     		push	{r4, r5, lr}
 112              	.LCFI0:
 113              		.cfi_def_cfa_offset 12
 114              		.cfi_offset 4, -12
 115              		.cfi_offset 5, -8
 116              		.cfi_offset 14, -4
 117              	.LBB29:
 118              	.LBB28:
 119              		.loc 2 1617 26 view .LVU30
 120 0004 DC68     		ldr	r4, [r3, #12]
 121              		.loc 2 1617 11 view .LVU31
 122 0006 C4F30224 		ubfx	r4, r4, #8, #3
 123              	.LVL6:
 124              		.loc 2 1617 11 view .LVU32
 125              	.LBE28:
 126              	.LBE29:
 211:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 212:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 127              		.loc 1 212 3 is_stmt 1 view .LVU33
 128              	.LBB30:
 129              	.LBI30:
1618:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1619:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1620:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1621:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1622:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Enable External Interrupt
1623:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1626:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1628:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1630:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1631:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1632:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1633:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Disable External Interrupt
1634:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1637:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1639:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1641:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1642:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1643:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1644:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1645:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1650:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1652:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1654:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1655:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1656:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1657:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1658:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1661:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1663:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1665:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1666:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1667:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1668:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1672:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1674:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1676:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1677:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1678:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1679:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1680:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1684:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1685:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1687:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1689:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1690:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1691:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1692:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1693:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1698:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1700:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
1704:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   else
1705:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
1706:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
1708:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1709:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1710:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1711:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1712:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1713:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Reads the priority of an interrupt.
1714:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1718:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1720:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1722:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1723:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1724:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
1725:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1726:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
1727:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   else
1728:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
1729:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1730:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
1731:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1732:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1733:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1734:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1735:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1736:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1738:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1739:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1745:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 130              		.loc 2 1745 26 view .LVU34
 131              	.LBB31:
1746:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1747:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 132              		.loc 2 1747 3 view .LVU35
1748:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 133              		.loc 2 1748 3 view .LVU36
1749:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 134              		.loc 2 1749 3 view .LVU37
1750:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1751:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 135              		.loc 2 1751 3 view .LVU38
 136              		.loc 2 1751 31 is_stmt 0 view .LVU39
 137 000a C4F10703 		rsb	r3, r4, #7
1752:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 138              		.loc 2 1752 44 view .LVU40
 139 000e 251D     		adds	r5, r4, #4
1751:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 140              		.loc 2 1751 23 view .LVU41
 141 0010 042B     		cmp	r3, #4
 142 0012 28BF     		it	cs
 143 0014 0423     		movcs	r3, #4
 144              	.LVL7:
 145              		.loc 2 1752 3 is_stmt 1 view .LVU42
 146              		.loc 2 1752 109 is_stmt 0 view .LVU43
 147 0016 062D     		cmp	r5, #6
1753:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1754:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   return (
1755:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 148              		.loc 2 1755 30 view .LVU44
 149 0018 4FF0FF35 		mov	r5, #-1
 150 001c 05FA03F3 		lsl	r3, r5, r3
 151              	.LVL8:
1752:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 152              		.loc 2 1752 109 view .LVU45
 153 0020 8CBF     		ite	hi
 154 0022 033C     		subhi	r4, r4, #3
 155              	.LVL9:
1752:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 156              		.loc 2 1752 109 view .LVU46
 157 0024 0024     		movls	r4, #0
 158              	.LVL10:
1754:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 159              		.loc 2 1754 3 is_stmt 1 view .LVU47
1754:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 160              		.loc 2 1754 3 is_stmt 0 view .LVU48
 161              	.LBE31:
 162              	.LBE30:
 163              	.LBB34:
 164              	.LBI34:
1698:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 165              		.loc 2 1698 22 is_stmt 1 view .LVU49
 166              	.LBB35:
1700:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 167              		.loc 2 1700 3 view .LVU50
 168              	.LBE35:
 169              	.LBE34:
 170              	.LBB38:
 171              	.LBB32:
 172              		.loc 2 1755 30 is_stmt 0 view .LVU51
 173 0026 21EA0303 		bic	r3, r1, r3
 174              		.loc 2 1755 82 view .LVU52
 175 002a A340     		lsls	r3, r3, r4
1756:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 176              		.loc 2 1756 30 view .LVU53
 177 002c 05FA04F4 		lsl	r4, r5, r4
 178              	.LVL11:
 179              		.loc 2 1756 30 view .LVU54
 180 0030 22EA0402 		bic	r2, r2, r4
 181              	.LVL12:
 182              		.loc 2 1756 30 view .LVU55
 183              	.LBE32:
 184              	.LBE38:
 185              	.LBB39:
 186              	.LBB36:
1700:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 187              		.loc 2 1700 6 view .LVU56
 188 0034 0028     		cmp	r0, #0
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 189              		.loc 2 1702 5 is_stmt 1 view .LVU57
 190              	.LBE36:
 191              	.LBE39:
 192              	.LBB40:
 193              	.LBB33:
1755:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 194              		.loc 2 1755 102 is_stmt 0 view .LVU58
 195 0036 43EA0203 		orr	r3, r3, r2
 196              	.LBE33:
 197              	.LBE40:
 198              	.LBB41:
 199              	.LBB37:
1706:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 200              		.loc 2 1706 55 view .LVU59
 201 003a ACBF     		ite	ge
 202 003c 00F16040 		addge	r0, r0, #-536870912
 203              	.LVL13:
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 204              		.loc 2 1702 55 view .LVU60
 205 0040 074A     		ldrlt	r2, .L9+4
 206 0042 4FEA0313 		lsl	r3, r3, #4
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 207              		.loc 2 1702 41 view .LVU61
 208 0046 B8BF     		it	lt
 209 0048 00F00F00 		andlt	r0, r0, #15
 210 004c DBB2     		uxtb	r3, r3
1706:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 211              		.loc 2 1706 55 view .LVU62
 212 004e AABF     		itet	ge
 213 0050 00F56140 		addge	r0, r0, #57600
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 214              		.loc 2 1702 55 view .LVU63
 215 0054 1354     		strblt	r3, [r2, r0]
1706:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 216              		.loc 2 1706 5 is_stmt 1 view .LVU64
1706:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 217              		.loc 2 1706 55 is_stmt 0 view .LVU65
 218 0056 80F80033 		strbge	r3, [r0, #768]
 219              	.LVL14:
1706:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 220              		.loc 2 1706 55 view .LVU66
 221              	.LBE37:
 222              	.LBE41:
 213:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 223              		.loc 1 213 1 view .LVU67
 224 005a 30BD     		pop	{r4, r5, pc}
 225              	.L10:
 226              		.align	2
 227              	.L9:
 228 005c 00ED00E0 		.word	-536810240
 229 0060 14ED00E0 		.word	-536810220
 230              		.cfi_endproc
 231              	.LFE310:
 233              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_NVIC_EnableIRQ
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu softvfp
 241              	HAL_NVIC_EnableIRQ:
 242              	.LVL15:
 243              	.LFB311:
 214:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 215:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 216:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable a device specific interrupt in the NVIC interrupt controller.
 217:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 218:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         function should be called before.
 219:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 220:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 221:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 222:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 223:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 224:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 225:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 244              		.loc 1 225 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 226:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 227:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 249              		.loc 1 227 3 view .LVU69
 228:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   
 229:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Enable interrupt */
 230:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 250              		.loc 1 230 3 view .LVU70
 251              	.LBB44:
 252              	.LBI44:
1626:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 253              		.loc 2 1626 22 view .LVU71
 254              	.LBB45:
1628:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 255              		.loc 2 1628 3 view .LVU72
1628:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 256              		.loc 2 1628 41 is_stmt 0 view .LVU73
 257 0000 4209     		lsrs	r2, r0, #5
1628:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 258              		.loc 2 1628 52 view .LVU74
 259 0002 0123     		movs	r3, #1
1628:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 260              		.loc 2 1628 97 view .LVU75
 261 0004 00F01F00 		and	r0, r0, #31
 262              	.LVL16:
1628:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 263              		.loc 2 1628 52 view .LVU76
 264 0008 03FA00F0 		lsl	r0, r3, r0
1628:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 265              		.loc 2 1628 50 view .LVU77
 266 000c 014B     		ldr	r3, .L12
 267 000e 43F82200 		str	r0, [r3, r2, lsl #2]
 268              	.LVL17:
1628:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 269              		.loc 2 1628 50 view .LVU78
 270              	.LBE45:
 271              	.LBE44:
 231:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 272              		.loc 1 231 1 view .LVU79
 273 0012 7047     		bx	lr
 274              	.L13:
 275              		.align	2
 276              	.L12:
 277 0014 00E100E0 		.word	-536813312
 278              		.cfi_endproc
 279              	.LFE311:
 281              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 282              		.align	1
 283              		.global	HAL_NVIC_DisableIRQ
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu softvfp
 289              	HAL_NVIC_DisableIRQ:
 290              	.LVL18:
 291              	.LFB312:
 232:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 233:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 234:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable a device specific interrupt in the NVIC interrupt controller.
 235:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 236:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 237:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 238:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 239:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 240:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 241:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 292              		.loc 1 241 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 242:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 243:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 297              		.loc 1 243 3 view .LVU81
 244:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   
 245:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Disable interrupt */
 246:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 298              		.loc 1 246 3 view .LVU82
 299              	.LBB48:
 300              	.LBI48:
1637:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 301              		.loc 2 1637 22 view .LVU83
 302              	.LBB49:
1639:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 303              		.loc 2 1639 3 view .LVU84
1639:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 304              		.loc 2 1639 41 is_stmt 0 view .LVU85
 305 0000 4309     		lsrs	r3, r0, #5
1639:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 306              		.loc 2 1639 52 view .LVU86
 307 0002 0122     		movs	r2, #1
1639:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 308              		.loc 2 1639 97 view .LVU87
 309 0004 00F01F00 		and	r0, r0, #31
 310              	.LVL19:
1639:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 311              		.loc 2 1639 52 view .LVU88
 312 0008 02FA00F0 		lsl	r0, r2, r0
1639:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 313              		.loc 2 1639 50 view .LVU89
 314 000c 2033     		adds	r3, r3, #32
 315 000e 024A     		ldr	r2, .L15
 316 0010 42F82300 		str	r0, [r2, r3, lsl #2]
 317              	.LVL20:
1639:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 318              		.loc 2 1639 50 view .LVU90
 319              	.LBE49:
 320              	.LBE48:
 247:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 321              		.loc 1 247 1 view .LVU91
 322 0014 7047     		bx	lr
 323              	.L16:
 324 0016 00BF     		.align	2
 325              	.L15:
 326 0018 00E100E0 		.word	-536813312
 327              		.cfi_endproc
 328              	.LFE312:
 330              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 331              		.align	1
 332              		.global	HAL_NVIC_SystemReset
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu softvfp
 338              	HAL_NVIC_SystemReset:
 339              	.LFB313:
 248:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 249:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 250:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initiate a system reset request to reset the MCU.
 251:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 252:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 253:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 254:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 340              		.loc 1 254 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ Volatile: function does not return.
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 255:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* System Reset */
 256:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   NVIC_SystemReset();
 346              		.loc 1 256 3 view .LVU93
 347              	.LBB58:
 348              	.LBI58:
1757:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****          );
1758:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1759:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1760:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1761:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1762:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1763:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1764:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1765:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1766:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1767:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1768:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1769:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1770:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1771:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1772:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1773:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1774:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1775:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1776:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1777:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1778:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1779:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1780:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1781:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1782:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1783:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1784:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1785:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1786:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1787:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1788:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1789:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1790:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
 349              		.loc 2 1790 22 view .LVU94
 350              	.LBB59:
1791:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1792:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 351              		.loc 2 1792 3 view .LVU95
 352              	.LBB60:
 353              	.LBI60:
 354              		.file 3 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h"
   1:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
   9:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    *
  21:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  34:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  35:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  38:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
  45:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  46:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  47:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   @{
  51:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  52:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  53:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
  54:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  58:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
  60:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
  62:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  63:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  64:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
  65:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  69:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
  71:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
  73:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  74:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  75:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
  76:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  80:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
  82:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  84:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
  87:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  88:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  89:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
  90:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
  94:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
  96:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
  98:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
  99:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 100:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 101:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 105:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 107:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 109:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 112:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 113:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 114:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 115:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 119:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 121:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 123:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 126:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 127:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 128:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 129:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 132:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 134:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 136:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 138:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 141:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 142:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 143:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 144:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 148:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 150:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 152:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 155:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 156:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 157:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 158:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 162:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 164:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 166:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 167:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 168:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 169:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 173:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 175:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 177:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 180:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 181:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 182:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 183:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 186:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 188:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 190:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 192:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 193:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 194:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 195:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 199:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 201:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 203:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 206:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 207:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 208:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 209:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 213:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 215:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 217:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 218:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 219:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 221:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 222:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 226:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 228:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 230:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 231:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 232:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 233:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 237:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 239:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 241:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 242:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 243:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 244:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 248:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 250:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 252:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 255:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 256:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 257:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 258:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 262:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 264:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 266:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 267:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 268:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 269:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 274:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 276:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 278:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 279:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 280:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 281:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 285:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 287:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 289:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 292:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 293:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 294:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 295:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 299:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 301:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 303:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 304:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 306:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 307:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 309:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 310:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 314:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 316:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 319:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 325:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 327:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 328:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 329:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 330:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 331:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 335:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 337:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 343:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 344:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 345:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 347:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 348:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 349:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 351:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 352:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   @{
 356:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** */
 357:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 358:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #else
 365:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** #endif
 368:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 369:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 370:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 373:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 375:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 377:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 378:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 379:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 380:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 383:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 385:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 387:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 388:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 389:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 390:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 394:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 396:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 398:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 399:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 400:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 401:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 404:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 406:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 408:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 409:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 410:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 411:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 416:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 418:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 420:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 421:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 422:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 423:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 427:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 355              		.loc 3 427 53 view .LVU96
 356              	.LBB61:
 428:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 429:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 357              		.loc 3 429 3 view .LVU97
 358              		.syntax unified
 359              	@ 429 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 360 0000 BFF34F8F 		dsb 0xF
 361              	@ 0 "" 2
 362              		.thumb
 363              		.syntax unified
 364              	.LBE61:
 365              	.LBE60:
1793:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1794:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 366              		.loc 2 1794 3 view .LVU98
1795:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 367              		.loc 2 1795 32 is_stmt 0 view .LVU99
 368 0004 0549     		ldr	r1, .L19
1794:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 369              		.loc 2 1794 17 view .LVU100
 370 0006 064B     		ldr	r3, .L19+4
 371              		.loc 2 1795 32 view .LVU101
 372 0008 CA68     		ldr	r2, [r1, #12]
 373              		.loc 2 1795 40 view .LVU102
 374 000a 02F4E062 		and	r2, r2, #1792
1794:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 375              		.loc 2 1794 17 view .LVU103
 376 000e 1343     		orrs	r3, r3, r2
1794:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 377              		.loc 2 1794 15 view .LVU104
 378 0010 CB60     		str	r3, [r1, #12]
1796:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1797:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 379              		.loc 2 1797 3 is_stmt 1 view .LVU105
 380              	.LBB62:
 381              	.LBI62:
 427:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 382              		.loc 3 427 53 view .LVU106
 383              	.LBB63:
 384              		.loc 3 429 3 view .LVU107
 385              		.syntax unified
 386              	@ 429 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 387 0012 BFF34F8F 		dsb 0xF
 388              	@ 0 "" 2
 389              		.thumb
 390              		.syntax unified
 391              	.L18:
 392              	.LBE63:
 393              	.LBE62:
1798:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1799:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 394              		.loc 2 1799 3 view .LVU108
1800:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
1801:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     __NOP();
 395              		.loc 2 1801 5 view .LVU109
 396              	.LBB64:
 397              	.LBI64:
 373:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 398              		.loc 3 373 53 view .LVU110
 399              	.LBB65:
 375:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 400              		.loc 3 375 3 view .LVU111
 401              		.syntax unified
 402              	@ 375 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 403 0016 00BF     		nop
 404              	@ 0 "" 2
 405              		.thumb
 406              		.syntax unified
 407 0018 FDE7     		b	.L18
 408              	.L20:
 409 001a 00BF     		.align	2
 410              	.L19:
 411 001c 00ED00E0 		.word	-536810240
 412 0020 0400FA05 		.word	100270084
 413              	.LBE65:
 414              	.LBE64:
 415              	.LBE59:
 416              	.LBE58:
 417              		.cfi_endproc
 418              	.LFE313:
 420              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 421              		.align	1
 422              		.global	HAL_SYSTICK_Config
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu softvfp
 428              	HAL_SYSTICK_Config:
 429              	.LVL21:
 430              	.LFB314:
 257:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 258:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 259:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 260:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (Sys
 261:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 262:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 263:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 264:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                  - 1  Function failed.
 265:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 266:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 267:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 431              		.loc 1 267 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 268:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 436              		.loc 1 268 4 view .LVU113
 437              	.LBB70:
 438              	.LBI70:
1802:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
1803:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
1804:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1805:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1806:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1807:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1808:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1809:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1810:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1811:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1812:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1813:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
1814:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   @{
1815:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1816:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1817:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0U)
1818:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1819:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** /**
1820:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
1821:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1822:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
1823:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1824:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
1825:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
1826:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1827:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1828:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
1829:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****  */
1830:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 439              		.loc 2 1830 26 view .LVU114
 440              	.LBB71:
1831:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
1832:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 441              		.loc 2 1832 3 view .LVU115
 442              		.loc 2 1832 14 is_stmt 0 view .LVU116
 443 0000 0138     		subs	r0, r0, #1
 444              	.LVL22:
 445              		.loc 2 1832 6 view .LVU117
 446 0002 B0F1807F 		cmp	r0, #16777216
 447 0006 0AD2     		bcs	.L23
1833:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
1834:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
1835:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
1836:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
1837:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 448              		.loc 2 1837 3 is_stmt 1 view .LVU118
 449              		.loc 2 1837 18 is_stmt 0 view .LVU119
 450 0008 064B     		ldr	r3, .L24
 451              	.LBB72:
 452              	.LBB73:
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 453              		.loc 2 1702 55 view .LVU120
 454 000a 074A     		ldr	r2, .L24+4
 455              	.LBE73:
 456              	.LBE72:
 457              		.loc 2 1837 18 view .LVU121
 458 000c 5860     		str	r0, [r3, #4]
1838:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 459              		.loc 2 1838 3 is_stmt 1 view .LVU122
 460              	.LVL23:
 461              	.LBB75:
 462              	.LBI72:
1698:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 463              		.loc 2 1698 22 view .LVU123
 464              	.LBB74:
1700:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 465              		.loc 2 1700 3 view .LVU124
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 466              		.loc 2 1702 5 view .LVU125
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 467              		.loc 2 1702 55 is_stmt 0 view .LVU126
 468 000e F021     		movs	r1, #240
 469 0010 82F82310 		strb	r1, [r2, #35]
 470              	.LVL24:
1702:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 471              		.loc 2 1702 55 view .LVU127
 472              	.LBE74:
 473              	.LBE75:
1839:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 474              		.loc 2 1839 3 is_stmt 1 view .LVU128
 475              		.loc 2 1839 18 is_stmt 0 view .LVU129
 476 0014 0020     		movs	r0, #0
 477              	.LVL25:
1840:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 478              		.loc 2 1840 18 view .LVU130
 479 0016 0722     		movs	r2, #7
1839:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 480              		.loc 2 1839 18 view .LVU131
 481 0018 9860     		str	r0, [r3, #8]
 482              		.loc 2 1840 3 is_stmt 1 view .LVU132
 483              		.loc 2 1840 18 is_stmt 0 view .LVU133
 484 001a 1A60     		str	r2, [r3]
1841:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1842:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1843:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 485              		.loc 2 1843 3 is_stmt 1 view .LVU134
 486              		.loc 2 1843 10 is_stmt 0 view .LVU135
 487 001c 7047     		bx	lr
 488              	.L23:
1834:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 489              		.loc 2 1834 12 view .LVU136
 490 001e 0120     		movs	r0, #1
 491              	.LVL26:
1834:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 492              		.loc 2 1834 12 view .LVU137
 493              	.LBE71:
 494              	.LBE70:
 269:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 495              		.loc 1 269 1 view .LVU138
 496 0020 7047     		bx	lr
 497              	.L25:
 498 0022 00BF     		.align	2
 499              	.L24:
 500 0024 10E000E0 		.word	-536813552
 501 0028 00ED00E0 		.word	-536810240
 502              		.cfi_endproc
 503              	.LFE314:
 505              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 506              		.align	1
 507              		.global	HAL_NVIC_GetPriorityGrouping
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu softvfp
 513              	HAL_NVIC_GetPriorityGrouping:
 514              	.LFB315:
 270:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 271:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @}
 272:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 273:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 274:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group2
 275:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****  *  @brief   Cortex control functions
 276:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****  *
 277:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** @verbatim
 278:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 279:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 280:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 281:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     [..]
 282:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 283:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 284:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 285:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 286:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 287:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @{
 288:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 289:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 290:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 291:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority grouping field from the NVIC Interrupt Controller.
 292:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 293:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 294:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 295:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 515              		.loc 1 295 1 is_stmt 1 view -0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 296:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 297:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 520              		.loc 1 297 3 view .LVU140
 521              	.LBB78:
 522              	.LBI78:
1615:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 523              		.loc 2 1615 26 view .LVU141
 524              	.LBB79:
1617:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 525              		.loc 2 1617 3 view .LVU142
1617:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 526              		.loc 2 1617 26 is_stmt 0 view .LVU143
 527 0000 024B     		ldr	r3, .L27
 528 0002 D868     		ldr	r0, [r3, #12]
 529              	.LBE79:
 530              	.LBE78:
 298:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 531              		.loc 1 298 1 view .LVU144
 532 0004 C0F30220 		ubfx	r0, r0, #8, #3
 533 0008 7047     		bx	lr
 534              	.L28:
 535 000a 00BF     		.align	2
 536              	.L27:
 537 000c 00ED00E0 		.word	-536810240
 538              		.cfi_endproc
 539              	.LFE315:
 541              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 542              		.align	1
 543              		.global	HAL_NVIC_GetPriority
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu softvfp
 549              	HAL_NVIC_GetPriority:
 550              	.LVL27:
 551              	.LFB316:
 299:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 300:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 301:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority of an interrupt.
 302:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 303:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 304:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 305:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 306:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 307:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bit for pre-emption priority,
 308:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                      4 bits for subpriority
 309:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bit for pre-emption priority,
 310:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 311:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 312:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 313:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 314:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                      1 bit for subpriority
 315:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 316:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                                      0 bit for subpriority
 317:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 318:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 319:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 320:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 321:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 322:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 552              		.loc 1 322 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 323:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 324:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 556              		.loc 1 324 3 view .LVU146
 325:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 326:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 557              		.loc 1 326 3 view .LVU147
 558              	.LBB84:
 559              	.LBI84:
1720:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 560              		.loc 2 1720 26 view .LVU148
 561              	.LBB85:
1723:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 562              		.loc 2 1723 3 view .LVU149
 563              	.LBE85:
 564              	.LBE84:
 322:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 565              		.loc 1 322 1 is_stmt 0 view .LVU150
 566 0000 70B5     		push	{r4, r5, r6, lr}
 567              	.LCFI1:
 568              		.cfi_def_cfa_offset 16
 569              		.cfi_offset 4, -16
 570              		.cfi_offset 5, -12
 571              		.cfi_offset 6, -8
 572              		.cfi_offset 14, -4
 573              	.LBB89:
 574              	.LBB86:
1723:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   {
 575              		.loc 2 1723 6 view .LVU151
 576 0002 0028     		cmp	r0, #0
 577              	.LVL28:
1725:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 578              		.loc 2 1725 5 is_stmt 1 view .LVU152
1729:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 579              		.loc 2 1729 31 is_stmt 0 view .LVU153
 580 0004 AEBF     		itee	ge
 581 0006 00F16040 		addge	r0, r0, #-536870912
1725:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 582              		.loc 2 1725 31 view .LVU154
 583 000a 134C     		ldrlt	r4, .L35
1725:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 584              		.loc 2 1725 59 view .LVU155
 585 000c 00F00F00 		andlt	r0, r0, #15
 586              	.LBE86:
 587              	.LBE89:
 588              	.LBB90:
 589              	.LBB91:
1774:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 590              		.loc 2 1774 12 view .LVU156
 591 0010 01F00701 		and	r1, r1, #7
 592              	.LVL29:
1774:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 593              		.loc 2 1774 12 view .LVU157
 594              	.LBE91:
 595              	.LBE90:
 596              	.LBB94:
 597              	.LBB87:
1729:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 598              		.loc 2 1729 31 view .LVU158
 599 0014 AABF     		itet	ge
 600 0016 00F56140 		addge	r0, r0, #57600
1725:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 601              		.loc 2 1725 31 view .LVU159
 602 001a 205C     		ldrblt	r0, [r4, r0]	@ zero_extendqisi2
1729:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 603              		.loc 2 1729 5 is_stmt 1 view .LVU160
1729:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 604              		.loc 2 1729 31 is_stmt 0 view .LVU161
 605 001c 90F80003 		ldrbge	r0, [r0, #768]	@ zero_extendqisi2
 606              	.LBE87:
 607              	.LBE94:
 608              	.LBB95:
 609              	.LBB92:
1778:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 610              		.loc 2 1778 31 view .LVU162
 611 0020 C1F10704 		rsb	r4, r1, #7
1779:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 612              		.loc 2 1779 44 view .LVU163
 613 0024 0D1D     		adds	r5, r1, #4
1778:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 614              		.loc 2 1778 23 view .LVU164
 615 0026 042C     		cmp	r4, #4
 616 0028 28BF     		it	cs
 617 002a 0424     		movcs	r4, #4
1779:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 618              		.loc 2 1779 109 view .LVU165
 619 002c 062D     		cmp	r5, #6
 620              	.LBE92:
 621              	.LBE95:
 622              	.LBB96:
 623              	.LBB88:
1729:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 624              		.loc 2 1729 73 view .LVU166
 625 002e 4FEA1010 		lsr	r0, r0, #4
 626              	.LVL30:
1729:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   }
 627              		.loc 2 1729 73 view .LVU167
 628              	.LBE88:
 629              	.LBE96:
 630              	.LBB97:
 631              	.LBI90:
1772:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 632              		.loc 2 1772 22 is_stmt 1 view .LVU168
 633              	.LBB93:
1774:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 634              		.loc 2 1774 3 view .LVU169
1775:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 635              		.loc 2 1775 3 view .LVU170
1776:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 636              		.loc 2 1776 3 view .LVU171
1778:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 637              		.loc 2 1778 3 view .LVU172
1779:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 638              		.loc 2 1779 3 view .LVU173
1779:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 639              		.loc 2 1779 109 is_stmt 0 view .LVU174
 640 0032 8CBF     		ite	hi
 641 0034 0339     		subhi	r1, r1, #3
 642              	.LVL31:
1779:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** 
 643              		.loc 2 1779 109 view .LVU175
 644 0036 0021     		movls	r1, #0
 645              	.LVL32:
1781:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 646              		.loc 2 1781 3 is_stmt 1 view .LVU176
1781:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 647              		.loc 2 1781 53 is_stmt 0 view .LVU177
 648 0038 4FF0FF35 		mov	r5, #-1
 649              	.LVL33:
1781:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 650              		.loc 2 1781 33 view .LVU178
 651 003c 20FA01F6 		lsr	r6, r0, r1
1781:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 652              		.loc 2 1781 53 view .LVU179
 653 0040 05FA04F4 		lsl	r4, r5, r4
 654              	.LVL34:
1782:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 655              		.loc 2 1782 53 view .LVU180
 656 0044 05FA01F1 		lsl	r1, r5, r1
 657              	.LVL35:
1781:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 658              		.loc 2 1781 53 view .LVU181
 659 0048 26EA0404 		bic	r4, r6, r4
1782:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 660              		.loc 2 1782 53 view .LVU182
 661 004c 20EA0100 		bic	r0, r0, r1
 662              	.LVL36:
1781:.././hal/stm32l4/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 663              		.loc 2 1781 21 view .LVU183
 664 0050 1460     		str	r4, [r2]
1782:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 665              		.loc 2 1782 3 is_stmt 1 view .LVU184
1782:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 666              		.loc 2 1782 21 is_stmt 0 view .LVU185
 667 0052 1860     		str	r0, [r3]
 668              	.LVL37:
1782:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 669              		.loc 2 1782 21 view .LVU186
 670              	.LBE93:
 671              	.LBE97:
 327:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 672              		.loc 1 327 1 view .LVU187
 673 0054 70BD     		pop	{r4, r5, r6, pc}
 674              	.L36:
 675 0056 00BF     		.align	2
 676              	.L35:
 677 0058 14ED00E0 		.word	-536810220
 678              		.cfi_endproc
 679              	.LFE316:
 681              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 682              		.align	1
 683              		.global	HAL_NVIC_SetPendingIRQ
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu softvfp
 689              	HAL_NVIC_SetPendingIRQ:
 690              	.LVL38:
 691              	.LFB317:
 328:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 329:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 330:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set Pending bit of an external interrupt.
 331:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 332:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 333:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 334:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 335:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 336:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 337:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 692              		.loc 1 337 1 is_stmt 1 view -0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 338:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 339:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 697              		.loc 1 339 3 view .LVU189
 340:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 341:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Set interrupt pending */
 342:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 698              		.loc 1 342 3 view .LVU190
 699              	.LBB100:
 700              	.LBI100:
1661:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 701              		.loc 2 1661 22 view .LVU191
 702              	.LBB101:
1663:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 703              		.loc 2 1663 3 view .LVU192
1663:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 704              		.loc 2 1663 41 is_stmt 0 view .LVU193
 705 0000 4309     		lsrs	r3, r0, #5
1663:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 706              		.loc 2 1663 52 view .LVU194
 707 0002 0122     		movs	r2, #1
1663:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 708              		.loc 2 1663 97 view .LVU195
 709 0004 00F01F00 		and	r0, r0, #31
 710              	.LVL39:
1663:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 711              		.loc 2 1663 52 view .LVU196
 712 0008 02FA00F0 		lsl	r0, r2, r0
1663:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 713              		.loc 2 1663 50 view .LVU197
 714 000c 4033     		adds	r3, r3, #64
 715 000e 024A     		ldr	r2, .L38
 716 0010 42F82300 		str	r0, [r2, r3, lsl #2]
 717              	.LVL40:
1663:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 718              		.loc 2 1663 50 view .LVU198
 719              	.LBE101:
 720              	.LBE100:
 343:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 721              		.loc 1 343 1 view .LVU199
 722 0014 7047     		bx	lr
 723              	.L39:
 724 0016 00BF     		.align	2
 725              	.L38:
 726 0018 00E100E0 		.word	-536813312
 727              		.cfi_endproc
 728              	.LFE317:
 730              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 731              		.align	1
 732              		.global	HAL_NVIC_GetPendingIRQ
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu softvfp
 738              	HAL_NVIC_GetPendingIRQ:
 739              	.LVL41:
 740              	.LFB318:
 344:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 345:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 346:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get Pending Interrupt (read the pending register in the NVIC
 347:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         and return the pending bit for the specified interrupt).
 348:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 349:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 350:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 351:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 352:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 353:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 354:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 355:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 741              		.loc 1 355 1 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 356:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 357:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 746              		.loc 1 357 3 view .LVU201
 358:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 359:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 360:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 747              		.loc 1 360 3 view .LVU202
 748              	.LBB104:
 749              	.LBI104:
1650:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 750              		.loc 2 1650 26 view .LVU203
 751              	.LBB105:
1652:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 752              		.loc 2 1652 3 view .LVU204
1652:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 753              		.loc 2 1652 61 is_stmt 0 view .LVU205
 754 0000 4309     		lsrs	r3, r0, #5
1652:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 755              		.loc 2 1652 33 view .LVU206
 756 0002 054A     		ldr	r2, .L41
 757 0004 4033     		adds	r3, r3, #64
1652:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 758              		.loc 2 1652 107 view .LVU207
 759 0006 00F01F00 		and	r0, r0, #31
 760              	.LVL42:
1652:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 761              		.loc 2 1652 33 view .LVU208
 762 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 763              	.LVL43:
1652:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 764              		.loc 2 1652 119 view .LVU209
 765 000e 23FA00F0 		lsr	r0, r3, r0
 766              	.LBE105:
 767              	.LBE104:
 361:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 768              		.loc 1 361 1 view .LVU210
 769 0012 00F00100 		and	r0, r0, #1
 770 0016 7047     		bx	lr
 771              	.L42:
 772              		.align	2
 773              	.L41:
 774 0018 00E100E0 		.word	-536813312
 775              		.cfi_endproc
 776              	.LFE318:
 778              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 779              		.align	1
 780              		.global	HAL_NVIC_ClearPendingIRQ
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu softvfp
 786              	HAL_NVIC_ClearPendingIRQ:
 787              	.LVL44:
 788              	.LFB319:
 362:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 363:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 364:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Clear the pending bit of an external interrupt.
 365:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 366:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 367:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 368:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 369:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 370:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 371:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 789              		.loc 1 371 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 372:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 373:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 794              		.loc 1 373 3 view .LVU212
 374:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 375:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Clear pending interrupt */
 376:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 795              		.loc 1 376 3 view .LVU213
 796              	.LBB108:
 797              	.LBI108:
1672:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 798              		.loc 2 1672 22 view .LVU214
 799              	.LBB109:
1674:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 800              		.loc 2 1674 3 view .LVU215
1674:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 801              		.loc 2 1674 41 is_stmt 0 view .LVU216
 802 0000 4309     		lsrs	r3, r0, #5
1674:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 803              		.loc 2 1674 52 view .LVU217
 804 0002 0122     		movs	r2, #1
1674:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 805              		.loc 2 1674 97 view .LVU218
 806 0004 00F01F00 		and	r0, r0, #31
 807              	.LVL45:
1674:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 808              		.loc 2 1674 52 view .LVU219
 809 0008 02FA00F0 		lsl	r0, r2, r0
1674:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 810              		.loc 2 1674 50 view .LVU220
 811 000c 6033     		adds	r3, r3, #96
 812 000e 024A     		ldr	r2, .L44
 813 0010 42F82300 		str	r0, [r2, r3, lsl #2]
 814              	.LVL46:
1674:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 815              		.loc 2 1674 50 view .LVU221
 816              	.LBE109:
 817              	.LBE108:
 377:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 818              		.loc 1 377 1 view .LVU222
 819 0014 7047     		bx	lr
 820              	.L45:
 821 0016 00BF     		.align	2
 822              	.L44:
 823 0018 00E100E0 		.word	-536813312
 824              		.cfi_endproc
 825              	.LFE319:
 827              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 828              		.align	1
 829              		.global	HAL_NVIC_GetActive
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu softvfp
 835              	HAL_NVIC_GetActive:
 836              	.LVL47:
 837              	.LFB320:
 378:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 379:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 380:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief Get active interrupt (read the active register in NVIC and return the active bit).
 381:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 382:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 383:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 384:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 385:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 386:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 387:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 388:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 838              		.loc 1 388 1 is_stmt 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 389:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 390:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 843              		.loc 1 390 3 view .LVU224
 844              	.LBB112:
 845              	.LBI112:
1685:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** {
 846              		.loc 2 1685 26 view .LVU225
 847              	.LBB113:
1687:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 848              		.loc 2 1687 3 view .LVU226
1687:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 849              		.loc 2 1687 61 is_stmt 0 view .LVU227
 850 0000 4309     		lsrs	r3, r0, #5
1687:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 851              		.loc 2 1687 33 view .LVU228
 852 0002 054A     		ldr	r2, .L47
 853 0004 8033     		adds	r3, r3, #128
1687:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 854              		.loc 2 1687 107 view .LVU229
 855 0006 00F01F00 		and	r0, r0, #31
 856              	.LVL48:
1687:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 857              		.loc 2 1687 33 view .LVU230
 858 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 859              	.LVL49:
1687:.././hal/stm32l4/CMSIS/Include/core_cm4.h **** }
 860              		.loc 2 1687 119 view .LVU231
 861 000e 23FA00F0 		lsr	r0, r3, r0
 862              	.LBE113:
 863              	.LBE112:
 391:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 864              		.loc 1 391 1 view .LVU232
 865 0012 00F00100 		and	r0, r0, #1
 866 0016 7047     		bx	lr
 867              	.L48:
 868              		.align	2
 869              	.L47:
 870 0018 00E100E0 		.word	-536813312
 871              		.cfi_endproc
 872              	.LFE320:
 874              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 875              		.align	1
 876              		.global	HAL_SYSTICK_CLKSourceConfig
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu softvfp
 882              	HAL_SYSTICK_CLKSourceConfig:
 883              	.LVL50:
 884              	.LFB321:
 392:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 393:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 394:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Configure the SysTick clock source.
 395:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 396:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 397:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 398:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 399:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 400:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 401:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 402:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 885              		.loc 1 402 1 is_stmt 1 view -0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 403:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 404:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 890              		.loc 1 404 3 view .LVU234
 405:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 891              		.loc 1 405 3 view .LVU235
 892 0000 044B     		ldr	r3, .L53
 406:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   {
 407:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 893              		.loc 1 407 19 is_stmt 0 view .LVU236
 894 0002 1A68     		ldr	r2, [r3]
 895              		.loc 1 407 5 is_stmt 1 view .LVU237
 405:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 896              		.loc 1 405 6 is_stmt 0 view .LVU238
 897 0004 0428     		cmp	r0, #4
 898              		.loc 1 407 19 view .LVU239
 899 0006 0CBF     		ite	eq
 900 0008 42F00402 		orreq	r2, r2, #4
 408:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   }
 409:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   else
 410:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   {
 411:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 901              		.loc 1 411 5 is_stmt 1 view .LVU240
 902              		.loc 1 411 19 is_stmt 0 view .LVU241
 903 000c 22F00402 		bicne	r2, r2, #4
 904 0010 1A60     		str	r2, [r3]
 412:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   }
 413:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 905              		.loc 1 413 1 view .LVU242
 906 0012 7047     		bx	lr
 907              	.L54:
 908              		.align	2
 909              	.L53:
 910 0014 10E000E0 		.word	-536813552
 911              		.cfi_endproc
 912              	.LFE321:
 914              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 915              		.align	1
 916              		.weak	HAL_SYSTICK_Callback
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu softvfp
 922              	HAL_SYSTICK_Callback:
 923              	.LFB323:
 414:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 415:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 416:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Handle SYSTICK interrupt request.
 417:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 418:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 419:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 420:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 421:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 422:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 423:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 424:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 425:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 426:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 427:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 428:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 429:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 924              		.loc 1 429 1 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              		@ link register save eliminated.
 430:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 431:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 432:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****    */
 433:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 929              		.loc 1 433 1 view .LVU244
 930 0000 7047     		bx	lr
 931              		.cfi_endproc
 932              	.LFE323:
 934              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 935              		.align	1
 936              		.global	HAL_SYSTICK_IRQHandler
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 940              		.fpu softvfp
 942              	HAL_SYSTICK_IRQHandler:
 943              	.LFB322:
 420:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 944              		.loc 1 420 1 view -0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 421:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 948              		.loc 1 421 3 view .LVU246
 420:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 949              		.loc 1 420 1 is_stmt 0 view .LVU247
 950 0000 08B5     		push	{r3, lr}
 951              	.LCFI2:
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 3, -8
 954              		.cfi_offset 14, -4
 421:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 955              		.loc 1 421 3 view .LVU248
 956 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 957              	.LVL51:
 422:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 958              		.loc 1 422 1 view .LVU249
 959 0006 08BD     		pop	{r3, pc}
 960              		.cfi_endproc
 961              	.LFE322:
 963              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 964              		.align	1
 965              		.global	HAL_MPU_Disable
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 969              		.fpu softvfp
 971              	HAL_MPU_Disable:
 972              	.LFB324:
 434:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 435:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 436:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 437:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable the MPU.
 438:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 439:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 440:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 441:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 973              		.loc 1 441 1 is_stmt 1 view -0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              		@ link register save eliminated.
 442:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 443:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   __DMB();
 978              		.loc 1 443 3 view .LVU251
 979              	.LBB114:
 980              	.LBI114:
 430:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 431:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 432:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** 
 433:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** /**
 434:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****  */
 438:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 981              		.loc 3 438 53 view .LVU252
 982              	.LBB115:
 439:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 440:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 983              		.loc 3 440 3 view .LVU253
 984              		.syntax unified
 985              	@ 440 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 986 0000 BFF35F8F 		dmb 0xF
 987              	@ 0 "" 2
 988              		.thumb
 989              		.syntax unified
 990              	.LBE115:
 991              	.LBE114:
 444:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 445:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Disable fault exceptions */
 446:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 992              		.loc 1 446 3 view .LVU254
 993              		.loc 1 446 14 is_stmt 0 view .LVU255
 994 0004 044A     		ldr	r2, .L58
 995 0006 536A     		ldr	r3, [r2, #36]
 996 0008 23F48033 		bic	r3, r3, #65536
 997 000c 5362     		str	r3, [r2, #36]
 447:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   
 448:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 449:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   MPU->CTRL = 0U;
 998              		.loc 1 449 3 is_stmt 1 view .LVU256
 999              		.loc 1 449 13 is_stmt 0 view .LVU257
 1000 000e 034B     		ldr	r3, .L58+4
 1001 0010 0022     		movs	r2, #0
 1002 0012 5A60     		str	r2, [r3, #4]
 450:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 1003              		.loc 1 450 1 view .LVU258
 1004 0014 7047     		bx	lr
 1005              	.L59:
 1006 0016 00BF     		.align	2
 1007              	.L58:
 1008 0018 00ED00E0 		.word	-536810240
 1009 001c 90ED00E0 		.word	-536810096
 1010              		.cfi_endproc
 1011              	.LFE324:
 1013              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 1014              		.align	1
 1015              		.global	HAL_MPU_Enable
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1019              		.fpu softvfp
 1021              	HAL_MPU_Enable:
 1022              	.LVL52:
 1023              	.LFB325:
 451:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 452:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 453:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable the MPU.
 454:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Control: Specifies the control mode of the MPU during hard fault, 
 455:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged accessto the default memory 
 456:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 457:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 458:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 459:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 460:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 461:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 462:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 463:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 464:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 1024              		.loc 1 464 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		@ link register save eliminated.
 465:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Enable the MPU */
 466:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 1029              		.loc 1 466 3 view .LVU260
 1030              		.loc 1 466 13 is_stmt 0 view .LVU261
 1031 0000 064B     		ldr	r3, .L61
 467:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   
 468:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Enable fault exceptions */
 469:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 1032              		.loc 1 469 14 view .LVU262
 1033 0002 074A     		ldr	r2, .L61+4
 466:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   
 1034              		.loc 1 466 27 view .LVU263
 1035 0004 40F00100 		orr	r0, r0, #1
 1036              	.LVL53:
 466:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   
 1037              		.loc 1 466 13 view .LVU264
 1038 0008 5860     		str	r0, [r3, #4]
 1039              		.loc 1 469 3 is_stmt 1 view .LVU265
 1040              		.loc 1 469 14 is_stmt 0 view .LVU266
 1041 000a 536A     		ldr	r3, [r2, #36]
 1042 000c 43F48033 		orr	r3, r3, #65536
 1043 0010 5362     		str	r3, [r2, #36]
 470:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   
 471:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Ensure MPU settings take effects */
 472:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   __DSB();
 1044              		.loc 1 472 3 is_stmt 1 view .LVU267
 1045              	.LBB116:
 1046              	.LBI116:
 427:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1047              		.loc 3 427 53 view .LVU268
 1048              	.LBB117:
 429:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 1049              		.loc 3 429 3 view .LVU269
 1050              		.syntax unified
 1051              	@ 429 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 1052 0012 BFF34F8F 		dsb 0xF
 1053              	@ 0 "" 2
 1054              		.thumb
 1055              		.syntax unified
 1056              	.LBE117:
 1057              	.LBE116:
 473:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   __ISB();
 1058              		.loc 1 473 3 view .LVU270
 1059              	.LBB118:
 1060              	.LBI118:
 416:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** {
 1061              		.loc 3 416 53 view .LVU271
 1062              	.LBB119:
 418:.././hal/stm32l4/CMSIS/Include/cmsis_gcc.h **** }
 1063              		.loc 3 418 3 view .LVU272
 1064              		.syntax unified
 1065              	@ 418 ".././hal/stm32l4/CMSIS/Include/cmsis_gcc.h" 1
 1066 0016 BFF36F8F 		isb 0xF
 1067              	@ 0 "" 2
 1068              		.thumb
 1069              		.syntax unified
 1070              	.LBE119:
 1071              	.LBE118:
 474:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 1072              		.loc 1 474 1 is_stmt 0 view .LVU273
 1073 001a 7047     		bx	lr
 1074              	.L62:
 1075              		.align	2
 1076              	.L61:
 1077 001c 90ED00E0 		.word	-536810096
 1078 0020 00ED00E0 		.word	-536810240
 1079              		.cfi_endproc
 1080              	.LFE325:
 1082              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1083              		.align	1
 1084              		.global	HAL_MPU_ConfigRegion
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1088              		.fpu softvfp
 1090              	HAL_MPU_ConfigRegion:
 1091              	.LVL54:
 1092              	.LFB326:
 475:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 476:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** /**
 477:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize and configure the Region and the memory to be protected.
 478:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
 479:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   *                the initialization and configuration information.
 480:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 481:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   */
 482:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 483:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** {
 1093              		.loc 1 483 1 is_stmt 1 view -0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 484:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 485:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 1097              		.loc 1 485 3 view .LVU275
 486:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 1098              		.loc 1 486 3 view .LVU276
 487:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 488:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Set the Region number */
 489:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1099              		.loc 1 489 3 view .LVU277
 1100              		.loc 1 489 12 is_stmt 0 view .LVU278
 1101 0000 124A     		ldr	r2, .L66
 1102              		.loc 1 489 22 view .LVU279
 1103 0002 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 483:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 1104              		.loc 1 483 1 view .LVU280
 1105 0004 10B5     		push	{r4, lr}
 1106              	.LCFI3:
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 4, -8
 1109              		.cfi_offset 14, -4
 1110              		.loc 1 489 12 view .LVU281
 1111 0006 9360     		str	r3, [r2, #8]
 490:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 491:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 1112              		.loc 1 491 3 is_stmt 1 view .LVU282
 1113              		.loc 1 491 16 is_stmt 0 view .LVU283
 1114 0008 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 1115              		.loc 1 491 6 view .LVU284
 1116 000a D9B1     		cbz	r1, .L64
 492:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   {
 493:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     /* Check the parameters */
 494:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 1117              		.loc 1 494 5 is_stmt 1 view .LVU285
 495:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 1118              		.loc 1 495 5 view .LVU286
 496:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 1119              		.loc 1 496 5 view .LVU287
 497:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 1120              		.loc 1 497 5 view .LVU288
 498:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 1121              		.loc 1 498 5 view .LVU289
 499:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 1122              		.loc 1 499 5 view .LVU290
 500:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 1123              		.loc 1 500 5 view .LVU291
 501:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 1124              		.loc 1 501 5 view .LVU292
 502:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** 
 503:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 1125              		.loc 1 503 5 view .LVU293
 1126              		.loc 1 503 25 is_stmt 0 view .LVU294
 1127 000c 4368     		ldr	r3, [r0, #4]
 1128              		.loc 1 503 15 view .LVU295
 1129 000e D360     		str	r3, [r2, #12]
 504:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1130              		.loc 1 504 5 is_stmt 1 view .LVU296
 505:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1131              		.loc 1 505 18 is_stmt 0 view .LVU297
 1132 0010 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 504:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1133              		.loc 1 504 18 view .LVU298
 1134 0012 047B     		ldrb	r4, [r0, #12]	@ zero_extendqisi2
 1135              		.loc 1 505 57 view .LVU299
 1136 0014 1B06     		lsls	r3, r3, #24
 504:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1137              		.loc 1 504 79 view .LVU300
 1138 0016 43EA0473 		orr	r3, r3, r4, lsl #28
 506:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 507:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 508:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 509:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 510:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 511:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1139              		.loc 1 511 79 view .LVU301
 1140 001a 0B43     		orrs	r3, r3, r1
 506:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 1141              		.loc 1 506 18 view .LVU302
 1142 001c 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 1143              		.loc 1 511 79 view .LVU303
 1144 001e 43EAC143 		orr	r3, r3, r1, lsl #19
 507:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 1145              		.loc 1 507 18 view .LVU304
 1146 0022 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 1147              		.loc 1 511 79 view .LVU305
 1148 0024 43EA8143 		orr	r3, r3, r1, lsl #18
 508:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 1149              		.loc 1 508 18 view .LVU306
 1150 0028 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 1151              		.loc 1 511 79 view .LVU307
 1152 002a 43EA4143 		orr	r3, r3, r1, lsl #17
 509:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 1153              		.loc 1 509 18 view .LVU308
 1154 002e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1155              		.loc 1 511 79 view .LVU309
 1156 0030 43EA0143 		orr	r3, r3, r1, lsl #16
 510:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1157              		.loc 1 510 18 view .LVU310
 1158 0034 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 1159              		.loc 1 511 79 view .LVU311
 1160 0036 43EA0123 		orr	r3, r3, r1, lsl #8
 1161              		.loc 1 511 18 view .LVU312
 1162 003a 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 1163              		.loc 1 511 79 view .LVU313
 1164 003c 43EA4103 		orr	r3, r3, r1, lsl #1
 504:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1165              		.loc 1 504 15 view .LVU314
 1166 0040 1361     		str	r3, [r2, #16]
 1167              	.L63:
 512:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 513:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   }
 514:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   else
 515:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   {
 516:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = 0x00;
 518:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   }
 519:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c **** }
 1168              		.loc 1 519 1 view .LVU315
 1169 0042 10BD     		pop	{r4, pc}
 1170              	.L64:
 516:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1171              		.loc 1 516 5 is_stmt 1 view .LVU316
 516:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1172              		.loc 1 516 15 is_stmt 0 view .LVU317
 1173 0044 D160     		str	r1, [r2, #12]
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   }
 1174              		.loc 1 517 5 is_stmt 1 view .LVU318
 517:.././hal/stm32l4/Src/stm32l4xx_hal_cortex.c ****   }
 1175              		.loc 1 517 15 is_stmt 0 view .LVU319
 1176 0046 1161     		str	r1, [r2, #16]
 1177              		.loc 1 519 1 view .LVU320
 1178 0048 FBE7     		b	.L63
 1179              	.L67:
 1180 004a 00BF     		.align	2
 1181              	.L66:
 1182 004c 90ED00E0 		.word	-536810096
 1183              		.cfi_endproc
 1184              	.LFE326:
 1186              		.text
 1187              	.Letext0:
 1188              		.file 4 ".././hal/stm32l4/stm32l443xx.h"
 1189              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1190              		.file 6 ".././hal/stm32l4/system_stm32l4xx.h"
 1191              		.file 7 ".././hal/stm32l4/stm32l4xx.h"
 1192              		.file 8 ".././hal/stm32l4/Inc/stm32l4xx_hal_cortex.h"
 1193              		.file 9 ".././hal/stm32l4/Inc/stm32l4xx_hal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_cortex.c
     /tmp/ccpOC6Nd.s:16     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccpOC6Nd.s:24     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccpOC6Nd.s:78     .text.HAL_NVIC_SetPriorityGrouping:0000000000000020 $d
     /tmp/ccpOC6Nd.s:83     .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccpOC6Nd.s:90     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccpOC6Nd.s:228    .text.HAL_NVIC_SetPriority:000000000000005c $d
     /tmp/ccpOC6Nd.s:234    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccpOC6Nd.s:241    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccpOC6Nd.s:277    .text.HAL_NVIC_EnableIRQ:0000000000000014 $d
     /tmp/ccpOC6Nd.s:282    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccpOC6Nd.s:289    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccpOC6Nd.s:326    .text.HAL_NVIC_DisableIRQ:0000000000000018 $d
     /tmp/ccpOC6Nd.s:331    .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccpOC6Nd.s:338    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccpOC6Nd.s:411    .text.HAL_NVIC_SystemReset:000000000000001c $d
     /tmp/ccpOC6Nd.s:421    .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccpOC6Nd.s:428    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccpOC6Nd.s:500    .text.HAL_SYSTICK_Config:0000000000000024 $d
     /tmp/ccpOC6Nd.s:506    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccpOC6Nd.s:513    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccpOC6Nd.s:537    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
     /tmp/ccpOC6Nd.s:542    .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/ccpOC6Nd.s:549    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccpOC6Nd.s:677    .text.HAL_NVIC_GetPriority:0000000000000058 $d
     /tmp/ccpOC6Nd.s:682    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccpOC6Nd.s:689    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccpOC6Nd.s:726    .text.HAL_NVIC_SetPendingIRQ:0000000000000018 $d
     /tmp/ccpOC6Nd.s:731    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccpOC6Nd.s:738    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccpOC6Nd.s:774    .text.HAL_NVIC_GetPendingIRQ:0000000000000018 $d
     /tmp/ccpOC6Nd.s:779    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccpOC6Nd.s:786    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccpOC6Nd.s:823    .text.HAL_NVIC_ClearPendingIRQ:0000000000000018 $d
     /tmp/ccpOC6Nd.s:828    .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccpOC6Nd.s:835    .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccpOC6Nd.s:870    .text.HAL_NVIC_GetActive:0000000000000018 $d
     /tmp/ccpOC6Nd.s:875    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccpOC6Nd.s:882    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccpOC6Nd.s:910    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000014 $d
     /tmp/ccpOC6Nd.s:915    .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/ccpOC6Nd.s:922    .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccpOC6Nd.s:935    .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccpOC6Nd.s:942    .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/ccpOC6Nd.s:964    .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/ccpOC6Nd.s:971    .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/ccpOC6Nd.s:1008   .text.HAL_MPU_Disable:0000000000000018 $d
     /tmp/ccpOC6Nd.s:1014   .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/ccpOC6Nd.s:1021   .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/ccpOC6Nd.s:1077   .text.HAL_MPU_Enable:000000000000001c $d
     /tmp/ccpOC6Nd.s:1083   .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/ccpOC6Nd.s:1090   .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/ccpOC6Nd.s:1182   .text.HAL_MPU_ConfigRegion:000000000000004c $d

NO UNDEFINED SYMBOLS
