   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l4xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RCC_SetFlashLatencyFromMSIRange,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	RCC_SetFlashLatencyFromMSIRange:
  24              	.LVL0:
  25              	.LFB322:
  26              		.file 1 ".././hal/stm32l4/Src/stm32l4xx_hal_rcc.c"
   1:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
   2:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
   3:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @file    stm32l4xx_hal_rcc.c
   4:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
  11:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   @verbatim
  12:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  13:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  15:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     [..]
  16:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       After reset the device is running from Multiple Speed Internal oscillator
  17:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (4 MHz) with Flash 0 wait state. Flash prefetch buffer, D-Cache
  18:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
  21:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHBs) and Low speed (APBs) busses:
  22:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at MSI speed.
  23:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (+) All GPIOs are in analog mode, except the JTAG pins which
  25:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
  27:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     [..]
  28:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  29:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  30:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  31:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  32:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  33:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  34:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  35:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           derived from the System clock (SAIx, RTC, ADC, USB OTG FS/SDMMC1/RNG)
  36:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
  37:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
  38:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  39:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @attention
  40:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
  41:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  42:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
  43:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  44:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  45:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  46:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  47:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  48:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  49:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  50:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  51:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  52:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *      without specific prior written permission.
  53:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
  54:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  55:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  56:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  57:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  58:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  59:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  60:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  61:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  62:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  63:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  64:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
  65:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  66:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
  67:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
  68:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #include "stm32l4xx_hal.h"
  70:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
  71:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup STM32L4xx_HAL_Driver
  72:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @{
  73:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
  74:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
  75:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @{
  78:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
  79:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
  80:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
  82:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  85:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****  * @{
  86:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****  */
  87:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define HSE_TIMEOUT_VALUE          HSE_STARTUP_TIMEOUT
  88:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define HSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  89:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define MSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  90:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
  91:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          17U   /* 17 ms (16 ms starting time + 1) */
  92:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
  93:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  94:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
  95:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define HSI48_TIMEOUT_VALUE        2U    /* 2 ms (minimum Tick + 1) */
  96:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define PLL_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  97:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U /* 5 s    */
  98:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
  99:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @}
 100:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 101:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 102:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 103:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 104:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @{
 105:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 106:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
 107:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 108:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 109:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 110:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #define RCC_PLL_OSCSOURCE_CONFIG(__HAL_RCC_PLLSOURCE__) \
 111:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             (MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, (__HAL_RCC_PLLSOURCE__)))
 112:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
 113:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @}
 114:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 115:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 116:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 117:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 118:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 119:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 120:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @{
 121:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange);
 123:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 124:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** static uint32_t          RCC_GetSysClockFreqFromPLLSource(void);
 125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif
 126:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
 127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @}
 128:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 129:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 130:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 131:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 132:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 133:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @{
 134:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 135:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 136:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 137:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 138:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
 139:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   @verbatim
 140:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 141:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 142:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     [..]
 144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal and external oscillators
 145:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       (HSE, HSI, LSE, MSI, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 146:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        and APB2).
 147:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 148:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 149:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) HSI (high-speed internal): 16 MHz factory-trimmed RC used directly or through
 150:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              the PLL as System clock source.
 151:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 152:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) MSI (Mutiple Speed Internal): Its frequency is software trimmable from 100KHZ to 48MHZ
 153:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              It can be used to generate the clock for the USB OTG FS (48 MHz).
 154:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              The number of flash wait states is automatically adjusted when MSI range is updated wi
 155:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              HAL_RCC_OscConfig() and the MSI is used as System clock source.
 156:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 157:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) LSI (low-speed internal): 32 KHz low consumption RC used as IWDG and/or RTC
 158:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              clock source.
 159:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 160:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) HSE (high-speed external): 4 to 48 MHz crystal oscillator used directly or
 161:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also optionally as RTC clock sourc
 162:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) LSE (low-speed external): 32.768 KHz oscillator used optionally as RTC clock source.
 164:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) PLL (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 166:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 80MHz).
 167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 168:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate an accurate clock to achieve
 170:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 171:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 172:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI1 (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 173:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate SAR ADC1 clock.
 174:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 176:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (++) The Third output is used to generate an accurate clock to achieve
 177:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 178:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI2 (clocked by HSI, HSE or MSI) providing up to two independent output clocks:
 180:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate SAR ADC2 clock.
 181:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (++) The second  output is used to generate an accurate clock to achieve
 182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 183:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 184:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) CSS (Clock security system): once enabled, if a HSE clock failure occurs
 185:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 186:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 187:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt)
 188:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              exception vector.
 189:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 190:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) MCO (microcontroller clock output): used to output MSI, LSI, HSI, LSE, HSE or
 191:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              main PLL clock (through a configurable prescaler) on PA8 pin.
 192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 193:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 194:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) Several clock sources can be used to drive the System clock (SYSCLK): MSI, HSI,
 195:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              HSE and main PLL.
 196:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 197:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 198:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 200:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 201:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 202:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 203:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 204:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 205:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (+@) SAI: the SAI clock can be derived either from a specific PLL (PLLSAI1) or (PLLSAI2)
 206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 from an external clock mapped on the SAI_CKIN pin.
 207:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 You have to use HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 208:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 209:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 divided by 2 to 31.
 210:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 You have to use __HAL_RCC_RTC_ENABLE() and HAL_RCCEx_PeriphCLKConfig() function
 211:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 to configure this clock.
 212:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (+@) USB OTG FS, SDMMC1 and RNG: USB OTG FS requires a frequency equal to 48 MHz
 213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 to work correctly, while the SDMMC1 and RNG peripherals require a frequency
 214:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 equal or lower than to 48 MHz. This clock is derived of the main PLL or PLLSAI1
 215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 through PLLQ divider. You have to enable the peripheral clock and use
 216:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                 HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 217:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 219:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 80 MHz.
 221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              The clock source frequency should be adapted depending on the device voltage range
 222:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****              as listed in the Reference Manual "Clock source frequency versus voltage scaling" chap
 223:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
 225:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 226:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            Table 1. HCLK clock frequency for STM32L4Rx/STM32L4Sx devices
 227:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 228:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            | Latency         |     HCLK clock frequency (MHz)       |
 229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |                 |--------------------------------------|
 230:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |                 |  voltage range 1  | voltage range 2  |
 231:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |                 |       1.2 V       |     1.0 V        |
 232:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 233:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|   0 < HCLK <= 20  |  0 < HCLK <= 8   |
 234:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 235:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)|  20 < HCLK <= 40  |  8 < HCLK <= 16  |
 236:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 237:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)|  40 < HCLK <= 60  | 16 < HCLK <= 26  |
 238:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 239:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)|  60 < HCLK <= 80  | 16 < HCLK <= 26  |
 240:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 241:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)|  80 < HCLK <= 100 | 16 < HCLK <= 26  |
 242:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |5WS(6 CPU cycles)| 100 < HCLK <= 120 | 16 < HCLK <= 26  |
 244:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 245:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 246:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            Table 2. HCLK clock frequency for other STM32L4 devices
 247:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 248:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            | Latency         |    HCLK clock frequency (MHz)       |
 249:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |                 |-------------------------------------|
 250:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |                 | voltage range 1  | voltage range 2  |
 251:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |                 |      1.2 V       |     1.0 V        |
 252:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 253:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|  0 < HCLK <= 16  |  0 < HCLK <= 6   |
 254:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 255:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)| 16 < HCLK <= 32  |  6 < HCLK <= 12  |
 256:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)| 32 < HCLK <= 48  | 12 < HCLK <= 18  |
 258:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 259:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)| 48 < HCLK <= 64  | 18 < HCLK <= 26  |
 260:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 261:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)| 64 < HCLK <= 80  | 18 < HCLK <= 26  |
 262:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 263:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @{
 264:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 265:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 266:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
 267:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Reset the RCC clock configuration to the default reset state.
 268:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            - MSI ON and used as system clock source
 270:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            - HSE, HSI, PLL, PLLSAI1 and PLLISAI2 OFF
 271:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 272:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            - CSS, MCO1 OFF
 273:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupts disabled
 274:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 275:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 276:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            - Peripheral clocks
 277:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 278:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 280:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 281:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
 282:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 283:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 284:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Set MSION bit */
 285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_MSION);
 286:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 287:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSIRDY bit is set before writing default MSIRANGE value */
 288:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 290:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Wait till MSI is ready */
 292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 293:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 298:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 300:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Set MSIRANGE default value */
 301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_MSIRANGE, RCC_MSIRANGE_6);
 302:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Reset CFGR register (MSI is selected as system clock source) */
 304:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 305:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 306:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for MSI as system clock source */
 307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = MSI_VALUE;
 308:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 311:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 312:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 313:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 314:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSI selected as system clock source */
 316:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 318:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 319:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_MSI)
 321:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 323:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 324:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 326:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 327:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSION, HSIKERON, HSIASFS, HSEON, HSECSSON, PLLON, PLLSAIxON bits */
 329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 330:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 331:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 332:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 333:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 334:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 335:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 336:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON);
 340:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 341:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 342:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 343:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Insure PLLRDY, PLLSAI1RDY and PLLSAI2RDY (if present) are reset */
 344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 349:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY | RCC_CR_PLLSAI2RDY) != 0U)
 350:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 351:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY) != 0U)
 354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 356:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif
 360:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 362:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 364:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 366:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 367:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLCFGR register */
 368:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLCFGR);
 369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN_4 );
 370:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT)
 372:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 373:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI1CFGR register */
 374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI1CFGR);
 375:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI1CFGR,  RCC_PLLSAI1CFGR_PLLSAI1N_4 );
 376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT */
 378:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 379:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 380:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 381:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI2CFGR register */
 382:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI2CFGR);
 383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI2CFGR,  RCC_PLLSAI2CFGR_PLLSAI2N_4 );
 384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 385:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 387:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 388:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Disable all interrupts */
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 393:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Clear all interrupt flags */
 394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   WRITE_REG(RCC->CICR, 0xFFFFFFFFU);
 395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 396:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Clear all reset flags */
 397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 398:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 399:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 400:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 402:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
 403:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the RCC Oscillators according to the specified parameters in the
 404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 405:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
 406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 407:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 408:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 412:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 413:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 415:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
 416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
 418:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
 420:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_oscsource;
 421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 422:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check Null pointer */
 423:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 425:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 428:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 430:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 433:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- MSI Configuration --------------------------*/
 435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 437:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
 439:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
 440:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));
 441:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 442:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check if MSI is used as system clock or as PLL source when PLL is selected as system clock *
 443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 445:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 448:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 451:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        /* Otherwise, just the calibration and MSI range change are allowed */
 452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
 453:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 454:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 455:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            must be correctly programmed according to the frequency of the CPU clock
 456:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            (HCLK) and the supply voltage of the device. */
 457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 458:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 459:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* First increase number of wait states update if necessary */
 460:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 461:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 462:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 463:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 464:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 465:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 468:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 470:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         else
 471:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 472:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Else, keep current flash latency while decreasing applies */
 473:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 475:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 476:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 477:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 478:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Decrease number of wait states update if necessary */
 479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 480:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 481:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 482:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 483:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 484:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 485:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Update the SystemCoreClock global variable */
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_
 487:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 488:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Configure the source of time base considering new system clocks settings*/
 489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         status = HAL_InitTick (TICK_INT_PRIORITY);
 490:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(status != HAL_OK)
 491:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 492:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return status;
 493:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 494:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 495:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 496:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
 497:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Check the MSI State */
 499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 500:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 501:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (MSI). */
 502:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_ENABLE();
 503:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 506:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 507:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 509:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 512:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 513:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 514:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 515:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 517:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 518:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 519:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 520:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 521:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
 522:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 523:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (MSI). */
 524:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_DISABLE();
 525:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 526:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 528:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 529:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 531:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 533:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 534:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 535:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 536:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 537:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 538:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 539:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 540:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 541:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 542:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 543:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 544:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 545:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 546:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 547:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 548:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSE)))
 549:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 551:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 552:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 553:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 554:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 555:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
 556:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 557:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 559:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 560:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSE State */
 561:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 562:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 563:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 564:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 565:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 566:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 568:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 570:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 571:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 572:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 573:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 574:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 575:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
 576:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 577:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 579:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 580:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 582:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 584:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 585:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 586:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 587:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 588:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 589:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 595:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 596:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 598:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 599:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 600:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSI)))
 601:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 602:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 604:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 605:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 606:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 607:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 608:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
 609:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 610:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 611:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 612:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 614:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
 615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 616:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSI State */
 617:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 618:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 619:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 620:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 621:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 622:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 624:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 625:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 627:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 629:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 630:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 633:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 636:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 637:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
 638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 639:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 640:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 642:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 643:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 644:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 645:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 647:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 649:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 650:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 651:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 652:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 653:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 654:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 655:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 658:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 659:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 660:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 663:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 664:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
 666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       uint32_t csr_temp = RCC->CSR;
 667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Check LSI division factor */
 669:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_LSIDIV(RCC_OscInitStruct->LSIDiv));
 670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 671:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if (RCC_OscInitStruct->LSIDiv != (csr_temp & RCC_CSR_LSIPREDIV))
 672:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 673:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if (((csr_temp & RCC_CSR_LSIRDY) == RCC_CSR_LSIRDY) && \
 674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             ((csr_temp & RCC_CSR_LSION) != RCC_CSR_LSION))
 675:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 676:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****            /* If LSIRDY is set while LSION is not enabled,
 677:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****               LSIPREDIV can't be updated  */
 678:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 679:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 681:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Turn off LSI before changing RCC_CSR_LSIPREDIV */
 682:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if ((csr_temp & RCC_CSR_LSION) == RCC_CSR_LSION)
 683:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 684:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_LSI_DISABLE();
 685:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 686:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Get Start Tick*/
 687:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           tickstart = HAL_GetTick();
 688:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 689:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Wait till LSI is disabled */
 690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 691:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 692:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 693:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             {
 694:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****               return HAL_TIMEOUT;
 695:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             }
 696:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 697:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 698:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 699:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Set LSI division factor */
 700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CSR, RCC_CSR_LSIPREDIV, RCC_OscInitStruct->LSIDiv);
 701:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 702:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
 703:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 704:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 706:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 708:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 709:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 712:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 714:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 715:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 716:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 718:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 719:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
 720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 721:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 722:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 723:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 724:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 725:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 726:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 729:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 731:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 732:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 733:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 734:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 735:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 736:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 737:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 738:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 739:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 740:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 741:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 742:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 743:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 744:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 745:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 746:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 747:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 748:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 750:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 751:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 752:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 753:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 754:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 756:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       SET_BIT(PWR->CR1, PWR_CR1_DBP);
 757:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 759:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 760:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 762:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 764:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 765:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 766:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 767:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 768:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 769:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 771:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
 772:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 773:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 774:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Set LSESYSDIS bit according to LSE propagation option (enabled or disabled) */
 775:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->BDCR, RCC_BDCR_LSESYSDIS, (RCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSDIS))
 776:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 777:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 778:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 779:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* LSE oscillator bypass enable */
 780:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 781:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 782:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 783:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
 784:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 785:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* LSE oscillator enable */
 786:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 787:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 788:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 789:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
 790:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 791:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 792:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 793:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 794:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 796:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 797:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 798:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSE State */
 799:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 800:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 801:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 802:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 803:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 804:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 805:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 806:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 808:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 809:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 810:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 811:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 812:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 813:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
 814:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 815:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 816:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 817:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 818:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 819:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 820:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 822:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 823:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 824:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 825:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 826:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 827:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
 828:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* By default, stop disabling LSE propagation */
 829:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
 830:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 831:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 832:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 833:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 834:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 835:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 836:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 837:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 838:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 839:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 840:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -----------------------*/
 841:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 842:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 843:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 844:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 845:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 846:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 847:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 848:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 849:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 850:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 851:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 852:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 853:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 854:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 855:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 856:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 857:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 858:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 859:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 860:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 861:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 862:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 863:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 864:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
 865:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 866:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 867:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 868:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 869:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 870:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 871:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 872:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is disabled */
 873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 874:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 875:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 876:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 877:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 878:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 879:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 880:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 881:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 882:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 883:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 884:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 885:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 886:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 887:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 888:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 889:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 890:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(sysclk_source != RCC_CFGR_SWS_PLL)
 891:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 892:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 893:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 894:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Check the parameters */
 895:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 896:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 897:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 898:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 899:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 900:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
 901:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 902:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 903:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 904:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Disable the main PLL. */
 905:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 906:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 907:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 908:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 909:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 910:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 912:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 913:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 914:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 915:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 916:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 917:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 918:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 919:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 920:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 921:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 922:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 923:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 924:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 925:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif
 926:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 927:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 928:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 929:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Enable the main PLL. */
 930:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 931:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 932:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 933:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 934:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 935:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 936:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 937:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 938:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 939:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 940:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 941:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 942:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 943:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 944:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 945:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 946:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 947:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
 948:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 949:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Disable the main PLL. */
 950:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 951:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 952:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Disable all PLL outputs to save power if no PLLs on */
 953:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT) && defined(RCC_CR_PLLSAI2RDY)
 954:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, (RCC_CR_PLLSAI1RDY | RCC_CR_PLLSAI2RDY)) == 0U)
 955:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 956:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 957:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 958:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 960:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 961:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 962:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 963:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 964:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 965:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT && RCC_CR_PLLSAI2RDY */
 966:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 967:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 968:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 969:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 970:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI2CLK);
 971:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 972:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK);
 973:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 974:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 975:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 976:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 977:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 978:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 979:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 980:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 982:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 983:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 984:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 985:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 986:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 987:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 988:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
 989:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 990:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
 991:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 992:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 993:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 994:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 995:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 996:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
 997:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the CPU, AHB and APB busses clocks according to the specified
 998:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 999:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_OscInitTypeDef structure that
1000:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
1001:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  FLatency  FLASH Latency
1002:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1003:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_0   FLASH 0 Latency cycle
1004:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_1   FLASH 1 Latency cycle
1005:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_2   FLASH 2 Latency cycles
1006:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_3   FLASH 3 Latency cycles
1007:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_4   FLASH 4 Latency cycles
1008:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   @if STM32L4S9xx
1009:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_5   FLASH 5 Latency cycles
1010:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_6   FLASH 6 Latency cycles
1011:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_7   FLASH 7 Latency cycles
1012:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_8   FLASH 8 Latency cycles
1013:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_9   FLASH 9 Latency cycles
1014:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_10  FLASH 10 Latency cycles
1015:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_11  FLASH 11 Latency cycles
1016:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_12  FLASH 12 Latency cycles
1017:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_13  FLASH 13 Latency cycles
1018:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_14  FLASH 14 Latency cycles
1019:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_15  FLASH 15 Latency cycles
1020:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   @endif
1021:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1022:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
1023:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
1024:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1025:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The MSI is used by default as system clock source after
1026:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STANDBY mode. After restart from Reset,
1027:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         the MSI frequency is set to its default value 4 MHz.
1028:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1029:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The HSI can be selected as system clock source after
1030:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         from STOP modes or in case of failure of the HSE used directly or indirectly
1031:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         as system clock (if the Clock Security System CSS is enabled).
1032:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1033:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
1034:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
1035:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
1036:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         occur when the clock source is ready.
1037:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1038:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   You can use HAL_RCC_GetClockConfig() function to know which clock is
1039:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         currently used as system clock source.
1040:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1041:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
1042:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
1043:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
1044:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1045:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1046:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
1047:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
1049:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1050:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t hpre = RCC_SYSCLK_DIV1;
1051:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif
1052:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
1053:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1054:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check Null pointer */
1055:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
1056:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1057:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
1058:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1059:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1060:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1061:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
1062:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
1063:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1064:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
1065:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
1066:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
1067:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1068:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
1069:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
1070:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1071:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1072:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
1073:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1074:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1075:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1076:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
1077:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1078:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
1079:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1080:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1081:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1082:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
1083:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
1084:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1085:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
1086:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1087:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
1088:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
1089:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1090:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Check the PLL ready flag */
1091:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
1092:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1093:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
1094:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1095:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1096:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
1097:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Compute target PLL output frequency */
1098:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(RCC_GetSysClockFreqFromPLLSource() > 80000000U)
1099:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1100:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
1101:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
1102:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
1103:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1104:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
1105:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
1106:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         else if((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) && (R
1107:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
1108:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
1109:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1110:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
1111:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
1112:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         else
1113:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
1114:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* nothing to do */
1115:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
1116:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1117:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif
1118:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1119:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
1120:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1121:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
1122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
1123:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1124:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSE ready flag */
1125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
1126:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
1127:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
1128:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
1129:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1130:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* MSI is selected as System Clock Source */
1131:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
1132:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1133:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Check the MSI ready flag */
1134:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
1135:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
1136:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
1137:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
1138:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1139:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
1140:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
1141:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1142:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSI ready flag */
1143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
1144:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
1145:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
1146:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
1147:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1148:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1149:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz *
1150:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(HAL_RCC_GetSysClockFreq() > 80000000U)
1151:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1152:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* Intermediate step with HCLK prescaler 2 necessary before to go under 80Mhz */
1153:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1154:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         hpre = RCC_SYSCLK_DIV2;
1155:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1156:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif
1157:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1158:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1159:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1160:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
1161:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1162:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Get Start Tick*/
1163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
1164:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
1166:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
1168:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         return HAL_TIMEOUT;
1170:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1171:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1172:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1173:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1174:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
1175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
1176:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1177:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1178:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
1179:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1180:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1181:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1182:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1183:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Is intermediate HCLK prescaler 2 applied internally, complete with HCLK prescaler 1 */
1184:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(hpre == RCC_SYSCLK_DIV2)
1185:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1186:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
1187:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1188:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1189:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif
1190:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1191:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
1192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
1193:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1194:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1195:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
1196:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1197:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1198:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
1200:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1201:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
1202:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1203:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1204:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1205:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
1207:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1208:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
1209:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
1210:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1211:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1212:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
1214:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
1216:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
1217:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1218:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1219:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) 
1221:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1222:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1223:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   status = HAL_InitTick (TICK_INT_PRIORITY);
1224:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1225:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return status;
1226:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1227:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1228:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1229:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @}
1230:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1231:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1232:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
1233:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1234:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****  *
1235:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** @verbatim
1236:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1237:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1238:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1239:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     [..]
1240:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to:
1241:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1242:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     (+) Ouput clock to MCO pin.
1243:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     (+) Retrieve current clock frequencies.
1244:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     (+) Enable the Clock Security System.
1245:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1246:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** @endverbatim
1247:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @{
1248:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1249:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1250:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1251:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Select the clock source to output on MCO pin(PA8).
1252:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
1253:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOx  specifies the output direction for the clock source.
1254:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *          For STM32L4xx family this parameter can have only one value:
1255:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1  Clock source to output on MCO1 pin(PA8).
1256:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOSource  specifies the clock source to output.
1257:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1258:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK  MCO output disabled, no clock on MCO
1259:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK  system  clock selected as MCO source
1260:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_MSI  MSI clock selected as MCO source
1261:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI  HSI clock selected as MCO source
1262:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE  HSE clock selected as MCO sourcee
1263:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK  main PLL clock selected as MCO source
1264:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI  LSI clock selected as MCO source
1265:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE  LSE clock selected as MCO source
1266:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   @if STM32L443xx
1267:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48  HSI48 clock selected as MCO source for devices with 
1268:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   @endif
1269:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCODiv  specifies the MCO prescaler.
1270:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1271:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1  no division applied to MCO clock
1272:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
1273:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
1274:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
1275:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
1276:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1277:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1278:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_MCOConfig( uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1280:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1281:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1282:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1283:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1284:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1286:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1287:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1288:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1290:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* MCO Clock Enable */
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   __MCO1_CLK_ENABLE();
1292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1293:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Configue the MCO1 pin in alternate function mode */
1294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pin = MCO1_PIN;
1295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
1296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
1298:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
1299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
1300:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Mask MCOSEL[] and MCOPRE[] bits then set MCO1 clock source and prescaler */
1302:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE), (RCC_MCOSource | RCC_MCODiv ));
1303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1304:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1305:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1306:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the SYSCLK frequency.
1307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1308:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1309:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         constant and the selected clock source:
1311:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is MSI, function returns values based on MSI
1312:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *             Value as defined by the MSI range.
1313:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1314:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1315:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**),
1316:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *           HSI_VALUE(*) or MSI Value multiplied/divided by the PLL factors.
1317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1318:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1319:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *               in voltage and temperature.
1320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1321:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1323:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *                have wrong result.
1324:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1325:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1326:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         value for HSE crystal.
1327:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1328:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1329:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1330:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1331:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1332:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1333:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1334:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1335:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1336:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1337:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t msirange = 0U, sysclockfreq = 0U;
1340:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
1341:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_oscsource;
1342:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1343:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
1344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
1345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if((sysclk_source == RCC_CFGR_SWS_MSI) ||
1347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****      ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
1348:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1349:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* MSI or PLL with MSI source used as system clock source */
1350:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1351:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Get SYSCLK source */
1352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
1353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
1354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
1355:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1356:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
1357:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     { /* MSIRANGE from RCC_CR applies */
1358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
1359:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1360:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /*MSI frequency range in HZ*/
1361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     msirange = MSIRangeTable[msirange];
1362:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(sysclk_source == RCC_CFGR_SWS_MSI)
1364:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1365:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* MSI used as system clock source */
1366:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       sysclockfreq = msirange;
1367:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1368:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else if(sysclk_source == RCC_CFGR_SWS_HSI)
1370:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1371:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* HSI used as system clock source */
1372:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSI_VALUE;
1373:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else if(sysclk_source == RCC_CFGR_SWS_HSE)
1375:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1376:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* HSE used as system clock source */
1377:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
1378:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1379:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1380:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1381:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* unexpected case: sysclockfreq at 0 */
1382:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1383:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(sysclk_source == RCC_CFGR_SWS_PLL)
1385:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1386:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* PLL used as system clock  source */
1387:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1388:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
1389:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1390:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     */
1391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
1392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
1393:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     switch (pllsource)
1395:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1396:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_P
1398:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
1399:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1400:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_P
1402:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
1403:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1404:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
1405:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     default:
1406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pllvco = (msirange / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
1407:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
1408:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
1410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
1411:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1412:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1413:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return sysclockfreq;
1414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1415:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1416:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the HCLK frequency.
1418:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1420:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *
1421:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1422:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval HCLK frequency in Hz
1423:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1425:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return SystemCoreClock;
1427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1428:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1430:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK1 frequency.
1431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1433:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK1 frequency in Hz
1434:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1437:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_P
1439:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1440:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1441:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1442:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK2 frequency.
1443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1445:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK2 frequency in Hz
1446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1447:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1448:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1449:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PP
1451:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1452:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1453:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1454:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_OscInitStruct according to the internal
1455:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1456:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
1457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1458:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1459:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1460:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1461:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1462:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1463:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != (void *)NULL);
1464:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1465:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
1468:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1469:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
1470:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
1471:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1472:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1473:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1475:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
1476:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1477:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
1478:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else if(READ_BIT(RCC->CR, RCC_CR_HSEON) == RCC_CR_HSEON)
1480:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1481:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1482:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1483:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1484:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1485:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1487:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1488:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****    /* Get the MSI configuration -----------------------------------------------*/
1489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_MSION) == RCC_CR_MSION)
1490:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1491:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_ON;
1492:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1493:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1494:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1495:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_OFF;
1496:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1497:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_MSITRIM) >> RCC_ICSCR_MSI
1499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE);
1500:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1501:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1502:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSION) == RCC_CR_HSION)
1503:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
1505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1506:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1507:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1509:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSI
1512:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1513:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1514:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
1515:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
1517:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((RCC->BDCR & RCC_BDCR_LSESYSDIS) == RCC_BDCR_LSESYSDIS)
1518:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1519:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS_RTC_ONLY;
1520:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1521:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
1522:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
1523:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1524:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
1525:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1526:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1528:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1529:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
1530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if((RCC->BDCR & RCC_BDCR_LSESYSDIS) == RCC_BDCR_LSESYSDIS)
1531:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_ON_RTC_ONLY;
1533:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1534:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
1535:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
1536:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1537:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1538:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1539:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1540:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1541:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1542:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1543:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1544:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1545:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1546:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CSR, RCC_CSR_LSION) == RCC_CSR_LSION)
1547:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1548:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
1549:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1551:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1552:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1553:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1554:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
1555:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1556:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1557:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CSR & RCC_CSR_LSIPREDIV) == RCC_CSR_LSIPREDIV)
1558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1559:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIDiv = RCC_LSI_DIV128;
1560:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1561:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1562:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1563:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIDiv = RCC_LSI_DIV1;
1564:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1565:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
1566:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1568:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON) == RCC_CRRCR_HSI48ON)
1570:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1571:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
1572:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1573:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1574:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1575:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1576:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1577:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
1578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1579:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1580:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1582:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_PLLON) == RCC_CR_PLLON)
1583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1584:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1585:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1586:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1587:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1588:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1589:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
1591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
1592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
1594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
1595:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
1596:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
1597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_
1598:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
1599:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) != 0U)
1600:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1601:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV17;
1602:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1604:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1605:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV7;
1606:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1607:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_DIV_2_31_SUPPORT */
1608:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
1609:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1610:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1611:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1612:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_ClkInitStruct according to the internal
1613:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1614:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_ClkInitTypeDef structure that
1615:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1616:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  pFLatency  Pointer on the Flash Latency.
1617:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1618:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1619:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1620:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1621:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1622:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != (void  *)NULL);
1623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(pFLatency != (void *)NULL);
1624:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1625:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
1627:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1629:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = READ_BIT(RCC->CFGR, RCC_CFGR_SW);
1630:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1631:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_HPRE);
1633:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1634:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1);
1636:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1637:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> 3U);
1639:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1640:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY();
1642:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1643:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1644:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1645:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Enable the Clock Security System.
1646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1647:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1649:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1650:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
1651:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset.
1652:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1653:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1654:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1655:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
1657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1658:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1659:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1660:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief Handle the RCC Clock Security System interrupt request.
1661:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1662:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1663:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1664:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1666:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
1667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1668:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1669:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1671:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1672:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1673:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1674:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1675:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1676:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1677:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1678:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback.
1679:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval none
1680:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1681:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1682:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
1683:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1684:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback should be implemented in the user file
1685:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****    */
1686:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
1687:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1688:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1689:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @}
1690:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1691:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1692:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1693:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @}
1694:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1695:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1696:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1697:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1698:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @{
1699:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1700:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** /**
1701:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @brief  Update number of Flash wait states in line with MSI range and current
1702:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****             voltage range.
1703:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
1704:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
1705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   */
1706:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
1707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
  27              		.loc 1 1707 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
1708:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t vos;
  31              		.loc 1 1708 3 view .LVU1
1709:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
  32              		.loc 1 1709 3 view .LVU2
1710:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_PWR_IS_CLK_ENABLED())
  33              		.loc 1 1711 3 view .LVU3
1707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t vos;
  34              		.loc 1 1707 1 is_stmt 0 view .LVU4
  35 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 1711 6 view .LVU5
  42 0002 1E4D     		ldr	r5, .L10
  43 0004 AB6D     		ldr	r3, [r5, #88]
  44              		.loc 1 1711 5 view .LVU6
  45 0006 DA00     		lsls	r2, r3, #3
1707:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t vos;
  46              		.loc 1 1707 1 view .LVU7
  47 0008 0446     		mov	r4, r0
  48              		.loc 1 1711 5 view .LVU8
  49 000a 18D5     		bpl	.L2
1712:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
  50              		.loc 1 1713 5 is_stmt 1 view .LVU9
  51              		.loc 1 1713 11 is_stmt 0 view .LVU10
  52 000c FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
  53              	.LVL1:
  54              	.L3:
1714:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1715:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1716:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_ENABLE();
1718:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
1719:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_DISABLE();
1720:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1721:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1722:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
  55              		.loc 1 1722 3 is_stmt 1 view .LVU11
  56              		.loc 1 1722 5 is_stmt 0 view .LVU12
  57 0010 B0F5007F 		cmp	r0, #512
  58 0014 23D1     		bne	.L4
1723:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1724:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
  59              		.loc 1 1724 5 is_stmt 1 view .LVU13
  60              		.loc 1 1724 7 is_stmt 0 view .LVU14
  61 0016 802C     		cmp	r4, #128
  62 0018 29D9     		bls	.L6
1725:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1726:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1727:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(msirange > RCC_MSIRANGE_10)
  63              		.loc 1 1727 7 is_stmt 1 view .LVU15
  64              		.loc 1 1727 9 is_stmt 0 view .LVU16
  65 001a A02C     		cmp	r4, #160
1728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1729:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* MSI 48Mhz */
1730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
1731:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1732:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else
1733:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1734:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* MSI 24Mhz or 32Mhz */
1735:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
  66              		.loc 1 1735 17 view .LVU17
  67 001c 8CBF     		ite	hi
  68 001e 0224     		movhi	r4, #2
  69              	.LVL2:
  70              		.loc 1 1735 17 view .LVU18
  71 0020 0124     		movls	r4, #1
  72              	.L5:
  73              	.LVL3:
1736:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1737:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1738:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     /* else MSI <= 16Mhz default FLASH_LATENCY_0 0WS */
1739:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1740:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   else
1741:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1742:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1743:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(msirange >= RCC_MSIRANGE_8)
1744:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1745:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* MSI >= 16Mhz */
1746:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_2; /* 2WS */
1747:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1748:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
1749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1750:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_7)
1751:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1752:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1753:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
1754:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1755:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1756:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1757:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
1758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
1759:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1760:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_3; /* 3WS */
1762:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     else
1764:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
1765:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_8)
1766:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1767:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* MSI 16Mhz */
1768:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
1769:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       else if(msirange == RCC_MSIRANGE_7)
1771:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
1772:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1773:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
1774:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
1775:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1776:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
1777:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif
1778:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1779:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1780:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   __HAL_FLASH_SET_LATENCY(latency);
  74              		.loc 1 1780 3 is_stmt 1 view .LVU19
  75 0022 1749     		ldr	r1, .L10+4
  76 0024 0A68     		ldr	r2, [r1]
  77 0026 22F00702 		bic	r2, r2, #7
  78 002a 2243     		orrs	r2, r2, r4
  79 002c 0A60     		str	r2, [r1]
1781:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1782:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check that the new number of wait states is taken into account to access the Flash
1783:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****      memory by reading the FLASH_ACR register */
1784:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_FLASH_GET_LATENCY() != latency)
  80              		.loc 1 1784 3 view .LVU20
  81              		.loc 1 1784 6 is_stmt 0 view .LVU21
  82 002e 0868     		ldr	r0, [r1]
  83              	.LVL4:
  84              		.loc 1 1784 6 view .LVU22
  85 0030 00F00700 		and	r0, r0, #7
1785:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
1786:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
1787:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
1788:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
1789:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
1790:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
  86              		.loc 1 1790 1 view .LVU23
  87 0034 001B     		subs	r0, r0, r4
  88 0036 18BF     		it	ne
  89 0038 0120     		movne	r0, #1
  90 003a 03B0     		add	sp, sp, #12
  91              	.LCFI1:
  92              		.cfi_remember_state
  93              		.cfi_def_cfa_offset 12
  94              		@ sp needed
  95 003c 30BD     		pop	{r4, r5, pc}
  96              	.LVL5:
  97              	.L2:
  98              	.LCFI2:
  99              		.cfi_restore_state
1717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 100              		.loc 1 1717 5 is_stmt 1 view .LVU24
 101              	.LBB6:
1717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 102              		.loc 1 1717 5 view .LVU25
1717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 103              		.loc 1 1717 5 view .LVU26
 104 003e AB6D     		ldr	r3, [r5, #88]
 105 0040 43F08053 		orr	r3, r3, #268435456
 106 0044 AB65     		str	r3, [r5, #88]
1717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 107              		.loc 1 1717 5 view .LVU27
 108 0046 AB6D     		ldr	r3, [r5, #88]
 109 0048 03F08053 		and	r3, r3, #268435456
 110 004c 0193     		str	r3, [sp, #4]
1717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 111              		.loc 1 1717 5 view .LVU28
 112 004e 019B     		ldr	r3, [sp, #4]
 113              	.LBE6:
1717:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 114              		.loc 1 1717 5 view .LVU29
1718:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_DISABLE();
 115              		.loc 1 1718 5 view .LVU30
1718:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_DISABLE();
 116              		.loc 1 1718 11 is_stmt 0 view .LVU31
 117 0050 FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
 118              	.LVL6:
1719:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 119              		.loc 1 1719 5 is_stmt 1 view .LVU32
 120 0054 AB6D     		ldr	r3, [r5, #88]
 121 0056 23F08053 		bic	r3, r3, #268435456
 122 005a AB65     		str	r3, [r5, #88]
 123 005c D8E7     		b	.L3
 124              	.L4:
1758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 125              		.loc 1 1758 5 view .LVU33
1758:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 126              		.loc 1 1758 7 is_stmt 0 view .LVU34
 127 005e 802C     		cmp	r4, #128
 128 0060 07D8     		bhi	.L8
1765:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 129              		.loc 1 1765 7 is_stmt 1 view .LVU35
1765:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 130              		.loc 1 1765 9 is_stmt 0 view .LVU36
 131 0062 08D0     		beq	.L9
1770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 132              		.loc 1 1770 12 is_stmt 1 view .LVU37
1770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 133              		.loc 1 1770 14 is_stmt 0 view .LVU38
 134 0064 A4F17003 		sub	r3, r4, #112
 135 0068 5C42     		rsbs	r4, r3, #0
 136              	.LVL7:
1770:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 137              		.loc 1 1770 14 view .LVU39
 138 006a 5C41     		adcs	r4, r4, r3
 139 006c D9E7     		b	.L5
 140              	.LVL8:
 141              	.L6:
1709:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 142              		.loc 1 1709 12 view .LVU40
 143 006e 0024     		movs	r4, #0
 144              	.LVL9:
1709:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 145              		.loc 1 1709 12 view .LVU41
 146 0070 D7E7     		b	.L5
 147              	.LVL10:
 148              	.L8:
1761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 149              		.loc 1 1761 15 view .LVU42
 150 0072 0324     		movs	r4, #3
 151              	.LVL11:
1761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 152              		.loc 1 1761 15 view .LVU43
 153 0074 D5E7     		b	.L5
 154              	.LVL12:
 155              	.L9:
1730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 156              		.loc 1 1730 17 view .LVU44
 157 0076 0224     		movs	r4, #2
 158              	.LVL13:
1730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 159              		.loc 1 1730 17 view .LVU45
 160 0078 D3E7     		b	.L5
 161              	.L11:
 162 007a 00BF     		.align	2
 163              	.L10:
 164 007c 00100240 		.word	1073876992
 165 0080 00200240 		.word	1073881088
 166              		.cfi_endproc
 167              	.LFE322:
 169              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
 170              		.align	1
 171              		.global	HAL_RCC_DeInit
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	HAL_RCC_DeInit:
 178              	.LFB309:
 281:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 179              		.loc 1 281 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 282:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 183              		.loc 1 282 3 view .LVU47
 285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 184              		.loc 1 285 3 view .LVU48
 281:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 185              		.loc 1 281 1 is_stmt 0 view .LVU49
 186 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 187              	.LCFI3:
 188              		.cfi_def_cfa_offset 24
 189              		.cfi_offset 3, -24
 190              		.cfi_offset 4, -20
 191              		.cfi_offset 5, -16
 192              		.cfi_offset 6, -12
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 195              		.loc 1 285 3 view .LVU50
 196 0002 2F4C     		ldr	r4, .L23
 197 0004 2368     		ldr	r3, [r4]
 198 0006 43F00103 		orr	r3, r3, #1
 199 000a 2360     		str	r3, [r4]
 289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 200              		.loc 1 289 3 is_stmt 1 view .LVU51
 289:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 201              		.loc 1 289 15 is_stmt 0 view .LVU52
 202 000c FFF7FEFF 		bl	HAL_GetTick
 203              	.LVL14:
 204 0010 0546     		mov	r5, r0
 205              	.LVL15:
 292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 206              		.loc 1 292 3 is_stmt 1 view .LVU53
 207              	.L13:
 292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 208              		.loc 1 292 8 view .LVU54
 292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 209              		.loc 1 292 9 is_stmt 0 view .LVU55
 210 0012 2368     		ldr	r3, [r4]
 292:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 211              		.loc 1 292 8 view .LVU56
 212 0014 9B07     		lsls	r3, r3, #30
 213 0016 3DD5     		bpl	.L15
 301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 214              		.loc 1 301 3 is_stmt 1 view .LVU57
 215 0018 2368     		ldr	r3, [r4]
 307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 216              		.loc 1 307 19 is_stmt 0 view .LVU58
 217 001a 2A4A     		ldr	r2, .L23+4
 301:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 218              		.loc 1 301 3 view .LVU59
 219 001c 23F0F003 		bic	r3, r3, #240
 220 0020 43F06003 		orr	r3, r3, #96
 221 0024 2360     		str	r3, [r4]
 304:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 222              		.loc 1 304 3 is_stmt 1 view .LVU60
 223 0026 0023     		movs	r3, #0
 224 0028 A360     		str	r3, [r4, #8]
 307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 225              		.loc 1 307 3 view .LVU61
 307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 226              		.loc 1 307 19 is_stmt 0 view .LVU62
 227 002a 274B     		ldr	r3, .L23+8
 310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 228              		.loc 1 310 6 view .LVU63
 229 002c 0F20     		movs	r0, #15
 307:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 230              		.loc 1 307 19 view .LVU64
 231 002e 1A60     		str	r2, [r3]
 310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 232              		.loc 1 310 3 is_stmt 1 view .LVU65
 310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 233              		.loc 1 310 6 is_stmt 0 view .LVU66
 234 0030 FFF7FEFF 		bl	HAL_InitTick
 235              	.LVL16:
 310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 236              		.loc 1 310 5 view .LVU67
 237 0034 0546     		mov	r5, r0
 238              	.LVL17:
 310:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 239              		.loc 1 310 5 view .LVU68
 240 0036 0028     		cmp	r0, #0
 241 0038 40D1     		bne	.L21
 317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 242              		.loc 1 317 3 is_stmt 1 view .LVU69
 317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 243              		.loc 1 317 15 is_stmt 0 view .LVU70
 244 003a FFF7FEFF 		bl	HAL_GetTick
 245              	.LVL18:
 322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 246              		.loc 1 322 7 view .LVU71
 247 003e 41F28837 		movw	r7, #5000
 317:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 248              		.loc 1 317 15 view .LVU72
 249 0042 0646     		mov	r6, r0
 250              	.LVL19:
 320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 251              		.loc 1 320 3 is_stmt 1 view .LVU73
 252              	.L16:
 320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 253              		.loc 1 320 8 view .LVU74
 320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 254              		.loc 1 320 9 is_stmt 0 view .LVU75
 255 0044 A368     		ldr	r3, [r4, #8]
 320:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 256              		.loc 1 320 8 view .LVU76
 257 0046 13F00C0F 		tst	r3, #12
 258 004a 2BD1     		bne	.L18
 335:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 259              		.loc 1 335 3 is_stmt 1 view .LVU77
 260 004c 2268     		ldr	r2, [r4]
 261 004e 1F4B     		ldr	r3, .L23+12
 262 0050 1340     		ands	r3, r3, r2
 263 0052 2360     		str	r3, [r4]
 345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 264              		.loc 1 345 3 view .LVU78
 345:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 265              		.loc 1 345 15 is_stmt 0 view .LVU79
 266 0054 FFF7FEFF 		bl	HAL_GetTick
 267              	.LVL20:
 268 0058 0646     		mov	r6, r0
 269              	.LVL21:
 353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 270              		.loc 1 353 3 is_stmt 1 view .LVU80
 271              	.L19:
 353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 272              		.loc 1 353 8 view .LVU81
 353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 273              		.loc 1 353 9 is_stmt 0 view .LVU82
 274 005a 2368     		ldr	r3, [r4]
 353:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 275              		.loc 1 353 8 view .LVU83
 276 005c 13F02063 		ands	r3, r3, #167772160
 277 0060 26D1     		bne	.L20
 368:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN_4 );
 278              		.loc 1 368 3 is_stmt 1 view .LVU84
 279 0062 E360     		str	r3, [r4, #12]
 369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 280              		.loc 1 369 3 view .LVU85
 281 0064 E268     		ldr	r2, [r4, #12]
 282 0066 42F48052 		orr	r2, r2, #4096
 283 006a E260     		str	r2, [r4, #12]
 374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI1CFGR,  RCC_PLLSAI1CFGR_PLLSAI1N_4 );
 284              		.loc 1 374 3 view .LVU86
 285 006c 2361     		str	r3, [r4, #16]
 375:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 286              		.loc 1 375 3 view .LVU87
 287 006e 2269     		ldr	r2, [r4, #16]
 288 0070 42F48052 		orr	r2, r2, #4096
 289 0074 2261     		str	r2, [r4, #16]
 388:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 290              		.loc 1 388 3 view .LVU88
 291 0076 2268     		ldr	r2, [r4]
 292 0078 22F48022 		bic	r2, r2, #262144
 293 007c 2260     		str	r2, [r4]
 391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 294              		.loc 1 391 3 view .LVU89
 295 007e A361     		str	r3, [r4, #24]
 394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 296              		.loc 1 394 3 view .LVU90
 297 0080 4FF0FF33 		mov	r3, #-1
 298 0084 2362     		str	r3, [r4, #32]
 397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 299              		.loc 1 397 3 view .LVU91
 300 0086 D4F89430 		ldr	r3, [r4, #148]
 301 008a 43F40003 		orr	r3, r3, #8388608
 302 008e C4F89430 		str	r3, [r4, #148]
 399:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 303              		.loc 1 399 3 view .LVU92
 399:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 304              		.loc 1 399 10 is_stmt 0 view .LVU93
 305 0092 05E0     		b	.L14
 306              	.LVL22:
 307              	.L15:
 294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 308              		.loc 1 294 5 is_stmt 1 view .LVU94
 294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 309              		.loc 1 294 9 is_stmt 0 view .LVU95
 310 0094 FFF7FEFF 		bl	HAL_GetTick
 311              	.LVL23:
 294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 312              		.loc 1 294 23 view .LVU96
 313 0098 401B     		subs	r0, r0, r5
 294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 314              		.loc 1 294 7 view .LVU97
 315 009a 0228     		cmp	r0, #2
 316 009c B9D9     		bls	.L13
 317              	.LVL24:
 318              	.L17:
 296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 319              		.loc 1 296 14 view .LVU98
 320 009e 0325     		movs	r5, #3
 321              	.L14:
 400:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 322              		.loc 1 400 1 view .LVU99
 323 00a0 2846     		mov	r0, r5
 324 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 325              	.LVL25:
 326              	.L18:
 322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 327              		.loc 1 322 5 is_stmt 1 view .LVU100
 322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 328              		.loc 1 322 9 is_stmt 0 view .LVU101
 329 00a4 FFF7FEFF 		bl	HAL_GetTick
 330              	.LVL26:
 322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 331              		.loc 1 322 23 view .LVU102
 332 00a8 801B     		subs	r0, r0, r6
 322:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 333              		.loc 1 322 7 view .LVU103
 334 00aa B842     		cmp	r0, r7
 335 00ac CAD9     		bls	.L16
 336 00ae F6E7     		b	.L17
 337              	.L20:
 361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 338              		.loc 1 361 5 is_stmt 1 view .LVU104
 361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 339              		.loc 1 361 9 is_stmt 0 view .LVU105
 340 00b0 FFF7FEFF 		bl	HAL_GetTick
 341              	.LVL27:
 361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 342              		.loc 1 361 23 view .LVU106
 343 00b4 801B     		subs	r0, r0, r6
 361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 344              		.loc 1 361 7 view .LVU107
 345 00b6 0228     		cmp	r0, #2
 346 00b8 CFD9     		bls	.L19
 347 00ba F0E7     		b	.L17
 348              	.LVL28:
 349              	.L21:
 312:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 350              		.loc 1 312 12 view .LVU108
 351 00bc 0125     		movs	r5, #1
 352 00be EFE7     		b	.L14
 353              	.L24:
 354              		.align	2
 355              	.L23:
 356 00c0 00100240 		.word	1073876992
 357 00c4 00093D00 		.word	4000000
 358 00c8 00000000 		.word	SystemCoreClock
 359 00cc FFF4FEFA 		.word	-83954433
 360              		.cfi_endproc
 361              	.LFE309:
 363              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 364              		.align	1
 365              		.global	HAL_RCC_MCOConfig
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	HAL_RCC_MCOConfig:
 372              	.LVL29:
 373              	.LFB312:
1279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 374              		.loc 1 1279 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 24
 377              		@ frame_needed = 0, uses_anonymous_args = 0
1280:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 378              		.loc 1 1280 3 view .LVU110
1283:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 379              		.loc 1 1283 3 view .LVU111
1284:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 380              		.loc 1 1284 3 view .LVU112
1285:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 381              		.loc 1 1285 3 view .LVU113
1288:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 382              		.loc 1 1288 3 view .LVU114
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 383              		.loc 1 1291 3 view .LVU115
 384              	.LBB7:
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 385              		.loc 1 1291 3 view .LVU116
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 386              		.loc 1 1291 3 view .LVU117
 387              	.LBE7:
1279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 388              		.loc 1 1279 1 is_stmt 0 view .LVU118
 389 0000 70B5     		push	{r4, r5, r6, lr}
 390              	.LCFI4:
 391              		.cfi_def_cfa_offset 16
 392              		.cfi_offset 4, -16
 393              		.cfi_offset 5, -12
 394              		.cfi_offset 6, -8
 395              		.cfi_offset 14, -4
 396              	.LBB8:
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 397              		.loc 1 1291 3 view .LVU119
 398 0002 124C     		ldr	r4, .L26
 399 0004 E36C     		ldr	r3, [r4, #76]
 400 0006 43F00103 		orr	r3, r3, #1
 401 000a E364     		str	r3, [r4, #76]
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 402              		.loc 1 1291 3 is_stmt 1 view .LVU120
 403 000c E36C     		ldr	r3, [r4, #76]
 404              	.LBE8:
1279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 405              		.loc 1 1279 1 is_stmt 0 view .LVU121
 406 000e 86B0     		sub	sp, sp, #24
 407              	.LCFI5:
 408              		.cfi_def_cfa_offset 40
 409              	.LBB9:
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 410              		.loc 1 1291 3 view .LVU122
 411 0010 03F00103 		and	r3, r3, #1
 412 0014 0093     		str	r3, [sp]
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 413              		.loc 1 1291 3 is_stmt 1 view .LVU123
 414 0016 009B     		ldr	r3, [sp]
 415              	.LBE9:
1291:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 416              		.loc 1 1291 3 view .LVU124
1294:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417              		.loc 1 1294 3 view .LVU125
1279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 418              		.loc 1 1279 1 is_stmt 0 view .LVU126
 419 0018 1646     		mov	r6, r2
1295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 420              		.loc 1 1295 24 view .LVU127
 421 001a 0223     		movs	r3, #2
 422 001c 4FF48072 		mov	r2, #256
 423              	.LVL30:
1295:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 424              		.loc 1 1295 24 view .LVU128
 425 0020 CDE90123 		strd	r2, r3, [sp, #4]
1296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 426              		.loc 1 1296 3 is_stmt 1 view .LVU129
1279:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 427              		.loc 1 1279 1 is_stmt 0 view .LVU130
 428 0024 0D46     		mov	r5, r1
1296:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 429              		.loc 1 1296 25 view .LVU131
 430 0026 0493     		str	r3, [sp, #16]
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 431              		.loc 1 1297 3 is_stmt 1 view .LVU132
1299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 432              		.loc 1 1299 3 is_stmt 0 view .LVU133
 433 0028 01A9     		add	r1, sp, #4
 434              	.LVL31:
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 435              		.loc 1 1297 24 view .LVU134
 436 002a 0023     		movs	r3, #0
1299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 437              		.loc 1 1299 3 view .LVU135
 438 002c 4FF09040 		mov	r0, #1207959552
 439              	.LVL32:
1297:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 440              		.loc 1 1297 24 view .LVU136
 441 0030 0393     		str	r3, [sp, #12]
1298:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 442              		.loc 1 1298 3 is_stmt 1 view .LVU137
1298:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 443              		.loc 1 1298 29 is_stmt 0 view .LVU138
 444 0032 0593     		str	r3, [sp, #20]
1299:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 445              		.loc 1 1299 3 is_stmt 1 view .LVU139
 446 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 447              	.LVL33:
1302:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 448              		.loc 1 1302 3 view .LVU140
 449 0038 A368     		ldr	r3, [r4, #8]
 450 003a 23F0FE43 		bic	r3, r3, #2130706432
 451 003e 43EA0602 		orr	r2, r3, r6
 452 0042 2A43     		orrs	r2, r2, r5
 453 0044 A260     		str	r2, [r4, #8]
1303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 454              		.loc 1 1303 1 is_stmt 0 view .LVU141
 455 0046 06B0     		add	sp, sp, #24
 456              	.LCFI6:
 457              		.cfi_def_cfa_offset 16
 458              		@ sp needed
 459 0048 70BD     		pop	{r4, r5, r6, pc}
 460              	.LVL34:
 461              	.L27:
1303:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 462              		.loc 1 1303 1 view .LVU142
 463 004a 00BF     		.align	2
 464              	.L26:
 465 004c 00100240 		.word	1073876992
 466              		.cfi_endproc
 467              	.LFE312:
 469              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 470              		.align	1
 471              		.global	HAL_RCC_GetSysClockFreq
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu softvfp
 477              	HAL_RCC_GetSysClockFreq:
 478              	.LFB313:
1338:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t msirange = 0U, sysclockfreq = 0U;
 479              		.loc 1 1338 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
1339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
 484              		.loc 1 1339 3 view .LVU144
 485              	.LVL35:
1340:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_oscsource;
 486              		.loc 1 1340 3 view .LVU145
1341:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 487              		.loc 1 1341 3 view .LVU146
1343:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 488              		.loc 1 1343 3 view .LVU147
1343:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 489              		.loc 1 1343 19 is_stmt 0 view .LVU148
 490 0000 264B     		ldr	r3, .L54
 491 0002 9A68     		ldr	r2, [r3, #8]
 492              	.LVL36:
1344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 493              		.loc 1 1344 3 is_stmt 1 view .LVU149
1344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 494              		.loc 1 1344 19 is_stmt 0 view .LVU150
 495 0004 D968     		ldr	r1, [r3, #12]
 496              	.LVL37:
1346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****      ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 497              		.loc 1 1346 3 is_stmt 1 view .LVU151
1346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****      ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 498              		.loc 1 1346 5 is_stmt 0 view .LVU152
 499 0006 12F00C02 		ands	r2, r2, #12
 500              	.LVL38:
1346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****      ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 501              		.loc 1 1346 5 view .LVU153
 502 000a 05D0     		beq	.L29
1346:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****      ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 503              		.loc 1 1346 42 discriminator 1 view .LVU154
 504 000c 0C2A     		cmp	r2, #12
 505 000e 15D1     		bne	.L30
1344:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 506              		.loc 1 1344 17 view .LVU155
 507 0010 01F00301 		and	r1, r1, #3
 508              	.LVL39:
1347:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 509              		.loc 1 1347 43 view .LVU156
 510 0014 0129     		cmp	r1, #1
 511 0016 19D1     		bne	.L41
 512              	.LVL40:
 513              	.L29:
1352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
 514              		.loc 1 1352 5 is_stmt 1 view .LVU157
1352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
 515              		.loc 1 1352 8 is_stmt 0 view .LVU158
 516 0018 1968     		ldr	r1, [r3]
1361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 517              		.loc 1 1361 14 view .LVU159
 518 001a 2148     		ldr	r0, .L54+4
1352:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
 519              		.loc 1 1352 7 view .LVU160
 520 001c 0907     		lsls	r1, r1, #28
1354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 521              		.loc 1 1354 7 is_stmt 1 view .LVU161
1354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 522              		.loc 1 1354 18 is_stmt 0 view .LVU162
 523 001e 55BF     		itete	pl
 524 0020 D3F89410 		ldrpl	r1, [r3, #148]
1358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 525              		.loc 1 1358 18 view .LVU163
 526 0024 1968     		ldrmi	r1, [r3]
1354:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 527              		.loc 1 1354 16 view .LVU164
 528 0026 C1F30321 		ubfxpl	r1, r1, #8, #4
 529              	.LVL41:
1358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 530              		.loc 1 1358 7 is_stmt 1 view .LVU165
1358:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 531              		.loc 1 1358 16 is_stmt 0 view .LVU166
 532 002a C1F30311 		ubfxmi	r1, r1, #4, #4
 533              	.LVL42:
1361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 534              		.loc 1 1361 5 is_stmt 1 view .LVU167
1361:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 535              		.loc 1 1361 14 is_stmt 0 view .LVU168
 536 002e 50F82100 		ldr	r0, [r0, r1, lsl #2]
 537              	.LVL43:
1363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 538              		.loc 1 1363 5 is_stmt 1 view .LVU169
1363:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 539              		.loc 1 1363 7 is_stmt 0 view .LVU170
 540 0032 92B3     		cbz	r2, .L28
1382:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 541              		.loc 1 1382 3 is_stmt 1 view .LVU171
1384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 542              		.loc 1 1384 3 view .LVU172
1384:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 543              		.loc 1 1384 5 is_stmt 0 view .LVU173
 544 0034 0C2A     		cmp	r2, #12
 545 0036 0AD0     		beq	.L31
 546 0038 0020     		movs	r0, #0
 547              	.LVL44:
1413:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 548              		.loc 1 1413 3 is_stmt 1 view .LVU174
1413:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 549              		.loc 1 1413 10 is_stmt 0 view .LVU175
 550 003a 7047     		bx	lr
 551              	.LVL45:
 552              	.L30:
1369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 553              		.loc 1 1369 8 is_stmt 1 view .LVU176
1369:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 554              		.loc 1 1369 10 is_stmt 0 view .LVU177
 555 003c 042A     		cmp	r2, #4
 556 003e 2BD0     		beq	.L42
1374:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 557              		.loc 1 1374 8 is_stmt 1 view .LVU178
 558 0040 082A     		cmp	r2, #8
 559 0042 0CBF     		ite	eq
 560 0044 4FF4E100 		moveq	r0, #7372800
 561 0048 0020     		movne	r0, #0
 562 004a 7047     		bx	lr
 563              	.LVL46:
 564              	.L41:
1339:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
 565              		.loc 1 1339 12 is_stmt 0 view .LVU179
 566 004c 0020     		movs	r0, #0
 567              	.LVL47:
 568              	.L31:
1391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 569              		.loc 1 1391 5 is_stmt 1 view .LVU180
1391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 570              		.loc 1 1391 17 is_stmt 0 view .LVU181
 571 004e D968     		ldr	r1, [r3, #12]
1392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 572              		.loc 1 1392 13 view .LVU182
 573 0050 DA68     		ldr	r2, [r3, #12]
 574              	.LVL48:
1391:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 575              		.loc 1 1391 15 view .LVU183
 576 0052 01F00301 		and	r1, r1, #3
 577              	.LVL49:
1392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 578              		.loc 1 1392 5 is_stmt 1 view .LVU184
1392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 579              		.loc 1 1392 54 is_stmt 0 view .LVU185
 580 0056 C2F30212 		ubfx	r2, r2, #4, #3
1394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 581              		.loc 1 1394 5 view .LVU186
 582 005a 0229     		cmp	r1, #2
1392:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 583              		.loc 1 1392 10 view .LVU187
 584 005c 02F10102 		add	r2, r2, #1
 585              	.LVL50:
1394:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 586              		.loc 1 1394 5 is_stmt 1 view .LVU188
 587 0060 05D0     		beq	.L37
 588 0062 0329     		cmp	r1, #3
 589 0064 12D0     		beq	.L38
1406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 590              		.loc 1 1406 7 view .LVU189
1406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 591              		.loc 1 1406 37 is_stmt 0 view .LVU190
 592 0066 D968     		ldr	r1, [r3, #12]
 593              	.LVL51:
1406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 594              		.loc 1 1406 78 view .LVU191
 595 0068 C1F30621 		ubfx	r1, r1, #8, #7
 596 006c 03E0     		b	.L53
 597              	.LVL52:
 598              	.L37:
1397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 599              		.loc 1 1397 7 is_stmt 1 view .LVU192
1397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 600              		.loc 1 1397 38 is_stmt 0 view .LVU193
 601 006e D968     		ldr	r1, [r3, #12]
 602              	.LVL53:
1397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 603              		.loc 1 1397 27 view .LVU194
 604 0070 0C48     		ldr	r0, .L54+8
 605              	.LVL54:
1397:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 606              		.loc 1 1397 79 view .LVU195
 607 0072 C1F30621 		ubfx	r1, r1, #8, #7
 608              	.L53:
1409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 609              		.loc 1 1409 14 view .LVU196
 610 0076 DB68     		ldr	r3, [r3, #12]
1406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 611              		.loc 1 1406 26 view .LVU197
 612 0078 B0FBF2F0 		udiv	r0, r0, r2
1409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 613              		.loc 1 1409 55 view .LVU198
 614 007c C3F34163 		ubfx	r3, r3, #25, #2
1409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 615              		.loc 1 1409 80 view .LVU199
 616 0080 0133     		adds	r3, r3, #1
1406:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 617              		.loc 1 1406 14 view .LVU200
 618 0082 4843     		muls	r0, r1, r0
 619              	.LVL55:
1407:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 620              		.loc 1 1407 7 is_stmt 1 view .LVU201
1409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 621              		.loc 1 1409 5 view .LVU202
1410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 622              		.loc 1 1410 5 view .LVU203
1409:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 623              		.loc 1 1409 10 is_stmt 0 view .LVU204
 624 0084 5B00     		lsls	r3, r3, #1
1410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 625              		.loc 1 1410 18 view .LVU205
 626 0086 B0FBF3F0 		udiv	r0, r0, r3
 627              	.LVL56:
1410:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 628              		.loc 1 1410 18 view .LVU206
 629 008a 7047     		bx	lr
 630              	.LVL57:
 631              	.L38:
1401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 632              		.loc 1 1401 7 is_stmt 1 view .LVU207
1401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 633              		.loc 1 1401 38 is_stmt 0 view .LVU208
 634 008c D968     		ldr	r1, [r3, #12]
 635              	.LVL58:
1401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 636              		.loc 1 1401 27 view .LVU209
 637 008e 4FF4E100 		mov	r0, #7372800
 638              	.LVL59:
1401:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       break;
 639              		.loc 1 1401 79 view .LVU210
 640 0092 C1F30621 		ubfx	r1, r1, #8, #7
 641 0096 EEE7     		b	.L53
 642              	.LVL60:
 643              	.L42:
1372:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 644              		.loc 1 1372 18 view .LVU211
 645 0098 0248     		ldr	r0, .L54+8
 646              	.LVL61:
 647              	.L28:
1414:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 648              		.loc 1 1414 1 view .LVU212
 649 009a 7047     		bx	lr
 650              	.L55:
 651              		.align	2
 652              	.L54:
 653 009c 00100240 		.word	1073876992
 654 00a0 00000000 		.word	MSIRangeTable
 655 00a4 0024F400 		.word	16000000
 656              		.cfi_endproc
 657              	.LFE313:
 659              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 660              		.align	1
 661              		.global	HAL_RCC_OscConfig
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu softvfp
 667              	HAL_RCC_OscConfig:
 668              	.LVL62:
 669              	.LFB310:
 417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 670              		.loc 1 417 1 is_stmt 1 view -0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 8
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 418:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
 674              		.loc 1 418 3 view .LVU214
 419:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_oscsource;
 675              		.loc 1 419 3 view .LVU215
 420:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 676              		.loc 1 420 3 view .LVU216
 423:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 677              		.loc 1 423 3 view .LVU217
 417:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 678              		.loc 1 417 1 is_stmt 0 view .LVU218
 679 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 680              	.LCFI7:
 681              		.cfi_def_cfa_offset 40
 682              		.cfi_offset 4, -28
 683              		.cfi_offset 5, -24
 684              		.cfi_offset 6, -20
 685              		.cfi_offset 7, -16
 686              		.cfi_offset 8, -12
 687              		.cfi_offset 9, -8
 688              		.cfi_offset 14, -4
 423:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 689              		.loc 1 423 5 view .LVU219
 690 0004 0546     		mov	r5, r0
 691 0006 08B9     		cbnz	r0, .L57
 692              	.LVL63:
 693              	.L143:
 990:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 694              		.loc 1 990 14 view .LVU220
 695 0008 0120     		movs	r0, #1
 696 000a 46E0     		b	.L58
 697              	.LVL64:
 698              	.L57:
 429:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 699              		.loc 1 429 3 is_stmt 1 view .LVU221
 431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 700              		.loc 1 431 3 view .LVU222
 431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 701              		.loc 1 431 19 is_stmt 0 view .LVU223
 702 000c A84C     		ldr	r4, .L177
 435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 703              		.loc 1 435 43 view .LVU224
 704 000e 0368     		ldr	r3, [r0]
 431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 705              		.loc 1 431 19 view .LVU225
 706 0010 A668     		ldr	r6, [r4, #8]
 432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 707              		.loc 1 432 19 view .LVU226
 708 0012 E768     		ldr	r7, [r4, #12]
 435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 709              		.loc 1 435 5 view .LVU227
 710 0014 DB06     		lsls	r3, r3, #27
 431:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 711              		.loc 1 431 17 view .LVU228
 712 0016 06F00C06 		and	r6, r6, #12
 713              	.LVL65:
 432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 714              		.loc 1 432 3 is_stmt 1 view .LVU229
 432:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 715              		.loc 1 432 17 is_stmt 0 view .LVU230
 716 001a 07F00307 		and	r7, r7, #3
 717              	.LVL66:
 435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 718              		.loc 1 435 3 is_stmt 1 view .LVU231
 435:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 719              		.loc 1 435 5 is_stmt 0 view .LVU232
 720 001e 72D5     		bpl	.L60
 438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
 721              		.loc 1 438 5 is_stmt 1 view .LVU233
 439:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));
 722              		.loc 1 439 5 view .LVU234
 440:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 723              		.loc 1 440 5 view .LVU235
 443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 724              		.loc 1 443 5 view .LVU236
 443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 725              		.loc 1 443 7 is_stmt 0 view .LVU237
 726 0020 1EB1     		cbz	r6, .L61
 443:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 727              		.loc 1 443 44 discriminator 1 view .LVU238
 728 0022 0C2E     		cmp	r6, #12
 729 0024 51D1     		bne	.L62
 444:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 730              		.loc 1 444 45 view .LVU239
 731 0026 012F     		cmp	r7, #1
 732 0028 4FD1     		bne	.L62
 733              	.L61:
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 734              		.loc 1 446 7 is_stmt 1 view .LVU240
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 735              		.loc 1 446 11 is_stmt 0 view .LVU241
 736 002a 2368     		ldr	r3, [r4]
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 737              		.loc 1 446 9 view .LVU242
 738 002c 9807     		lsls	r0, r3, #30
 739              	.LVL67:
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 740              		.loc 1 446 9 view .LVU243
 741 002e 02D5     		bpl	.L63
 446:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 742              		.loc 1 446 51 discriminator 1 view .LVU244
 743 0030 AB69     		ldr	r3, [r5, #24]
 744 0032 002B     		cmp	r3, #0
 745 0034 E8D0     		beq	.L143
 746              	.L63:
 457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 747              		.loc 1 457 9 is_stmt 1 view .LVU245
 457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 748              		.loc 1 457 47 is_stmt 0 view .LVU246
 749 0036 2368     		ldr	r3, [r4]
 457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 750              		.loc 1 457 29 view .LVU247
 751 0038 286A     		ldr	r0, [r5, #32]
 457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 752              		.loc 1 457 47 view .LVU248
 753 003a 1907     		lsls	r1, r3, #28
 754 003c 56BF     		itet	pl
 755 003e D4F89430 		ldrpl	r3, [r4, #148]
 756 0042 2368     		ldrmi	r3, [r4]
 757 0044 1B09     		lsrpl	r3, r3, #4
 758 0046 03F0F003 		and	r3, r3, #240
 457:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 759              		.loc 1 457 11 view .LVU249
 760 004a 9842     		cmp	r0, r3
 761 004c 28D9     		bls	.L67
 460:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 762              		.loc 1 460 11 is_stmt 1 view .LVU250
 460:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 763              		.loc 1 460 14 is_stmt 0 view .LVU251
 764 004e FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 765              	.LVL68:
 460:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 766              		.loc 1 460 13 view .LVU252
 767 0052 0028     		cmp	r0, #0
 768 0054 D8D1     		bne	.L143
 466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 769              		.loc 1 466 11 is_stmt 1 view .LVU253
 466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 770              		.loc 1 466 11 view .LVU254
 771 0056 2368     		ldr	r3, [r4]
 772 0058 43F00803 		orr	r3, r3, #8
 773 005c 2360     		str	r3, [r4]
 466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 774              		.loc 1 466 11 view .LVU255
 775 005e 2368     		ldr	r3, [r4]
 776 0060 2A6A     		ldr	r2, [r5, #32]
 777 0062 23F0F003 		bic	r3, r3, #240
 778 0066 1343     		orrs	r3, r3, r2
 779 0068 2360     		str	r3, [r4]
 466:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 780              		.loc 1 466 11 view .LVU256
 468:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 781              		.loc 1 468 11 view .LVU257
 782 006a 6368     		ldr	r3, [r4, #4]
 783 006c EA69     		ldr	r2, [r5, #28]
 784 006e 23F47F43 		bic	r3, r3, #65280
 785 0072 43EA0223 		orr	r3, r3, r2, lsl #8
 786 0076 6360     		str	r3, [r4, #4]
 787              	.L68:
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 788              		.loc 1 486 9 view .LVU258
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 789              		.loc 1 486 27 is_stmt 0 view .LVU259
 790 0078 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 791              	.LVL69:
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 792              		.loc 1 486 71 view .LVU260
 793 007c A368     		ldr	r3, [r4, #8]
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 794              		.loc 1 486 128 view .LVU261
 795 007e 8D4A     		ldr	r2, .L177+4
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 796              		.loc 1 486 106 view .LVU262
 797 0080 C3F30313 		ubfx	r3, r3, #4, #4
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 798              		.loc 1 486 128 view .LVU263
 799 0084 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 800 0086 03F01F03 		and	r3, r3, #31
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 801              		.loc 1 486 53 view .LVU264
 802 008a D840     		lsrs	r0, r0, r3
 486:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 803              		.loc 1 486 25 view .LVU265
 804 008c 8A4B     		ldr	r3, .L177+8
 805 008e 1860     		str	r0, [r3]
 489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(status != HAL_OK)
 806              		.loc 1 489 9 is_stmt 1 view .LVU266
 489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         if(status != HAL_OK)
 807              		.loc 1 489 18 is_stmt 0 view .LVU267
 808 0090 0F20     		movs	r0, #15
 809 0092 FFF7FEFF 		bl	HAL_InitTick
 810              	.LVL70:
 490:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 811              		.loc 1 490 9 is_stmt 1 view .LVU268
 490:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 812              		.loc 1 490 11 is_stmt 0 view .LVU269
 813 0096 0028     		cmp	r0, #0
 814 0098 35D0     		beq	.L60
 815              	.LVL71:
 816              	.L58:
 994:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 817              		.loc 1 994 1 view .LVU270
 818 009a 03B0     		add	sp, sp, #12
 819              	.LCFI8:
 820              		.cfi_remember_state
 821              		.cfi_def_cfa_offset 28
 822              		@ sp needed
 823 009c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 824              	.LVL72:
 825              	.L67:
 826              	.LCFI9:
 827              		.cfi_restore_state
 474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 828              		.loc 1 474 11 is_stmt 1 view .LVU271
 474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 829              		.loc 1 474 11 view .LVU272
 830 00a0 2368     		ldr	r3, [r4]
 831 00a2 43F00803 		orr	r3, r3, #8
 832 00a6 2360     		str	r3, [r4]
 474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 833              		.loc 1 474 11 view .LVU273
 834 00a8 2368     		ldr	r3, [r4]
 835 00aa 23F0F003 		bic	r3, r3, #240
 836 00ae 0343     		orrs	r3, r3, r0
 837 00b0 2360     		str	r3, [r4]
 474:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 838              		.loc 1 474 11 view .LVU274
 476:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 839              		.loc 1 476 11 view .LVU275
 840 00b2 6368     		ldr	r3, [r4, #4]
 841 00b4 EA69     		ldr	r2, [r5, #28]
 842 00b6 23F47F43 		bic	r3, r3, #65280
 843 00ba 43EA0223 		orr	r3, r3, r2, lsl #8
 844 00be 6360     		str	r3, [r4, #4]
 479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 845              		.loc 1 479 11 view .LVU276
 479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 846              		.loc 1 479 14 is_stmt 0 view .LVU277
 847 00c0 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 848              	.LVL73:
 479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 849              		.loc 1 479 13 view .LVU278
 850 00c4 0028     		cmp	r0, #0
 851 00c6 D7D0     		beq	.L68
 852 00c8 9EE7     		b	.L143
 853              	.LVL74:
 854              	.L62:
 499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 855              		.loc 1 499 7 is_stmt 1 view .LVU279
 499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 856              		.loc 1 499 9 is_stmt 0 view .LVU280
 857 00ca AB69     		ldr	r3, [r5, #24]
 858 00cc 002B     		cmp	r3, #0
 859 00ce 3AD0     		beq	.L70
 502:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 860              		.loc 1 502 9 is_stmt 1 view .LVU281
 861 00d0 2368     		ldr	r3, [r4]
 862 00d2 43F00103 		orr	r3, r3, #1
 863 00d6 2360     		str	r3, [r4]
 505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 864              		.loc 1 505 9 view .LVU282
 505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 865              		.loc 1 505 21 is_stmt 0 view .LVU283
 866 00d8 FFF7FEFF 		bl	HAL_GetTick
 867              	.LVL75:
 505:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 868              		.loc 1 505 21 view .LVU284
 869 00dc 8046     		mov	r8, r0
 870              	.LVL76:
 508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 871              		.loc 1 508 9 is_stmt 1 view .LVU285
 872              	.L71:
 508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 873              		.loc 1 508 14 view .LVU286
 508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 874              		.loc 1 508 15 is_stmt 0 view .LVU287
 875 00de 2368     		ldr	r3, [r4]
 508:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 876              		.loc 1 508 14 view .LVU288
 877 00e0 9A07     		lsls	r2, r3, #30
 878 00e2 28D5     		bpl	.L72
 516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 879              		.loc 1 516 9 is_stmt 1 view .LVU289
 516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 880              		.loc 1 516 9 view .LVU290
 881 00e4 2368     		ldr	r3, [r4]
 882 00e6 43F00803 		orr	r3, r3, #8
 883 00ea 2360     		str	r3, [r4]
 516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 884              		.loc 1 516 9 view .LVU291
 885 00ec 2368     		ldr	r3, [r4]
 886 00ee 2A6A     		ldr	r2, [r5, #32]
 887 00f0 23F0F003 		bic	r3, r3, #240
 888 00f4 1343     		orrs	r3, r3, r2
 889 00f6 2360     		str	r3, [r4]
 516:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 890              		.loc 1 516 9 view .LVU292
 518:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 891              		.loc 1 518 9 view .LVU293
 892 00f8 6368     		ldr	r3, [r4, #4]
 893 00fa EA69     		ldr	r2, [r5, #28]
 894 00fc 23F47F43 		bic	r3, r3, #65280
 895 0100 43EA0223 		orr	r3, r3, r2, lsl #8
 896 0104 6360     		str	r3, [r4, #4]
 897              	.LVL77:
 898              	.L60:
 541:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 899              		.loc 1 541 3 view .LVU294
 541:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 900              		.loc 1 541 43 is_stmt 0 view .LVU295
 901 0106 2B68     		ldr	r3, [r5]
 541:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 902              		.loc 1 541 5 view .LVU296
 903 0108 D807     		lsls	r0, r3, #31
 904 010a 2DD4     		bmi	.L76
 905              	.L81:
 592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 906              		.loc 1 592 3 is_stmt 1 view .LVU297
 592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 907              		.loc 1 592 43 is_stmt 0 view .LVU298
 908 010c 2B68     		ldr	r3, [r5]
 592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 909              		.loc 1 592 5 view .LVU299
 910 010e 9907     		lsls	r1, r3, #30
 911 0110 6BD4     		bmi	.L77
 912              	.LVL78:
 913              	.L90:
 657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 914              		.loc 1 657 3 is_stmt 1 view .LVU300
 657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 915              		.loc 1 657 43 is_stmt 0 view .LVU301
 916 0112 2B68     		ldr	r3, [r5]
 657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 917              		.loc 1 657 5 view .LVU302
 918 0114 1807     		lsls	r0, r3, #28
 919 0116 00F1A080 		bmi	.L99
 920              	.L105:
 738:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 921              		.loc 1 738 3 is_stmt 1 view .LVU303
 738:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 922              		.loc 1 738 43 is_stmt 0 view .LVU304
 923 011a 2B68     		ldr	r3, [r5]
 738:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 924              		.loc 1 738 5 view .LVU305
 925 011c 5907     		lsls	r1, r3, #29
 926 011e 00F1CD80 		bmi	.L100
 927              	.L108:
 841:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 928              		.loc 1 841 3 is_stmt 1 view .LVU306
 841:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 929              		.loc 1 841 43 is_stmt 0 view .LVU307
 930 0122 2B68     		ldr	r3, [r5]
 841:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 931              		.loc 1 841 5 view .LVU308
 932 0124 9906     		lsls	r1, r3, #26
 933 0126 00F13681 		bmi	.L125
 934              	.L131:
 885:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 935              		.loc 1 885 3 is_stmt 1 view .LVU309
 887:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 936              		.loc 1 887 3 view .LVU310
 887:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 937              		.loc 1 887 28 is_stmt 0 view .LVU311
 938 012a AB6A     		ldr	r3, [r5, #40]
 887:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 939              		.loc 1 887 5 view .LVU312
 940 012c 002B     		cmp	r3, #0
 941 012e 40F05C81 		bne	.L126
 942              	.LVL79:
 943              	.L127:
 993:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 944              		.loc 1 993 10 view .LVU313
 945 0132 0020     		movs	r0, #0
 946 0134 B1E7     		b	.L58
 947              	.LVL80:
 948              	.L72:
 510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 949              		.loc 1 510 11 is_stmt 1 view .LVU314
 510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 950              		.loc 1 510 15 is_stmt 0 view .LVU315
 951 0136 FFF7FEFF 		bl	HAL_GetTick
 952              	.LVL81:
 510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 953              		.loc 1 510 29 view .LVU316
 954 013a A0EB0800 		sub	r0, r0, r8
 510:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 955              		.loc 1 510 13 view .LVU317
 956 013e 0228     		cmp	r0, #2
 957 0140 CDD9     		bls	.L71
 958              	.LVL82:
 959              	.L74:
 512:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           }
 960              		.loc 1 512 20 view .LVU318
 961 0142 0320     		movs	r0, #3
 962 0144 A9E7     		b	.L58
 963              	.LVL83:
 964              	.L70:
 524:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 965              		.loc 1 524 9 is_stmt 1 view .LVU319
 966 0146 2368     		ldr	r3, [r4]
 967 0148 23F00103 		bic	r3, r3, #1
 968 014c 2360     		str	r3, [r4]
 527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 969              		.loc 1 527 9 view .LVU320
 527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 970              		.loc 1 527 21 is_stmt 0 view .LVU321
 971 014e FFF7FEFF 		bl	HAL_GetTick
 972              	.LVL84:
 527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 973              		.loc 1 527 21 view .LVU322
 974 0152 8046     		mov	r8, r0
 975              	.LVL85:
 530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 976              		.loc 1 530 9 is_stmt 1 view .LVU323
 977              	.L73:
 530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 978              		.loc 1 530 14 view .LVU324
 530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 979              		.loc 1 530 15 is_stmt 0 view .LVU325
 980 0154 2368     		ldr	r3, [r4]
 530:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 981              		.loc 1 530 14 view .LVU326
 982 0156 9B07     		lsls	r3, r3, #30
 983 0158 D5D5     		bpl	.L60
 532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 984              		.loc 1 532 11 is_stmt 1 view .LVU327
 532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 985              		.loc 1 532 15 is_stmt 0 view .LVU328
 986 015a FFF7FEFF 		bl	HAL_GetTick
 987              	.LVL86:
 532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 988              		.loc 1 532 29 view .LVU329
 989 015e A0EB0800 		sub	r0, r0, r8
 532:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 990              		.loc 1 532 13 view .LVU330
 991 0162 0228     		cmp	r0, #2
 992 0164 F6D9     		bls	.L73
 993 0166 ECE7     		b	.L74
 994              	.LVL87:
 995              	.L76:
 544:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 996              		.loc 1 544 5 is_stmt 1 view .LVU331
 547:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSE)))
 997              		.loc 1 547 5 view .LVU332
 547:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSE)))
 998              		.loc 1 547 7 is_stmt 0 view .LVU333
 999 0168 082E     		cmp	r6, #8
 1000 016a 03D0     		beq	.L79
 547:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSE)))
 1001              		.loc 1 547 44 discriminator 1 view .LVU334
 1002 016c 0C2E     		cmp	r6, #12
 1003 016e 08D1     		bne	.L80
 548:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1004              		.loc 1 548 45 view .LVU335
 1005 0170 032F     		cmp	r7, #3
 1006 0172 06D1     		bne	.L80
 1007              	.L79:
 550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1008              		.loc 1 550 7 is_stmt 1 view .LVU336
 550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1009              		.loc 1 550 11 is_stmt 0 view .LVU337
 1010 0174 2368     		ldr	r3, [r4]
 550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1011              		.loc 1 550 9 view .LVU338
 1012 0176 9A03     		lsls	r2, r3, #14
 1013 0178 C8D5     		bpl	.L81
 550:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1014              		.loc 1 550 51 discriminator 1 view .LVU339
 1015 017a 6B68     		ldr	r3, [r5, #4]
 1016 017c 002B     		cmp	r3, #0
 1017 017e C5D1     		bne	.L81
 1018 0180 42E7     		b	.L143
 1019              	.L80:
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1020              		.loc 1 558 7 is_stmt 1 view .LVU340
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1021              		.loc 1 558 7 view .LVU341
 1022 0182 6B68     		ldr	r3, [r5, #4]
 1023 0184 B3F5803F 		cmp	r3, #65536
 1024 0188 10D1     		bne	.L82
 1025              	.L174:
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1026              		.loc 1 558 7 discriminator 4 view .LVU342
 1027 018a 2368     		ldr	r3, [r4]
 1028 018c 43F48033 		orr	r3, r3, #65536
 1029 0190 2360     		str	r3, [r4]
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1030              		.loc 1 558 7 discriminator 4 view .LVU343
 561:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1031              		.loc 1 561 7 discriminator 4 view .LVU344
 1032              	.L83:
 564:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1033              		.loc 1 564 9 view .LVU345
 564:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1034              		.loc 1 564 21 is_stmt 0 view .LVU346
 1035 0192 FFF7FEFF 		bl	HAL_GetTick
 1036              	.LVL88:
 1037 0196 8046     		mov	r8, r0
 1038              	.LVL89:
 567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1039              		.loc 1 567 9 is_stmt 1 view .LVU347
 1040              	.L86:
 567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1041              		.loc 1 567 14 view .LVU348
 567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1042              		.loc 1 567 15 is_stmt 0 view .LVU349
 1043 0198 2368     		ldr	r3, [r4]
 567:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1044              		.loc 1 567 14 view .LVU350
 1045 019a 9B03     		lsls	r3, r3, #14
 1046 019c B6D4     		bmi	.L81
 569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1047              		.loc 1 569 11 is_stmt 1 view .LVU351
 569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1048              		.loc 1 569 15 is_stmt 0 view .LVU352
 1049 019e FFF7FEFF 		bl	HAL_GetTick
 1050              	.LVL90:
 569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1051              		.loc 1 569 29 view .LVU353
 1052 01a2 A0EB0800 		sub	r0, r0, r8
 569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1053              		.loc 1 569 13 view .LVU354
 1054 01a6 6428     		cmp	r0, #100
 1055 01a8 F6D9     		bls	.L86
 1056 01aa CAE7     		b	.L74
 1057              	.LVL91:
 1058              	.L82:
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1059              		.loc 1 558 7 is_stmt 1 discriminator 2 view .LVU355
 1060 01ac B3F5A02F 		cmp	r3, #327680
 1061 01b0 04D1     		bne	.L84
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1062              		.loc 1 558 7 discriminator 4 view .LVU356
 1063 01b2 2368     		ldr	r3, [r4]
 1064 01b4 43F48023 		orr	r3, r3, #262144
 1065 01b8 2360     		str	r3, [r4]
 1066 01ba E6E7     		b	.L174
 1067              	.L84:
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1068              		.loc 1 558 7 discriminator 5 view .LVU357
 1069 01bc 2268     		ldr	r2, [r4]
 1070 01be 22F48032 		bic	r2, r2, #65536
 1071 01c2 2260     		str	r2, [r4]
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1072              		.loc 1 558 7 discriminator 5 view .LVU358
 1073 01c4 2268     		ldr	r2, [r4]
 1074 01c6 22F48022 		bic	r2, r2, #262144
 1075 01ca 2260     		str	r2, [r4]
 558:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1076              		.loc 1 558 7 discriminator 5 view .LVU359
 561:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1077              		.loc 1 561 7 discriminator 5 view .LVU360
 561:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1078              		.loc 1 561 9 is_stmt 0 discriminator 5 view .LVU361
 1079 01cc 002B     		cmp	r3, #0
 1080 01ce E0D1     		bne	.L83
 578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1081              		.loc 1 578 9 is_stmt 1 view .LVU362
 578:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1082              		.loc 1 578 21 is_stmt 0 view .LVU363
 1083 01d0 FFF7FEFF 		bl	HAL_GetTick
 1084              	.LVL92:
 1085 01d4 8046     		mov	r8, r0
 1086              	.LVL93:
 581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1087              		.loc 1 581 9 is_stmt 1 view .LVU364
 1088              	.L88:
 581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1089              		.loc 1 581 14 view .LVU365
 581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1090              		.loc 1 581 15 is_stmt 0 view .LVU366
 1091 01d6 2368     		ldr	r3, [r4]
 581:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1092              		.loc 1 581 14 view .LVU367
 1093 01d8 9803     		lsls	r0, r3, #14
 1094 01da 97D5     		bpl	.L81
 583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1095              		.loc 1 583 11 is_stmt 1 view .LVU368
 583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1096              		.loc 1 583 15 is_stmt 0 view .LVU369
 1097 01dc FFF7FEFF 		bl	HAL_GetTick
 1098              	.LVL94:
 583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1099              		.loc 1 583 29 view .LVU370
 1100 01e0 A0EB0800 		sub	r0, r0, r8
 583:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1101              		.loc 1 583 13 view .LVU371
 1102 01e4 6428     		cmp	r0, #100
 1103 01e6 F6D9     		bls	.L88
 1104 01e8 ABE7     		b	.L74
 1105              	.LVL95:
 1106              	.L77:
 595:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 1107              		.loc 1 595 5 is_stmt 1 view .LVU372
 596:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1108              		.loc 1 596 5 view .LVU373
 599:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSI)))
 1109              		.loc 1 599 5 view .LVU374
 599:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSI)))
 1110              		.loc 1 599 7 is_stmt 0 view .LVU375
 1111 01ea 042E     		cmp	r6, #4
 1112 01ec 03D0     		beq	.L91
 599:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSI)))
 1113              		.loc 1 599 44 discriminator 1 view .LVU376
 1114 01ee 0C2E     		cmp	r6, #12
 1115 01f0 10D1     		bne	.L92
 600:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1116              		.loc 1 600 45 view .LVU377
 1117 01f2 022F     		cmp	r7, #2
 1118 01f4 0ED1     		bne	.L92
 1119              	.L91:
 603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1120              		.loc 1 603 7 is_stmt 1 view .LVU378
 603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1121              		.loc 1 603 11 is_stmt 0 view .LVU379
 1122 01f6 2368     		ldr	r3, [r4]
 603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1123              		.loc 1 603 9 view .LVU380
 1124 01f8 5905     		lsls	r1, r3, #21
 1125 01fa 03D5     		bpl	.L175
 603:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1126              		.loc 1 603 51 discriminator 1 view .LVU381
 1127 01fc EB68     		ldr	r3, [r5, #12]
 1128 01fe 002B     		cmp	r3, #0
 1129 0200 3FF402AF 		beq	.L143
 1130              	.LVL96:
 1131              	.L175:
 635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 1132              		.loc 1 635 9 is_stmt 1 view .LVU382
 1133 0204 6368     		ldr	r3, [r4, #4]
 1134 0206 2A69     		ldr	r2, [r5, #16]
 1135 0208 23F0F853 		bic	r3, r3, #520093696
 1136 020c 43EA0263 		orr	r3, r3, r2, lsl #24
 1137 0210 6360     		str	r3, [r4, #4]
 1138 0212 7EE7     		b	.L90
 1139              	.LVL97:
 1140              	.L92:
 617:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1141              		.loc 1 617 7 view .LVU383
 617:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1142              		.loc 1 617 9 is_stmt 0 view .LVU384
 1143 0214 EB68     		ldr	r3, [r5, #12]
 1144 0216 7BB1     		cbz	r3, .L94
 620:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1145              		.loc 1 620 9 is_stmt 1 view .LVU385
 1146 0218 2368     		ldr	r3, [r4]
 1147 021a 43F48073 		orr	r3, r3, #256
 1148 021e 2360     		str	r3, [r4]
 623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1149              		.loc 1 623 9 view .LVU386
 623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1150              		.loc 1 623 21 is_stmt 0 view .LVU387
 1151 0220 FFF7FEFF 		bl	HAL_GetTick
 1152              	.LVL98:
 1153 0224 0746     		mov	r7, r0
 1154              	.LVL99:
 626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1155              		.loc 1 626 9 is_stmt 1 view .LVU388
 1156              	.L95:
 626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1157              		.loc 1 626 14 view .LVU389
 626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1158              		.loc 1 626 15 is_stmt 0 view .LVU390
 1159 0226 2368     		ldr	r3, [r4]
 626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1160              		.loc 1 626 14 view .LVU391
 1161 0228 5A05     		lsls	r2, r3, #21
 1162 022a EBD4     		bmi	.L175
 628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1163              		.loc 1 628 11 is_stmt 1 view .LVU392
 628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1164              		.loc 1 628 15 is_stmt 0 view .LVU393
 1165 022c FFF7FEFF 		bl	HAL_GetTick
 1166              	.LVL100:
 628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1167              		.loc 1 628 29 view .LVU394
 1168 0230 C01B     		subs	r0, r0, r7
 628:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1169              		.loc 1 628 13 view .LVU395
 1170 0232 0228     		cmp	r0, #2
 1171 0234 F7D9     		bls	.L95
 1172 0236 84E7     		b	.L74
 1173              	.LVL101:
 1174              	.L94:
 640:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1175              		.loc 1 640 9 is_stmt 1 view .LVU396
 1176 0238 2368     		ldr	r3, [r4]
 1177 023a 23F48073 		bic	r3, r3, #256
 1178 023e 2360     		str	r3, [r4]
 643:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1179              		.loc 1 643 9 view .LVU397
 643:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1180              		.loc 1 643 21 is_stmt 0 view .LVU398
 1181 0240 FFF7FEFF 		bl	HAL_GetTick
 1182              	.LVL102:
 1183 0244 0746     		mov	r7, r0
 1184              	.LVL103:
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1185              		.loc 1 646 9 is_stmt 1 view .LVU399
 1186              	.L97:
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1187              		.loc 1 646 14 view .LVU400
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1188              		.loc 1 646 15 is_stmt 0 view .LVU401
 1189 0246 2368     		ldr	r3, [r4]
 646:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1190              		.loc 1 646 14 view .LVU402
 1191 0248 5B05     		lsls	r3, r3, #21
 1192 024a 7FF562AF 		bpl	.L90
 648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1193              		.loc 1 648 11 is_stmt 1 view .LVU403
 648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1194              		.loc 1 648 15 is_stmt 0 view .LVU404
 1195 024e FFF7FEFF 		bl	HAL_GetTick
 1196              	.LVL104:
 648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1197              		.loc 1 648 29 view .LVU405
 1198 0252 C01B     		subs	r0, r0, r7
 648:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1199              		.loc 1 648 13 view .LVU406
 1200 0254 0228     		cmp	r0, #2
 1201 0256 F6D9     		bls	.L97
 1202 0258 73E7     		b	.L74
 1203              	.LVL105:
 1204              	.L99:
 660:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1205              		.loc 1 660 5 is_stmt 1 view .LVU407
 663:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1206              		.loc 1 663 5 view .LVU408
 663:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1207              		.loc 1 663 7 is_stmt 0 view .LVU409
 1208 025a 6B69     		ldr	r3, [r5, #20]
 1209 025c 9BB1     		cbz	r3, .L102
 705:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1210              		.loc 1 705 7 is_stmt 1 view .LVU410
 1211 025e D4F89430 		ldr	r3, [r4, #148]
 1212 0262 43F00103 		orr	r3, r3, #1
 1213 0266 C4F89430 		str	r3, [r4, #148]
 708:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1214              		.loc 1 708 7 view .LVU411
 708:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1215              		.loc 1 708 19 is_stmt 0 view .LVU412
 1216 026a FFF7FEFF 		bl	HAL_GetTick
 1217              	.LVL106:
 1218 026e 0746     		mov	r7, r0
 1219              	.LVL107:
 711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1220              		.loc 1 711 7 is_stmt 1 view .LVU413
 1221              	.L103:
 711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1222              		.loc 1 711 12 view .LVU414
 711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1223              		.loc 1 711 13 is_stmt 0 view .LVU415
 1224 0270 D4F89430 		ldr	r3, [r4, #148]
 711:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1225              		.loc 1 711 12 view .LVU416
 1226 0274 9A07     		lsls	r2, r3, #30
 1227 0276 3FF550AF 		bmi	.L105
 713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1228              		.loc 1 713 9 is_stmt 1 view .LVU417
 713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1229              		.loc 1 713 13 is_stmt 0 view .LVU418
 1230 027a FFF7FEFF 		bl	HAL_GetTick
 1231              	.LVL108:
 713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1232              		.loc 1 713 27 view .LVU419
 1233 027e C01B     		subs	r0, r0, r7
 713:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1234              		.loc 1 713 11 view .LVU420
 1235 0280 0228     		cmp	r0, #2
 1236 0282 F5D9     		bls	.L103
 1237 0284 5DE7     		b	.L74
 1238              	.LVL109:
 1239              	.L102:
 722:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1240              		.loc 1 722 7 is_stmt 1 view .LVU421
 1241 0286 D4F89430 		ldr	r3, [r4, #148]
 1242 028a 23F00103 		bic	r3, r3, #1
 1243 028e C4F89430 		str	r3, [r4, #148]
 725:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1244              		.loc 1 725 7 view .LVU422
 725:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1245              		.loc 1 725 19 is_stmt 0 view .LVU423
 1246 0292 FFF7FEFF 		bl	HAL_GetTick
 1247              	.LVL110:
 1248 0296 0746     		mov	r7, r0
 1249              	.LVL111:
 728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1250              		.loc 1 728 7 is_stmt 1 view .LVU424
 1251              	.L106:
 728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1252              		.loc 1 728 12 view .LVU425
 728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1253              		.loc 1 728 13 is_stmt 0 view .LVU426
 1254 0298 D4F89430 		ldr	r3, [r4, #148]
 728:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1255              		.loc 1 728 12 view .LVU427
 1256 029c 9B07     		lsls	r3, r3, #30
 1257 029e 7FF53CAF 		bpl	.L105
 730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1258              		.loc 1 730 9 is_stmt 1 view .LVU428
 730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1259              		.loc 1 730 13 is_stmt 0 view .LVU429
 1260 02a2 FFF7FEFF 		bl	HAL_GetTick
 1261              	.LVL112:
 730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1262              		.loc 1 730 27 view .LVU430
 1263 02a6 C01B     		subs	r0, r0, r7
 730:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1264              		.loc 1 730 11 view .LVU431
 1265 02a8 0228     		cmp	r0, #2
 1266 02aa F5D9     		bls	.L106
 1267 02ac 49E7     		b	.L74
 1268              	.L178:
 1269 02ae 00BF     		.align	2
 1270              	.L177:
 1271 02b0 00100240 		.word	1073876992
 1272 02b4 00000000 		.word	AHBPrescTable
 1273 02b8 00000000 		.word	SystemCoreClock
 1274              	.LVL113:
 1275              	.L100:
 1276              	.LBB10:
 740:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1277              		.loc 1 740 5 is_stmt 1 view .LVU432
 743:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1278              		.loc 1 743 5 view .LVU433
 747:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1279              		.loc 1 747 5 view .LVU434
 747:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1280              		.loc 1 747 8 is_stmt 0 view .LVU435
 1281 02bc A36D     		ldr	r3, [r4, #88]
 747:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1282              		.loc 1 747 7 view .LVU436
 1283 02be D800     		lsls	r0, r3, #3
 1284 02c0 29D4     		bmi	.L142
 749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 1285              		.loc 1 749 7 is_stmt 1 view .LVU437
 1286              	.LBB11:
 749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 1287              		.loc 1 749 7 view .LVU438
 749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 1288              		.loc 1 749 7 view .LVU439
 1289 02c2 A36D     		ldr	r3, [r4, #88]
 1290 02c4 43F08053 		orr	r3, r3, #268435456
 1291 02c8 A365     		str	r3, [r4, #88]
 749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 1292              		.loc 1 749 7 view .LVU440
 1293 02ca A36D     		ldr	r3, [r4, #88]
 1294 02cc 03F08053 		and	r3, r3, #268435456
 1295 02d0 0193     		str	r3, [sp, #4]
 749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 1296              		.loc 1 749 7 view .LVU441
 1297 02d2 019B     		ldr	r3, [sp, #4]
 1298              	.LBE11:
 749:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 1299              		.loc 1 749 7 view .LVU442
 750:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 1300              		.loc 1 750 7 view .LVU443
 1301              	.LVL114:
 750:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 1302              		.loc 1 750 21 is_stmt 0 view .LVU444
 1303 02d4 4FF00108 		mov	r8, #1
 1304              	.LVL115:
 1305              	.L109:
 753:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1306              		.loc 1 753 5 is_stmt 1 view .LVU445
 753:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1307              		.loc 1 753 8 is_stmt 0 view .LVU446
 1308 02d8 714F     		ldr	r7, .L179
 1309 02da 3B68     		ldr	r3, [r7]
 753:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1310              		.loc 1 753 7 view .LVU447
 1311 02dc D905     		lsls	r1, r3, #23
 1312 02de 1DD5     		bpl	.L110
 1313              	.L115:
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1314              		.loc 1 795 5 is_stmt 1 view .LVU448
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1315              		.loc 1 795 5 view .LVU449
 1316 02e0 AB68     		ldr	r3, [r5, #8]
 1317 02e2 012B     		cmp	r3, #1
 1318 02e4 2BD1     		bne	.L172
 1319              	.L176:
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1320              		.loc 1 795 5 discriminator 4 view .LVU450
 1321 02e6 D4F89030 		ldr	r3, [r4, #144]
 1322 02ea 43F00103 		orr	r3, r3, #1
 1323 02ee C4F89030 		str	r3, [r4, #144]
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1324              		.loc 1 795 5 discriminator 4 view .LVU451
 799:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1325              		.loc 1 799 5 discriminator 4 view .LVU452
 1326              	.L116:
 802:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1327              		.loc 1 802 7 view .LVU453
 802:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1328              		.loc 1 802 19 is_stmt 0 view .LVU454
 1329 02f2 FFF7FEFF 		bl	HAL_GetTick
 1330              	.LVL116:
 807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1331              		.loc 1 807 11 view .LVU455
 1332 02f6 41F28839 		movw	r9, #5000
 802:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1333              		.loc 1 802 19 view .LVU456
 1334 02fa 0746     		mov	r7, r0
 1335              	.LVL117:
 805:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1336              		.loc 1 805 7 is_stmt 1 view .LVU457
 1337              	.L119:
 805:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1338              		.loc 1 805 12 view .LVU458
 805:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1339              		.loc 1 805 13 is_stmt 0 view .LVU459
 1340 02fc D4F89030 		ldr	r3, [r4, #144]
 805:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1341              		.loc 1 805 12 view .LVU460
 1342 0300 9B07     		lsls	r3, r3, #30
 1343 0302 42D5     		bpl	.L120
 1344              	.L124:
 834:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1345              		.loc 1 834 5 is_stmt 1 view .LVU461
 834:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1346              		.loc 1 834 7 is_stmt 0 view .LVU462
 1347 0304 B8F1000F 		cmp	r8, #0
 1348 0308 3FF40BAF 		beq	.L108
 836:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 1349              		.loc 1 836 7 is_stmt 1 view .LVU463
 1350 030c A36D     		ldr	r3, [r4, #88]
 1351 030e 23F08053 		bic	r3, r3, #268435456
 1352 0312 A365     		str	r3, [r4, #88]
 1353 0314 05E7     		b	.L108
 1354              	.LVL118:
 1355              	.L142:
 740:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1356              		.loc 1 740 22 is_stmt 0 view .LVU464
 1357 0316 4FF00008 		mov	r8, #0
 1358 031a DDE7     		b	.L109
 1359              	.LVL119:
 1360              	.L110:
 756:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1361              		.loc 1 756 7 is_stmt 1 view .LVU465
 1362 031c 3B68     		ldr	r3, [r7]
 1363 031e 43F48073 		orr	r3, r3, #256
 1364 0322 3B60     		str	r3, [r7]
 759:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1365              		.loc 1 759 7 view .LVU466
 759:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1366              		.loc 1 759 19 is_stmt 0 view .LVU467
 1367 0324 FFF7FEFF 		bl	HAL_GetTick
 1368              	.LVL120:
 1369 0328 8146     		mov	r9, r0
 1370              	.LVL121:
 761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1371              		.loc 1 761 7 is_stmt 1 view .LVU468
 1372              	.L113:
 761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1373              		.loc 1 761 12 view .LVU469
 761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1374              		.loc 1 761 13 is_stmt 0 view .LVU470
 1375 032a 3B68     		ldr	r3, [r7]
 761:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1376              		.loc 1 761 12 view .LVU471
 1377 032c DA05     		lsls	r2, r3, #23
 1378 032e D7D4     		bmi	.L115
 763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1379              		.loc 1 763 9 is_stmt 1 view .LVU472
 763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1380              		.loc 1 763 13 is_stmt 0 view .LVU473
 1381 0330 FFF7FEFF 		bl	HAL_GetTick
 1382              	.LVL122:
 763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1383              		.loc 1 763 27 view .LVU474
 1384 0334 A0EB0900 		sub	r0, r0, r9
 763:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1385              		.loc 1 763 11 view .LVU475
 1386 0338 0228     		cmp	r0, #2
 1387 033a F6D9     		bls	.L113
 1388 033c 01E7     		b	.L74
 1389              	.LVL123:
 1390              	.L172:
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1391              		.loc 1 795 5 is_stmt 1 discriminator 2 view .LVU476
 1392 033e 052B     		cmp	r3, #5
 1393 0340 06D1     		bne	.L117
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1394              		.loc 1 795 5 discriminator 4 view .LVU477
 1395 0342 D4F89030 		ldr	r3, [r4, #144]
 1396 0346 43F00403 		orr	r3, r3, #4
 1397 034a C4F89030 		str	r3, [r4, #144]
 1398 034e CAE7     		b	.L176
 1399              	.L117:
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1400              		.loc 1 795 5 discriminator 5 view .LVU478
 1401 0350 D4F89020 		ldr	r2, [r4, #144]
 1402 0354 22F00102 		bic	r2, r2, #1
 1403 0358 C4F89020 		str	r2, [r4, #144]
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1404              		.loc 1 795 5 discriminator 5 view .LVU479
 1405 035c D4F89020 		ldr	r2, [r4, #144]
 1406 0360 22F00402 		bic	r2, r2, #4
 1407 0364 C4F89020 		str	r2, [r4, #144]
 795:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 1408              		.loc 1 795 5 discriminator 5 view .LVU480
 799:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1409              		.loc 1 799 5 discriminator 5 view .LVU481
 799:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1410              		.loc 1 799 7 is_stmt 0 discriminator 5 view .LVU482
 1411 0368 002B     		cmp	r3, #0
 1412 036a C2D1     		bne	.L116
 816:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1413              		.loc 1 816 7 is_stmt 1 view .LVU483
 816:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1414              		.loc 1 816 19 is_stmt 0 view .LVU484
 1415 036c FFF7FEFF 		bl	HAL_GetTick
 1416              	.LVL124:
 821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1417              		.loc 1 821 11 view .LVU485
 1418 0370 41F28839 		movw	r9, #5000
 816:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1419              		.loc 1 816 19 view .LVU486
 1420 0374 0746     		mov	r7, r0
 1421              	.LVL125:
 819:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1422              		.loc 1 819 7 is_stmt 1 view .LVU487
 1423              	.L122:
 819:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1424              		.loc 1 819 12 view .LVU488
 819:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1425              		.loc 1 819 13 is_stmt 0 view .LVU489
 1426 0376 D4F89030 		ldr	r3, [r4, #144]
 819:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1427              		.loc 1 819 12 view .LVU490
 1428 037a 9807     		lsls	r0, r3, #30
 1429 037c C2D5     		bpl	.L124
 821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1430              		.loc 1 821 9 is_stmt 1 view .LVU491
 821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1431              		.loc 1 821 13 is_stmt 0 view .LVU492
 1432 037e FFF7FEFF 		bl	HAL_GetTick
 1433              	.LVL126:
 821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1434              		.loc 1 821 27 view .LVU493
 1435 0382 C01B     		subs	r0, r0, r7
 821:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1436              		.loc 1 821 11 view .LVU494
 1437 0384 4845     		cmp	r0, r9
 1438 0386 F6D9     		bls	.L122
 1439 0388 DBE6     		b	.L74
 1440              	.L120:
 807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1441              		.loc 1 807 9 is_stmt 1 view .LVU495
 807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1442              		.loc 1 807 13 is_stmt 0 view .LVU496
 1443 038a FFF7FEFF 		bl	HAL_GetTick
 1444              	.LVL127:
 807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1445              		.loc 1 807 27 view .LVU497
 1446 038e C01B     		subs	r0, r0, r7
 807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1447              		.loc 1 807 11 view .LVU498
 1448 0390 4845     		cmp	r0, r9
 1449 0392 B3D9     		bls	.L119
 1450 0394 D5E6     		b	.L74
 1451              	.LVL128:
 1452              	.L125:
 807:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1453              		.loc 1 807 11 view .LVU499
 1454              	.LBE10:
 844:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1455              		.loc 1 844 5 is_stmt 1 view .LVU500
 847:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1456              		.loc 1 847 5 view .LVU501
 847:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1457              		.loc 1 847 7 is_stmt 0 view .LVU502
 1458 0396 6B6A     		ldr	r3, [r5, #36]
 1459 0398 9BB1     		cbz	r3, .L128
 850:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1460              		.loc 1 850 7 is_stmt 1 view .LVU503
 1461 039a D4F89830 		ldr	r3, [r4, #152]
 1462 039e 43F00103 		orr	r3, r3, #1
 1463 03a2 C4F89830 		str	r3, [r4, #152]
 853:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1464              		.loc 1 853 7 view .LVU504
 853:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1465              		.loc 1 853 19 is_stmt 0 view .LVU505
 1466 03a6 FFF7FEFF 		bl	HAL_GetTick
 1467              	.LVL129:
 1468 03aa 0746     		mov	r7, r0
 1469              	.LVL130:
 856:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1470              		.loc 1 856 7 is_stmt 1 view .LVU506
 1471              	.L129:
 856:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1472              		.loc 1 856 12 view .LVU507
 856:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1473              		.loc 1 856 13 is_stmt 0 view .LVU508
 1474 03ac D4F89830 		ldr	r3, [r4, #152]
 856:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1475              		.loc 1 856 12 view .LVU509
 1476 03b0 9A07     		lsls	r2, r3, #30
 1477 03b2 3FF5BAAE 		bmi	.L131
 858:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1478              		.loc 1 858 9 is_stmt 1 view .LVU510
 858:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1479              		.loc 1 858 13 is_stmt 0 view .LVU511
 1480 03b6 FFF7FEFF 		bl	HAL_GetTick
 1481              	.LVL131:
 858:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1482              		.loc 1 858 27 view .LVU512
 1483 03ba C01B     		subs	r0, r0, r7
 858:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1484              		.loc 1 858 11 view .LVU513
 1485 03bc 0228     		cmp	r0, #2
 1486 03be F5D9     		bls	.L129
 1487 03c0 BFE6     		b	.L74
 1488              	.LVL132:
 1489              	.L128:
 867:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1490              		.loc 1 867 7 is_stmt 1 view .LVU514
 1491 03c2 D4F89830 		ldr	r3, [r4, #152]
 1492 03c6 23F00103 		bic	r3, r3, #1
 1493 03ca C4F89830 		str	r3, [r4, #152]
 870:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1494              		.loc 1 870 7 view .LVU515
 870:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1495              		.loc 1 870 19 is_stmt 0 view .LVU516
 1496 03ce FFF7FEFF 		bl	HAL_GetTick
 1497              	.LVL133:
 1498 03d2 0746     		mov	r7, r0
 1499              	.LVL134:
 873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1500              		.loc 1 873 7 is_stmt 1 view .LVU517
 1501              	.L132:
 873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1502              		.loc 1 873 12 view .LVU518
 873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1503              		.loc 1 873 13 is_stmt 0 view .LVU519
 1504 03d4 D4F89830 		ldr	r3, [r4, #152]
 873:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1505              		.loc 1 873 12 view .LVU520
 1506 03d8 9B07     		lsls	r3, r3, #30
 1507 03da 7FF5A6AE 		bpl	.L131
 875:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1508              		.loc 1 875 9 is_stmt 1 view .LVU521
 875:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1509              		.loc 1 875 13 is_stmt 0 view .LVU522
 1510 03de FFF7FEFF 		bl	HAL_GetTick
 1511              	.LVL135:
 875:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1512              		.loc 1 875 27 view .LVU523
 1513 03e2 C01B     		subs	r0, r0, r7
 875:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1514              		.loc 1 875 11 view .LVU524
 1515 03e4 0228     		cmp	r0, #2
 1516 03e6 F5D9     		bls	.L132
 1517 03e8 ABE6     		b	.L74
 1518              	.LVL136:
 1519              	.L126:
 890:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1520              		.loc 1 890 5 is_stmt 1 view .LVU525
 890:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1521              		.loc 1 890 7 is_stmt 0 view .LVU526
 1522 03ea 0C2E     		cmp	r6, #12
 1523 03ec 3FF40CAE 		beq	.L143
 892:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1524              		.loc 1 892 7 is_stmt 1 view .LVU527
 892:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1525              		.loc 1 892 9 is_stmt 0 view .LVU528
 1526 03f0 022B     		cmp	r3, #2
 905:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1527              		.loc 1 905 9 view .LVU529
 1528 03f2 2368     		ldr	r3, [r4]
 1529 03f4 23F08073 		bic	r3, r3, #16777216
 1530 03f8 2360     		str	r3, [r4]
 892:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1531              		.loc 1 892 9 view .LVU530
 1532 03fa 36D1     		bne	.L134
 895:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 1533              		.loc 1 895 9 is_stmt 1 view .LVU531
 896:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 1534              		.loc 1 896 9 view .LVU532
 897:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 1535              		.loc 1 897 9 view .LVU533
 899:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
 1536              		.loc 1 899 9 view .LVU534
 901:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 1537              		.loc 1 901 9 view .LVU535
 902:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1538              		.loc 1 902 9 view .LVU536
 905:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1539              		.loc 1 905 9 view .LVU537
 908:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1540              		.loc 1 908 9 view .LVU538
 908:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1541              		.loc 1 908 21 is_stmt 0 view .LVU539
 1542 03fc FFF7FEFF 		bl	HAL_GetTick
 1543              	.LVL137:
 1544 0400 0646     		mov	r6, r0
 1545              	.LVL138:
 911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1546              		.loc 1 911 9 is_stmt 1 view .LVU540
 1547              	.L135:
 911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1548              		.loc 1 911 14 view .LVU541
 911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1549              		.loc 1 911 15 is_stmt 0 view .LVU542
 1550 0402 2368     		ldr	r3, [r4]
 911:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1551              		.loc 1 911 14 view .LVU543
 1552 0404 9801     		lsls	r0, r3, #6
 1553 0406 2AD4     		bmi	.L136
 920:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 1554              		.loc 1 920 9 is_stmt 1 view .LVU544
 1555 0408 D5E90D23 		ldrd	r2, r3, [r5, #52]
 1556 040c DB06     		lsls	r3, r3, #27
 1557 040e 43EA0223 		orr	r3, r3, r2, lsl #8
 1558 0412 EA6A     		ldr	r2, [r5, #44]
 1559 0414 1343     		orrs	r3, r3, r2
 1560 0416 2A6B     		ldr	r2, [r5, #48]
 1561 0418 013A     		subs	r2, r2, #1
 1562 041a 43EA0213 		orr	r3, r3, r2, lsl #4
 1563 041e EA6B     		ldr	r2, [r5, #60]
 1564 0420 5208     		lsrs	r2, r2, #1
 1565 0422 013A     		subs	r2, r2, #1
 1566 0424 43EA4253 		orr	r3, r3, r2, lsl #21
 1567 0428 2A6C     		ldr	r2, [r5, #64]
 1568 042a 5208     		lsrs	r2, r2, #1
 1569 042c 013A     		subs	r2, r2, #1
 1570 042e 43EA4263 		orr	r3, r3, r2, lsl #25
 1571 0432 E360     		str	r3, [r4, #12]
 930:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1572              		.loc 1 930 9 view .LVU545
 1573 0434 2368     		ldr	r3, [r4]
 1574 0436 43F08073 		orr	r3, r3, #16777216
 1575 043a 2360     		str	r3, [r4]
 933:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1576              		.loc 1 933 10 view .LVU546
 1577 043c E368     		ldr	r3, [r4, #12]
 1578 043e 43F08073 		orr	r3, r3, #16777216
 1579 0442 E360     		str	r3, [r4, #12]
 936:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1580              		.loc 1 936 9 view .LVU547
 936:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1581              		.loc 1 936 21 is_stmt 0 view .LVU548
 1582 0444 FFF7FEFF 		bl	HAL_GetTick
 1583              	.LVL139:
 1584 0448 0546     		mov	r5, r0
 1585              	.LVL140:
 939:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1586              		.loc 1 939 9 is_stmt 1 view .LVU549
 1587              	.L137:
 939:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1588              		.loc 1 939 14 view .LVU550
 939:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1589              		.loc 1 939 15 is_stmt 0 view .LVU551
 1590 044a 2368     		ldr	r3, [r4]
 939:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1591              		.loc 1 939 14 view .LVU552
 1592 044c 9901     		lsls	r1, r3, #6
 1593 044e 3FF570AE 		bmi	.L127
 941:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1594              		.loc 1 941 11 is_stmt 1 view .LVU553
 941:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1595              		.loc 1 941 15 is_stmt 0 view .LVU554
 1596 0452 FFF7FEFF 		bl	HAL_GetTick
 1597              	.LVL141:
 941:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1598              		.loc 1 941 29 view .LVU555
 1599 0456 401B     		subs	r0, r0, r5
 941:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1600              		.loc 1 941 13 view .LVU556
 1601 0458 0228     		cmp	r0, #2
 1602 045a F6D9     		bls	.L137
 1603 045c 71E6     		b	.L74
 1604              	.LVL142:
 1605              	.L136:
 913:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1606              		.loc 1 913 11 is_stmt 1 view .LVU557
 913:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1607              		.loc 1 913 15 is_stmt 0 view .LVU558
 1608 045e FFF7FEFF 		bl	HAL_GetTick
 1609              	.LVL143:
 913:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1610              		.loc 1 913 29 view .LVU559
 1611 0462 801B     		subs	r0, r0, r6
 913:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1612              		.loc 1 913 13 view .LVU560
 1613 0464 0228     		cmp	r0, #2
 1614 0466 CCD9     		bls	.L135
 1615 0468 6BE6     		b	.L74
 1616              	.LVL144:
 1617              	.L134:
 950:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1618              		.loc 1 950 9 is_stmt 1 view .LVU561
 959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1619              		.loc 1 959 9 view .LVU562
 959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1620              		.loc 1 959 12 is_stmt 0 view .LVU563
 1621 046a 2368     		ldr	r3, [r4]
 959:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1622              		.loc 1 959 11 view .LVU564
 1623 046c 1A01     		lsls	r2, r3, #4
 961:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         }
 1624              		.loc 1 961 11 is_stmt 1 view .LVU565
 1625 046e 5EBF     		ittt	pl
 1626 0470 E368     		ldrpl	r3, [r4, #12]
 1627 0472 23F00303 		bicpl	r3, r3, #3
 1628 0476 E360     		strpl	r3, [r4, #12]
 970:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 1629              		.loc 1 970 9 view .LVU566
 1630 0478 E368     		ldr	r3, [r4, #12]
 1631 047a 23F08873 		bic	r3, r3, #17825792
 1632 047e 23F48033 		bic	r3, r3, #65536
 1633 0482 E360     		str	r3, [r4, #12]
 976:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1634              		.loc 1 976 9 view .LVU567
 976:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1635              		.loc 1 976 21 is_stmt 0 view .LVU568
 1636 0484 FFF7FEFF 		bl	HAL_GetTick
 1637              	.LVL145:
 1638 0488 0546     		mov	r5, r0
 1639              	.LVL146:
 979:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1640              		.loc 1 979 9 is_stmt 1 view .LVU569
 1641              	.L140:
 979:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1642              		.loc 1 979 14 view .LVU570
 979:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1643              		.loc 1 979 15 is_stmt 0 view .LVU571
 1644 048a 2368     		ldr	r3, [r4]
 979:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1645              		.loc 1 979 14 view .LVU572
 1646 048c 9B01     		lsls	r3, r3, #6
 1647 048e 7FF550AE 		bpl	.L127
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1648              		.loc 1 981 11 is_stmt 1 view .LVU573
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1649              		.loc 1 981 15 is_stmt 0 view .LVU574
 1650 0492 FFF7FEFF 		bl	HAL_GetTick
 1651              	.LVL147:
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1652              		.loc 1 981 29 view .LVU575
 1653 0496 401B     		subs	r0, r0, r5
 981:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****           {
 1654              		.loc 1 981 13 view .LVU576
 1655 0498 0228     		cmp	r0, #2
 1656 049a F6D9     		bls	.L140
 1657 049c 51E6     		b	.L74
 1658              	.L180:
 1659 049e 00BF     		.align	2
 1660              	.L179:
 1661 04a0 00700040 		.word	1073770496
 1662              		.cfi_endproc
 1663              	.LFE310:
 1665              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1666              		.align	1
 1667              		.global	HAL_RCC_ClockConfig
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1671              		.fpu softvfp
 1673              	HAL_RCC_ClockConfig:
 1674              	.LVL148:
 1675              	.LFB311:
1047:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 1676              		.loc 1 1047 1 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
1048:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 1680              		.loc 1 1048 3 view .LVU578
1052:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1681              		.loc 1 1052 3 view .LVU579
1055:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1682              		.loc 1 1055 3 view .LVU580
1047:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 1683              		.loc 1 1047 1 is_stmt 0 view .LVU581
 1684 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1685              	.LCFI10:
 1686              		.cfi_def_cfa_offset 24
 1687              		.cfi_offset 4, -24
 1688              		.cfi_offset 5, -20
 1689              		.cfi_offset 6, -16
 1690              		.cfi_offset 7, -12
 1691              		.cfi_offset 8, -8
 1692              		.cfi_offset 14, -4
1047:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 1693              		.loc 1 1047 1 view .LVU582
 1694 0004 0D46     		mov	r5, r1
1055:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1695              		.loc 1 1055 5 view .LVU583
 1696 0006 0446     		mov	r4, r0
 1697 0008 10B9     		cbnz	r0, .L182
 1698              	.LVL149:
 1699              	.L187:
1057:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 1700              		.loc 1 1057 12 view .LVU584
 1701 000a 0120     		movs	r0, #1
 1702              	.L183:
1226:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1703              		.loc 1 1226 1 view .LVU585
 1704 000c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1705              	.LVL150:
 1706              	.L182:
1061:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1707              		.loc 1 1061 3 is_stmt 1 view .LVU586
1062:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1708              		.loc 1 1062 3 view .LVU587
1069:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1709              		.loc 1 1069 3 view .LVU588
1069:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1710              		.loc 1 1069 17 is_stmt 0 view .LVU589
 1711 0010 404A     		ldr	r2, .L222
 1712 0012 1368     		ldr	r3, [r2]
 1713 0014 03F00703 		and	r3, r3, #7
1069:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1714              		.loc 1 1069 5 view .LVU590
 1715 0018 8B42     		cmp	r3, r1
 1716 001a 29D3     		bcc	.L184
 1717              	.L188:
1083:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1718              		.loc 1 1083 3 is_stmt 1 view .LVU591
1083:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1719              		.loc 1 1083 38 is_stmt 0 view .LVU592
 1720 001c 2368     		ldr	r3, [r4]
1083:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1721              		.loc 1 1083 5 view .LVU593
 1722 001e D907     		lsls	r1, r3, #31
 1723              	.LVL151:
1083:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1724              		.loc 1 1083 5 view .LVU594
 1725 0020 31D4     		bmi	.L185
 1726              	.LVL152:
 1727              	.L186:
1175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1728              		.loc 1 1175 3 is_stmt 1 view .LVU595
1175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1729              		.loc 1 1175 25 is_stmt 0 view .LVU596
 1730 0022 2168     		ldr	r1, [r4]
1175:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1731              		.loc 1 1175 5 view .LVU597
 1732 0024 8A07     		lsls	r2, r1, #30
 1733 0026 5AD4     		bmi	.L189
 1734              	.L190:
1192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1735              		.loc 1 1192 3 is_stmt 1 view .LVU598
1192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1736              		.loc 1 1192 17 is_stmt 0 view .LVU599
 1737 0028 3A4A     		ldr	r2, .L222
 1738 002a 1368     		ldr	r3, [r2]
 1739 002c 03F00703 		and	r3, r3, #7
1192:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1740              		.loc 1 1192 5 view .LVU600
 1741 0030 AB42     		cmp	r3, r5
 1742 0032 5CD8     		bhi	.L197
 1743              	.L200:
1206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1744              		.loc 1 1206 3 is_stmt 1 view .LVU601
1206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1745              		.loc 1 1206 5 is_stmt 0 view .LVU602
 1746 0034 11F0040F 		tst	r1, #4
 1747 0038 374D     		ldr	r5, .L222+4
 1748              	.LVL153:
1206:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1749              		.loc 1 1206 5 view .LVU603
 1750 003a 63D1     		bne	.L198
 1751              	.L199:
1213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1752              		.loc 1 1213 3 is_stmt 1 view .LVU604
1213:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 1753              		.loc 1 1213 5 is_stmt 0 view .LVU605
 1754 003c 0B07     		lsls	r3, r1, #28
 1755 003e 06D5     		bpl	.L201
1215:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1756              		.loc 1 1215 5 is_stmt 1 view .LVU606
1216:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 1757              		.loc 1 1216 5 view .LVU607
 1758 0040 AB68     		ldr	r3, [r5, #8]
 1759 0042 2269     		ldr	r2, [r4, #16]
 1760 0044 23F46053 		bic	r3, r3, #14336
 1761 0048 43EAC203 		orr	r3, r3, r2, lsl #3
 1762 004c AB60     		str	r3, [r5, #8]
 1763              	.L201:
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1764              		.loc 1 1220 3 view .LVU608
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1765              		.loc 1 1220 21 is_stmt 0 view .LVU609
 1766 004e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1767              	.LVL154:
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1768              		.loc 1 1220 65 view .LVU610
 1769 0052 AB68     		ldr	r3, [r5, #8]
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1770              		.loc 1 1220 122 view .LVU611
 1771 0054 314A     		ldr	r2, .L222+8
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1772              		.loc 1 1220 100 view .LVU612
 1773 0056 C3F30313 		ubfx	r3, r3, #4, #4
1226:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1774              		.loc 1 1226 1 view .LVU613
 1775 005a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1776              	.LCFI11:
 1777              		.cfi_remember_state
 1778              		.cfi_restore 14
 1779              		.cfi_restore 8
 1780              		.cfi_restore 7
 1781              		.cfi_restore 6
 1782              		.cfi_restore 5
 1783              		.cfi_restore 4
 1784              		.cfi_def_cfa_offset 0
 1785              	.LVL155:
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1786              		.loc 1 1220 122 view .LVU614
 1787 005e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1788 0060 03F01F03 		and	r3, r3, #31
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1789              		.loc 1 1220 47 view .LVU615
 1790 0064 D840     		lsrs	r0, r0, r3
1220:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1791              		.loc 1 1220 19 view .LVU616
 1792 0066 2E4B     		ldr	r3, .L222+12
 1793 0068 1860     		str	r0, [r3]
1223:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1794              		.loc 1 1223 3 is_stmt 1 view .LVU617
1223:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1795              		.loc 1 1223 12 is_stmt 0 view .LVU618
 1796 006a 0F20     		movs	r0, #15
 1797 006c FFF7FEBF 		b	HAL_InitTick
 1798              	.LVL156:
 1799              	.L184:
 1800              	.LCFI12:
 1801              		.cfi_restore_state
1072:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1802              		.loc 1 1072 5 is_stmt 1 view .LVU619
 1803 0070 1368     		ldr	r3, [r2]
 1804 0072 23F00703 		bic	r3, r3, #7
 1805 0076 0B43     		orrs	r3, r3, r1
 1806 0078 1360     		str	r3, [r2]
1076:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1807              		.loc 1 1076 5 view .LVU620
1076:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1808              		.loc 1 1076 8 is_stmt 0 view .LVU621
 1809 007a 1368     		ldr	r3, [r2]
 1810 007c 03F00703 		and	r3, r3, #7
1076:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1811              		.loc 1 1076 7 view .LVU622
 1812 0080 8B42     		cmp	r3, r1
 1813 0082 C2D1     		bne	.L187
 1814 0084 CAE7     		b	.L188
 1815              	.LVL157:
 1816              	.L185:
1085:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1817              		.loc 1 1085 5 is_stmt 1 view .LVU623
1088:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1818              		.loc 1 1088 5 view .LVU624
1088:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1819              		.loc 1 1088 25 is_stmt 0 view .LVU625
 1820 0086 6268     		ldr	r2, [r4, #4]
 1821 0088 234E     		ldr	r6, .L222+4
1088:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1822              		.loc 1 1088 7 view .LVU626
 1823 008a 032A     		cmp	r2, #3
1091:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1824              		.loc 1 1091 10 view .LVU627
 1825 008c 3368     		ldr	r3, [r6]
1088:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1826              		.loc 1 1088 7 view .LVU628
 1827 008e 1AD1     		bne	.L191
1091:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1828              		.loc 1 1091 7 is_stmt 1 view .LVU629
1091:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1829              		.loc 1 1091 9 is_stmt 0 view .LVU630
 1830 0090 13F0007F 		tst	r3, #33554432
 1831              	.L219:
1143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1832              		.loc 1 1143 11 view .LVU631
 1833 0094 B9D0     		beq	.L187
1160:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1834              		.loc 1 1160 5 is_stmt 1 view .LVU632
 1835 0096 B368     		ldr	r3, [r6, #8]
 1836 0098 23F00303 		bic	r3, r3, #3
 1837 009c 1343     		orrs	r3, r3, r2
 1838 009e B360     		str	r3, [r6, #8]
1163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1839              		.loc 1 1163 5 view .LVU633
1163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1840              		.loc 1 1163 17 is_stmt 0 view .LVU634
 1841 00a0 FFF7FEFF 		bl	HAL_GetTick
 1842              	.LVL158:
1167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1843              		.loc 1 1167 9 view .LVU635
 1844 00a4 41F28838 		movw	r8, #5000
1163:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1845              		.loc 1 1163 17 view .LVU636
 1846 00a8 0746     		mov	r7, r0
 1847              	.LVL159:
1165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1848              		.loc 1 1165 5 is_stmt 1 view .LVU637
 1849              	.L195:
1165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1850              		.loc 1 1165 10 view .LVU638
1165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1851              		.loc 1 1165 11 is_stmt 0 view .LVU639
 1852 00aa B368     		ldr	r3, [r6, #8]
1165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1853              		.loc 1 1165 77 view .LVU640
 1854 00ac 6268     		ldr	r2, [r4, #4]
1165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1855              		.loc 1 1165 11 view .LVU641
 1856 00ae 03F00C03 		and	r3, r3, #12
1165:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1857              		.loc 1 1165 10 view .LVU642
 1858 00b2 B3EB820F 		cmp	r3, r2, lsl #2
 1859 00b6 B4D0     		beq	.L186
1167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1860              		.loc 1 1167 7 is_stmt 1 view .LVU643
1167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1861              		.loc 1 1167 11 is_stmt 0 view .LVU644
 1862 00b8 FFF7FEFF 		bl	HAL_GetTick
 1863              	.LVL160:
1167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1864              		.loc 1 1167 25 view .LVU645
 1865 00bc C01B     		subs	r0, r0, r7
1167:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1866              		.loc 1 1167 9 view .LVU646
 1867 00be 4045     		cmp	r0, r8
 1868 00c0 F3D9     		bls	.L195
1169:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       }
 1869              		.loc 1 1169 16 view .LVU647
 1870 00c2 0320     		movs	r0, #3
 1871 00c4 A2E7     		b	.L183
 1872              	.LVL161:
 1873              	.L191:
1122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1874              		.loc 1 1122 7 is_stmt 1 view .LVU648
1122:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1875              		.loc 1 1122 9 is_stmt 0 view .LVU649
 1876 00c6 022A     		cmp	r2, #2
 1877 00c8 02D1     		bne	.L193
1125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1878              		.loc 1 1125 9 is_stmt 1 view .LVU650
1125:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1879              		.loc 1 1125 11 is_stmt 0 view .LVU651
 1880 00ca 13F4003F 		tst	r3, #131072
 1881 00ce E1E7     		b	.L219
 1882              	.L193:
1131:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1883              		.loc 1 1131 12 is_stmt 1 view .LVU652
1131:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****       {
 1884              		.loc 1 1131 14 is_stmt 0 view .LVU653
 1885 00d0 12B9     		cbnz	r2, .L194
1134:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1886              		.loc 1 1134 9 is_stmt 1 view .LVU654
1134:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1887              		.loc 1 1134 11 is_stmt 0 view .LVU655
 1888 00d2 13F0020F 		tst	r3, #2
 1889 00d6 DDE7     		b	.L219
 1890              	.L194:
1143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1891              		.loc 1 1143 9 is_stmt 1 view .LVU656
1143:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****         {
 1892              		.loc 1 1143 11 is_stmt 0 view .LVU657
 1893 00d8 13F4806F 		tst	r3, #1024
 1894 00dc DAE7     		b	.L219
 1895              	.LVL162:
 1896              	.L189:
1177:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1897              		.loc 1 1177 5 is_stmt 1 view .LVU658
1178:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 1898              		.loc 1 1178 5 view .LVU659
 1899 00de 0E4A     		ldr	r2, .L222+4
 1900 00e0 A068     		ldr	r0, [r4, #8]
 1901 00e2 9368     		ldr	r3, [r2, #8]
 1902 00e4 23F0F003 		bic	r3, r3, #240
 1903 00e8 0343     		orrs	r3, r3, r0
 1904 00ea 9360     		str	r3, [r2, #8]
 1905 00ec 9CE7     		b	.L190
 1906              	.L197:
1195:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1907              		.loc 1 1195 5 view .LVU660
 1908 00ee 1368     		ldr	r3, [r2]
 1909 00f0 23F00703 		bic	r3, r3, #7
 1910 00f4 2B43     		orrs	r3, r3, r5
 1911 00f6 1360     		str	r3, [r2]
1199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1912              		.loc 1 1199 5 view .LVU661
1199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1913              		.loc 1 1199 8 is_stmt 0 view .LVU662
 1914 00f8 1368     		ldr	r3, [r2]
 1915 00fa 03F00703 		and	r3, r3, #7
1199:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     {
 1916              		.loc 1 1199 7 view .LVU663
 1917 00fe AB42     		cmp	r3, r5
 1918 0100 83D1     		bne	.L187
 1919 0102 97E7     		b	.L200
 1920              	.LVL163:
 1921              	.L198:
1208:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1922              		.loc 1 1208 5 is_stmt 1 view .LVU664
1209:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 1923              		.loc 1 1209 5 view .LVU665
 1924 0104 AB68     		ldr	r3, [r5, #8]
 1925 0106 E268     		ldr	r2, [r4, #12]
 1926 0108 23F4E063 		bic	r3, r3, #1792
 1927 010c 1343     		orrs	r3, r3, r2
 1928 010e AB60     		str	r3, [r5, #8]
 1929 0110 94E7     		b	.L199
 1930              	.L223:
 1931 0112 00BF     		.align	2
 1932              	.L222:
 1933 0114 00200240 		.word	1073881088
 1934 0118 00100240 		.word	1073876992
 1935 011c 00000000 		.word	AHBPrescTable
 1936 0120 00000000 		.word	SystemCoreClock
 1937              		.cfi_endproc
 1938              	.LFE311:
 1940              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1941              		.align	1
 1942              		.global	HAL_RCC_GetHCLKFreq
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu softvfp
 1948              	HAL_RCC_GetHCLKFreq:
 1949              	.LFB314:
1425:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   return SystemCoreClock;
 1950              		.loc 1 1425 1 view -0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              		@ link register save eliminated.
1426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 1955              		.loc 1 1426 3 view .LVU667
1427:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 1956              		.loc 1 1427 1 is_stmt 0 view .LVU668
 1957 0000 014B     		ldr	r3, .L225
 1958 0002 1868     		ldr	r0, [r3]
 1959 0004 7047     		bx	lr
 1960              	.L226:
 1961 0006 00BF     		.align	2
 1962              	.L225:
 1963 0008 00000000 		.word	SystemCoreClock
 1964              		.cfi_endproc
 1965              	.LFE314:
 1967              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1968              		.align	1
 1969              		.global	HAL_RCC_GetPCLK1Freq
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1973              		.fpu softvfp
 1975              	HAL_RCC_GetPCLK1Freq:
 1976              	.LFB315:
1436:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 1977              		.loc 1 1436 1 is_stmt 1 view -0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 1982              		.loc 1 1438 3 view .LVU670
 1983              	.LBB12:
 1984              	.LBI12:
1424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
 1985              		.loc 1 1424 10 view .LVU671
 1986              	.LBB13:
1426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 1987              		.loc 1 1426 3 view .LVU672
 1988              	.LBE13:
 1989              	.LBE12:
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 1990              		.loc 1 1438 51 is_stmt 0 view .LVU673
 1991 0000 054B     		ldr	r3, .L228
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 1992              		.loc 1 1438 110 view .LVU674
 1993 0002 064A     		ldr	r2, .L228+4
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 1994              		.loc 1 1438 51 view .LVU675
 1995 0004 9B68     		ldr	r3, [r3, #8]
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 1996              		.loc 1 1438 87 view .LVU676
 1997 0006 C3F30223 		ubfx	r3, r3, #8, #3
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 1998              		.loc 1 1438 110 view .LVU677
 1999 000a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2000              		.loc 1 1438 33 view .LVU678
 2001 000c 044A     		ldr	r2, .L228+8
 2002 000e 1068     		ldr	r0, [r2]
1438:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2003              		.loc 1 1438 110 view .LVU679
 2004 0010 03F01F03 		and	r3, r3, #31
1439:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2005              		.loc 1 1439 1 view .LVU680
 2006 0014 D840     		lsrs	r0, r0, r3
 2007 0016 7047     		bx	lr
 2008              	.L229:
 2009              		.align	2
 2010              	.L228:
 2011 0018 00100240 		.word	1073876992
 2012 001c 00000000 		.word	APBPrescTable
 2013 0020 00000000 		.word	SystemCoreClock
 2014              		.cfi_endproc
 2015              	.LFE315:
 2017              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2018              		.align	1
 2019              		.global	HAL_RCC_GetPCLK2Freq
 2020              		.syntax unified
 2021              		.thumb
 2022              		.thumb_func
 2023              		.fpu softvfp
 2025              	HAL_RCC_GetPCLK2Freq:
 2026              	.LFB316:
1448:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 2027              		.loc 1 1448 1 is_stmt 1 view -0
 2028              		.cfi_startproc
 2029              		@ args = 0, pretend = 0, frame = 0
 2030              		@ frame_needed = 0, uses_anonymous_args = 0
 2031              		@ link register save eliminated.
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2032              		.loc 1 1450 3 view .LVU682
 2033              	.LBB14:
 2034              	.LBI14:
1424:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** {
 2035              		.loc 1 1424 10 view .LVU683
 2036              	.LBB15:
1426:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2037              		.loc 1 1426 3 view .LVU684
 2038              	.LBE15:
 2039              	.LBE14:
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2040              		.loc 1 1450 50 is_stmt 0 view .LVU685
 2041 0000 054B     		ldr	r3, .L231
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2042              		.loc 1 1450 109 view .LVU686
 2043 0002 064A     		ldr	r2, .L231+4
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2044              		.loc 1 1450 50 view .LVU687
 2045 0004 9B68     		ldr	r3, [r3, #8]
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2046              		.loc 1 1450 86 view .LVU688
 2047 0006 C3F3C223 		ubfx	r3, r3, #11, #3
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2048              		.loc 1 1450 109 view .LVU689
 2049 000a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2050              		.loc 1 1450 32 view .LVU690
 2051 000c 044A     		ldr	r2, .L231+8
 2052 000e 1068     		ldr	r0, [r2]
1450:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2053              		.loc 1 1450 109 view .LVU691
 2054 0010 03F01F03 		and	r3, r3, #31
1451:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2055              		.loc 1 1451 1 view .LVU692
 2056 0014 D840     		lsrs	r0, r0, r3
 2057 0016 7047     		bx	lr
 2058              	.L232:
 2059              		.align	2
 2060              	.L231:
 2061 0018 00100240 		.word	1073876992
 2062 001c 00000000 		.word	APBPrescTable
 2063 0020 00000000 		.word	SystemCoreClock
 2064              		.cfi_endproc
 2065              	.LFE316:
 2067              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2068              		.align	1
 2069              		.global	HAL_RCC_GetOscConfig
 2070              		.syntax unified
 2071              		.thumb
 2072              		.thumb_func
 2073              		.fpu softvfp
 2075              	HAL_RCC_GetOscConfig:
 2076              	.LVL164:
 2077              	.LFB317:
1461:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 2078              		.loc 1 1461 1 is_stmt 1 view -0
 2079              		.cfi_startproc
 2080              		@ args = 0, pretend = 0, frame = 0
 2081              		@ frame_needed = 0, uses_anonymous_args = 0
 2082              		@ link register save eliminated.
1463:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2083              		.loc 1 1463 3 view .LVU694
1467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
 2084              		.loc 1 1467 3 view .LVU695
1467:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
 2085              		.loc 1 1467 37 is_stmt 0 view .LVU696
 2086 0000 3F23     		movs	r3, #63
 2087 0002 0360     		str	r3, [r0]
1475:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2088              		.loc 1 1475 3 is_stmt 1 view .LVU697
1475:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2089              		.loc 1 1475 6 is_stmt 0 view .LVU698
 2090 0004 2E4B     		ldr	r3, .L244
 2091 0006 1A68     		ldr	r2, [r3]
1475:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2092              		.loc 1 1475 5 view .LVU699
 2093 0008 5103     		lsls	r1, r2, #13
 2094 000a 4AD5     		bpl	.L234
1477:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2095              		.loc 1 1477 5 is_stmt 1 view .LVU700
1477:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2096              		.loc 1 1477 33 is_stmt 0 view .LVU701
 2097 000c 4FF4A022 		mov	r2, #327680
 2098              	.L236:
1485:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2099              		.loc 1 1485 5 is_stmt 1 view .LVU702
1485:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2100              		.loc 1 1485 33 is_stmt 0 view .LVU703
 2101 0010 4260     		str	r2, [r0, #4]
1489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2102              		.loc 1 1489 3 is_stmt 1 view .LVU704
1489:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2103              		.loc 1 1489 6 is_stmt 0 view .LVU705
 2104 0012 1A68     		ldr	r2, [r3]
 2105 0014 02F00102 		and	r2, r2, #1
 2106 0018 8261     		str	r2, [r0, #24]
1498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE);
 2107              		.loc 1 1498 3 is_stmt 1 view .LVU706
1498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE);
 2108              		.loc 1 1498 44 is_stmt 0 view .LVU707
 2109 001a 5A68     		ldr	r2, [r3, #4]
1498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE);
 2110              		.loc 1 1498 84 view .LVU708
 2111 001c C2F30722 		ubfx	r2, r2, #8, #8
1498:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE);
 2112              		.loc 1 1498 42 view .LVU709
 2113 0020 C261     		str	r2, [r0, #28]
1499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2114              		.loc 1 1499 3 is_stmt 1 view .LVU710
1499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2115              		.loc 1 1499 38 is_stmt 0 view .LVU711
 2116 0022 1A68     		ldr	r2, [r3]
 2117 0024 02F0F002 		and	r2, r2, #240
1499:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2118              		.loc 1 1499 36 view .LVU712
 2119 0028 0262     		str	r2, [r0, #32]
1502:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2120              		.loc 1 1502 3 is_stmt 1 view .LVU713
1502:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2121              		.loc 1 1502 6 is_stmt 0 view .LVU714
 2122 002a 1A68     		ldr	r2, [r3]
1504:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2123              		.loc 1 1504 33 view .LVU715
 2124 002c 02F48072 		and	r2, r2, #256
 2125 0030 C260     		str	r2, [r0, #12]
1511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2126              		.loc 1 1511 3 is_stmt 1 view .LVU716
1511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2127              		.loc 1 1511 44 is_stmt 0 view .LVU717
 2128 0032 5A68     		ldr	r2, [r3, #4]
1511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2129              		.loc 1 1511 84 view .LVU718
 2130 0034 C2F30462 		ubfx	r2, r2, #24, #5
1511:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2131              		.loc 1 1511 42 view .LVU719
 2132 0038 0261     		str	r2, [r0, #16]
1514:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2133              		.loc 1 1514 3 is_stmt 1 view .LVU720
1514:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2134              		.loc 1 1514 6 is_stmt 0 view .LVU721
 2135 003a D3F89020 		ldr	r2, [r3, #144]
1514:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2136              		.loc 1 1514 5 view .LVU722
 2137 003e 5207     		lsls	r2, r2, #29
 2138 0040 36D5     		bpl	.L238
1524:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 2139              		.loc 1 1524 7 is_stmt 1 view .LVU723
1524:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 2140              		.loc 1 1524 35 is_stmt 0 view .LVU724
 2141 0042 0522     		movs	r2, #5
 2142              	.L240:
1542:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2143              		.loc 1 1542 5 is_stmt 1 view .LVU725
1542:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2144              		.loc 1 1542 33 is_stmt 0 view .LVU726
 2145 0044 8260     		str	r2, [r0, #8]
1546:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2146              		.loc 1 1546 3 is_stmt 1 view .LVU727
1546:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2147              		.loc 1 1546 6 is_stmt 0 view .LVU728
 2148 0046 D3F89420 		ldr	r2, [r3, #148]
 2149 004a 02F00102 		and	r2, r2, #1
 2150 004e 4261     		str	r2, [r0, #20]
1569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2151              		.loc 1 1569 3 is_stmt 1 view .LVU729
1569:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2152              		.loc 1 1569 6 is_stmt 0 view .LVU730
 2153 0050 D3F89820 		ldr	r2, [r3, #152]
 2154 0054 02F00102 		and	r2, r2, #1
 2155 0058 4262     		str	r2, [r0, #36]
1582:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2156              		.loc 1 1582 3 is_stmt 1 view .LVU731
1582:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2157              		.loc 1 1582 6 is_stmt 0 view .LVU732
 2158 005a 1A68     		ldr	r2, [r3]
1588:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2159              		.loc 1 1588 37 view .LVU733
 2160 005c 12F0807F 		tst	r2, #16777216
 2161 0060 14BF     		ite	ne
 2162 0062 0222     		movne	r2, #2
 2163 0064 0122     		moveq	r2, #1
 2164 0066 8262     		str	r2, [r0, #40]
1590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
 2165              		.loc 1 1590 3 is_stmt 1 view .LVU734
1590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
 2166              		.loc 1 1590 38 is_stmt 0 view .LVU735
 2167 0068 DA68     		ldr	r2, [r3, #12]
 2168 006a 02F00302 		and	r2, r2, #3
1590:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
 2169              		.loc 1 1590 36 view .LVU736
 2170 006e C262     		str	r2, [r0, #44]
1591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2171              		.loc 1 1591 3 is_stmt 1 view .LVU737
1591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2172              		.loc 1 1591 34 is_stmt 0 view .LVU738
 2173 0070 DA68     		ldr	r2, [r3, #12]
1591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2174              		.loc 1 1591 75 view .LVU739
 2175 0072 C2F30212 		ubfx	r2, r2, #4, #3
1591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2176              		.loc 1 1591 100 view .LVU740
 2177 0076 0132     		adds	r2, r2, #1
1591:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2178              		.loc 1 1591 31 view .LVU741
 2179 0078 0263     		str	r2, [r0, #48]
1592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2180              		.loc 1 1592 3 is_stmt 1 view .LVU742
1592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2181              		.loc 1 1592 33 is_stmt 0 view .LVU743
 2182 007a DA68     		ldr	r2, [r3, #12]
1592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2183              		.loc 1 1592 74 view .LVU744
 2184 007c C2F30622 		ubfx	r2, r2, #8, #7
1592:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2185              		.loc 1 1592 31 view .LVU745
 2186 0080 4263     		str	r2, [r0, #52]
1593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2187              		.loc 1 1593 3 is_stmt 1 view .LVU746
1593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2188              		.loc 1 1593 36 is_stmt 0 view .LVU747
 2189 0082 DA68     		ldr	r2, [r3, #12]
1593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2190              		.loc 1 1593 77 view .LVU748
 2191 0084 C2F34152 		ubfx	r2, r2, #21, #2
1593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2192              		.loc 1 1593 102 view .LVU749
 2193 0088 0132     		adds	r2, r2, #1
1593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2194              		.loc 1 1593 108 view .LVU750
 2195 008a 5200     		lsls	r2, r2, #1
1593:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2196              		.loc 1 1593 31 view .LVU751
 2197 008c C263     		str	r2, [r0, #60]
1594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 2198              		.loc 1 1594 3 is_stmt 1 view .LVU752
1594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 2199              		.loc 1 1594 36 is_stmt 0 view .LVU753
 2200 008e DA68     		ldr	r2, [r3, #12]
1594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 2201              		.loc 1 1594 77 view .LVU754
 2202 0090 C2F34162 		ubfx	r2, r2, #25, #2
1594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 2203              		.loc 1 1594 102 view .LVU755
 2204 0094 0132     		adds	r2, r2, #1
1594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 2205              		.loc 1 1594 108 view .LVU756
 2206 0096 5200     		lsls	r2, r2, #1
1594:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 2207              		.loc 1 1594 31 view .LVU757
 2208 0098 0264     		str	r2, [r0, #64]
1597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 2209              		.loc 1 1597 3 is_stmt 1 view .LVU758
1597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 2210              		.loc 1 1597 33 is_stmt 0 view .LVU759
 2211 009a DB68     		ldr	r3, [r3, #12]
1597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 2212              		.loc 1 1597 77 view .LVU760
 2213 009c DB0E     		lsrs	r3, r3, #27
1597:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** #else
 2214              		.loc 1 1597 31 view .LVU761
 2215 009e 8363     		str	r3, [r0, #56]
1609:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2216              		.loc 1 1609 1 view .LVU762
 2217 00a0 7047     		bx	lr
 2218              	.L234:
1479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2219              		.loc 1 1479 8 is_stmt 1 view .LVU763
1479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2220              		.loc 1 1479 11 is_stmt 0 view .LVU764
 2221 00a2 1A68     		ldr	r2, [r3]
1479:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2222              		.loc 1 1479 10 view .LVU765
 2223 00a4 12F48032 		ands	r2, r2, #65536
1481:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2224              		.loc 1 1481 5 is_stmt 1 view .LVU766
1481:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2225              		.loc 1 1481 33 is_stmt 0 view .LVU767
 2226 00a8 18BF     		it	ne
 2227 00aa 4FF48032 		movne	r2, #65536
 2228 00ae AFE7     		b	.L236
 2229              	.L238:
1527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2230              		.loc 1 1527 8 is_stmt 1 view .LVU768
1527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2231              		.loc 1 1527 11 is_stmt 0 view .LVU769
 2232 00b0 D3F89020 		ldr	r2, [r3, #144]
1527:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2233              		.loc 1 1527 10 view .LVU770
 2234 00b4 12F00102 		ands	r2, r2, #1
1537:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 2235              		.loc 1 1537 7 is_stmt 1 view .LVU771
1537:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****     }
 2236              		.loc 1 1537 35 is_stmt 0 view .LVU772
 2237 00b8 18BF     		it	ne
 2238 00ba 0122     		movne	r2, #1
 2239 00bc C2E7     		b	.L240
 2240              	.L245:
 2241 00be 00BF     		.align	2
 2242              	.L244:
 2243 00c0 00100240 		.word	1073876992
 2244              		.cfi_endproc
 2245              	.LFE317:
 2247              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2248              		.align	1
 2249              		.global	HAL_RCC_GetClockConfig
 2250              		.syntax unified
 2251              		.thumb
 2252              		.thumb_func
 2253              		.fpu softvfp
 2255              	HAL_RCC_GetClockConfig:
 2256              	.LVL165:
 2257              	.LFB318:
1620:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 2258              		.loc 1 1620 1 is_stmt 1 view -0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 0
 2261              		@ frame_needed = 0, uses_anonymous_args = 0
 2262              		@ link register save eliminated.
1622:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   assert_param(pFLatency != (void *)NULL);
 2263              		.loc 1 1622 3 view .LVU774
1623:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2264              		.loc 1 1623 3 view .LVU775
1626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2265              		.loc 1 1626 3 view .LVU776
1626:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2266              		.loc 1 1626 32 is_stmt 0 view .LVU777
 2267 0000 0F23     		movs	r3, #15
 2268 0002 0360     		str	r3, [r0]
1629:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2269              		.loc 1 1629 3 is_stmt 1 view .LVU778
1629:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2270              		.loc 1 1629 37 is_stmt 0 view .LVU779
 2271 0004 0B4B     		ldr	r3, .L247
 2272 0006 9A68     		ldr	r2, [r3, #8]
 2273 0008 02F00302 		and	r2, r2, #3
1629:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2274              		.loc 1 1629 35 view .LVU780
 2275 000c 4260     		str	r2, [r0, #4]
1632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2276              		.loc 1 1632 3 is_stmt 1 view .LVU781
1632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2277              		.loc 1 1632 38 is_stmt 0 view .LVU782
 2278 000e 9A68     		ldr	r2, [r3, #8]
 2279 0010 02F0F002 		and	r2, r2, #240
1632:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2280              		.loc 1 1632 36 view .LVU783
 2281 0014 8260     		str	r2, [r0, #8]
1635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2282              		.loc 1 1635 3 is_stmt 1 view .LVU784
1635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2283              		.loc 1 1635 39 is_stmt 0 view .LVU785
 2284 0016 9A68     		ldr	r2, [r3, #8]
 2285 0018 02F4E062 		and	r2, r2, #1792
1635:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2286              		.loc 1 1635 37 view .LVU786
 2287 001c C260     		str	r2, [r0, #12]
1638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2288              		.loc 1 1638 3 is_stmt 1 view .LVU787
1638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2289              		.loc 1 1638 40 is_stmt 0 view .LVU788
 2290 001e 9B68     		ldr	r3, [r3, #8]
1638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2291              		.loc 1 1638 76 view .LVU789
 2292 0020 DB08     		lsrs	r3, r3, #3
 2293 0022 03F4E063 		and	r3, r3, #1792
1638:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2294              		.loc 1 1638 37 view .LVU790
 2295 0026 0361     		str	r3, [r0, #16]
1641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2296              		.loc 1 1641 3 is_stmt 1 view .LVU791
1641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2297              		.loc 1 1641 16 is_stmt 0 view .LVU792
 2298 0028 034B     		ldr	r3, .L247+4
 2299 002a 1B68     		ldr	r3, [r3]
 2300 002c 03F00703 		and	r3, r3, #7
1641:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2301              		.loc 1 1641 14 view .LVU793
 2302 0030 0B60     		str	r3, [r1]
1642:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2303              		.loc 1 1642 1 view .LVU794
 2304 0032 7047     		bx	lr
 2305              	.L248:
 2306              		.align	2
 2307              	.L247:
 2308 0034 00100240 		.word	1073876992
 2309 0038 00200240 		.word	1073881088
 2310              		.cfi_endproc
 2311              	.LFE318:
 2313              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2314              		.align	1
 2315              		.global	HAL_RCC_EnableCSS
 2316              		.syntax unified
 2317              		.thumb
 2318              		.thumb_func
 2319              		.fpu softvfp
 2321              	HAL_RCC_EnableCSS:
 2322              	.LFB319:
1655:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 2323              		.loc 1 1655 1 is_stmt 1 view -0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 0
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327              		@ link register save eliminated.
1656:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** }
 2328              		.loc 1 1656 3 view .LVU796
 2329 0000 024A     		ldr	r2, .L250
 2330 0002 1368     		ldr	r3, [r2]
 2331 0004 43F40023 		orr	r3, r3, #524288
 2332 0008 1360     		str	r3, [r2]
1657:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2333              		.loc 1 1657 1 is_stmt 0 view .LVU797
 2334 000a 7047     		bx	lr
 2335              	.L251:
 2336              		.align	2
 2337              	.L250:
 2338 000c 00100240 		.word	1073876992
 2339              		.cfi_endproc
 2340              	.LFE319:
 2342              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2343              		.align	1
 2344              		.weak	HAL_RCC_CSSCallback
 2345              		.syntax unified
 2346              		.thumb
 2347              		.thumb_func
 2348              		.fpu softvfp
 2350              	HAL_RCC_CSSCallback:
 2351              	.LFB321:
1682:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 2352              		.loc 1 1682 1 is_stmt 1 view -0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 0
 2355              		@ frame_needed = 0, uses_anonymous_args = 0
 2356              		@ link register save eliminated.
1686:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2357              		.loc 1 1686 1 view .LVU799
 2358 0000 7047     		bx	lr
 2359              		.cfi_endproc
 2360              	.LFE321:
 2362              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2363              		.align	1
 2364              		.global	HAL_RCC_NMI_IRQHandler
 2365              		.syntax unified
 2366              		.thumb
 2367              		.thumb_func
 2368              		.fpu softvfp
 2370              	HAL_RCC_NMI_IRQHandler:
 2371              	.LFB320:
1665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
 2372              		.loc 1 1665 1 view -0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
1667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2376              		.loc 1 1667 3 view .LVU801
1665:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
 2377              		.loc 1 1665 1 is_stmt 0 view .LVU802
 2378 0000 10B5     		push	{r4, lr}
 2379              	.LCFI13:
 2380              		.cfi_def_cfa_offset 8
 2381              		.cfi_offset 4, -8
 2382              		.cfi_offset 14, -4
1667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2383              		.loc 1 1667 6 view .LVU803
 2384 0002 054C     		ldr	r4, .L258
 2385 0004 E369     		ldr	r3, [r4, #28]
1667:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   {
 2386              		.loc 1 1667 5 view .LVU804
 2387 0006 DB05     		lsls	r3, r3, #23
 2388 0008 04D5     		bpl	.L253
1670:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2389              		.loc 1 1670 5 is_stmt 1 view .LVU805
 2390 000a FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2391              	.LVL166:
1673:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c ****   }
 2392              		.loc 1 1673 5 view .LVU806
 2393 000e 4FF48073 		mov	r3, #256
 2394 0012 2362     		str	r3, [r4, #32]
 2395              	.L253:
1675:.././hal/stm32l4/Src/stm32l4xx_hal_rcc.c **** 
 2396              		.loc 1 1675 1 is_stmt 0 view .LVU807
 2397 0014 10BD     		pop	{r4, pc}
 2398              	.L259:
 2399 0016 00BF     		.align	2
 2400              	.L258:
 2401 0018 00100240 		.word	1073876992
 2402              		.cfi_endproc
 2403              	.LFE320:
 2405              		.text
 2406              	.Letext0:
 2407              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2408              		.file 3 ".././hal/stm32l4/CMSIS/Include/core_cm4.h"
 2409              		.file 4 ".././hal/stm32l4/system_stm32l4xx.h"
 2410              		.file 5 ".././hal/stm32l4/stm32l443xx.h"
 2411              		.file 6 ".././hal/stm32l4/stm32l4xx.h"
 2412              		.file 7 ".././hal/stm32l4/Inc/stm32l4xx_hal_def.h"
 2413              		.file 8 ".././hal/stm32l4/Inc/stm32l4xx_hal_rcc.h"
 2414              		.file 9 ".././hal/stm32l4/Inc/stm32l4xx_hal_gpio.h"
 2415              		.file 10 ".././hal/stm32l4/Inc/stm32l4xx_hal.h"
 2416              		.file 11 ".././hal/stm32l4/Inc/stm32l4xx_hal_pwr_ex.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rcc.c
     /tmp/ccVxm2qu.s:16     .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 $t
     /tmp/ccVxm2qu.s:23     .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 RCC_SetFlashLatencyFromMSIRange
     /tmp/ccVxm2qu.s:164    .text.RCC_SetFlashLatencyFromMSIRange:000000000000007c $d
     /tmp/ccVxm2qu.s:170    .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccVxm2qu.s:177    .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccVxm2qu.s:356    .text.HAL_RCC_DeInit:00000000000000c0 $d
     /tmp/ccVxm2qu.s:364    .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccVxm2qu.s:371    .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccVxm2qu.s:465    .text.HAL_RCC_MCOConfig:000000000000004c $d
     /tmp/ccVxm2qu.s:470    .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccVxm2qu.s:477    .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccVxm2qu.s:653    .text.HAL_RCC_GetSysClockFreq:000000000000009c $d
     /tmp/ccVxm2qu.s:660    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccVxm2qu.s:667    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccVxm2qu.s:1271   .text.HAL_RCC_OscConfig:00000000000002b0 $d
     /tmp/ccVxm2qu.s:1281   .text.HAL_RCC_OscConfig:00000000000002bc $t
     /tmp/ccVxm2qu.s:1661   .text.HAL_RCC_OscConfig:00000000000004a0 $d
     /tmp/ccVxm2qu.s:1666   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccVxm2qu.s:1673   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccVxm2qu.s:1933   .text.HAL_RCC_ClockConfig:0000000000000114 $d
     /tmp/ccVxm2qu.s:1941   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccVxm2qu.s:1948   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccVxm2qu.s:1963   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/ccVxm2qu.s:1968   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccVxm2qu.s:1975   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccVxm2qu.s:2011   .text.HAL_RCC_GetPCLK1Freq:0000000000000018 $d
     /tmp/ccVxm2qu.s:2018   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccVxm2qu.s:2025   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccVxm2qu.s:2061   .text.HAL_RCC_GetPCLK2Freq:0000000000000018 $d
     /tmp/ccVxm2qu.s:2068   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccVxm2qu.s:2075   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccVxm2qu.s:2243   .text.HAL_RCC_GetOscConfig:00000000000000c0 $d
     /tmp/ccVxm2qu.s:2248   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccVxm2qu.s:2255   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccVxm2qu.s:2308   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
     /tmp/ccVxm2qu.s:2314   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccVxm2qu.s:2321   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccVxm2qu.s:2338   .text.HAL_RCC_EnableCSS:000000000000000c $d
     /tmp/ccVxm2qu.s:2343   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccVxm2qu.s:2350   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccVxm2qu.s:2363   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccVxm2qu.s:2370   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccVxm2qu.s:2401   .text.HAL_RCC_NMI_IRQHandler:0000000000000018 $d

UNDEFINED SYMBOLS
HAL_PWREx_GetVoltageRange
HAL_GetTick
HAL_InitTick
SystemCoreClock
HAL_GPIO_Init
MSIRangeTable
AHBPrescTable
APBPrescTable
