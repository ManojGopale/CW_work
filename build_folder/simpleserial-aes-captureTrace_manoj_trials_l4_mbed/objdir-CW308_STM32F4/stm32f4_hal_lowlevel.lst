   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4_hal_lowlevel.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.CRYP_SetKey,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	CRYP_SetKey:
  24              	.LVL0:
  25              	.LFB139:
  26              		.file 1 ".././hal/stm32f4/stm32f4_hal_lowlevel.c"
   1:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /* This file combines several STM32F4 HAL Functions into one file. This was done
   2:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    for space reasons, to avoid having several MB of HAL functions that most people
   3:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    will not use. In addition this HAL is slightly less demanding (no interrupts),
   4:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    but less robust as doesn't implement the timeouts.
   5:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    
   6:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    The original HAL files are COPYRIGHT STMicroelectronics, as shown below:
   7:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** */
   8:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
   9:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /*
  10:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
  11:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
  12:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * Redistribution and use in source and binary forms, with or without modification,
  13:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * are permitted provided that the following conditions are met:
  14:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  15:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer.
  16:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  17:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer in the documentation
  18:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      and/or other materials provided with the distribution.
  19:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  20:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      may be used to endorse or promote products derived from this software
  21:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *      without specific prior written permission.
  22:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
  23:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  27:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  29:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  30:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  31:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  32:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
  34:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ******************************************************************************
  35:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** */ 
  36:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  37:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  38:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4_hal.h"
  39:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4_hal_lowlevel.h"
  40:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_rcc.h"
  41:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_gpio.h"
  42:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_dma.h"
  43:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_uart.h"
  44:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_flash.h"
  45:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #include "stm32f4xx_hal_cryp.h"
  46:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  47:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define assert_param(expr) ((void)0U)
  48:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  49:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U /* 5 s */
  50:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  51:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  52:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** uint32_t HAL_GetTick(void)
  53:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
  54:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 	static uint32_t tick;
  55:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 	return tick++;;
  56:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
  57:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  58:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
  59:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Enables or disables the AHB2 peripheral clock.
  60:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
  61:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         is disabled and the application software has to enable this clock before 
  62:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         using it. 
  63:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
  64:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *          This parameter can be any combination of the following values:
  65:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
  66:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
  67:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
  68:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
  69:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
  70:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  NewState: new state of the specified peripheral clock.
  71:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *          This parameter can be: ENABLE or DISABLE.
  72:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
  73:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
  74:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** void RCC_AHB2PeriphClockCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
  75:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
  76:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
  77:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
  78:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  79:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  80:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if (NewState != DISABLE)
  81:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
  82:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     RCC->AHB2ENR |= RCC_AHB2Periph;
  83:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
  84:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
  85:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
  86:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     RCC->AHB2ENR &= ~RCC_AHB2Periph;
  87:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
  88:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
  89:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
  90:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
  91:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
  92:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         RCC_OscInitTypeDef.
  93:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
  94:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         contains the configuration information for the RCC Oscillators.
  95:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   The PLL is not disabled when used as system clock.
  96:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
  97:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         supported by this API. User should request a transition to LSE Off
  98:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         first and then LSE On or LSE Bypass.
  99:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 100:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         supported by this API. User should request a transition to HSE Off
 101:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         first and then HSE On or HSE Bypass.
 102:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
 103:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 104:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 105:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 106:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 107:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 108:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 109:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 110:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/
 111:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 112:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 113:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the parameters */
 114:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 115:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 116:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 117:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 118:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 119:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 120:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 121:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 122:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 123:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 124:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 125:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 126:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Set the new HSE configuration ---------------------------------------*/
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 128:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 129:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the HSE State */
 130:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 131:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 132:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 133:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 134:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 135:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till HSE is ready */
 136:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 137:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 138:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 139:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 140:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 141:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 142:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 143:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 144:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 145:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 146:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 147:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 148:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 149:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till HSE is bypassed or disabled */
 150:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 151:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 152:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 153:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 154:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 155:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 156:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 157:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 158:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 159:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 160:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*----------------------------- HSI Configuration --------------------------*/
 161:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 162:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 163:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the parameters */
 164:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 165:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 166:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 167:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 168:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 169:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 170:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 171:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* When HSI is used as system clock it will not disabled */
 172:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 173:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 174:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 175:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 176:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Otherwise, just the calibration is allowed */
 177:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 178:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 179:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 180:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 181:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 182:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 183:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 184:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 185:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the HSI State */
 186:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 187:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 188:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 189:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_HSI_ENABLE();
 190:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 191:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 192:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 193:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 194:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till HSI is ready */
 195:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 196:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 197:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 198:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 199:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 200:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 201:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 202:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 203:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 204:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 205:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 206:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 207:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 208:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 209:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_HSI_DISABLE();
 210:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 211:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 212:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 213:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 214:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till HSI is ready */
 215:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 216:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 217:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 218:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 219:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 220:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 221:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 222:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 223:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 224:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 225:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------------ LSI Configuration -------------------------*/
 226:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 227:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 228:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the parameters */
 229:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 230:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 231:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSI State */
 232:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 233:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 234:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 235:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       __HAL_RCC_LSI_ENABLE();
 236:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 237:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Get Start Tick*/
 238:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 239:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 240:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Wait till LSI is ready */
 241:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 242:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 243:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 244:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 245:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 246:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 247:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 248:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 249:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 250:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 251:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 252:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       __HAL_RCC_LSI_DISABLE();
 253:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 254:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Get Start Tick*/
 255:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 256:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 257:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Wait till LSI is ready */
 258:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 259:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 260:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 261:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 262:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 263:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 264:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 265:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 266:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 267:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------------ LSE Configuration -------------------------*/
 268:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 269:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 270:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the parameters */
 271:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 272:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 273:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable Power Clock*/
 274:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 275:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 276:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable write access to Backup domain */
 277:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     PWR->CR |= PWR_CR_DBP;
 278:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 279:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Wait for Backup domain Write protection enable */
 280:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 281:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 282:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
 283:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 284:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 285:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 286:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_TIMEOUT;
 287:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 288:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 289:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 290:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the new LSE configuration -----------------------------------------*/
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 292:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 293:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 295:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Get Start Tick*/
 296:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 297:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 298:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Wait till LSE is ready */
 299:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 300:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 301:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 302:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 303:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 304:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 305:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 306:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 307:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 308:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 309:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Get Start Tick*/
 310:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 311:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 312:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Wait till LSE is ready */
 313:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 314:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 315:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 316:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 317:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 318:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 319:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 320:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 321:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 322:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 323:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 324:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 325:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 326:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 327:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check if the PLL is used as system clock or not */
 328:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 329:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 330:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 331:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 332:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Check the parameters */
 333:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 334:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 335:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 336:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 337:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 338:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 339:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Disable the main PLL. */
 340:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 341:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 342:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 343:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 344:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 345:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till PLL is ready */
 346:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 347:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 348:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 349:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 350:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 351:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 352:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 353:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 354:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 355:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 356:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 357:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  (RCC_OscInitStruct->PLL.PLLN << POSITION_VAL(RCC_PLLCFGR_PLLN))   
 358:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << POSITION_VAL(RCC_PL
 359:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << POSITION_VAL(RCC_PLLCFGR_PLLQ))));
 360:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Enable the main PLL. */
 361:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_PLL_ENABLE();
 362:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 363:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 364:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 365:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 366:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till PLL is ready */
 367:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 368:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 369:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 370:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 371:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 372:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 373:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 374:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 375:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 376:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 377:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Disable the main PLL. */
 378:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 379:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 380:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Get Start Tick*/
 381:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 382:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 383:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Wait till PLL is ready */
 384:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 385:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 386:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 387:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 388:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             return HAL_TIMEOUT;
 389:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 390:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 391:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 392:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 393:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 394:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 395:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_ERROR;
 396:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 397:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 398:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 399:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 400:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 401:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 402:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 403:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         parameters in the RCC_ClkInitStruct.
 404:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_OscInitTypeDef structure that
 405:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         contains the configuration information for the RCC peripheral.
 406:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  FLatency: FLASH Latency, this parameter depend on device selected
 407:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 408:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 409:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 410:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 411:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 412:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 413:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         of failure of the HSE used directly or indirectly as system clock
 414:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         (if the Clock Security System CSS is enabled).
 415:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 416:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   A switch from one clock source to another occurs only if the target
 417:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 418:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         If a clock source which is not yet ready is selected, the switch will
 419:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         occur when the clock source will be ready.
 420:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 421:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 422:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 423:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 424:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
 425:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 426:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 427:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 428:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 429:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 430:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 431:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 432:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 433:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 434:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 435:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     must be correctly programmed according to the frequency of the CPU clock
 436:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     (HCLK) and the supply voltage of the device. */
 437:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 438:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 439:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 440:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 441:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 442:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 443:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 444:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 445:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 446:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 447:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 448:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_ERROR;
 449:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 450:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 451:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 452:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 453:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 454:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 455:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 456:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 457:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 458:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 459:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 460:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 461:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 462:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 463:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 464:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* HSE is selected as System Clock Source */
 465:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 466:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 467:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the HSE ready flag */
 468:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 469:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 470:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 471:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 472:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 473:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* PLL is selected as System Clock Source */
 474:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 475:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 476:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 477:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the PLL ready flag */
 478:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 479:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 480:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 481:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 482:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 483:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* HSI is selected as System Clock Source */
 484:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 485:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 486:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check the HSI ready flag */
 487:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 488:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 489:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         return HAL_ERROR;
 490:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 491:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 492:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 493:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 494:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get Start Tick*/
 495:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 496:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 497:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 498:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 499:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 500:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 501:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 502:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 503:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 504:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 505:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 506:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 507:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 508:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 509:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 510:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 511:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 512:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 513:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 514:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 515:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 516:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 517:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK)
 518:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 519:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLRCLK)
 520:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 521:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 522:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 523:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 524:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 525:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 526:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 527:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 528:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 529:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 530:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 531:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 532:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 533:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 534:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 535:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 536:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 537:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 538:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 539:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 540:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 541:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 542:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 543:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 544:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 545:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 546:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 547:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 548:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 549:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_ERROR;
 550:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 551:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****  }
 552:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 553:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 554:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 555:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 556:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 557:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 558:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 559:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 560:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 561:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 562:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 563:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 564:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 565:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 566:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 567:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Update the SystemCoreClock global variable */
 568:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POSI
 569:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 570:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the source of time base considering new system clocks settings*/
 571:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //HAL_InitTick (TICK_INT_PRIORITY);
 572:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 573:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 574:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 575:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 576:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 577:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Returns the PCLK1 frequency
 578:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 579:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 580:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval PCLK1 frequency
 581:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 582:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 583:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 584:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 585:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> POSITION_VAL(RCC_
 586:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return 7.37E6;
 587:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 588:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 589:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 590:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Returns the PCLK2 frequency
 591:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 592:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 593:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval PCLK2 frequency
 594:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 595:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 596:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 597:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 598:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_C
 599:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return 7.37E6;
 600:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 601:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 602:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 603:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 604:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_MODE             0x00000003U
 605:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define EXTI_MODE             0x10000000U
 606:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_MODE_IT          0x00010000U
 607:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_MODE_EVT         0x00020000U
 608:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define RISING_EDGE           0x00100000U
 609:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define FALLING_EDGE          0x00200000U
 610:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_OUTPUT_TYPE      0x00000010U
 611:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 612:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #define GPIO_NUMBER           16U
 613:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 614:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 615:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 616:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 617:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 618:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
 619:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for the specified GPIO peripheral.
 620:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
 621:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 622:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 623:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 624:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t position;
 625:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t ioposition = 0x00U;
 626:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 627:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 628:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 629:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 630:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 631:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 632:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 633:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 634:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 635:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the port pins */
 636:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   for(position = 0U; position < GPIO_NUMBER; position++)
 637:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 638:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get the IO position */
 639:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ioposition = 0x01U << position;
 640:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get the current IO position */
 641:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 642:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 643:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(iocurrent == ioposition)
 644:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 645:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 646:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* In case of Alternate function mode selection */
 647:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 648:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 649:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Check the Alternate function parameter */
 650:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 651:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */
 652:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = GPIOx->AFR[position >> 3U];
 653:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 654:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 655:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 656:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 657:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 658:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 659:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp = GPIOx->MODER;
 660:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 661:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 662:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->MODER = temp;
 663:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 664:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* In case of Output or Alternate function mode selection */
 665:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 666:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 667:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 668:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Check the Speed parameter */
 669:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 670:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure the IO Speed */
 671:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = GPIOx->OSPEEDR;
 672:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 673:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 674:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 675:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 676:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure the IO Output Type */
 677:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = GPIOx->OTYPER;
 678:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 679:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 680:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 681:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 682:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 683:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 684:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp = GPIOx->PUPDR;
 685:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 686:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 687:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 688:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 689:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 690:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Configure the External Interrupt or event for the current IO */
 691:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 692:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 693:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Enable SYSCFG Clock */
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 695:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 696:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = SYSCFG->EXTICR[position >> 2U];
 697:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0x0FU << (4U * (position & 0x03U)));
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 699:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 700:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 701:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Clear EXTI line configuration */
 702:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = EXTI->IMR;
 703:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 704:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 705:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 706:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           temp |= iocurrent;
 707:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 708:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         EXTI->IMR = temp;
 709:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 710:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = EXTI->EMR;
 711:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 712:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 713:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 714:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           temp |= iocurrent;
 715:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 716:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         EXTI->EMR = temp;
 717:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 718:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Clear Rising Falling edge configuration */
 719:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = EXTI->RTSR;
 720:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 721:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 722:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 723:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           temp |= iocurrent;
 724:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 725:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         EXTI->RTSR = temp;
 726:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 727:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp = EXTI->FTSR;
 728:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 729:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 730:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 731:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           temp |= iocurrent;
 732:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 733:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         EXTI->FTSR = temp;
 734:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 735:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 736:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 737:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 738:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 739:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 740:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Sets or clears the selected data port bit.
 741:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 742:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @note   This function uses GPIOx_BSRR register to allow atomic read/modify
 743:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 744:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the read and the modify access.
 745:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *
 746:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F429X device or
 747:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427
 748:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 749:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
 750:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  PinState: specifies the value to be written to the selected bit.
 751:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *          This parameter can be one of the GPIO_PinState enum values:
 752:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
 753:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *            @arg GPIO_PIN_SET: to set the port pin
 754:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
 755:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 756:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
 757:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 758:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 759:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 760:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 761:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 762:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(PinState != GPIO_PIN_RESET)
 763:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 764:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     GPIOx->BSRR = GPIO_Pin;
 765:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 766:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
 767:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 768:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 769:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 770:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 771:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 772:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 773:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 774:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Configures the UART peripheral.
 775:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 776:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                the configuration information for the specified UART module.
 777:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
 778:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 779:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
 780:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 781:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tmpreg = 0x00U;
 782:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 783:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 784:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 785:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 786:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 787:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 788:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 789:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
 790:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg = huart->Instance->CR2;
 791:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 792:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Clear STOP[13:12] bits */
 793:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 794:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 795:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
 796:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 797:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 798:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Write to USART CR2 */
 799:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 800:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 801:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
 802:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg = huart->Instance->CR1;
 803:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 804:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Clear M, PCE, PS, TE and RE bits */
 805:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 806:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
 807:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 808:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the UART Word Length, Parity and mode:
 809:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****      Set the M bits according to huart->Init.WordLength value
 810:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****      Set PCE and PS bits according to huart->Init.Parity value
 811:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****      Set TE and RE bits according to huart->Init.Mode value
 812:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 814:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 815:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Write to USART CR1 */
 816:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 817:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 818:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
 819:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg = huart->Instance->CR3;
 820:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 821:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Clear CTSE and RTSE bits */
 822:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 823:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 824:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
 825:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   tmpreg |= huart->Init.HwFlowCtl;
 826:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 827:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Write to USART CR3 */
 828:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 829:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 830:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the Over Sampling */
 831:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 832:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 833:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
 834:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #if defined(USART6)
 835:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 836:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 837:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 838:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 839:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #else
 840:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(huart->Instance == USART1)
 841:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 842:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 843:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 844:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #endif /* USART6 */
 845:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 846:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 847:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 848:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 849:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 850:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
 851:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 852:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
 853:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #if defined(USART6)
 854:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 855:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 856:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 857:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 858:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #else
 859:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(huart->Instance == USART1)
 860:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 861:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 862:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 863:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** #endif /* USART6 */
 864:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     else
 865:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 866:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 867:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 868:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 869:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 870:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 871:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 872:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 873:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the UART_InitTypeDef and create the associated handle.
 874:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 875:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                the configuration information for the specified UART module.
 876:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
 877:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 878:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 879:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 880:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the UART handle allocation */
 881:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart == NULL)
 882:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 883:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_ERROR;
 884:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 885:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 886:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 887:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 888:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 889:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 890:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 891:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 892:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 893:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
 894:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 895:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 896:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 897:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 898:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 899:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 900:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 901:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 902:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
 903:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->Lock = HAL_UNLOCKED;
 904:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init the low level hardware */
 905:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //HAL_UART_MspInit(huart);
 906:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 907:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 908:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->gState = HAL_UART_STATE_BUSY;
 909:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 910:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Disable the peripheral */
 911:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UART_DISABLE(huart);
 912:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 913:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Set the UART Communication parameters */
 914:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   UART_SetConfig(huart);
 915:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 916:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 917:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 918:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 919:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 920:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 921:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 922:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Enable the peripheral */
 923:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UART_ENABLE(huart);
 924:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 925:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Initialize the UART state */
 926:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 927:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->gState= HAL_UART_STATE_READY;
 928:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->RxState= HAL_UART_STATE_READY;
 929:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 930:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 931:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 932:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 933:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** static HAL_StatusTypeDef UART_WaitOnFlagForever(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatu
 934:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 935:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Wait until flag is set */
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status);
 937:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 938:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 939:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 940:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
 941:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Sends an amount of data in blocking mode.
 942:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 943:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                the configuration information for the specified UART module.
 944:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  pData: Pointer to data buffer
 945:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Size: Amount of data to be sent
 946:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Timeout: Timeout duration
 947:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
 948:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
 949:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 950:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 951:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint16_t* tmp;
 952:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t tickstart = 0U;
 953:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 954:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check that a Tx process is not already ongoing */
 955:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_READY)
 956:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 957:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0))
 958:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 959:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       return  HAL_ERROR;
 960:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 961:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 962:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Process Locked */
 963:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_LOCK(huart);
 964:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 965:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 966:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 967:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 968:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init tickstart for timeout managment */
 969:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //tickstart = HAL_GetTick();
 970:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 971:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->TxXferSize = Size;
 972:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->TxXferCount = Size;
 973:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(huart->TxXferCount > 0U)
 974:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 975:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->TxXferCount--;
 976:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 977:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 978:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(UART_WaitOnFlagForever(huart, UART_FLAG_TXE, RESET) != HAL_OK)
 979:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 980:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 981:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 982:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
 983:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 984:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 985:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 986:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
 987:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 988:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         else
 989:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 990:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=1U;
 991:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 992:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 993:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
 994:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 995:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(UART_WaitOnFlagForever(huart, UART_FLAG_TXE, RESET) != HAL_OK)
 996:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 997:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
 998:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 999:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
1000:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1001:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1002:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1003:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(UART_WaitOnFlagForever(huart, UART_FLAG_TC, RESET) != HAL_OK)
1004:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1005:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_TIMEOUT;
1006:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1007:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1008:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* At end of Tx process, restore huart->gState to Ready */
1009:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->gState = HAL_UART_STATE_READY;
1010:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1011:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Process Unlocked */
1012:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
1013:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1014:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_OK;
1015:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1016:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
1017:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1018:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_BUSY;
1019:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1020:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
1021:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1022:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1023:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1024:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1025:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Receives an amount of data in blocking mode.
1026:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1027:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *                the configuration information for the specified UART module.
1028:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  pData: Pointer to data buffer
1029:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Size: Amount of data to be received
1030:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Timeout: Timeout duration
1031:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
1032:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1033:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1034:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
1035:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint16_t* tmp;
1036:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t tickstart = 0U;
1037:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1038:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check that a Rx process is not already ongoing */
1039:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1040:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1041:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0))
1042:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1043:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       return  HAL_ERROR;
1044:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1045:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1046:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Process Locked */
1047:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_LOCK(huart);
1048:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1049:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1050:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1051:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1052:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init tickstart for timeout managment */
1053:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //tickstart = HAL_GetTick();
1054:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1055:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxXferSize = Size;
1056:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxXferCount = Size;
1057:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1058:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the remain data to be received */
1059:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(huart->RxXferCount > 0U)
1060:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1061:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       huart->RxXferCount--;
1062:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
1063:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
1064:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(UART_WaitOnFlagForever(huart, UART_FLAG_RXNE, RESET) != HAL_OK)
1065:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1066:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
1067:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1068:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
1069:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
1070:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1071:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
1072:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
1073:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1074:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         else
1075:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1076:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
1077:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=1U;
1078:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1079:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1080:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1081:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       else
1082:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
1083:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(UART_WaitOnFlagForever(huart, UART_FLAG_RXNE, RESET) != HAL_OK)
1084:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1085:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
1086:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1087:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
1088:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1089:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1090:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1091:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         else
1092:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1093:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1094:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1095:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1096:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1097:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1098:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1099:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1100:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_READY;
1101:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1102:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Process Unlocked */
1103:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
1104:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1105:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_OK;
1106:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1107:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   else
1108:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1109:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_BUSY;
1110:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1111:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
1112:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1113:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///// ----- From stm32f4xx_cryp.c ------------------------------------------------
1114:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //#define FLAG_MASK     ((uint8_t)0x20)
1115:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1116:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1117:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Fills each CRYP_KeyInitStruct member with its default value.
1118:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
1119:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         which will be initialized.
1120:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1121:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1122:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
1123:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1124:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
1125:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key0Right = 0;
1126:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
1127:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key1Right = 0;
1128:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
1129:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key2Right = 0;
1130:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
1131:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitStruct->CRYP_Key3Right = 0;
1132:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1133:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1134:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1135:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
1136:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         FIFOs are reset)
1137:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @note   The FIFOs must be flushed only when BUSY flag is reset.  
1138:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  None
1139:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1140:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1141:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_FIFOFlush(void)
1142:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1143:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Reset the read and write pointers of the FIFOs */
1144:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR |= CRYP_CR_FFLUSH;
1145:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1146:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1147:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1148:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Initializes the CRYP peripheral according to the specified parameters
1149:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         in the CRYP_InitStruct.
1150:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
1151:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         the configuration information for the CRYP peripheral.
1152:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1153:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1154:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
1155:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1156:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Check the parameters */
1157:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
1158:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
1159:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
1160:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1161:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Select Algorithm mode*/  
1162:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR &= ~CRYP_CR_ALGOMODE;
1163:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
1164:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1165:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Select dataType */ 
1166:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR &= ~CRYP_CR_DATATYPE;
1167:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
1168:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1169:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* select Key size (used only with AES algorithm) */
1170:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if ((CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_ECB) &&
1171:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //(CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_CBC) &&
1172:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //(CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_ECB) &&
1173:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //(CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_CBC))
1174:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1175:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
1176:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP->CR &= ~CRYP_CR_KEYSIZE;
1177:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
1178:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                                   //configured once the key has 
1179:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                                   //been prepared */
1180:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1181:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1182:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Select data Direction */ 
1183:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR &= ~CRYP_CR_ALGODIR;
1184:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
1185:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1186:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1187:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1188:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Initializes the CRYP Keys according to the specified parameters in
1189:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         the CRYP_KeyInitStruct.
1190:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
1191:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         contains the configuration information for the CRYP Keys.
1192:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1193:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1194:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
1195:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1196:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Key Initialisation */
1197:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
1198:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
1199:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
1200:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
1201:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
1202:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
1203:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
1204:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
1205:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1206:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1207:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1208:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Enables or disables the CRYP peripheral.
1209:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  NewState: new state of the CRYP peripheral.
1210:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          This parameter can be: ENABLE or DISABLE.
1211:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1212:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1213:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_Cmd(FunctionalState NewState)
1214:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1215:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Check the parameters */
1216:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1217:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1218:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if (NewState != DISABLE)
1219:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1220:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Enable the Cryptographic processor */
1221:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP->CR |= CRYP_CR_CRYPEN;
1222:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1223:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else
1224:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1225:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Disable the Cryptographic processor */
1226:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP->CR &= ~CRYP_CR_CRYPEN;
1227:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1228:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1229:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1230:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1231:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Returns whether CRYP peripheral is enabled or disabled.
1232:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  none.
1233:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval Current state of the CRYP peripheral (ENABLE or DISABLE).
1234:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1235:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //FunctionalState CRYP_GetCmdStatus(void)
1236:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1237:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //FunctionalState state = DISABLE;
1238:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1239:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if ((CRYP->CR & CRYP_CR_CRYPEN) != 0)
1240:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1241:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* CRYPEN bit is set */
1242:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //state = ENABLE;
1243:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1244:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else
1245:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1246:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* CRYPEN bit is reset */
1247:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //state = DISABLE;
1248:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1249:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return state;
1250:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1251:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1252:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1253:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Writes data in the Data Input register (DIN).
1254:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @note   After the DIN register has been read once or several times, 
1255:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
1256:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Data: data to write in Data Input register
1257:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval None
1258:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1259:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //void CRYP_DataIn(uint32_t Data)
1260:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1261:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP->DR = Data;
1262:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1263:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1264:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1265:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Returns the last data entered into the output FIFO.
1266:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  None
1267:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval Last data entered into the output FIFO.
1268:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1269:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //uint32_t CRYP_DataOut(void)
1270:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1271:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return CRYP->DOUT;
1272:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1273:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1274:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1275:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Checks whether the specified CRYP flag is set or not.
1276:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  CRYP_FLAG: specifies the CRYP flag to check.
1277:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          This parameter can be one of the following values:
1278:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
1279:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
1280:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
1281:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
1282:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_BUSY: Busy flag.
1283:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
1284:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
1285:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval The new state of CRYP_FLAG (SET or RESET).
1286:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1287:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
1288:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1289:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //FlagStatus bitstatus = RESET;
1290:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t tempreg = 0;
1291:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1292:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Check the parameters */
1293:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
1294:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1295:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* check if the FLAG is in RISR register */
1296:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
1297:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1298:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //tempreg = CRYP->RISR;
1299:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1300:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else  /* The FLAG is in SR register */
1301:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1302:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //tempreg = CRYP->SR;
1303:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1304:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1305:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1306:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Check the status of the specified CRYP flag */
1307:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
1308:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1309:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* CRYP_FLAG is set */
1310:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //bitstatus = SET;
1311:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1312:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else
1313:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1314:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* CRYP_FLAG is reset */
1315:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //bitstatus = RESET;
1316:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1317:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1318:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Return the CRYP_FLAG status */
1319:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return  bitstatus;
1320:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1321:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1322:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///// ----- From stm32f4xx_cryp_aes.c --------------------------------------------
1323:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //#define AESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
1324:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1325:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** ///**
1326:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @brief  Encrypt and decrypt using AES in ECB Mode
1327:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Mode: encryption or decryption Mode.
1328:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          This parameter can be one of the following values:
1329:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg MODE_ENCRYPT: Encryption
1330:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*            @arg MODE_DECRYPT: Decryption
1331:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Key: Key used for AES algorithm.
1332:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Keysize: length of the Key, must be a 128, 192 or 256.
1333:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Input: pointer to the Input buffer.
1334:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Ilength: length of the Input buffer, must be a multiple of 16.
1335:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @param  Output: pointer to the returned buffer.
1336:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //* @retval An ErrorStatus enumeration value:
1337:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          - SUCCESS: Operation done
1338:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*          - ERROR: Operation failed
1339:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //*/
1340:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //ErrorStatus CRYP_AES_ECB(uint8_t Mode, uint8_t* Key, uint16_t Keysize,
1341:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                          //uint8_t* Input, uint32_t Ilength, uint8_t* Output)
1342:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //{
1343:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_InitTypeDef AES_CRYP_InitStructure;
1344:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
1345:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //__IO uint32_t counter = 0;
1346:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t busystatus = 0;
1347:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //ErrorStatus status = SUCCESS;
1348:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t keyaddr    = (uint32_t)Key;
1349:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t inputaddr  = (uint32_t)Input;
1350:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t outputaddr = (uint32_t)Output;
1351:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t i = 0;
1352:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1353:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Crypto structures initialisation*/
1354:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
1355:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1356:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //switch(Keysize)
1357:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1358:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //case 128:
1359:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
1360:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1361:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1362:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1363:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1364:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1365:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1366:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1367:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //break;
1368:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //case 192:
1369:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
1370:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1371:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1372:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1373:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1374:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1375:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1376:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1377:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1378:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1379:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1380:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1381:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //break;
1382:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //case 256:
1383:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
1384:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
1385:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1386:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
1387:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1388:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1389:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1390:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1391:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1392:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1393:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1394:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1395:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1396:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1397:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //keyaddr+=4;
1398:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1399:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //break;
1400:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //default:
1401:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //break;
1402:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1403:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1404:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///*------------------ AES Decryption ------------------*/
1405:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if(Mode == MODE_DECRYPT) /* AES decryption */
1406:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1407:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Flush IN/OUT FIFOs */
1408:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_FIFOFlush();
1409:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1410:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Crypto Init for Key preparation for decryption process */
1411:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
1412:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
1413:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
1414:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_Init(&AES_CRYP_InitStructure);
1415:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1416:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Key Initialisation */
1417:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
1418:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1419:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Enable Crypto processor */
1420:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_Cmd(ENABLE);
1421:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1422:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* wait until the Busy flag is RESET */
1423:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //do
1424:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //{
1425:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1426:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //counter++;
1427:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1428:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1429:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //if (busystatus != RESET)
1430:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    //{
1431:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****        //status = ERROR;
1432:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}
1433:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //else
1434:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //{
1435:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ///* Crypto Init for decryption process */  
1436:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
1437:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}
1438:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1439:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///*------------------ AES Encryption ------------------*/
1440:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //else /* AES encryption */
1441:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1442:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1443:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
1444:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1445:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Crypto Init for Encryption process */
1446:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
1447:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1448:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1449:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
1450:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
1451:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_Init(&AES_CRYP_InitStructure);
1452:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1453:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Flush IN/OUT FIFOs */
1454:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_FIFOFlush();
1455:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1456:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Enable Crypto processor */
1457:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_Cmd(ENABLE);
1458:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1459:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //if(CRYP_GetCmdStatus() == DISABLE)
1460:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1461:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* The CRYP peripheral clock is not enabled or the device doesn't embed 
1462:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****        //the CRYP peripheral (please check the device sales type. */
1463:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //return(ERROR);
1464:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1465:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1466:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
1467:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //{
1468:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1469:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Write the Input block in the IN FIFO */
1470:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_DataIn(*(uint32_t*)(inputaddr));
1471:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //inputaddr+=4;
1472:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_DataIn(*(uint32_t*)(inputaddr));
1473:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //inputaddr+=4;
1474:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_DataIn(*(uint32_t*)(inputaddr));
1475:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //inputaddr+=4;
1476:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //CRYP_DataIn(*(uint32_t*)(inputaddr));
1477:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //inputaddr+=4;
1478:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1479:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     ///* Wait until the complete message has been processed */
1480:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //counter = 0;
1481:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //do
1482:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //{
1483:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1484:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //counter++;
1485:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1486:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1487:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //if (busystatus != RESET)
1488:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    //{
1489:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****        //status = ERROR;
1490:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}
1491:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //else
1492:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //{
1493:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1494:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ///* Read the Output block from the Output FIFO */
1495:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //*(uint32_t*)(outputaddr) = CRYP_DataOut();
1496:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //outputaddr+=4;
1497:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //*(uint32_t*)(outputaddr) = CRYP_DataOut();
1498:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //outputaddr+=4;
1499:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //*(uint32_t*)(outputaddr) = CRYP_DataOut();
1500:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //outputaddr+=4;
1501:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //*(uint32_t*)(outputaddr) = CRYP_DataOut(); 
1502:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       //outputaddr+=4;
1503:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //}
1504:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //}
1505:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1506:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   ///* Disable Crypto */
1507:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //CRYP_Cmd(DISABLE);
1508:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1509:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //return status; 
1510:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** //}
1511:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1512:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1513:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Writes the Key in Key registers. 
1514:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
1515:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for CRYP module
1516:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Key Pointer to Key buffer
1517:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  KeySize Size of Key
1518:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
1519:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1520:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** static void CRYP_SetKey(CRYP_HandleTypeDef *hcryp, uint8_t *Key, uint32_t KeySize)
1521:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
  27              		.loc 1 1521 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1522:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t keyaddr = (uint32_t)Key;
  32              		.loc 1 1522 3 view .LVU1
1523:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1524:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   switch(KeySize)
  33              		.loc 1 1524 3 view .LVU2
  34 0000 B2F5807F 		cmp	r2, #256
  35 0004 29D0     		beq	.L2
  36 0006 B2F5007F 		cmp	r2, #512
  37 000a 0CD0     		beq	.L3
  38 000c 22BB     		cbnz	r2, .L1
1525:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1526:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   case CRYP_KEYSIZE_256B:
1527:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Key Initialisation */
1528:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K0LR = __REV(*(uint32_t*)(keyaddr));
1529:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1530:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K0RR = __REV(*(uint32_t*)(keyaddr));
1531:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1532:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1LR = __REV(*(uint32_t*)(keyaddr));
1533:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1534:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1RR = __REV(*(uint32_t*)(keyaddr));
1535:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1536:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
1537:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1538:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
1539:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1540:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
1541:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1542:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
1543:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
1544:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   case CRYP_KEYSIZE_192B:
1545:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1LR = __REV(*(uint32_t*)(keyaddr));
1546:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1547:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1RR = __REV(*(uint32_t*)(keyaddr));
1548:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1549:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
1550:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1551:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
1552:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1553:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
1554:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
1555:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
1556:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
1557:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   case CRYP_KEYSIZE_128B:       
1558:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
  39              		.loc 1 1558 5 view .LVU3
  40              	.LBB89:
  41              	.LBB90:
  42              		.file 2 ".././hal/stm32f4/CMSIS/core/cmsis_gcc.h"
   1:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**************************************************************************//**
   2:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * @version  V4.30
   5:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * @date     20. October 2015
   6:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  ******************************************************************************/
   7:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
   9:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    All rights reserved.
  10:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****      specific prior written permission.
  20:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    *
  21:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  34:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  35:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  38:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
  45:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  46:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  47:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   @{
  51:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  52:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  53:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
  54:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  58:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  60:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
  62:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  63:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  64:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
  65:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  69:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  71:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
  73:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  74:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  75:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
  76:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Control Register
  77:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Control Register value
  79:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  80:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  82:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
  83:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  84:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
  86:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
  87:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  88:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  89:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
  90:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Control Register
  91:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
  94:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  96:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
  98:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
  99:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 100:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 101:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               IPSR Register value
 104:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 105:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 107:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 108:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 109:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 111:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 112:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 113:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 114:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 115:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get APSR Register
 116:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               APSR Register value
 118:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 119:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 121:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 122:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 123:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 125:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 126:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 127:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 128:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 129:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 132:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     \return               xPSR Register value
 133:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 134:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 136:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 137:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 138:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 140:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 141:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 142:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 143:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 144:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               PSP Register value
 147:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 148:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 150:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   register uint32_t result;
 151:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 152:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 154:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 155:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 156:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 157:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 158:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 162:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 164:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 166:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 167:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 168:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 169:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               MSP Register value
 172:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 173:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 175:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   register uint32_t result;
 176:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 177:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 179:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 180:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 181:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 182:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 183:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 186:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 188:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 190:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 192:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 193:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 194:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 195:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Priority Mask value
 198:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 199:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 201:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 202:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 203:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 205:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 206:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 207:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 208:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 209:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 213:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 215:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 217:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 218:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 219:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 221:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 222:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Enable FIQ
 223:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 226:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 228:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 230:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 231:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 232:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 233:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Disable FIQ
 234:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 237:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 239:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 241:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 242:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 243:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 244:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Base Priority
 245:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Base Priority register value
 247:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 248:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 250:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 251:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 252:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 254:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 255:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 256:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 257:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 258:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority
 259:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 262:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 264:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 266:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 267:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 268:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 269:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 274:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 276:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 278:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 279:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 280:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 281:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Fault Mask register value
 284:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 285:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 287:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 288:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 289:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 291:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 292:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 293:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 294:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 295:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 299:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 301:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 303:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 304:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 306:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 307:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 309:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 310:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Get FPSCR
 311:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 314:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 316:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 318:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 319:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 321:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 323:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 324:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 325:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    return(0);
 326:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 327:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 328:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 329:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 330:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 331:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Set FPSCR
 332:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 335:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 337:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 340:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 342:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 343:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 344:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 345:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 347:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 348:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 349:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 351:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 352:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   Access to dedicated instructions
 355:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   @{
 356:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** */
 357:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 358:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 365:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 368:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 369:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 370:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   No Operation
 371:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 373:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 375:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 377:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 378:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 379:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 380:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 383:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 385:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 387:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 388:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 389:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 390:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Event
 391:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 394:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 396:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 398:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 399:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 400:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 401:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Send Event
 402:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 404:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 406:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 408:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 409:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 410:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 411:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            after the instruction has been completed.
 415:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 416:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 418:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 420:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 421:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 422:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 423:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 427:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 429:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 431:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 432:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 433:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 434:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 438:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 440:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 442:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 443:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 444:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 445:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 449:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 452:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return __builtin_bswap32(value);
  43              		.loc 2 453 10 is_stmt 0 view .LVU4
  44 000e 0A68     		ldr	r2, [r1]
  45              	.LVL1:
  46              		.loc 2 453 10 view .LVU5
  47              	.LBE90:
  48              	.LBE89:
  49              		.loc 1 1558 10 view .LVU6
  50 0010 0368     		ldr	r3, [r0]
  51              	.LVL2:
  52              	.LBB92:
  53              	.LBI89:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  54              		.loc 2 450 57 is_stmt 1 view .LVU7
  55              	.LBB91:
  56              		.loc 2 453 3 view .LVU8
  57              		.loc 2 453 10 is_stmt 0 view .LVU9
  58 0012 12BA     		rev	r2, r2
  59              	.LVL3:
  60              		.loc 2 453 10 view .LVU10
  61              	.LBE91:
  62              	.LBE92:
  63              		.loc 1 1558 27 view .LVU11
  64 0014 1A63     		str	r2, [r3, #48]
1559:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
  65              		.loc 1 1559 5 is_stmt 1 view .LVU12
  66              	.LVL4:
1560:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
  67              		.loc 1 1560 5 view .LVU13
  68              	.LBB93:
  69              	.LBI93:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  70              		.loc 2 450 57 view .LVU14
  71              	.LBB94:
  72              		.loc 2 453 3 view .LVU15
  73              		.loc 2 453 10 is_stmt 0 view .LVU16
  74 0016 4A68     		ldr	r2, [r1, #4]
  75 0018 12BA     		rev	r2, r2
  76              	.LVL5:
  77              		.loc 2 453 10 view .LVU17
  78              	.LBE94:
  79              	.LBE93:
  80              		.loc 1 1560 27 view .LVU18
  81 001a 5A63     		str	r2, [r3, #52]
1561:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
  82              		.loc 1 1561 5 is_stmt 1 view .LVU19
  83              	.LVL6:
1562:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
  84              		.loc 1 1562 5 view .LVU20
  85              	.LBB95:
  86              	.LBI95:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
  87              		.loc 2 450 57 view .LVU21
  88              	.LBB96:
  89              		.loc 2 453 3 view .LVU22
  90              		.loc 2 453 10 is_stmt 0 view .LVU23
  91 001c 8A68     		ldr	r2, [r1, #8]
  92 001e 12BA     		rev	r2, r2
  93              	.LVL7:
  94              		.loc 2 453 10 view .LVU24
  95              	.LBE96:
  96              	.LBE95:
  97              		.loc 1 1562 27 view .LVU25
  98 0020 9A63     		str	r2, [r3, #56]
1563:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
  99              		.loc 1 1563 5 is_stmt 1 view .LVU26
 100              	.LVL8:
1564:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
 101              		.loc 1 1564 5 view .LVU27
 102              	.LBB97:
 103              	.LBI97:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 104              		.loc 2 450 57 view .LVU28
 105              	.LBB98:
 106              		.loc 2 453 3 view .LVU29
 107              		.loc 2 453 10 is_stmt 0 view .LVU30
 108 0022 CA68     		ldr	r2, [r1, #12]
 109 0024 16E0     		b	.L6
 110              	.LVL9:
 111              	.L3:
 112              		.loc 2 453 10 view .LVU31
 113              	.LBE98:
 114              	.LBE97:
1528:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 115              		.loc 1 1528 5 is_stmt 1 view .LVU32
 116              	.LBB100:
 117              	.LBB101:
 118              		.loc 2 453 10 is_stmt 0 view .LVU33
 119 0026 0A68     		ldr	r2, [r1]
 120              	.LVL10:
 121              		.loc 2 453 10 view .LVU34
 122              	.LBE101:
 123              	.LBE100:
1528:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 124              		.loc 1 1528 10 view .LVU35
 125 0028 0368     		ldr	r3, [r0]
 126              	.LVL11:
 127              	.LBB103:
 128              	.LBI100:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 129              		.loc 2 450 57 is_stmt 1 view .LVU36
 130              	.LBB102:
 131              		.loc 2 453 3 view .LVU37
 132              		.loc 2 453 10 is_stmt 0 view .LVU38
 133 002a 12BA     		rev	r2, r2
 134              	.LVL12:
 135              		.loc 2 453 10 view .LVU39
 136              	.LBE102:
 137              	.LBE103:
1528:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 138              		.loc 1 1528 27 view .LVU40
 139 002c 1A62     		str	r2, [r3, #32]
1529:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K0RR = __REV(*(uint32_t*)(keyaddr));
 140              		.loc 1 1529 5 is_stmt 1 view .LVU41
 141              	.LVL13:
1530:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 142              		.loc 1 1530 5 view .LVU42
 143              	.LBB104:
 144              	.LBI104:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 145              		.loc 2 450 57 view .LVU43
 146              	.LBB105:
 147              		.loc 2 453 3 view .LVU44
 148              		.loc 2 453 10 is_stmt 0 view .LVU45
 149 002e 4A68     		ldr	r2, [r1, #4]
 150 0030 12BA     		rev	r2, r2
 151              	.LVL14:
 152              		.loc 2 453 10 view .LVU46
 153              	.LBE105:
 154              	.LBE104:
1530:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 155              		.loc 1 1530 27 view .LVU47
 156 0032 5A62     		str	r2, [r3, #36]
1531:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1LR = __REV(*(uint32_t*)(keyaddr));
 157              		.loc 1 1531 5 is_stmt 1 view .LVU48
 158              	.LVL15:
1532:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 159              		.loc 1 1532 5 view .LVU49
 160              	.LBB106:
 161              	.LBI106:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 162              		.loc 2 450 57 view .LVU50
 163              	.LBB107:
 164              		.loc 2 453 3 view .LVU51
 165              		.loc 2 453 10 is_stmt 0 view .LVU52
 166 0034 8A68     		ldr	r2, [r1, #8]
 167 0036 12BA     		rev	r2, r2
 168              	.LVL16:
 169              		.loc 2 453 10 view .LVU53
 170              	.LBE107:
 171              	.LBE106:
1532:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 172              		.loc 1 1532 27 view .LVU54
 173 0038 9A62     		str	r2, [r3, #40]
1533:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1RR = __REV(*(uint32_t*)(keyaddr));
 174              		.loc 1 1533 5 is_stmt 1 view .LVU55
 175              	.LVL17:
1534:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 176              		.loc 1 1534 5 view .LVU56
 177              	.LBB108:
 178              	.LBI108:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 179              		.loc 2 450 57 view .LVU57
 180              	.LBB109:
 181              		.loc 2 453 3 view .LVU58
 182              		.loc 2 453 10 is_stmt 0 view .LVU59
 183 003a CA68     		ldr	r2, [r1, #12]
 184 003c 12BA     		rev	r2, r2
 185              	.LVL18:
 186              		.loc 2 453 10 view .LVU60
 187              	.LBE109:
 188              	.LBE108:
1534:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 189              		.loc 1 1534 27 view .LVU61
 190 003e DA62     		str	r2, [r3, #44]
1535:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
 191              		.loc 1 1535 5 is_stmt 1 view .LVU62
 192              	.LVL19:
1536:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 193              		.loc 1 1536 5 view .LVU63
 194              	.LBB110:
 195              	.LBI110:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 196              		.loc 2 450 57 view .LVU64
 197              	.LBB111:
 198              		.loc 2 453 3 view .LVU65
 199              		.loc 2 453 10 is_stmt 0 view .LVU66
 200 0040 0A69     		ldr	r2, [r1, #16]
 201 0042 12BA     		rev	r2, r2
 202              	.LVL20:
 203              		.loc 2 453 10 view .LVU67
 204              	.LBE111:
 205              	.LBE110:
1536:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 206              		.loc 1 1536 27 view .LVU68
 207 0044 1A63     		str	r2, [r3, #48]
1537:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
 208              		.loc 1 1537 5 is_stmt 1 view .LVU69
 209              	.LVL21:
1538:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 210              		.loc 1 1538 5 view .LVU70
 211              	.LBB112:
 212              	.LBI112:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 213              		.loc 2 450 57 view .LVU71
 214              	.LBB113:
 215              		.loc 2 453 3 view .LVU72
 216              		.loc 2 453 10 is_stmt 0 view .LVU73
 217 0046 4A69     		ldr	r2, [r1, #20]
 218 0048 12BA     		rev	r2, r2
 219              	.LVL22:
 220              		.loc 2 453 10 view .LVU74
 221              	.LBE113:
 222              	.LBE112:
1538:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 223              		.loc 1 1538 27 view .LVU75
 224 004a 5A63     		str	r2, [r3, #52]
1539:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
 225              		.loc 1 1539 5 is_stmt 1 view .LVU76
 226              	.LVL23:
1540:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 227              		.loc 1 1540 5 view .LVU77
 228              	.LBB114:
 229              	.LBI114:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 230              		.loc 2 450 57 view .LVU78
 231              	.LBB115:
 232              		.loc 2 453 3 view .LVU79
 233              		.loc 2 453 10 is_stmt 0 view .LVU80
 234 004c 8A69     		ldr	r2, [r1, #24]
 235 004e 12BA     		rev	r2, r2
 236              	.LVL24:
 237              		.loc 2 453 10 view .LVU81
 238              	.LBE115:
 239              	.LBE114:
1540:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 240              		.loc 1 1540 27 view .LVU82
 241 0050 9A63     		str	r2, [r3, #56]
1541:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
 242              		.loc 1 1541 5 is_stmt 1 view .LVU83
 243              	.LVL25:
1542:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 244              		.loc 1 1542 5 view .LVU84
 245              	.LBB116:
 246              	.LBI116:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 247              		.loc 2 450 57 view .LVU85
 248              	.LBB117:
 249              		.loc 2 453 3 view .LVU86
 250              		.loc 2 453 10 is_stmt 0 view .LVU87
 251 0052 CA69     		ldr	r2, [r1, #28]
 252              	.LVL26:
 253              	.L6:
 254              		.loc 2 453 10 view .LVU88
 255              	.LBE117:
 256              	.LBE116:
 257              	.LBB118:
 258              	.LBB99:
 259 0054 12BA     		rev	r2, r2
 260              	.LBE99:
 261              	.LBE118:
 262              		.loc 1 1564 27 view .LVU89
 263 0056 DA63     		str	r2, [r3, #60]
1565:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 264              		.loc 1 1565 5 is_stmt 1 view .LVU90
 265              	.L1:
1566:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   default:
1567:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
1568:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1569:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 266              		.loc 1 1569 1 is_stmt 0 view .LVU91
 267 0058 7047     		bx	lr
 268              	.LVL27:
 269              	.L2:
1545:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 270              		.loc 1 1545 5 is_stmt 1 view .LVU92
 271              	.LBB119:
 272              	.LBB120:
 273              		.loc 2 453 10 is_stmt 0 view .LVU93
 274 005a 0A68     		ldr	r2, [r1]
 275              	.LVL28:
 276              		.loc 2 453 10 view .LVU94
 277              	.LBE120:
 278              	.LBE119:
1545:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 279              		.loc 1 1545 10 view .LVU95
 280 005c 0368     		ldr	r3, [r0]
 281              	.LVL29:
 282              	.LBB122:
 283              	.LBI119:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 284              		.loc 2 450 57 is_stmt 1 view .LVU96
 285              	.LBB121:
 286              		.loc 2 453 3 view .LVU97
 287              		.loc 2 453 10 is_stmt 0 view .LVU98
 288 005e 12BA     		rev	r2, r2
 289              	.LVL30:
 290              		.loc 2 453 10 view .LVU99
 291              	.LBE121:
 292              	.LBE122:
1545:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 293              		.loc 1 1545 27 view .LVU100
 294 0060 9A62     		str	r2, [r3, #40]
1546:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K1RR = __REV(*(uint32_t*)(keyaddr));
 295              		.loc 1 1546 5 is_stmt 1 view .LVU101
 296              	.LVL31:
1547:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 297              		.loc 1 1547 5 view .LVU102
 298              	.LBB123:
 299              	.LBI123:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 300              		.loc 2 450 57 view .LVU103
 301              	.LBB124:
 302              		.loc 2 453 3 view .LVU104
 303              		.loc 2 453 10 is_stmt 0 view .LVU105
 304 0062 4A68     		ldr	r2, [r1, #4]
 305 0064 12BA     		rev	r2, r2
 306              	.LVL32:
 307              		.loc 2 453 10 view .LVU106
 308              	.LBE124:
 309              	.LBE123:
1547:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 310              		.loc 1 1547 27 view .LVU107
 311 0066 DA62     		str	r2, [r3, #44]
1548:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2LR = __REV(*(uint32_t*)(keyaddr));
 312              		.loc 1 1548 5 is_stmt 1 view .LVU108
 313              	.LVL33:
1549:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 314              		.loc 1 1549 5 view .LVU109
 315              	.LBB125:
 316              	.LBI125:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 317              		.loc 2 450 57 view .LVU110
 318              	.LBB126:
 319              		.loc 2 453 3 view .LVU111
 320              		.loc 2 453 10 is_stmt 0 view .LVU112
 321 0068 8A68     		ldr	r2, [r1, #8]
 322 006a 12BA     		rev	r2, r2
 323              	.LVL34:
 324              		.loc 2 453 10 view .LVU113
 325              	.LBE126:
 326              	.LBE125:
1549:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 327              		.loc 1 1549 27 view .LVU114
 328 006c 1A63     		str	r2, [r3, #48]
1550:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K2RR = __REV(*(uint32_t*)(keyaddr));
 329              		.loc 1 1550 5 is_stmt 1 view .LVU115
 330              	.LVL35:
1551:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 331              		.loc 1 1551 5 view .LVU116
 332              	.LBB127:
 333              	.LBI127:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 334              		.loc 2 450 57 view .LVU117
 335              	.LBB128:
 336              		.loc 2 453 3 view .LVU118
 337              		.loc 2 453 10 is_stmt 0 view .LVU119
 338 006e CA68     		ldr	r2, [r1, #12]
 339 0070 12BA     		rev	r2, r2
 340              	.LVL36:
 341              		.loc 2 453 10 view .LVU120
 342              	.LBE128:
 343              	.LBE127:
1551:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 344              		.loc 1 1551 27 view .LVU121
 345 0072 5A63     		str	r2, [r3, #52]
1552:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3LR = __REV(*(uint32_t*)(keyaddr));
 346              		.loc 1 1552 5 is_stmt 1 view .LVU122
 347              	.LVL37:
1553:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 348              		.loc 1 1553 5 view .LVU123
 349              	.LBB129:
 350              	.LBI129:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 351              		.loc 2 450 57 view .LVU124
 352              	.LBB130:
 353              		.loc 2 453 3 view .LVU125
 354              		.loc 2 453 10 is_stmt 0 view .LVU126
 355 0074 0A69     		ldr	r2, [r1, #16]
 356 0076 12BA     		rev	r2, r2
 357              	.LVL38:
 358              		.loc 2 453 10 view .LVU127
 359              	.LBE130:
 360              	.LBE129:
1553:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     keyaddr+=4U;
 361              		.loc 1 1553 27 view .LVU128
 362 0078 9A63     		str	r2, [r3, #56]
1554:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->K3RR = __REV(*(uint32_t*)(keyaddr));
 363              		.loc 1 1554 5 is_stmt 1 view .LVU129
 364              	.LVL39:
1555:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     break;
 365              		.loc 1 1555 5 view .LVU130
 366              	.LBB131:
 367              	.LBI131:
 450:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 368              		.loc 2 450 57 view .LVU131
 369              	.LBB132:
 370              		.loc 2 453 3 view .LVU132
 371              		.loc 2 453 10 is_stmt 0 view .LVU133
 372 007a 4A69     		ldr	r2, [r1, #20]
 373 007c EAE7     		b	.L6
 374              	.LBE132:
 375              	.LBE131:
 376              		.cfi_endproc
 377              	.LFE139:
 379              		.section	.text.HAL_GetTick,"ax",%progbits
 380              		.align	1
 381              		.global	HAL_GetTick
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu softvfp
 387              	HAL_GetTick:
 388              	.LFB126:
  53:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 	static uint32_t tick;
 389              		.loc 1 53 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
  54:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 	return tick++;;
 394              		.loc 1 54 2 view .LVU135
  55:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 395              		.loc 1 55 2 view .LVU136
  55:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 396              		.loc 1 55 13 is_stmt 0 view .LVU137
 397 0000 024B     		ldr	r3, .L8
 398 0002 1868     		ldr	r0, [r3]
 399 0004 421C     		adds	r2, r0, #1
 400 0006 1A60     		str	r2, [r3]
  55:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 401              		.loc 1 55 16 is_stmt 1 view .LVU138
  56:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 402              		.loc 1 56 1 is_stmt 0 view .LVU139
 403 0008 7047     		bx	lr
 404              	.L9:
 405 000a 00BF     		.align	2
 406              	.L8:
 407 000c 00000000 		.word	.LANCHOR0
 408              		.cfi_endproc
 409              	.LFE126:
 411              		.section	.text.CRYP_ProcessData,"ax",%progbits
 412              		.align	1
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu softvfp
 418              	CRYP_ProcessData:
 419              	.LVL40:
 420              	.LFB140:
1570:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1571:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** static HAL_StatusTypeDef CRYP_ProcessData(CRYP_HandleTypeDef *hcryp, uint8_t* Input, uint16_t Ileng
1572:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1573:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1574:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Process Data: Writes Input data in polling mode and read the output data
1575:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
1576:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for CRYP module
1577:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Input Pointer to the Input buffer
1578:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Ilength Length of the Input buffer, must be a multiple of 16.
1579:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Output Pointer to the returned buffer
1580:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Timeout Timeout value
1581:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval None
1582:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1583:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** static HAL_StatusTypeDef CRYP_ProcessData(CRYP_HandleTypeDef *hcryp, uint8_t* Input, uint16_t Ileng
1584:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 421              		.loc 1 1584 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 4, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		.loc 1 1584 1 is_stmt 0 view .LVU141
 426 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 427              	.LCFI0:
 428              		.cfi_def_cfa_offset 32
 429              		.cfi_offset 3, -32
 430              		.cfi_offset 4, -28
 431              		.cfi_offset 5, -24
 432              		.cfi_offset 6, -20
 433              		.cfi_offset 7, -16
 434              		.cfi_offset 8, -12
 435              		.cfi_offset 9, -8
 436              		.cfi_offset 14, -4
 437 0004 01F11005 		add	r5, r1, #16
1585:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
1586:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1587:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t i = 0U;
1588:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t inputaddr  = (uint32_t)Input;
1589:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t outputaddr = (uint32_t)Output;
1590:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1591:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   for(i=0U; (i < Ilength); i+=16U)
 438              		.loc 1 1591 3 view .LVU142
 439 0008 C1F1FF21 		rsb	r1, r1, #-16711936
 440              	.LVL41:
 441              		.loc 1 1591 3 view .LVU143
 442 000c 01F57F01 		add	r1, r1, #16711680
1584:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 443              		.loc 1 1584 1 view .LVU144
 444 0010 DDF82080 		ldr	r8, [sp, #32]
 445 0014 0646     		mov	r6, r0
 446 0016 1746     		mov	r7, r2
1585:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 447              		.loc 1 1585 3 is_stmt 1 view .LVU145
 448              	.LVL42:
1587:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t inputaddr  = (uint32_t)Input;
 449              		.loc 1 1587 3 view .LVU146
1588:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t outputaddr = (uint32_t)Output;
 450              		.loc 1 1588 3 view .LVU147
1589:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 451              		.loc 1 1589 3 view .LVU148
 452              		.loc 1 1591 3 view .LVU149
 453              		.loc 1 1591 3 is_stmt 0 view .LVU150
 454 0018 03F11004 		add	r4, r3, #16
 455 001c F031     		adds	r1, r1, #240
 456              	.LVL43:
 457              	.L11:
 458              		.loc 1 1591 13 is_stmt 1 discriminator 1 view .LVU151
 459              		.loc 1 1591 3 is_stmt 0 discriminator 1 view .LVU152
 460 001e 4B19     		adds	r3, r1, r5
 461 0020 9F42     		cmp	r7, r3
 462 0022 01D8     		bhi	.L18
1592:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1593:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Write the Input block in the IN FIFO */
1594:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR = *(uint32_t*)(inputaddr);
1595:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
1596:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR = *(uint32_t*)(inputaddr);
1597:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
1598:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR  = *(uint32_t*)(inputaddr);
1599:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
1600:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR = *(uint32_t*)(inputaddr);
1601:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
1602:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1603:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get tick */
1604:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     tickstart = HAL_GetTick();
1605:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1606:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(HAL_IS_BIT_CLR(hcryp->Instance->SR, CRYP_FLAG_OFNE))
1607:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
1608:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check for the Timeout */
1609:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(Timeout != HAL_MAX_DELAY)
1610:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
1611:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
1612:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1613:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           /* Change state */
1614:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           hcryp->State = HAL_CRYP_STATE_TIMEOUT;
1615:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           
1616:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           /* Process Unlocked */
1617:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           __HAL_UNLOCK(hcryp);
1618:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
1619:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
1620:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1621:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1622:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1623:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Read the Output block from the Output FIFO */
1624:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
1625:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
1626:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
1627:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
1628:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
1629:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
1630:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
1631:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
1632:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1633:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1634:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 463              		.loc 1 1634 10 view .LVU153
 464 0024 0020     		movs	r0, #0
 465 0026 2EE0     		b	.L15
 466              	.L18:
1594:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 467              		.loc 1 1594 5 is_stmt 1 view .LVU154
1594:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 468              		.loc 1 1594 10 is_stmt 0 view .LVU155
 469 0028 3368     		ldr	r3, [r6]
1594:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 470              		.loc 1 1594 27 view .LVU156
 471 002a 55F8102C 		ldr	r2, [r5, #-16]
1594:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 472              		.loc 1 1594 25 view .LVU157
 473 002e 9A60     		str	r2, [r3, #8]
1595:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR = *(uint32_t*)(inputaddr);
 474              		.loc 1 1595 5 is_stmt 1 view .LVU158
 475              	.LVL44:
1596:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 476              		.loc 1 1596 5 view .LVU159
1596:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 477              		.loc 1 1596 27 is_stmt 0 view .LVU160
 478 0030 55F80C2C 		ldr	r2, [r5, #-12]
1596:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 479              		.loc 1 1596 25 view .LVU161
 480 0034 9A60     		str	r2, [r3, #8]
1597:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR  = *(uint32_t*)(inputaddr);
 481              		.loc 1 1597 5 is_stmt 1 view .LVU162
 482              	.LVL45:
1598:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 483              		.loc 1 1598 5 view .LVU163
1598:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 484              		.loc 1 1598 28 is_stmt 0 view .LVU164
 485 0036 55F8082C 		ldr	r2, [r5, #-8]
1598:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 486              		.loc 1 1598 26 view .LVU165
 487 003a 9A60     		str	r2, [r3, #8]
1599:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Instance->DR = *(uint32_t*)(inputaddr);
 488              		.loc 1 1599 5 is_stmt 1 view .LVU166
 489              	.LVL46:
1600:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 490              		.loc 1 1600 5 view .LVU167
1600:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 491              		.loc 1 1600 27 is_stmt 0 view .LVU168
 492 003c 55F8042C 		ldr	r2, [r5, #-4]
1600:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     inputaddr+=4U;
 493              		.loc 1 1600 25 view .LVU169
 494 0040 9A60     		str	r2, [r3, #8]
1601:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
 495              		.loc 1 1601 5 is_stmt 1 view .LVU170
 496              	.LVL47:
1604:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 497              		.loc 1 1604 5 view .LVU171
1604:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 498              		.loc 1 1604 17 is_stmt 0 view .LVU172
 499 0042 FFF7FEFF 		bl	HAL_GetTick
 500              	.LVL48:
 501 0046 8146     		mov	r9, r0
 502              	.LVL49:
1606:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
 503              		.loc 1 1606 5 is_stmt 1 view .LVU173
 504              	.L12:
1606:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
 505              		.loc 1 1606 11 is_stmt 0 view .LVU174
 506 0048 3368     		ldr	r3, [r6]
 507              	.L13:
1606:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
 508              		.loc 1 1606 10 is_stmt 1 view .LVU175
1606:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
 509              		.loc 1 1606 11 is_stmt 0 view .LVU176
 510 004a 5A68     		ldr	r2, [r3, #4]
1606:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {    
 511              		.loc 1 1606 10 view .LVU177
 512 004c 5207     		lsls	r2, r2, #29
 513 004e 0ED5     		bpl	.L17
1624:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 514              		.loc 1 1624 5 is_stmt 1 discriminator 2 view .LVU178
1624:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 515              		.loc 1 1624 47 is_stmt 0 discriminator 2 view .LVU179
 516 0050 DA68     		ldr	r2, [r3, #12]
1624:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 517              		.loc 1 1624 30 discriminator 2 view .LVU180
 518 0052 44F8102C 		str	r2, [r4, #-16]
1625:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
 519              		.loc 1 1625 5 is_stmt 1 discriminator 2 view .LVU181
1626:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 520              		.loc 1 1626 5 discriminator 2 view .LVU182
1626:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 521              		.loc 1 1626 47 is_stmt 0 discriminator 2 view .LVU183
 522 0056 DA68     		ldr	r2, [r3, #12]
1626:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 523              		.loc 1 1626 30 discriminator 2 view .LVU184
 524 0058 44F80C2C 		str	r2, [r4, #-12]
1627:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
 525              		.loc 1 1627 5 is_stmt 1 discriminator 2 view .LVU185
1628:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 526              		.loc 1 1628 5 discriminator 2 view .LVU186
1628:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 527              		.loc 1 1628 47 is_stmt 0 discriminator 2 view .LVU187
 528 005c DA68     		ldr	r2, [r3, #12]
1628:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 529              		.loc 1 1628 30 discriminator 2 view .LVU188
 530 005e 44F8082C 		str	r2, [r4, #-8]
1629:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     *(uint32_t*)(outputaddr) = hcryp->Instance->DOUT;
 531              		.loc 1 1629 5 is_stmt 1 discriminator 2 view .LVU189
1630:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 532              		.loc 1 1630 5 discriminator 2 view .LVU190
1630:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 533              		.loc 1 1630 47 is_stmt 0 discriminator 2 view .LVU191
 534 0062 DB68     		ldr	r3, [r3, #12]
1630:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     outputaddr+=4U;
 535              		.loc 1 1630 30 discriminator 2 view .LVU192
 536 0064 44F8043C 		str	r3, [r4, #-4]
1631:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 537              		.loc 1 1631 5 is_stmt 1 discriminator 2 view .LVU193
1591:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 538              		.loc 1 1591 28 discriminator 2 view .LVU194
1591:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 539              		.loc 1 1591 28 is_stmt 0 discriminator 2 view .LVU195
 540 0068 1035     		adds	r5, r5, #16
 541              	.LVL50:
1591:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 542              		.loc 1 1591 28 discriminator 2 view .LVU196
 543 006a 1034     		adds	r4, r4, #16
 544 006c D7E7     		b	.L11
 545              	.LVL51:
 546              	.L17:
1609:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 547              		.loc 1 1609 7 is_stmt 1 view .LVU197
1609:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 548              		.loc 1 1609 9 is_stmt 0 view .LVU198
 549 006e B8F1FF3F 		cmp	r8, #-1
 550 0072 EAD0     		beq	.L13
1611:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 551              		.loc 1 1611 9 is_stmt 1 view .LVU199
1611:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 552              		.loc 1 1611 11 is_stmt 0 view .LVU200
 553 0074 B8F1000F 		cmp	r8, #0
 554 0078 07D1     		bne	.L14
 555              	.L16:
1614:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           
 556              		.loc 1 1614 11 is_stmt 1 view .LVU201
1614:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           
 557              		.loc 1 1614 24 is_stmt 0 view .LVU202
 558 007a 0320     		movs	r0, #3
1617:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
 559              		.loc 1 1617 11 view .LVU203
 560 007c 0023     		movs	r3, #0
1614:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           
 561              		.loc 1 1614 24 view .LVU204
 562 007e 86F83D00 		strb	r0, [r6, #61]
1617:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
 563              		.loc 1 1617 11 is_stmt 1 view .LVU205
1617:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
 564              		.loc 1 1617 11 view .LVU206
 565 0082 86F83C30 		strb	r3, [r6, #60]
1617:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
 566              		.loc 1 1617 11 view .LVU207
1619:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 567              		.loc 1 1619 11 view .LVU208
 568              	.LVL52:
 569              	.L15:
1635:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 570              		.loc 1 1635 1 is_stmt 0 view .LVU209
 571 0086 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 572              	.LVL53:
 573              	.L14:
1611:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 574              		.loc 1 1611 31 discriminator 1 view .LVU210
 575 008a FFF7FEFF 		bl	HAL_GetTick
 576              	.LVL54:
1611:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 577              		.loc 1 1611 45 discriminator 1 view .LVU211
 578 008e A0EB0900 		sub	r0, r0, r9
1611:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 579              		.loc 1 1611 27 discriminator 1 view .LVU212
 580 0092 4045     		cmp	r0, r8
 581 0094 D8D9     		bls	.L12
 582 0096 F0E7     		b	.L16
 583              		.cfi_endproc
 584              	.LFE140:
 586              		.section	.text.RCC_AHB2PeriphClockCmd,"ax",%progbits
 587              		.align	1
 588              		.global	RCC_AHB2PeriphClockCmd
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu softvfp
 594              	RCC_AHB2PeriphClockCmd:
 595              	.LVL55:
 596              	.LFB127:
  75:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 597              		.loc 1 75 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
  77:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 602              		.loc 1 77 3 view .LVU214
  78:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 603              		.loc 1 78 3 view .LVU215
  80:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 604              		.loc 1 80 3 view .LVU216
 605 0000 044B     		ldr	r3, .L25
  82:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 606              		.loc 1 82 18 is_stmt 0 view .LVU217
 607 0002 5A6B     		ldr	r2, [r3, #52]
  80:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 608              		.loc 1 80 6 view .LVU218
 609 0004 11B1     		cbz	r1, .L22
  82:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 610              		.loc 1 82 5 is_stmt 1 view .LVU219
  82:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 611              		.loc 1 82 18 is_stmt 0 view .LVU220
 612 0006 1043     		orrs	r0, r0, r2
 613              	.LVL56:
 614              	.L24:
  86:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 615              		.loc 1 86 18 view .LVU221
 616 0008 5863     		str	r0, [r3, #52]
  88:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 617              		.loc 1 88 1 view .LVU222
 618 000a 7047     		bx	lr
 619              	.LVL57:
 620              	.L22:
  86:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 621              		.loc 1 86 5 is_stmt 1 view .LVU223
  86:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 622              		.loc 1 86 18 is_stmt 0 view .LVU224
 623 000c 22EA0000 		bic	r0, r2, r0
 624              	.LVL58:
  86:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 625              		.loc 1 86 18 view .LVU225
 626 0010 FAE7     		b	.L24
 627              	.L26:
 628 0012 00BF     		.align	2
 629              	.L25:
 630 0014 00380240 		.word	1073887232
 631              		.cfi_endproc
 632              	.LFE127:
 634              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 635              		.align	1
 636              		.global	HAL_RCC_OscConfig
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu softvfp
 642              	HAL_RCC_OscConfig:
 643              	.LVL59:
 644              	.LFB128:
 105:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 645              		.loc 1 105 1 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 8
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 106:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 649              		.loc 1 106 3 view .LVU227
 109:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/
 650              		.loc 1 109 3 view .LVU228
 111:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 651              		.loc 1 111 3 view .LVU229
 111:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 652              		.loc 1 111 43 is_stmt 0 view .LVU230
 653 0000 0368     		ldr	r3, [r0]
 105:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 654              		.loc 1 105 1 view .LVU231
 655 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 656              	.LCFI1:
 657              		.cfi_def_cfa_offset 32
 658              		.cfi_offset 4, -20
 659              		.cfi_offset 5, -16
 660              		.cfi_offset 6, -12
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 111:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 663              		.loc 1 111 5 view .LVU232
 664 0004 DD07     		lsls	r5, r3, #31
 105:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 665              		.loc 1 105 1 view .LVU233
 666 0006 0146     		mov	r1, r0
 111:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 667              		.loc 1 111 5 view .LVU234
 668 0008 3BD4     		bmi	.L28
 669              	.LVL60:
 670              	.L33:
 161:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 671              		.loc 1 161 3 is_stmt 1 view .LVU235
 161:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 672              		.loc 1 161 43 is_stmt 0 view .LVU236
 673 000a 0B68     		ldr	r3, [r1]
 161:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 674              		.loc 1 161 5 view .LVU237
 675 000c 9C07     		lsls	r4, r3, #30
 676 000e 00F18B80 		bmi	.L29
 677              	.L44:
 226:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 678              		.loc 1 226 3 is_stmt 1 view .LVU238
 226:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 679              		.loc 1 226 43 is_stmt 0 view .LVU239
 680 0012 0B68     		ldr	r3, [r1]
 226:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 681              		.loc 1 226 5 view .LVU240
 682 0014 1B07     		lsls	r3, r3, #28
 683 0016 00F1D680 		bmi	.L54
 684              	.L60:
 268:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 685              		.loc 1 268 3 is_stmt 1 view .LVU241
 268:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 686              		.loc 1 268 43 is_stmt 0 view .LVU242
 687 001a 0B68     		ldr	r3, [r1]
 268:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 688              		.loc 1 268 5 view .LVU243
 689 001c 5F07     		lsls	r7, r3, #29
 690 001e 2AD5     		bpl	.L56
 271:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 691              		.loc 1 271 5 is_stmt 1 view .LVU244
 274:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 692              		.loc 1 274 5 view .LVU245
 693              	.LBB133:
 274:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 694              		.loc 1 274 5 view .LVU246
 695 0020 0023     		movs	r3, #0
 696 0022 0193     		str	r3, [sp, #4]
 274:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 697              		.loc 1 274 5 view .LVU247
 698 0024 904B     		ldr	r3, .L102
 699              	.LBE133:
 277:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 700              		.loc 1 277 13 is_stmt 0 view .LVU248
 701 0026 914C     		ldr	r4, .L102+4
 702              	.LBB134:
 274:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 703              		.loc 1 274 5 view .LVU249
 704 0028 1A6C     		ldr	r2, [r3, #64]
 705 002a 42F08052 		orr	r2, r2, #268435456
 706 002e 1A64     		str	r2, [r3, #64]
 274:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 707              		.loc 1 274 5 is_stmt 1 view .LVU250
 708 0030 1B6C     		ldr	r3, [r3, #64]
 709 0032 03F08053 		and	r3, r3, #268435456
 710 0036 0193     		str	r3, [sp, #4]
 274:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 711              		.loc 1 274 5 view .LVU251
 712 0038 019B     		ldr	r3, [sp, #4]
 713              	.LBE134:
 274:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 714              		.loc 1 274 5 view .LVU252
 277:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 715              		.loc 1 277 5 view .LVU253
 277:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 716              		.loc 1 277 13 is_stmt 0 view .LVU254
 717 003a 2368     		ldr	r3, [r4]
 718 003c 43F48073 		orr	r3, r3, #256
 719 0040 2360     		str	r3, [r4]
 280:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 720              		.loc 1 280 5 is_stmt 1 view .LVU255
 280:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 721              		.loc 1 280 17 is_stmt 0 view .LVU256
 722 0042 FFF7FEFF 		bl	HAL_GetTick
 723              	.LVL61:
 724 0046 0546     		mov	r5, r0
 725              	.LVL62:
 282:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 726              		.loc 1 282 5 is_stmt 1 view .LVU257
 727              	.L65:
 282:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 728              		.loc 1 282 10 view .LVU258
 282:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 729              		.loc 1 282 15 is_stmt 0 view .LVU259
 730 0048 2368     		ldr	r3, [r4]
 282:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 731              		.loc 1 282 10 view .LVU260
 732 004a DA05     		lsls	r2, r3, #23
 733 004c 40F1DD80 		bpl	.L66
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 734              		.loc 1 291 5 is_stmt 1 view .LVU261
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 735              		.loc 1 291 5 view .LVU262
 736 0050 8B68     		ldr	r3, [r1, #8]
 737 0052 854C     		ldr	r4, .L102
 738 0054 012B     		cmp	r3, #1
 739 0056 40F0DF80 		bne	.L67
 740              	.L101:
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 741              		.loc 1 291 5 discriminator 4 view .LVU263
 742 005a 236F     		ldr	r3, [r4, #112]
 743 005c 43F00103 		orr	r3, r3, #1
 744 0060 2367     		str	r3, [r4, #112]
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 745              		.loc 1 291 5 discriminator 4 view .LVU264
 293:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 746              		.loc 1 293 5 discriminator 4 view .LVU265
 747              	.L68:
 296:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 748              		.loc 1 296 7 view .LVU266
 296:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 749              		.loc 1 296 19 is_stmt 0 view .LVU267
 750 0062 FFF7FEFF 		bl	HAL_GetTick
 751              	.LVL63:
 299:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 752              		.loc 1 299 13 view .LVU268
 753 0066 804D     		ldr	r5, .L102
 754              	.LVL64:
 296:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 755              		.loc 1 296 19 view .LVU269
 756 0068 0446     		mov	r4, r0
 757              	.LVL65:
 299:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 758              		.loc 1 299 7 is_stmt 1 view .LVU270
 301:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 759              		.loc 1 301 11 is_stmt 0 view .LVU271
 760 006a 41F28836 		movw	r6, #5000
 761              	.LVL66:
 762              	.L71:
 299:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 763              		.loc 1 299 12 is_stmt 1 view .LVU272
 299:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 764              		.loc 1 299 13 is_stmt 0 view .LVU273
 765 006e 2B6F     		ldr	r3, [r5, #112]
 299:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 766              		.loc 1 299 12 view .LVU274
 767 0070 9B07     		lsls	r3, r3, #30
 768 0072 40F1F280 		bpl	.L72
 769              	.LVL67:
 770              	.L56:
 324:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 771              		.loc 1 324 3 is_stmt 1 view .LVU275
 325:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 772              		.loc 1 325 3 view .LVU276
 325:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 773              		.loc 1 325 30 is_stmt 0 view .LVU277
 774 0076 8A69     		ldr	r2, [r1, #24]
 325:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 775              		.loc 1 325 6 view .LVU278
 776 0078 002A     		cmp	r2, #0
 777 007a 40F0FF80 		bne	.L63
 778              	.LVL68:
 779              	.L64:
 398:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 780              		.loc 1 398 10 view .LVU279
 781 007e 0020     		movs	r0, #0
 782 0080 15E0     		b	.L34
 783              	.LVL69:
 784              	.L28:
 114:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 785              		.loc 1 114 5 is_stmt 1 view .LVU280
 116:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 786              		.loc 1 116 5 view .LVU281
 116:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 787              		.loc 1 116 9 is_stmt 0 view .LVU282
 788 0082 794B     		ldr	r3, .L102
 789 0084 9A68     		ldr	r2, [r3, #8]
 790 0086 02F00C02 		and	r2, r2, #12
 116:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 791              		.loc 1 116 7 view .LVU283
 792 008a 042A     		cmp	r2, #4
 793 008c 07D0     		beq	.L31
 117:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 794              		.loc 1 117 9 discriminator 1 view .LVU284
 795 008e 9A68     		ldr	r2, [r3, #8]
 796 0090 02F00C02 		and	r2, r2, #12
 116:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 797              		.loc 1 116 60 discriminator 1 view .LVU285
 798 0094 082A     		cmp	r2, #8
 799 0096 0CD1     		bne	.L32
 117:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 800              		.loc 1 117 68 view .LVU286
 801 0098 5A68     		ldr	r2, [r3, #4]
 117:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 802              		.loc 1 117 60 view .LVU287
 803 009a 5002     		lsls	r0, r2, #9
 804              	.LVL70:
 117:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 805              		.loc 1 117 60 view .LVU288
 806 009c 09D5     		bpl	.L32
 807              	.L31:
 119:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 808              		.loc 1 119 7 is_stmt 1 view .LVU289
 119:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 809              		.loc 1 119 11 is_stmt 0 view .LVU290
 810 009e 724B     		ldr	r3, .L102
 811 00a0 1B68     		ldr	r3, [r3]
 119:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 812              		.loc 1 119 9 view .LVU291
 813 00a2 9A03     		lsls	r2, r3, #14
 814 00a4 B1D5     		bpl	.L33
 119:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 815              		.loc 1 119 57 discriminator 1 view .LVU292
 816 00a6 4B68     		ldr	r3, [r1, #4]
 817 00a8 002B     		cmp	r3, #0
 818 00aa AED1     		bne	.L33
 819              	.LVL71:
 820              	.L48:
 121:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 821              		.loc 1 121 16 view .LVU293
 822 00ac 0120     		movs	r0, #1
 823              	.LVL72:
 824              	.L34:
 399:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 825              		.loc 1 399 1 view .LVU294
 826 00ae 03B0     		add	sp, sp, #12
 827              	.LCFI2:
 828              		.cfi_remember_state
 829              		.cfi_def_cfa_offset 20
 830              		@ sp needed
 831 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 832              	.LVL73:
 833              	.L32:
 834              	.LCFI3:
 835              		.cfi_restore_state
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 836              		.loc 1 127 7 is_stmt 1 view .LVU295
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 837              		.loc 1 127 7 view .LVU296
 838 00b2 4A68     		ldr	r2, [r1, #4]
 839 00b4 B2F5803F 		cmp	r2, #65536
 840 00b8 12D1     		bne	.L35
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 841              		.loc 1 127 7 discriminator 1 view .LVU297
 842 00ba 1A68     		ldr	r2, [r3]
 843 00bc 42F48032 		orr	r2, r2, #65536
 844 00c0 1A60     		str	r2, [r3]
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 845              		.loc 1 127 7 discriminator 1 view .LVU298
 130:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 846              		.loc 1 130 7 discriminator 1 view .LVU299
 847              	.L36:
 133:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 848              		.loc 1 133 9 view .LVU300
 133:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 849              		.loc 1 133 21 is_stmt 0 view .LVU301
 850 00c2 FFF7FEFF 		bl	HAL_GetTick
 851              	.LVL74:
 136:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 852              		.loc 1 136 15 view .LVU302
 853 00c6 684D     		ldr	r5, .L102
 138:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 854              		.loc 1 138 13 view .LVU303
 855 00c8 694E     		ldr	r6, .L102+8
 133:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 856              		.loc 1 133 21 view .LVU304
 857 00ca 0446     		mov	r4, r0
 858              	.LVL75:
 136:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 859              		.loc 1 136 9 is_stmt 1 view .LVU305
 860              	.L39:
 136:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 861              		.loc 1 136 14 view .LVU306
 136:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 862              		.loc 1 136 15 is_stmt 0 view .LVU307
 863 00cc 2B68     		ldr	r3, [r5]
 136:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 864              		.loc 1 136 14 view .LVU308
 865 00ce 9B03     		lsls	r3, r3, #14
 866 00d0 9BD4     		bmi	.L33
 138:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 867              		.loc 1 138 11 is_stmt 1 view .LVU309
 138:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 868              		.loc 1 138 15 is_stmt 0 view .LVU310
 869 00d2 FFF7FEFF 		bl	HAL_GetTick
 870              	.LVL76:
 138:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 871              		.loc 1 138 29 view .LVU311
 872 00d6 001B     		subs	r0, r0, r4
 138:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 873              		.loc 1 138 13 view .LVU312
 874 00d8 B042     		cmp	r0, r6
 875 00da F7D9     		bls	.L39
 876              	.LVL77:
 877              	.L42:
 140:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           }
 878              		.loc 1 140 20 view .LVU313
 879 00dc 0320     		movs	r0, #3
 880 00de E6E7     		b	.L34
 881              	.LVL78:
 882              	.L35:
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 883              		.loc 1 127 7 is_stmt 1 discriminator 2 view .LVU314
 884 00e0 614C     		ldr	r4, .L102
 885 00e2 B2F5A02F 		cmp	r2, #327680
 886 00e6 2368     		ldr	r3, [r4]
 887 00e8 07D1     		bne	.L37
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 888              		.loc 1 127 7 discriminator 4 view .LVU315
 889 00ea 43F48023 		orr	r3, r3, #262144
 890 00ee 2360     		str	r3, [r4]
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 891              		.loc 1 127 7 discriminator 4 view .LVU316
 892 00f0 2368     		ldr	r3, [r4]
 893 00f2 43F48033 		orr	r3, r3, #65536
 894 00f6 2360     		str	r3, [r4]
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 895              		.loc 1 127 7 discriminator 4 view .LVU317
 130:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 896              		.loc 1 130 7 discriminator 4 view .LVU318
 897 00f8 E3E7     		b	.L36
 898              	.L37:
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 899              		.loc 1 127 7 discriminator 5 view .LVU319
 900 00fa 23F48033 		bic	r3, r3, #65536
 901 00fe 2360     		str	r3, [r4]
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 902              		.loc 1 127 7 discriminator 5 view .LVU320
 903 0100 2368     		ldr	r3, [r4]
 904 0102 23F48023 		bic	r3, r3, #262144
 905 0106 2360     		str	r3, [r4]
 127:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 906              		.loc 1 127 7 discriminator 5 view .LVU321
 130:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 907              		.loc 1 130 7 discriminator 5 view .LVU322
 130:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 908              		.loc 1 130 9 is_stmt 0 discriminator 5 view .LVU323
 909 0108 002A     		cmp	r2, #0
 910 010a DAD1     		bne	.L36
 147:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 911              		.loc 1 147 9 is_stmt 1 view .LVU324
 147:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 912              		.loc 1 147 21 is_stmt 0 view .LVU325
 913 010c FFF7FEFF 		bl	HAL_GetTick
 914              	.LVL79:
 152:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 915              		.loc 1 152 13 view .LVU326
 916 0110 574E     		ldr	r6, .L102+8
 147:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 917              		.loc 1 147 21 view .LVU327
 918 0112 0546     		mov	r5, r0
 919              	.LVL80:
 150:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 920              		.loc 1 150 9 is_stmt 1 view .LVU328
 921              	.L41:
 150:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 922              		.loc 1 150 14 view .LVU329
 150:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 923              		.loc 1 150 15 is_stmt 0 view .LVU330
 924 0114 2368     		ldr	r3, [r4]
 150:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 925              		.loc 1 150 14 view .LVU331
 926 0116 9F03     		lsls	r7, r3, #14
 927 0118 7FF577AF 		bpl	.L33
 152:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 928              		.loc 1 152 11 is_stmt 1 view .LVU332
 152:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 929              		.loc 1 152 15 is_stmt 0 view .LVU333
 930 011c FFF7FEFF 		bl	HAL_GetTick
 931              	.LVL81:
 152:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 932              		.loc 1 152 29 view .LVU334
 933 0120 401B     		subs	r0, r0, r5
 152:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 934              		.loc 1 152 13 view .LVU335
 935 0122 B042     		cmp	r0, r6
 936 0124 F6D9     		bls	.L41
 937 0126 D9E7     		b	.L42
 938              	.LVL82:
 939              	.L29:
 164:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 940              		.loc 1 164 5 is_stmt 1 view .LVU336
 165:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 941              		.loc 1 165 5 view .LVU337
 168:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 942              		.loc 1 168 5 view .LVU338
 168:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 943              		.loc 1 168 9 is_stmt 0 view .LVU339
 944 0128 4F4B     		ldr	r3, .L102
 945 012a 9A68     		ldr	r2, [r3, #8]
 168:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 946              		.loc 1 168 7 view .LVU340
 947 012c 12F00C0F 		tst	r2, #12
 948 0130 07D0     		beq	.L45
 169:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 949              		.loc 1 169 9 discriminator 1 view .LVU341
 950 0132 9A68     		ldr	r2, [r3, #8]
 951 0134 02F00C02 		and	r2, r2, #12
 168:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 952              		.loc 1 168 60 discriminator 1 view .LVU342
 953 0138 082A     		cmp	r2, #8
 954 013a 16D1     		bne	.L46
 169:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 955              		.loc 1 169 68 view .LVU343
 956 013c 5B68     		ldr	r3, [r3, #4]
 169:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 957              		.loc 1 169 60 view .LVU344
 958 013e 5D02     		lsls	r5, r3, #9
 959 0140 13D4     		bmi	.L46
 960              	.L45:
 172:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 961              		.loc 1 172 7 is_stmt 1 view .LVU345
 172:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 962              		.loc 1 172 11 is_stmt 0 view .LVU346
 963 0142 494B     		ldr	r3, .L102
 964 0144 1A68     		ldr	r2, [r3]
 172:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 965              		.loc 1 172 9 view .LVU347
 966 0146 9407     		lsls	r4, r2, #30
 967 0148 02D5     		bpl	.L47
 172:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 968              		.loc 1 172 57 discriminator 1 view .LVU348
 969 014a CA68     		ldr	r2, [r1, #12]
 970 014c 012A     		cmp	r2, #1
 971 014e ADD1     		bne	.L48
 972              	.L47:
 180:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 973              		.loc 1 180 9 is_stmt 1 view .LVU349
 974 0150 1C68     		ldr	r4, [r3]
 975              	.LVL83:
 976              	.LBB135:
 977              	.LBI135:
 454:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 455:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 456:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 457:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 459:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 460:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 461:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 462:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 463:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 464:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 468:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 469:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 471:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 472:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 473:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 475:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 476:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 477:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 478:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 479:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 483:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 484:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 486:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 489:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   int32_t result;
 490:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 491:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 493:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 494:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 495:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 496:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 497:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 498:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Rotated value
 503:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 504:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 506:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** }
 508:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 509:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 510:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 511:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Breakpoint
 512:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 517:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 519:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 520:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** /**
 521:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 525:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****  */
 526:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 978              		.loc 2 526 57 view .LVU350
 979              	.LBB136:
 527:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 528:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 980              		.loc 2 528 3 view .LVU351
 529:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 530:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 981              		.loc 2 531 4 view .LVU352
 982 0152 F822     		movs	r2, #248
 983              		.syntax unified
 984              	@ 531 ".././hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 985 0154 92FAA2F2 		rbit r2, r2
 986              	@ 0 "" 2
 987              	.LVL84:
 532:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 533:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 535:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   {
 538:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     result <<= 1U;
 539:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     result |= value & 1U;
 540:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****     s--;
 541:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   }
 542:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #endif
 544:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h ****   return(result);
 988              		.loc 2 544 3 view .LVU353
 989              		.loc 2 544 3 is_stmt 0 view .LVU354
 990              		.thumb
 991              		.syntax unified
 992              	.LBE136:
 993              	.LBE135:
 180:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 994              		.loc 1 180 9 view .LVU355
 995 0158 B2FA82F0 		clz	r0, r2
 996 015c 0A69     		ldr	r2, [r1, #16]
 997 015e 8240     		lsls	r2, r2, r0
 998 0160 24F0F800 		bic	r0, r4, #248
 999 0164 0243     		orrs	r2, r2, r0
 1000 0166 1A60     		str	r2, [r3]
 172:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1001              		.loc 1 172 9 view .LVU356
 1002 0168 53E7     		b	.L44
 1003              	.L46:
 186:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1004              		.loc 1 186 7 is_stmt 1 view .LVU357
 186:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1005              		.loc 1 186 9 is_stmt 0 view .LVU358
 1006 016a CA68     		ldr	r2, [r1, #12]
 1007 016c 414B     		ldr	r3, .L102+12
 1008 016e DAB1     		cbz	r2, .L49
 189:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1009              		.loc 1 189 9 is_stmt 1 view .LVU359
 1010 0170 0122     		movs	r2, #1
 1011 0172 1A60     		str	r2, [r3]
 192:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1012              		.loc 1 192 9 view .LVU360
 192:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1013              		.loc 1 192 21 is_stmt 0 view .LVU361
 1014 0174 FFF7FEFF 		bl	HAL_GetTick
 1015              	.LVL85:
 195:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1016              		.loc 1 195 15 view .LVU362
 1017 0178 3B4C     		ldr	r4, .L102
 192:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1018              		.loc 1 192 21 view .LVU363
 1019 017a 0546     		mov	r5, r0
 1020              	.LVL86:
 195:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1021              		.loc 1 195 9 is_stmt 1 view .LVU364
 1022              	.L50:
 195:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1023              		.loc 1 195 14 view .LVU365
 195:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1024              		.loc 1 195 15 is_stmt 0 view .LVU366
 1025 017c 2368     		ldr	r3, [r4]
 195:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1026              		.loc 1 195 14 view .LVU367
 1027 017e 9807     		lsls	r0, r3, #30
 1028 0180 0CD5     		bpl	.L51
 204:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 1029              		.loc 1 204 9 is_stmt 1 view .LVU368
 1030 0182 2068     		ldr	r0, [r4]
 1031              	.LVL87:
 1032              	.LBB137:
 1033              	.LBI137:
 526:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 1034              		.loc 2 526 57 view .LVU369
 1035              	.LBB138:
 528:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 1036              		.loc 2 528 3 view .LVU370
 531:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 1037              		.loc 2 531 4 view .LVU371
 1038 0184 F823     		movs	r3, #248
 1039              		.syntax unified
 1040              	@ 531 ".././hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 1041 0186 93FAA3F3 		rbit r3, r3
 1042              	@ 0 "" 2
 1043              	.LVL88:
 1044              		.loc 2 544 3 view .LVU372
 1045              		.loc 2 544 3 is_stmt 0 view .LVU373
 1046              		.thumb
 1047              		.syntax unified
 1048              	.LBE138:
 1049              	.LBE137:
 204:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 1050              		.loc 1 204 9 view .LVU374
 1051 018a B3FA83F2 		clz	r2, r3
 1052 018e 0B69     		ldr	r3, [r1, #16]
 1053 0190 9340     		lsls	r3, r3, r2
 1054 0192 20F0F802 		bic	r2, r0, #248
 1055 0196 1343     		orrs	r3, r3, r2
 1056 0198 2360     		str	r3, [r4]
 1057 019a 3AE7     		b	.L44
 1058              	.L51:
 197:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1059              		.loc 1 197 11 is_stmt 1 view .LVU375
 197:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1060              		.loc 1 197 15 is_stmt 0 view .LVU376
 1061 019c FFF7FEFF 		bl	HAL_GetTick
 1062              	.LVL89:
 197:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1063              		.loc 1 197 29 view .LVU377
 1064 01a0 401B     		subs	r0, r0, r5
 197:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1065              		.loc 1 197 13 view .LVU378
 1066 01a2 0228     		cmp	r0, #2
 1067 01a4 EAD9     		bls	.L50
 1068 01a6 99E7     		b	.L42
 1069              	.LVL90:
 1070              	.L49:
 209:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1071              		.loc 1 209 9 is_stmt 1 view .LVU379
 1072 01a8 1A60     		str	r2, [r3]
 212:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1073              		.loc 1 212 9 view .LVU380
 212:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1074              		.loc 1 212 21 is_stmt 0 view .LVU381
 1075 01aa FFF7FEFF 		bl	HAL_GetTick
 1076              	.LVL91:
 215:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1077              		.loc 1 215 15 view .LVU382
 1078 01ae 2E4D     		ldr	r5, .L102
 212:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1079              		.loc 1 212 21 view .LVU383
 1080 01b0 0446     		mov	r4, r0
 1081              	.LVL92:
 215:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1082              		.loc 1 215 9 is_stmt 1 view .LVU384
 1083              	.L52:
 215:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1084              		.loc 1 215 14 view .LVU385
 215:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1085              		.loc 1 215 15 is_stmt 0 view .LVU386
 1086 01b2 2B68     		ldr	r3, [r5]
 215:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1087              		.loc 1 215 14 view .LVU387
 1088 01b4 9A07     		lsls	r2, r3, #30
 1089 01b6 7FF52CAF 		bpl	.L44
 217:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1090              		.loc 1 217 11 is_stmt 1 view .LVU388
 217:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1091              		.loc 1 217 15 is_stmt 0 view .LVU389
 1092 01ba FFF7FEFF 		bl	HAL_GetTick
 1093              	.LVL93:
 217:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1094              		.loc 1 217 29 view .LVU390
 1095 01be 001B     		subs	r0, r0, r4
 217:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1096              		.loc 1 217 13 view .LVU391
 1097 01c0 0228     		cmp	r0, #2
 1098 01c2 F6D9     		bls	.L52
 1099 01c4 8AE7     		b	.L42
 1100              	.LVL94:
 1101              	.L54:
 229:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1102              		.loc 1 229 5 is_stmt 1 view .LVU392
 232:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1103              		.loc 1 232 5 view .LVU393
 232:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1104              		.loc 1 232 7 is_stmt 0 view .LVU394
 1105 01c6 4A69     		ldr	r2, [r1, #20]
 1106 01c8 2B4B     		ldr	r3, .L102+16
 1107 01ca 7AB1     		cbz	r2, .L57
 235:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1108              		.loc 1 235 7 is_stmt 1 view .LVU395
 1109 01cc 0122     		movs	r2, #1
 1110 01ce 1A60     		str	r2, [r3]
 238:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1111              		.loc 1 238 7 view .LVU396
 238:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1112              		.loc 1 238 19 is_stmt 0 view .LVU397
 1113 01d0 FFF7FEFF 		bl	HAL_GetTick
 1114              	.LVL95:
 241:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1115              		.loc 1 241 13 view .LVU398
 1116 01d4 244D     		ldr	r5, .L102
 238:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1117              		.loc 1 238 19 view .LVU399
 1118 01d6 0446     		mov	r4, r0
 1119              	.LVL96:
 241:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1120              		.loc 1 241 7 is_stmt 1 view .LVU400
 1121              	.L58:
 241:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1122              		.loc 1 241 12 view .LVU401
 241:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1123              		.loc 1 241 13 is_stmt 0 view .LVU402
 1124 01d8 6B6F     		ldr	r3, [r5, #116]
 241:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1125              		.loc 1 241 12 view .LVU403
 1126 01da 9E07     		lsls	r6, r3, #30
 1127 01dc 3FF51DAF 		bmi	.L60
 243:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1128              		.loc 1 243 9 is_stmt 1 view .LVU404
 243:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1129              		.loc 1 243 13 is_stmt 0 view .LVU405
 1130 01e0 FFF7FEFF 		bl	HAL_GetTick
 1131              	.LVL97:
 243:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1132              		.loc 1 243 27 view .LVU406
 1133 01e4 001B     		subs	r0, r0, r4
 243:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1134              		.loc 1 243 11 view .LVU407
 1135 01e6 0228     		cmp	r0, #2
 1136 01e8 F6D9     		bls	.L58
 1137 01ea 77E7     		b	.L42
 1138              	.LVL98:
 1139              	.L57:
 252:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1140              		.loc 1 252 7 is_stmt 1 view .LVU408
 1141 01ec 1A60     		str	r2, [r3]
 255:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1142              		.loc 1 255 7 view .LVU409
 255:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1143              		.loc 1 255 19 is_stmt 0 view .LVU410
 1144 01ee FFF7FEFF 		bl	HAL_GetTick
 1145              	.LVL99:
 258:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1146              		.loc 1 258 13 view .LVU411
 1147 01f2 1D4D     		ldr	r5, .L102
 255:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1148              		.loc 1 255 19 view .LVU412
 1149 01f4 0446     		mov	r4, r0
 1150              	.LVL100:
 258:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1151              		.loc 1 258 7 is_stmt 1 view .LVU413
 1152              	.L61:
 258:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1153              		.loc 1 258 12 view .LVU414
 258:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1154              		.loc 1 258 13 is_stmt 0 view .LVU415
 1155 01f6 6B6F     		ldr	r3, [r5, #116]
 258:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1156              		.loc 1 258 12 view .LVU416
 1157 01f8 9807     		lsls	r0, r3, #30
 1158 01fa 7FF50EAF 		bpl	.L60
 260:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1159              		.loc 1 260 9 is_stmt 1 view .LVU417
 260:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1160              		.loc 1 260 13 is_stmt 0 view .LVU418
 1161 01fe FFF7FEFF 		bl	HAL_GetTick
 1162              	.LVL101:
 260:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1163              		.loc 1 260 27 view .LVU419
 1164 0202 001B     		subs	r0, r0, r4
 260:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1165              		.loc 1 260 11 view .LVU420
 1166 0204 0228     		cmp	r0, #2
 1167 0206 F6D9     		bls	.L61
 1168 0208 68E7     		b	.L42
 1169              	.LVL102:
 1170              	.L66:
 284:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1171              		.loc 1 284 7 is_stmt 1 view .LVU421
 284:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1172              		.loc 1 284 11 is_stmt 0 view .LVU422
 1173 020a FFF7FEFF 		bl	HAL_GetTick
 1174              	.LVL103:
 284:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1175              		.loc 1 284 25 view .LVU423
 1176 020e 401B     		subs	r0, r0, r5
 284:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1177              		.loc 1 284 9 view .LVU424
 1178 0210 0228     		cmp	r0, #2
 1179 0212 7FF619AF 		bls	.L65
 1180 0216 61E7     		b	.L42
 1181              	.L67:
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 1182              		.loc 1 291 5 is_stmt 1 discriminator 2 view .LVU425
 1183 0218 052B     		cmp	r3, #5
 1184 021a 04D1     		bne	.L69
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 1185              		.loc 1 291 5 discriminator 4 view .LVU426
 1186 021c 236F     		ldr	r3, [r4, #112]
 1187 021e 43F00403 		orr	r3, r3, #4
 1188 0222 2367     		str	r3, [r4, #112]
 1189 0224 19E7     		b	.L101
 1190              	.L69:
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 1191              		.loc 1 291 5 discriminator 5 view .LVU427
 1192 0226 226F     		ldr	r2, [r4, #112]
 1193 0228 22F00102 		bic	r2, r2, #1
 1194 022c 2267     		str	r2, [r4, #112]
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 1195              		.loc 1 291 5 discriminator 5 view .LVU428
 1196 022e 226F     		ldr	r2, [r4, #112]
 1197 0230 22F00402 		bic	r2, r2, #4
 1198 0234 2267     		str	r2, [r4, #112]
 291:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Check the LSE State */
 1199              		.loc 1 291 5 discriminator 5 view .LVU429
 293:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1200              		.loc 1 293 5 discriminator 5 view .LVU430
 293:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1201              		.loc 1 293 7 is_stmt 0 discriminator 5 view .LVU431
 1202 0236 002B     		cmp	r3, #0
 1203 0238 7FF413AF 		bne	.L68
 310:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1204              		.loc 1 310 7 is_stmt 1 view .LVU432
 310:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1205              		.loc 1 310 19 is_stmt 0 view .LVU433
 1206 023c FFF7FEFF 		bl	HAL_GetTick
 1207              	.LVL104:
 315:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1208              		.loc 1 315 11 view .LVU434
 1209 0240 41F28836 		movw	r6, #5000
 310:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1210              		.loc 1 310 19 view .LVU435
 1211 0244 0546     		mov	r5, r0
 1212              	.LVL105:
 313:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1213              		.loc 1 313 7 is_stmt 1 view .LVU436
 1214              	.L73:
 313:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1215              		.loc 1 313 12 view .LVU437
 313:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1216              		.loc 1 313 13 is_stmt 0 view .LVU438
 1217 0246 236F     		ldr	r3, [r4, #112]
 313:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1218              		.loc 1 313 12 view .LVU439
 1219 0248 9F07     		lsls	r7, r3, #30
 1220 024a 7FF514AF 		bpl	.L56
 315:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1221              		.loc 1 315 9 is_stmt 1 view .LVU440
 315:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1222              		.loc 1 315 13 is_stmt 0 view .LVU441
 1223 024e FFF7FEFF 		bl	HAL_GetTick
 1224              	.LVL106:
 315:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1225              		.loc 1 315 27 view .LVU442
 1226 0252 401B     		subs	r0, r0, r5
 315:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1227              		.loc 1 315 11 view .LVU443
 1228 0254 B042     		cmp	r0, r6
 1229 0256 F6D9     		bls	.L73
 1230 0258 40E7     		b	.L42
 1231              	.LVL107:
 1232              	.L72:
 301:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1233              		.loc 1 301 9 is_stmt 1 view .LVU444
 301:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1234              		.loc 1 301 13 is_stmt 0 view .LVU445
 1235 025a FFF7FEFF 		bl	HAL_GetTick
 1236              	.LVL108:
 301:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1237              		.loc 1 301 27 view .LVU446
 1238 025e 001B     		subs	r0, r0, r4
 301:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1239              		.loc 1 301 11 view .LVU447
 1240 0260 B042     		cmp	r0, r6
 1241 0262 7FF604AF 		bls	.L71
 1242 0266 39E7     		b	.L42
 1243              	.L103:
 1244              		.align	2
 1245              	.L102:
 1246 0268 00380240 		.word	1073887232
 1247 026c 00700040 		.word	1073770496
 1248 0270 00E1F505 		.word	100000000
 1249 0274 00004742 		.word	1111949312
 1250 0278 800E4742 		.word	1111953024
 1251              	.LVL109:
 1252              	.L63:
 328:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1253              		.loc 1 328 5 is_stmt 1 view .LVU448
 328:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1254              		.loc 1 328 8 is_stmt 0 view .LVU449
 1255 027c 2D4C     		ldr	r4, .L104
 1256 027e A368     		ldr	r3, [r4, #8]
 1257 0280 03F00C03 		and	r3, r3, #12
 328:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1258              		.loc 1 328 7 view .LVU450
 1259 0284 082B     		cmp	r3, #8
 1260 0286 3FF411AF 		beq	.L48
 330:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1261              		.loc 1 330 7 is_stmt 1 view .LVU451
 1262 028a 2B4D     		ldr	r5, .L104+4
 1263 028c 0023     		movs	r3, #0
 330:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1264              		.loc 1 330 9 is_stmt 0 view .LVU452
 1265 028e 022A     		cmp	r2, #2
 340:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1266              		.loc 1 340 9 view .LVU453
 1267 0290 2B60     		str	r3, [r5]
 330:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1268              		.loc 1 330 9 view .LVU454
 1269 0292 40D1     		bne	.L75
 333:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 1270              		.loc 1 333 9 is_stmt 1 view .LVU455
 334:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 1271              		.loc 1 334 9 view .LVU456
 335:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 1272              		.loc 1 335 9 view .LVU457
 336:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 1273              		.loc 1 336 9 view .LVU458
 337:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1274              		.loc 1 337 9 view .LVU459
 340:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1275              		.loc 1 340 9 view .LVU460
 343:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1276              		.loc 1 343 9 view .LVU461
 343:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1277              		.loc 1 343 21 is_stmt 0 view .LVU462
 1278 0294 FFF7FEFF 		bl	HAL_GetTick
 1279              	.LVL110:
 348:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1280              		.loc 1 348 13 view .LVU463
 1281 0298 284F     		ldr	r7, .L104+8
 343:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1282              		.loc 1 343 21 view .LVU464
 1283 029a 0646     		mov	r6, r0
 1284              	.LVL111:
 346:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1285              		.loc 1 346 9 is_stmt 1 view .LVU465
 1286              	.L76:
 346:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1287              		.loc 1 346 14 view .LVU466
 346:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1288              		.loc 1 346 15 is_stmt 0 view .LVU467
 1289 029c 2368     		ldr	r3, [r4]
 346:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1290              		.loc 1 346 14 view .LVU468
 1291 029e 9801     		lsls	r0, r3, #6
 1292 02a0 33D4     		bmi	.L77
 355:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 1293              		.loc 1 355 9 is_stmt 1 view .LVU469
 1294              	.LVL112:
 1295              	.LBB139:
 1296              	.LBI139:
 526:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 1297              		.loc 2 526 57 view .LVU470
 1298              	.LBB140:
 528:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 1299              		.loc 2 528 3 view .LVU471
 531:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 1300              		.loc 2 531 4 view .LVU472
 1301 02a2 47F6C077 		movw	r7, #32704
 1302              		.syntax unified
 1303              	@ 531 ".././hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 1304 02a6 97FAA7F7 		rbit r7, r7
 1305              	@ 0 "" 2
 1306              	.LVL113:
 1307              		.loc 2 544 3 view .LVU473
 1308              		.loc 2 544 3 is_stmt 0 view .LVU474
 1309              		.thumb
 1310              		.syntax unified
 1311              	.LBE140:
 1312              	.LBE139:
 1313              	.LBB141:
 1314              	.LBB142:
 531:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 1315              		.loc 2 531 4 view .LVU475
 1316 02aa 4FF44032 		mov	r2, #196608
 1317              	.LBE142:
 1318              	.LBE141:
 355:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 1319              		.loc 1 355 9 view .LVU476
 1320 02ae B7FA87F7 		clz	r7, r7
 1321              	.LVL114:
 1322              	.LBB144:
 1323              	.LBI141:
 526:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 1324              		.loc 2 526 57 is_stmt 1 view .LVU477
 1325              	.LBB143:
 528:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 1326              		.loc 2 528 3 view .LVU478
 531:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 1327              		.loc 2 531 4 view .LVU479
 1328              		.syntax unified
 1329              	@ 531 ".././hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 1330 02b2 92FAA2F2 		rbit r2, r2
 1331              	@ 0 "" 2
 1332              	.LVL115:
 1333              		.loc 2 544 3 view .LVU480
 1334              		.loc 2 544 3 is_stmt 0 view .LVU481
 1335              		.thumb
 1336              		.syntax unified
 1337              	.LBE143:
 1338              	.LBE144:
 1339              	.LBB145:
 1340              	.LBB146:
 531:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 1341              		.loc 2 531 4 view .LVU482
 1342 02b6 4FF07060 		mov	r0, #251658240
 1343              	.LBE146:
 1344              	.LBE145:
 355:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 1345              		.loc 1 355 9 view .LVU483
 1346 02ba B2FA82F6 		clz	r6, r2
 1347              	.LVL116:
 1348              	.LBB148:
 1349              	.LBI145:
 526:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** {
 1350              		.loc 2 526 57 is_stmt 1 view .LVU484
 1351              	.LBB147:
 528:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** 
 1352              		.loc 2 528 3 view .LVU485
 531:.././hal/stm32f4/CMSIS/core/cmsis_gcc.h **** #else
 1353              		.loc 2 531 4 view .LVU486
 1354              		.syntax unified
 1355              	@ 531 ".././hal/stm32f4/CMSIS/core/cmsis_gcc.h" 1
 1356 02be 90FAA0F0 		rbit r0, r0
 1357              	@ 0 "" 2
 1358              	.LVL117:
 1359              		.loc 2 544 3 view .LVU487
 1360              		.loc 2 544 3 is_stmt 0 view .LVU488
 1361              		.thumb
 1362              		.syntax unified
 1363              	.LBE147:
 1364              	.LBE148:
 355:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 1365              		.loc 1 355 9 view .LVU489
 1366 02c2 D1E90732 		ldrd	r3, r2, [r1, #28]
 1367 02c6 1343     		orrs	r3, r3, r2
 1368 02c8 4A6A     		ldr	r2, [r1, #36]
 1369 02ca 02FA07F7 		lsl	r7, r2, r7
 1370 02ce 8A6A     		ldr	r2, [r1, #40]
 1371 02d0 5208     		lsrs	r2, r2, #1
 1372 02d2 013A     		subs	r2, r2, #1
 1373 02d4 B240     		lsls	r2, r2, r6
 1374 02d6 3B43     		orrs	r3, r3, r7
 1375 02d8 1343     		orrs	r3, r3, r2
 1376 02da CA6A     		ldr	r2, [r1, #44]
 1377 02dc B0FA80F0 		clz	r0, r0
 1378 02e0 02FA00F0 		lsl	r0, r2, r0
 1379 02e4 0343     		orrs	r3, r3, r0
 1380 02e6 6360     		str	r3, [r4, #4]
 361:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1381              		.loc 1 361 9 is_stmt 1 view .LVU490
 1382 02e8 0123     		movs	r3, #1
 1383 02ea 2B60     		str	r3, [r5]
 364:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1384              		.loc 1 364 9 view .LVU491
 364:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1385              		.loc 1 364 21 is_stmt 0 view .LVU492
 1386 02ec FFF7FEFF 		bl	HAL_GetTick
 1387              	.LVL118:
 367:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1388              		.loc 1 367 15 view .LVU493
 1389 02f0 104C     		ldr	r4, .L104
 369:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1390              		.loc 1 369 13 view .LVU494
 1391 02f2 124D     		ldr	r5, .L104+8
 364:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1392              		.loc 1 364 21 view .LVU495
 1393 02f4 0146     		mov	r1, r0
 1394              	.LVL119:
 367:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1395              		.loc 1 367 9 is_stmt 1 view .LVU496
 1396              	.L78:
 367:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1397              		.loc 1 367 14 view .LVU497
 367:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1398              		.loc 1 367 15 is_stmt 0 view .LVU498
 1399 02f6 2368     		ldr	r3, [r4]
 367:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1400              		.loc 1 367 14 view .LVU499
 1401 02f8 9A01     		lsls	r2, r3, #6
 1402 02fa 3FF5C0AE 		bmi	.L64
 369:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1403              		.loc 1 369 11 is_stmt 1 view .LVU500
 369:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1404              		.loc 1 369 15 is_stmt 0 view .LVU501
 1405 02fe FFF7FEFF 		bl	HAL_GetTick
 1406              	.LVL120:
 369:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1407              		.loc 1 369 29 view .LVU502
 1408 0302 401A     		subs	r0, r0, r1
 369:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1409              		.loc 1 369 13 view .LVU503
 1410 0304 A842     		cmp	r0, r5
 1411 0306 F6D9     		bls	.L78
 1412 0308 E8E6     		b	.L42
 1413              	.LVL121:
 1414              	.L77:
 348:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1415              		.loc 1 348 11 is_stmt 1 view .LVU504
 348:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1416              		.loc 1 348 15 is_stmt 0 view .LVU505
 1417 030a FFF7FEFF 		bl	HAL_GetTick
 1418              	.LVL122:
 348:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1419              		.loc 1 348 29 view .LVU506
 1420 030e 801B     		subs	r0, r0, r6
 348:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1421              		.loc 1 348 13 view .LVU507
 1422 0310 B842     		cmp	r0, r7
 1423 0312 C3D9     		bls	.L76
 1424 0314 E2E6     		b	.L42
 1425              	.LVL123:
 1426              	.L75:
 378:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1427              		.loc 1 378 9 is_stmt 1 view .LVU508
 381:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1428              		.loc 1 381 9 view .LVU509
 381:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1429              		.loc 1 381 21 is_stmt 0 view .LVU510
 1430 0316 FFF7FEFF 		bl	HAL_GetTick
 1431              	.LVL124:
 386:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1432              		.loc 1 386 13 view .LVU511
 1433 031a 084D     		ldr	r5, .L104+8
 381:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1434              		.loc 1 381 21 view .LVU512
 1435 031c 0146     		mov	r1, r0
 1436              	.LVL125:
 384:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1437              		.loc 1 384 9 is_stmt 1 view .LVU513
 1438              	.L80:
 384:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1439              		.loc 1 384 14 view .LVU514
 384:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1440              		.loc 1 384 15 is_stmt 0 view .LVU515
 1441 031e 2368     		ldr	r3, [r4]
 384:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1442              		.loc 1 384 14 view .LVU516
 1443 0320 9B01     		lsls	r3, r3, #6
 1444 0322 7FF5ACAE 		bpl	.L64
 386:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1445              		.loc 1 386 11 is_stmt 1 view .LVU517
 386:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1446              		.loc 1 386 15 is_stmt 0 view .LVU518
 1447 0326 FFF7FEFF 		bl	HAL_GetTick
 1448              	.LVL126:
 386:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1449              		.loc 1 386 29 view .LVU519
 1450 032a 401A     		subs	r0, r0, r1
 386:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           {
 1451              		.loc 1 386 13 view .LVU520
 1452 032c A842     		cmp	r0, r5
 1453 032e F6D9     		bls	.L80
 1454 0330 D4E6     		b	.L42
 1455              	.L105:
 1456 0332 00BF     		.align	2
 1457              	.L104:
 1458 0334 00380240 		.word	1073887232
 1459 0338 60004742 		.word	1111949408
 1460 033c 80841E00 		.word	2000000
 1461              		.cfi_endproc
 1462              	.LFE128:
 1464              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1465              		.align	1
 1466              		.global	HAL_RCC_ClockConfig
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1470              		.fpu softvfp
 1472              	HAL_RCC_ClockConfig:
 1473              	.LVL127:
 1474              	.LFB129:
 427:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1475              		.loc 1 427 1 is_stmt 1 view -0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
 1478              		@ frame_needed = 0, uses_anonymous_args = 0
 428:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1479              		.loc 1 428 3 view .LVU522
 431:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1480              		.loc 1 431 3 view .LVU523
 432:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1481              		.loc 1 432 3 view .LVU524
 439:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1482              		.loc 1 439 3 view .LVU525
 427:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1483              		.loc 1 427 1 is_stmt 0 view .LVU526
 1484 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1485              	.LCFI4:
 1486              		.cfi_def_cfa_offset 24
 1487              		.cfi_offset 3, -24
 1488              		.cfi_offset 4, -20
 1489              		.cfi_offset 5, -16
 1490              		.cfi_offset 6, -12
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 439:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1493              		.loc 1 439 23 view .LVU527
 1494 0002 494B     		ldr	r3, .L153
 1495 0004 1A68     		ldr	r2, [r3]
 439:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1496              		.loc 1 439 29 view .LVU528
 1497 0006 02F00F02 		and	r2, r2, #15
 439:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1498              		.loc 1 439 5 view .LVU529
 1499 000a 8A42     		cmp	r2, r1
 427:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1500              		.loc 1 427 1 view .LVU530
 1501 000c 0546     		mov	r5, r0
 439:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1502              		.loc 1 439 5 view .LVU531
 1503 000e 1AD3     		bcc	.L107
 1504              	.L110:
 453:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1505              		.loc 1 453 3 is_stmt 1 view .LVU532
 453:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1506              		.loc 1 453 25 is_stmt 0 view .LVU533
 1507 0010 2A68     		ldr	r2, [r5]
 453:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1508              		.loc 1 453 5 view .LVU534
 1509 0012 9007     		lsls	r0, r2, #30
 1510              	.LVL128:
 453:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1511              		.loc 1 453 5 view .LVU535
 1512 0014 20D4     		bmi	.L108
 1513              	.L109:
 460:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1514              		.loc 1 460 3 is_stmt 1 view .LVU536
 460:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1515              		.loc 1 460 5 is_stmt 0 view .LVU537
 1516 0016 D207     		lsls	r2, r2, #31
 1517 0018 26D4     		bmi	.L112
 1518              	.LVL129:
 1519              	.L122:
 540:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1520              		.loc 1 540 3 is_stmt 1 view .LVU538
 540:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1521              		.loc 1 540 23 is_stmt 0 view .LVU539
 1522 001a 434B     		ldr	r3, .L153
 1523 001c 1A68     		ldr	r2, [r3]
 540:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1524              		.loc 1 540 29 view .LVU540
 1525 001e 02F00F02 		and	r2, r2, #15
 540:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1526              		.loc 1 540 5 view .LVU541
 1527 0022 8A42     		cmp	r2, r1
 1528 0024 70D8     		bhi	.L113
 1529              	.L114:
 554:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1530              		.loc 1 554 3 is_stmt 1 view .LVU542
 554:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1531              		.loc 1 554 25 is_stmt 0 view .LVU543
 1532 0026 2868     		ldr	r0, [r5]
 554:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1533              		.loc 1 554 5 view .LVU544
 1534 0028 4307     		lsls	r3, r0, #29
 1535 002a 75D4     		bmi	.L131
 1536              	.LVL130:
 1537              	.L132:
 561:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1538              		.loc 1 561 3 is_stmt 1 view .LVU545
 561:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1539              		.loc 1 561 5 is_stmt 0 view .LVU546
 1540 002c 10F00800 		ands	r0, r0, #8
 1541 0030 11D0     		beq	.L111
 563:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1542              		.loc 1 563 5 is_stmt 1 view .LVU547
 564:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 1543              		.loc 1 564 5 view .LVU548
 1544 0032 3E4A     		ldr	r2, .L153+4
 1545 0034 2969     		ldr	r1, [r5, #16]
 1546 0036 9368     		ldr	r3, [r2, #8]
 1547 0038 23F46043 		bic	r3, r3, #57344
 1548 003c 43EAC103 		orr	r3, r3, r1, lsl #3
 1549 0040 9360     		str	r3, [r2, #8]
 573:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 1550              		.loc 1 573 10 is_stmt 0 view .LVU549
 1551 0042 0020     		movs	r0, #0
 1552 0044 07E0     		b	.L111
 1553              	.LVL131:
 1554              	.L107:
 442:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1555              		.loc 1 442 5 is_stmt 1 view .LVU550
 1556 0046 CAB2     		uxtb	r2, r1
 1557 0048 1A70     		strb	r2, [r3]
 446:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1558              		.loc 1 446 5 view .LVU551
 446:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1559              		.loc 1 446 14 is_stmt 0 view .LVU552
 1560 004a 1B68     		ldr	r3, [r3]
 446:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1561              		.loc 1 446 20 view .LVU553
 1562 004c 03F00F03 		and	r3, r3, #15
 446:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1563              		.loc 1 446 7 view .LVU554
 1564 0050 8B42     		cmp	r3, r1
 1565 0052 DDD0     		beq	.L110
 1566              	.LVL132:
 1567              	.L116:
 448:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 1568              		.loc 1 448 14 view .LVU555
 1569 0054 0120     		movs	r0, #1
 1570              	.LVL133:
 1571              	.L111:
 574:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1572              		.loc 1 574 1 view .LVU556
 1573 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1574              	.LVL134:
 1575              	.L108:
 455:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1576              		.loc 1 455 5 is_stmt 1 view .LVU557
 456:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 1577              		.loc 1 456 5 view .LVU558
 1578 0058 3448     		ldr	r0, .L153+4
 1579 005a AC68     		ldr	r4, [r5, #8]
 1580 005c 8368     		ldr	r3, [r0, #8]
 1581 005e 23F0F003 		bic	r3, r3, #240
 1582 0062 2343     		orrs	r3, r3, r4
 1583 0064 8360     		str	r3, [r0, #8]
 1584 0066 D6E7     		b	.L109
 1585              	.L112:
 462:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1586              		.loc 1 462 5 view .LVU559
 465:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1587              		.loc 1 465 5 view .LVU560
 465:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1588              		.loc 1 465 25 is_stmt 0 view .LVU561
 1589 0068 6A68     		ldr	r2, [r5, #4]
 1590 006a 304B     		ldr	r3, .L153+4
 465:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1591              		.loc 1 465 7 view .LVU562
 1592 006c 012A     		cmp	r2, #1
 1593 006e 1DD1     		bne	.L115
 468:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1594              		.loc 1 468 7 is_stmt 1 view .LVU563
 468:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1595              		.loc 1 468 10 is_stmt 0 view .LVU564
 1596 0070 1B68     		ldr	r3, [r3]
 468:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1597              		.loc 1 468 9 view .LVU565
 1598 0072 13F4003F 		tst	r3, #131072
 1599              	.L151:
 487:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1600              		.loc 1 487 9 view .LVU566
 1601 0076 EDD0     		beq	.L116
 493:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get Start Tick*/
 1602              		.loc 1 493 5 is_stmt 1 view .LVU567
 1603 0078 2C4C     		ldr	r4, .L153+4
 1604 007a A368     		ldr	r3, [r4, #8]
 1605 007c 23F00303 		bic	r3, r3, #3
 1606 0080 1343     		orrs	r3, r3, r2
 1607 0082 A360     		str	r3, [r4, #8]
 495:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1608              		.loc 1 495 5 view .LVU568
 495:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1609              		.loc 1 495 17 is_stmt 0 view .LVU569
 1610 0084 FFF7FEFF 		bl	HAL_GetTick
 1611              	.LVL135:
 497:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1612              		.loc 1 497 25 view .LVU570
 1613 0088 6B68     		ldr	r3, [r5, #4]
 497:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1614              		.loc 1 497 7 view .LVU571
 1615 008a 012B     		cmp	r3, #1
 495:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1616              		.loc 1 495 17 view .LVU572
 1617 008c 0646     		mov	r6, r0
 1618              	.LVL136:
 497:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1619              		.loc 1 497 5 is_stmt 1 view .LVU573
 501:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1620              		.loc 1 501 11 is_stmt 0 view .LVU574
 1621 008e 41F28837 		movw	r7, #5000
 497:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1622              		.loc 1 497 7 view .LVU575
 1623 0092 15D1     		bne	.L147
 1624              	.LVL137:
 1625              	.L119:
 499:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1626              		.loc 1 499 13 is_stmt 1 view .LVU576
 499:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1627              		.loc 1 499 14 is_stmt 0 view .LVU577
 1628 0094 A368     		ldr	r3, [r4, #8]
 1629 0096 03F00C03 		and	r3, r3, #12
 499:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1630              		.loc 1 499 13 view .LVU578
 1631 009a 042B     		cmp	r3, #4
 1632 009c BDD0     		beq	.L122
 501:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1633              		.loc 1 501 9 is_stmt 1 view .LVU579
 501:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1634              		.loc 1 501 13 is_stmt 0 view .LVU580
 1635 009e FFF7FEFF 		bl	HAL_GetTick
 1636              	.LVL138:
 501:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1637              		.loc 1 501 27 view .LVU581
 1638 00a2 801B     		subs	r0, r0, r6
 501:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1639              		.loc 1 501 11 view .LVU582
 1640 00a4 B842     		cmp	r0, r7
 1641 00a6 F5D9     		bls	.L119
 1642              	.L125:
 503:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 1643              		.loc 1 503 18 view .LVU583
 1644 00a8 0320     		movs	r0, #3
 1645 00aa D4E7     		b	.L111
 1646              	.LVL139:
 1647              	.L115:
 474:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1648              		.loc 1 474 10 is_stmt 1 view .LVU584
 474:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1649              		.loc 1 474 76 is_stmt 0 view .LVU585
 1650 00ac 901E     		subs	r0, r2, #2
 474:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1651              		.loc 1 474 12 view .LVU586
 1652 00ae 0128     		cmp	r0, #1
 478:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1653              		.loc 1 478 10 view .LVU587
 1654 00b0 1B68     		ldr	r3, [r3]
 474:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1655              		.loc 1 474 12 view .LVU588
 1656 00b2 02D8     		bhi	.L118
 478:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1657              		.loc 1 478 7 is_stmt 1 view .LVU589
 478:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1658              		.loc 1 478 9 is_stmt 0 view .LVU590
 1659 00b4 13F0007F 		tst	r3, #33554432
 1660 00b8 DDE7     		b	.L151
 1661              	.L118:
 487:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1662              		.loc 1 487 7 is_stmt 1 view .LVU591
 487:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1663              		.loc 1 487 9 is_stmt 0 view .LVU592
 1664 00ba 13F0020F 		tst	r3, #2
 1665 00be DAE7     		b	.L151
 1666              	.LVL140:
 1667              	.L147:
 507:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1668              		.loc 1 507 10 is_stmt 1 view .LVU593
 507:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1669              		.loc 1 507 12 is_stmt 0 view .LVU594
 1670 00c0 022B     		cmp	r3, #2
 1671 00c2 0AD1     		bne	.L148
 1672              	.LVL141:
 1673              	.L123:
 509:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1674              		.loc 1 509 13 is_stmt 1 view .LVU595
 509:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1675              		.loc 1 509 14 is_stmt 0 view .LVU596
 1676 00c4 A368     		ldr	r3, [r4, #8]
 1677 00c6 03F00C03 		and	r3, r3, #12
 509:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1678              		.loc 1 509 13 view .LVU597
 1679 00ca 082B     		cmp	r3, #8
 1680 00cc A5D0     		beq	.L122
 511:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1681              		.loc 1 511 9 is_stmt 1 view .LVU598
 511:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1682              		.loc 1 511 13 is_stmt 0 view .LVU599
 1683 00ce FFF7FEFF 		bl	HAL_GetTick
 1684              	.LVL142:
 511:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1685              		.loc 1 511 27 view .LVU600
 1686 00d2 801B     		subs	r0, r0, r6
 511:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1687              		.loc 1 511 11 view .LVU601
 1688 00d4 B842     		cmp	r0, r7
 1689 00d6 F5D9     		bls	.L123
 1690 00d8 E6E7     		b	.L125
 1691              	.LVL143:
 1692              	.L148:
 517:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1693              		.loc 1 517 10 is_stmt 1 view .LVU602
 517:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1694              		.loc 1 517 12 is_stmt 0 view .LVU603
 1695 00da 032B     		cmp	r3, #3
 1696 00dc 0FD1     		bne	.L128
 1697              	.LVL144:
 1698              	.L127:
 519:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1699              		.loc 1 519 13 is_stmt 1 view .LVU604
 519:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1700              		.loc 1 519 14 is_stmt 0 view .LVU605
 1701 00de A368     		ldr	r3, [r4, #8]
 1702 00e0 03F00C03 		and	r3, r3, #12
 519:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1703              		.loc 1 519 13 view .LVU606
 1704 00e4 0C2B     		cmp	r3, #12
 1705 00e6 98D0     		beq	.L122
 521:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1706              		.loc 1 521 9 is_stmt 1 view .LVU607
 521:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1707              		.loc 1 521 13 is_stmt 0 view .LVU608
 1708 00e8 FFF7FEFF 		bl	HAL_GetTick
 1709              	.LVL145:
 521:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1710              		.loc 1 521 27 view .LVU609
 1711 00ec 801B     		subs	r0, r0, r6
 521:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1712              		.loc 1 521 11 view .LVU610
 1713 00ee B842     		cmp	r0, r7
 1714 00f0 F5D9     		bls	.L127
 1715 00f2 D9E7     		b	.L125
 1716              	.L130:
 531:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1717              		.loc 1 531 9 is_stmt 1 view .LVU611
 531:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1718              		.loc 1 531 13 is_stmt 0 view .LVU612
 1719 00f4 FFF7FEFF 		bl	HAL_GetTick
 1720              	.LVL146:
 531:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1721              		.loc 1 531 27 view .LVU613
 1722 00f8 801B     		subs	r0, r0, r6
 531:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 1723              		.loc 1 531 11 view .LVU614
 1724 00fa B842     		cmp	r0, r7
 1725 00fc D4D8     		bhi	.L125
 1726              	.L128:
 529:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1727              		.loc 1 529 12 is_stmt 1 view .LVU615
 529:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1728              		.loc 1 529 13 is_stmt 0 view .LVU616
 1729 00fe A368     		ldr	r3, [r4, #8]
 529:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1730              		.loc 1 529 12 view .LVU617
 1731 0100 13F00C0F 		tst	r3, #12
 1732 0104 F6D1     		bne	.L130
 1733 0106 88E7     		b	.L122
 1734              	.LVL147:
 1735              	.L113:
 543:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1736              		.loc 1 543 5 is_stmt 1 view .LVU618
 1737 0108 CAB2     		uxtb	r2, r1
 1738 010a 1A70     		strb	r2, [r3]
 547:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1739              		.loc 1 547 5 view .LVU619
 547:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1740              		.loc 1 547 14 is_stmt 0 view .LVU620
 1741 010c 1B68     		ldr	r3, [r3]
 547:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1742              		.loc 1 547 20 view .LVU621
 1743 010e 03F00F03 		and	r3, r3, #15
 547:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1744              		.loc 1 547 7 view .LVU622
 1745 0112 8B42     		cmp	r3, r1
 1746 0114 9ED1     		bne	.L116
 1747 0116 86E7     		b	.L114
 1748              	.L131:
 556:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1749              		.loc 1 556 5 is_stmt 1 view .LVU623
 557:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 1750              		.loc 1 557 5 view .LVU624
 1751 0118 0449     		ldr	r1, .L153+4
 1752              	.LVL148:
 557:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 1753              		.loc 1 557 5 is_stmt 0 view .LVU625
 1754 011a EB68     		ldr	r3, [r5, #12]
 1755 011c 8A68     		ldr	r2, [r1, #8]
 1756 011e 22F4E052 		bic	r2, r2, #7168
 1757 0122 1A43     		orrs	r2, r2, r3
 1758 0124 8A60     		str	r2, [r1, #8]
 1759 0126 81E7     		b	.L132
 1760              	.L154:
 1761              		.align	2
 1762              	.L153:
 1763 0128 003C0240 		.word	1073888256
 1764 012c 00380240 		.word	1073887232
 1765              		.cfi_endproc
 1766              	.LFE129:
 1768              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1769              		.align	1
 1770              		.global	HAL_RCC_GetPCLK1Freq
 1771              		.syntax unified
 1772              		.thumb
 1773              		.thumb_func
 1774              		.fpu softvfp
 1776              	HAL_RCC_GetPCLK1Freq:
 1777              	.LFB130:
 583:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 1778              		.loc 1 583 1 is_stmt 1 view -0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 0
 1781              		@ frame_needed = 0, uses_anonymous_args = 0
 1782              		@ link register save eliminated.
 586:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 1783              		.loc 1 586 3 view .LVU627
 587:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1784              		.loc 1 587 1 is_stmt 0 view .LVU628
 1785 0000 0048     		ldr	r0, .L156
 1786 0002 7047     		bx	lr
 1787              	.L157:
 1788              		.align	2
 1789              	.L156:
 1790 0004 10757000 		.word	7370000
 1791              		.cfi_endproc
 1792              	.LFE130:
 1794              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1795              		.align	1
 1796              		.global	HAL_RCC_GetPCLK2Freq
 1797              		.syntax unified
 1798              		.thumb
 1799              		.thumb_func
 1800              		.fpu softvfp
 1802              	HAL_RCC_GetPCLK2Freq:
 1803              	.LFB146:
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 0
 1806              		@ frame_needed = 0, uses_anonymous_args = 0
 1807              		@ link register save eliminated.
 1808 0000 0048     		ldr	r0, .L159
 1809 0002 7047     		bx	lr
 1810              	.L160:
 1811              		.align	2
 1812              	.L159:
 1813 0004 10757000 		.word	7370000
 1814              		.cfi_endproc
 1815              	.LFE146:
 1817              		.section	.text.HAL_GPIO_Init,"ax",%progbits
 1818              		.align	1
 1819              		.global	HAL_GPIO_Init
 1820              		.syntax unified
 1821              		.thumb
 1822              		.thumb_func
 1823              		.fpu softvfp
 1825              	HAL_GPIO_Init:
 1826              	.LVL149:
 1827              	.LFB132:
 623:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t position;
 1828              		.loc 1 623 1 is_stmt 1 view -0
 1829              		.cfi_startproc
 1830              		@ args = 0, pretend = 0, frame = 16
 1831              		@ frame_needed = 0, uses_anonymous_args = 0
 624:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t ioposition = 0x00U;
 1832              		.loc 1 624 3 view .LVU630
 625:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 1833              		.loc 1 625 3 view .LVU631
 626:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 1834              		.loc 1 626 3 view .LVU632
 627:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1835              		.loc 1 627 3 view .LVU633
 630:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 1836              		.loc 1 630 3 view .LVU634
 631:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 1837              		.loc 1 631 3 view .LVU635
 632:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 1838              		.loc 1 632 3 view .LVU636
 633:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1839              		.loc 1 633 3 view .LVU637
 636:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1840              		.loc 1 636 3 view .LVU638
 636:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1841              		.loc 1 636 22 view .LVU639
 623:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t position;
 1842              		.loc 1 623 1 is_stmt 0 view .LVU640
 1843 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1844              	.LCFI5:
 1845              		.cfi_def_cfa_offset 36
 1846              		.cfi_offset 4, -36
 1847              		.cfi_offset 5, -32
 1848              		.cfi_offset 6, -28
 1849              		.cfi_offset 7, -24
 1850              		.cfi_offset 8, -20
 1851              		.cfi_offset 9, -16
 1852              		.cfi_offset 10, -12
 1853              		.cfi_offset 11, -8
 1854              		.cfi_offset 14, -4
 702:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 1855              		.loc 1 702 14 view .LVU641
 1856 0004 6E4A     		ldr	r2, .L189
 1857              	.LBB149:
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1858              		.loc 1 694 9 view .LVU642
 1859 0006 DFF8C081 		ldr	r8, .L189+8
 1860              	.LBE149:
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 1861              		.loc 1 698 29 view .LVU643
 1862 000a DFF8C091 		ldr	r9, .L189+12
 623:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint32_t position;
 1863              		.loc 1 623 1 view .LVU644
 1864 000e 85B0     		sub	sp, sp, #20
 1865              	.LCFI6:
 1866              		.cfi_def_cfa_offset 56
 636:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 1867              		.loc 1 636 16 view .LVU645
 1868 0010 0023     		movs	r3, #0
 1869              	.LVL150:
 1870              	.L176:
 639:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get the current IO position */
 1871              		.loc 1 639 5 is_stmt 1 view .LVU646
 641:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1872              		.loc 1 641 15 is_stmt 0 view .LVU647
 1873 0012 0C68     		ldr	r4, [r1]
 639:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get the current IO position */
 1874              		.loc 1 639 16 view .LVU648
 1875 0014 0127     		movs	r7, #1
 1876 0016 9F40     		lsls	r7, r7, r3
 1877              	.LVL151:
 641:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1878              		.loc 1 641 5 is_stmt 1 view .LVU649
 641:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1879              		.loc 1 641 15 is_stmt 0 view .LVU650
 1880 0018 07EA0405 		and	r5, r7, r4
 1881              	.LVL152:
 643:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1882              		.loc 1 643 5 is_stmt 1 view .LVU651
 643:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 1883              		.loc 1 643 7 is_stmt 0 view .LVU652
 1884 001c 37EA0404 		bics	r4, r7, r4
 1885 0020 40F0B980 		bne	.L163
 647:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1886              		.loc 1 647 7 is_stmt 1 view .LVU653
 647:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1887              		.loc 1 647 20 is_stmt 0 view .LVU654
 1888 0024 4C68     		ldr	r4, [r1, #4]
 647:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 1889              		.loc 1 647 9 view .LVU655
 1890 0026 24F0100A 		bic	r10, r4, #16
 1891 002a BAF1020F 		cmp	r10, #2
 1892 002e 16D1     		bne	.L164
 650:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */
 1893              		.loc 1 650 9 is_stmt 1 view .LVU656
 652:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 1894              		.loc 1 652 9 view .LVU657
 652:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 1895              		.loc 1 652 36 is_stmt 0 view .LVU658
 1896 0030 4FEAD30E 		lsr	lr, r3, #3
 1897 0034 00EB8E0E 		add	lr, r0, lr, lsl #2
 653:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 1898              		.loc 1 653 28 view .LVU659
 1899 0038 03F0070B 		and	fp, r3, #7
 652:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 1900              		.loc 1 652 14 view .LVU660
 1901 003c DEF82060 		ldr	r6, [lr, #32]
 1902              	.LVL153:
 653:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 1903              		.loc 1 653 9 is_stmt 1 view .LVU661
 653:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 1904              		.loc 1 653 57 is_stmt 0 view .LVU662
 1905 0040 4FEA8B0B 		lsl	fp, fp, #2
 653:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 1906              		.loc 1 653 24 view .LVU663
 1907 0044 4FF00F0C 		mov	ip, #15
 1908 0048 0CFA0BFC 		lsl	ip, ip, fp
 653:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 1909              		.loc 1 653 14 view .LVU664
 1910 004c 26EA0C0C 		bic	ip, r6, ip
 1911              	.LVL154:
 654:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1912              		.loc 1 654 9 is_stmt 1 view .LVU665
 654:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1913              		.loc 1 654 51 is_stmt 0 view .LVU666
 1914 0050 0E69     		ldr	r6, [r1, #16]
 1915 0052 06FA0BF6 		lsl	r6, r6, fp
 654:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1916              		.loc 1 654 14 view .LVU667
 1917 0056 46EA0C06 		orr	r6, r6, ip
 1918              	.LVL155:
 655:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 1919              		.loc 1 655 9 is_stmt 1 view .LVU668
 655:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 1920              		.loc 1 655 36 is_stmt 0 view .LVU669
 1921 005a CEF82060 		str	r6, [lr, #32]
 1922              	.LVL156:
 1923              	.L164:
 659:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 1924              		.loc 1 659 7 is_stmt 1 view .LVU670
 659:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 1925              		.loc 1 659 12 is_stmt 0 view .LVU671
 1926 005e D0F800B0 		ldr	fp, [r0]
 1927              	.LVL157:
 660:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1928              		.loc 1 660 7 is_stmt 1 view .LVU672
 1929 0062 4FEA430E 		lsl	lr, r3, #1
 660:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1930              		.loc 1 660 35 is_stmt 0 view .LVU673
 1931 0066 4FF0030C 		mov	ip, #3
 1932 006a 0CFA0EFC 		lsl	ip, ip, lr
 660:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1933              		.loc 1 660 15 view .LVU674
 1934 006e 6FEA0C06 		mvn	r6, ip
 660:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1935              		.loc 1 660 12 view .LVU675
 1936 0072 2BEA0C0B 		bic	fp, fp, ip
 1937              	.LVL158:
 661:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1938              		.loc 1 661 7 is_stmt 1 view .LVU676
 661:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1939              		.loc 1 661 33 is_stmt 0 view .LVU677
 1940 0076 04F0030C 		and	ip, r4, #3
 661:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1941              		.loc 1 661 46 view .LVU678
 1942 007a 0CFA0EFC 		lsl	ip, ip, lr
 665:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1943              		.loc 1 665 9 view .LVU679
 1944 007e 0AF1FF3A 		add	r10, r10, #-1
 661:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1945              		.loc 1 661 12 view .LVU680
 1946 0082 4CEA0B0C 		orr	ip, ip, fp
 1947              	.LVL159:
 662:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1948              		.loc 1 662 7 is_stmt 1 view .LVU681
 665:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1949              		.loc 1 665 9 is_stmt 0 view .LVU682
 1950 0086 BAF1010F 		cmp	r10, #1
 660:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1951              		.loc 1 660 15 view .LVU683
 1952 008a 0196     		str	r6, [sp, #4]
 662:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1953              		.loc 1 662 20 view .LVU684
 1954 008c C0F800C0 		str	ip, [r0]
 665:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1955              		.loc 1 665 7 is_stmt 1 view .LVU685
 665:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1956              		.loc 1 665 9 is_stmt 0 view .LVU686
 1957 0090 15D8     		bhi	.L165
 669:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         /* Configure the IO Speed */
 1958              		.loc 1 669 9 is_stmt 1 view .LVU687
 671:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1959              		.loc 1 671 9 view .LVU688
 671:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1960              		.loc 1 671 14 is_stmt 0 view .LVU689
 1961 0092 D0F808C0 		ldr	ip, [r0, #8]
 1962              	.LVL160:
 672:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 1963              		.loc 1 672 9 is_stmt 1 view .LVU690
 672:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 1964              		.loc 1 672 14 is_stmt 0 view .LVU691
 1965 0096 06EA0C0C 		and	ip, r6, ip
 1966              	.LVL161:
 673:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 1967              		.loc 1 673 9 is_stmt 1 view .LVU692
 673:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 1968              		.loc 1 673 35 is_stmt 0 view .LVU693
 1969 009a CE68     		ldr	r6, [r1, #12]
 1970 009c 06FA0EFA 		lsl	r10, r6, lr
 673:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 1971              		.loc 1 673 14 view .LVU694
 1972 00a0 4AEA0C0C 		orr	ip, r10, ip
 1973              	.LVL162:
 674:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1974              		.loc 1 674 9 is_stmt 1 view .LVU695
 674:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 1975              		.loc 1 674 24 is_stmt 0 view .LVU696
 1976 00a4 C0F808C0 		str	ip, [r0, #8]
 677:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 1977              		.loc 1 677 9 is_stmt 1 view .LVU697
 677:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 1978              		.loc 1 677 14 is_stmt 0 view .LVU698
 1979 00a8 D0F804C0 		ldr	ip, [r0, #4]
 1980              	.LVL163:
 678:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1981              		.loc 1 678 9 is_stmt 1 view .LVU699
 678:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1982              		.loc 1 678 14 is_stmt 0 view .LVU700
 1983 00ac 2CEA0707 		bic	r7, ip, r7
 1984              	.LVL164:
 679:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1985              		.loc 1 679 9 is_stmt 1 view .LVU701
 679:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1986              		.loc 1 679 56 is_stmt 0 view .LVU702
 1987 00b0 C4F3001C 		ubfx	ip, r4, #4, #1
 679:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1988              		.loc 1 679 63 view .LVU703
 1989 00b4 0CFA03FC 		lsl	ip, ip, r3
 679:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1990              		.loc 1 679 14 view .LVU704
 1991 00b8 4CEA0707 		orr	r7, ip, r7
 1992              	.LVL165:
 680:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 1993              		.loc 1 680 9 is_stmt 1 view .LVU705
 680:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 1994              		.loc 1 680 23 is_stmt 0 view .LVU706
 1995 00bc 4760     		str	r7, [r0, #4]
 1996              	.LVL166:
 1997              	.L165:
 684:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 1998              		.loc 1 684 7 is_stmt 1 view .LVU707
 684:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 1999              		.loc 1 684 12 is_stmt 0 view .LVU708
 2000 00be C768     		ldr	r7, [r0, #12]
 2001              	.LVL167:
 685:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 2002              		.loc 1 685 7 is_stmt 1 view .LVU709
 685:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 2003              		.loc 1 685 12 is_stmt 0 view .LVU710
 2004 00c0 019E     		ldr	r6, [sp, #4]
 2005 00c2 3740     		ands	r7, r7, r6
 2006              	.LVL168:
 686:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2007              		.loc 1 686 7 is_stmt 1 view .LVU711
 686:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2008              		.loc 1 686 34 is_stmt 0 view .LVU712
 2009 00c4 8E68     		ldr	r6, [r1, #8]
 2010 00c6 06FA0EF6 		lsl	r6, r6, lr
 686:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2011              		.loc 1 686 12 view .LVU713
 2012 00ca 3E43     		orrs	r6, r6, r7
 2013              	.LVL169:
 687:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2014              		.loc 1 687 7 is_stmt 1 view .LVU714
 687:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2015              		.loc 1 687 20 is_stmt 0 view .LVU715
 2016 00cc C660     		str	r6, [r0, #12]
 691:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 2017              		.loc 1 691 7 is_stmt 1 view .LVU716
 691:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 2018              		.loc 1 691 9 is_stmt 0 view .LVU717
 2019 00ce E600     		lsls	r6, r4, #3
 2020              	.LVL170:
 691:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 2021              		.loc 1 691 9 view .LVU718
 2022 00d0 61D5     		bpl	.L163
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2023              		.loc 1 694 9 is_stmt 1 view .LVU719
 2024              	.LBB150:
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2025              		.loc 1 694 9 view .LVU720
 2026 00d2 4FF0000B 		mov	fp, #0
 2027 00d6 CDF80CB0 		str	fp, [sp, #12]
 2028              	.LVL171:
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2029              		.loc 1 694 9 view .LVU721
 2030 00da D8F84470 		ldr	r7, [r8, #68]
 2031              	.LVL172:
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2032              		.loc 1 694 9 is_stmt 0 view .LVU722
 2033              	.LBE150:
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2034              		.loc 1 698 18 view .LVU723
 2035 00de 394E     		ldr	r6, .L189+4
 2036              	.LBB151:
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2037              		.loc 1 694 9 view .LVU724
 2038 00e0 47F48047 		orr	r7, r7, #16384
 2039 00e4 C8F84470 		str	r7, [r8, #68]
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2040              		.loc 1 694 9 is_stmt 1 view .LVU725
 2041 00e8 D8F84470 		ldr	r7, [r8, #68]
 2042 00ec 07F48047 		and	r7, r7, #16384
 2043 00f0 0397     		str	r7, [sp, #12]
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2044              		.loc 1 694 9 view .LVU726
 2045 00f2 039F     		ldr	r7, [sp, #12]
 2046              	.LBE151:
 694:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2047              		.loc 1 694 9 view .LVU727
 696:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0x0FU << (4U * (position & 0x03U)));
 2048              		.loc 1 696 9 view .LVU728
 2049 00f4 23F00307 		bic	r7, r3, #3
 2050 00f8 07F18047 		add	r7, r7, #1073741824
 2051 00fc 07F59C37 		add	r7, r7, #79872
 697:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2052              		.loc 1 697 44 is_stmt 0 view .LVU729
 2053 0100 03F0030E 		and	lr, r3, #3
 696:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~(0x0FU << (4U * (position & 0x03U)));
 2054              		.loc 1 696 14 view .LVU730
 2055 0104 D7F808A0 		ldr	r10, [r7, #8]
 2056              	.LVL173:
 697:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2057              		.loc 1 697 9 is_stmt 1 view .LVU731
 697:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2058              		.loc 1 697 32 is_stmt 0 view .LVU732
 2059 0108 4FEA8E0E 		lsl	lr, lr, #2
 697:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2060              		.loc 1 697 25 view .LVU733
 2061 010c 4FF00F0C 		mov	ip, #15
 2062 0110 0CFA0EFC 		lsl	ip, ip, lr
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2063              		.loc 1 698 18 view .LVU734
 2064 0114 B042     		cmp	r0, r6
 697:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2065              		.loc 1 697 14 view .LVU735
 2066 0116 2AEA0C0C 		bic	ip, r10, ip
 2067              	.LVL174:
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2068              		.loc 1 698 9 is_stmt 1 view .LVU736
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2069              		.loc 1 698 18 is_stmt 0 view .LVU737
 2070 011a 43D0     		beq	.L177
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2071              		.loc 1 698 29 discriminator 1 view .LVU738
 2072 011c 06F58066 		add	r6, r6, #1024
 2073 0120 B042     		cmp	r0, r6
 2074 0122 41D0     		beq	.L178
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2075              		.loc 1 698 29 discriminator 3 view .LVU739
 2076 0124 06F58066 		add	r6, r6, #1024
 2077 0128 B042     		cmp	r0, r6
 2078 012a 3FD0     		beq	.L179
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2079              		.loc 1 698 29 discriminator 5 view .LVU740
 2080 012c 06F58066 		add	r6, r6, #1024
 2081 0130 B042     		cmp	r0, r6
 2082 0132 3DD0     		beq	.L180
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2083              		.loc 1 698 29 discriminator 7 view .LVU741
 2084 0134 06F58066 		add	r6, r6, #1024
 2085 0138 B042     		cmp	r0, r6
 2086 013a 3BD0     		beq	.L181
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2087              		.loc 1 698 29 discriminator 9 view .LVU742
 2088 013c 4845     		cmp	r0, r9
 2089 013e 3BD0     		beq	.L182
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2090              		.loc 1 698 29 discriminator 11 view .LVU743
 2091 0140 06F50066 		add	r6, r6, #2048
 2092 0144 B042     		cmp	r0, r6
 2093 0146 39D0     		beq	.L183
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2094              		.loc 1 698 29 discriminator 13 view .LVU744
 2095 0148 06F58066 		add	r6, r6, #1024
 2096 014c B042     		cmp	r0, r6
 2097 014e 0CBF     		ite	eq
 2098 0150 0726     		moveq	r6, #7
 2099 0152 0826     		movne	r6, #8
 2100              	.L167:
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2101              		.loc 1 698 52 discriminator 32 view .LVU745
 2102 0154 06FA0EF6 		lsl	r6, r6, lr
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2103              		.loc 1 698 14 discriminator 32 view .LVU746
 2104 0158 46EA0C06 		orr	r6, r6, ip
 2105              	.LVL175:
 699:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2106              		.loc 1 699 9 is_stmt 1 discriminator 32 view .LVU747
 699:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2107              		.loc 1 699 40 is_stmt 0 discriminator 32 view .LVU748
 2108 015c BE60     		str	r6, [r7, #8]
 702:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2109              		.loc 1 702 9 is_stmt 1 discriminator 32 view .LVU749
 702:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2110              		.loc 1 702 14 is_stmt 0 discriminator 32 view .LVU750
 2111 015e 1668     		ldr	r6, [r2]
 2112              	.LVL176:
 703:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2113              		.loc 1 703 9 is_stmt 1 discriminator 32 view .LVU751
 703:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2114              		.loc 1 703 17 is_stmt 0 discriminator 32 view .LVU752
 2115 0160 EF43     		mvns	r7, r5
 2116              	.LVL177:
 704:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2117              		.loc 1 704 9 is_stmt 1 discriminator 32 view .LVU753
 704:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2118              		.loc 1 704 11 is_stmt 0 discriminator 32 view .LVU754
 2119 0162 14F4803F 		tst	r4, #65536
 703:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2120              		.loc 1 703 14 discriminator 32 view .LVU755
 2121 0166 0CBF     		ite	eq
 2122 0168 3E40     		andeq	r6, r6, r7
 2123              	.LVL178:
 706:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2124              		.loc 1 706 11 is_stmt 1 discriminator 32 view .LVU756
 706:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2125              		.loc 1 706 16 is_stmt 0 discriminator 32 view .LVU757
 2126 016a 2E43     		orrne	r6, r6, r5
 2127              	.LVL179:
 708:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2128              		.loc 1 708 9 is_stmt 1 discriminator 32 view .LVU758
 708:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2129              		.loc 1 708 19 is_stmt 0 discriminator 32 view .LVU759
 2130 016c 1660     		str	r6, [r2]
 710:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2131              		.loc 1 710 9 is_stmt 1 discriminator 32 view .LVU760
 710:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2132              		.loc 1 710 14 is_stmt 0 discriminator 32 view .LVU761
 2133 016e 5668     		ldr	r6, [r2, #4]
 2134              	.LVL180:
 711:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 2135              		.loc 1 711 9 is_stmt 1 discriminator 32 view .LVU762
 712:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2136              		.loc 1 712 9 discriminator 32 view .LVU763
 712:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2137              		.loc 1 712 11 is_stmt 0 discriminator 32 view .LVU764
 2138 0170 14F4003F 		tst	r4, #131072
 711:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 2139              		.loc 1 711 14 discriminator 32 view .LVU765
 2140 0174 0CBF     		ite	eq
 2141 0176 3E40     		andeq	r6, r6, r7
 2142              	.LVL181:
 714:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2143              		.loc 1 714 11 is_stmt 1 discriminator 32 view .LVU766
 714:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2144              		.loc 1 714 16 is_stmt 0 discriminator 32 view .LVU767
 2145 0178 2E43     		orrne	r6, r6, r5
 2146              	.LVL182:
 716:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2147              		.loc 1 716 9 is_stmt 1 discriminator 32 view .LVU768
 716:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2148              		.loc 1 716 19 is_stmt 0 discriminator 32 view .LVU769
 2149 017a 5660     		str	r6, [r2, #4]
 719:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2150              		.loc 1 719 9 is_stmt 1 discriminator 32 view .LVU770
 719:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2151              		.loc 1 719 14 is_stmt 0 discriminator 32 view .LVU771
 2152 017c 9668     		ldr	r6, [r2, #8]
 2153              	.LVL183:
 720:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2154              		.loc 1 720 9 is_stmt 1 discriminator 32 view .LVU772
 721:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2155              		.loc 1 721 9 discriminator 32 view .LVU773
 721:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2156              		.loc 1 721 11 is_stmt 0 discriminator 32 view .LVU774
 2157 017e 14F4801F 		tst	r4, #1048576
 720:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2158              		.loc 1 720 14 discriminator 32 view .LVU775
 2159 0182 0CBF     		ite	eq
 2160 0184 3E40     		andeq	r6, r6, r7
 2161              	.LVL184:
 723:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2162              		.loc 1 723 11 is_stmt 1 discriminator 32 view .LVU776
 723:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2163              		.loc 1 723 16 is_stmt 0 discriminator 32 view .LVU777
 2164 0186 2E43     		orrne	r6, r6, r5
 2165              	.LVL185:
 725:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2166              		.loc 1 725 9 is_stmt 1 discriminator 32 view .LVU778
 725:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2167              		.loc 1 725 20 is_stmt 0 discriminator 32 view .LVU779
 2168 0188 9660     		str	r6, [r2, #8]
 727:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2169              		.loc 1 727 9 is_stmt 1 discriminator 32 view .LVU780
 727:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2170              		.loc 1 727 14 is_stmt 0 discriminator 32 view .LVU781
 2171 018a D668     		ldr	r6, [r2, #12]
 2172              	.LVL186:
 728:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2173              		.loc 1 728 9 is_stmt 1 discriminator 32 view .LVU782
 729:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2174              		.loc 1 729 9 discriminator 32 view .LVU783
 729:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2175              		.loc 1 729 11 is_stmt 0 discriminator 32 view .LVU784
 2176 018c A402     		lsls	r4, r4, #10
 728:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2177              		.loc 1 728 14 discriminator 32 view .LVU785
 2178 018e 54BF     		ite	pl
 2179 0190 3E40     		andpl	r6, r6, r7
 2180              	.LVL187:
 731:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2181              		.loc 1 731 11 is_stmt 1 discriminator 32 view .LVU786
 731:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2182              		.loc 1 731 16 is_stmt 0 discriminator 32 view .LVU787
 2183 0192 2E43     		orrmi	r6, r6, r5
 2184              	.LVL188:
 733:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 2185              		.loc 1 733 9 is_stmt 1 discriminator 32 view .LVU788
 733:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 2186              		.loc 1 733 20 is_stmt 0 discriminator 32 view .LVU789
 2187 0194 D660     		str	r6, [r2, #12]
 2188              	.LVL189:
 2189              	.L163:
 636:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2190              		.loc 1 636 46 is_stmt 1 discriminator 2 view .LVU790
 636:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2191              		.loc 1 636 54 is_stmt 0 discriminator 2 view .LVU791
 2192 0196 0133     		adds	r3, r3, #1
 2193              	.LVL190:
 636:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2194              		.loc 1 636 22 is_stmt 1 discriminator 2 view .LVU792
 636:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2195              		.loc 1 636 3 is_stmt 0 discriminator 2 view .LVU793
 2196 0198 102B     		cmp	r3, #16
 2197 019a 7FF43AAF 		bne	.L176
 737:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2198              		.loc 1 737 1 view .LVU794
 2199 019e 05B0     		add	sp, sp, #20
 2200              	.LCFI7:
 2201              		.cfi_remember_state
 2202              		.cfi_def_cfa_offset 36
 2203              		@ sp needed
 2204 01a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2205              	.LVL191:
 2206              	.L177:
 2207              	.LCFI8:
 2208              		.cfi_restore_state
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2209              		.loc 1 698 18 view .LVU795
 2210 01a4 5E46     		mov	r6, fp
 2211 01a6 D5E7     		b	.L167
 2212              	.L178:
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2213              		.loc 1 698 29 view .LVU796
 2214 01a8 0126     		movs	r6, #1
 2215              	.LVL192:
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2216              		.loc 1 698 29 view .LVU797
 2217 01aa D3E7     		b	.L167
 2218              	.LVL193:
 2219              	.L179:
 698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2U] = temp;
 2220              		.loc 1 698 29 view .LVU798
 2221 01ac 0226     		movs	r6, #2
 2222 01ae D1E7     		b	.L167
 2223              	.L180:
 2224 01b0 0326     		movs	r6, #3
 2225 01b2 CFE7     		b	.L167
 2226              	.L181:
 2227 01b4 0426     		movs	r6, #4
 2228 01b6 CDE7     		b	.L167
 2229              	.L182:
 2230 01b8 0526     		movs	r6, #5
 2231 01ba CBE7     		b	.L167
 2232              	.L183:
 2233 01bc 0626     		movs	r6, #6
 2234 01be C9E7     		b	.L167
 2235              	.L190:
 2236              		.align	2
 2237              	.L189:
 2238 01c0 003C0140 		.word	1073822720
 2239 01c4 00000240 		.word	1073872896
 2240 01c8 00380240 		.word	1073887232
 2241 01cc 00140240 		.word	1073878016
 2242              		.cfi_endproc
 2243              	.LFE132:
 2245              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 2246              		.align	1
 2247              		.global	HAL_GPIO_WritePin
 2248              		.syntax unified
 2249              		.thumb
 2250              		.thumb_func
 2251              		.fpu softvfp
 2253              	HAL_GPIO_WritePin:
 2254              	.LVL194:
 2255              	.LFB133:
 757:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
 2256              		.loc 1 757 1 is_stmt 1 view -0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260              		@ link register save eliminated.
 759:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 2261              		.loc 1 759 3 view .LVU800
 760:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2262              		.loc 1 760 3 view .LVU801
 762:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2263              		.loc 1 762 3 view .LVU802
 762:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2264              		.loc 1 762 5 is_stmt 0 view .LVU803
 2265 0000 0AB1     		cbz	r2, .L192
 2266              	.LVL195:
 2267              	.L194:
 768:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2268              		.loc 1 768 17 view .LVU804
 2269 0002 8161     		str	r1, [r0, #24]
 770:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2270              		.loc 1 770 1 view .LVU805
 2271 0004 7047     		bx	lr
 2272              	.LVL196:
 2273              	.L192:
 768:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2274              		.loc 1 768 5 is_stmt 1 view .LVU806
 768:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2275              		.loc 1 768 38 is_stmt 0 view .LVU807
 2276 0006 0904     		lsls	r1, r1, #16
 2277              	.LVL197:
 768:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2278              		.loc 1 768 38 view .LVU808
 2279 0008 FBE7     		b	.L194
 2280              		.cfi_endproc
 2281              	.LFE133:
 2283              		.section	.text.HAL_UART_Init,"ax",%progbits
 2284              		.align	1
 2285              		.global	HAL_UART_Init
 2286              		.syntax unified
 2287              		.thumb
 2288              		.thumb_func
 2289              		.fpu softvfp
 2291              	HAL_UART_Init:
 2292              	.LVL198:
 2293              	.LFB135:
 879:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the UART handle allocation */
 2294              		.loc 1 879 1 is_stmt 1 view -0
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 0
 2297              		@ frame_needed = 0, uses_anonymous_args = 0
 881:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2298              		.loc 1 881 3 view .LVU810
 879:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the UART handle allocation */
 2299              		.loc 1 879 1 is_stmt 0 view .LVU811
 2300 0000 70B5     		push	{r4, r5, r6, lr}
 2301              	.LCFI9:
 2302              		.cfi_def_cfa_offset 16
 2303              		.cfi_offset 4, -16
 2304              		.cfi_offset 5, -12
 2305              		.cfi_offset 6, -8
 2306              		.cfi_offset 14, -4
 881:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2307              		.loc 1 881 5 view .LVU812
 2308 0002 0028     		cmp	r0, #0
 2309 0004 66D0     		beq	.L204
 887:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2310              		.loc 1 887 3 is_stmt 1 view .LVU813
 895:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2311              		.loc 1 895 5 view .LVU814
 897:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2312              		.loc 1 897 3 view .LVU815
 898:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2313              		.loc 1 898 3 view .LVU816
 900:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2314              		.loc 1 900 3 view .LVU817
 900:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2315              		.loc 1 900 11 is_stmt 0 view .LVU818
 2316 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 900:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2317              		.loc 1 900 5 view .LVU819
 2318 000a 03F0FF02 		and	r2, r3, #255
 2319 000e 0BB9     		cbnz	r3, .L197
 903:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init the low level hardware */
 2320              		.loc 1 903 5 is_stmt 1 view .LVU820
 903:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init the low level hardware */
 2321              		.loc 1 903 17 is_stmt 0 view .LVU821
 2322 0010 80F83820 		strb	r2, [r0, #56]
 2323              	.L197:
 908:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2324              		.loc 1 908 3 is_stmt 1 view .LVU822
 911:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2325              		.loc 1 911 3 is_stmt 0 view .LVU823
 2326 0014 0168     		ldr	r1, [r0]
 2327              	.LBB154:
 2328              	.LBB155:
 796:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2329              		.loc 1 796 10 view .LVU824
 2330 0016 C268     		ldr	r2, [r0, #12]
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2331              		.loc 1 813 46 view .LVU825
 2332 0018 0569     		ldr	r5, [r0, #16]
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2333              		.loc 1 813 99 view .LVU826
 2334 001a C469     		ldr	r4, [r0, #28]
 2335              	.LBE155:
 2336              	.LBE154:
 908:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2337              		.loc 1 908 17 view .LVU827
 2338 001c 2423     		movs	r3, #36
 2339 001e 80F83930 		strb	r3, [r0, #57]
 911:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2340              		.loc 1 911 3 is_stmt 1 view .LVU828
 2341 0022 CB68     		ldr	r3, [r1, #12]
 2342 0024 23F40053 		bic	r3, r3, #8192
 2343 0028 CB60     		str	r3, [r1, #12]
 914:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2344              		.loc 1 914 3 view .LVU829
 2345              	.LVL199:
 2346              	.LBB158:
 2347              	.LBI154:
 779:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 2348              		.loc 1 779 13 view .LVU830
 2349              	.LBB156:
 781:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2350              		.loc 1 781 3 view .LVU831
 784:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2351              		.loc 1 784 3 view .LVU832
 785:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2352              		.loc 1 785 3 view .LVU833
 786:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2353              		.loc 1 786 3 view .LVU834
 787:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2354              		.loc 1 787 3 view .LVU835
 790:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2355              		.loc 1 790 3 view .LVU836
 790:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2356              		.loc 1 790 10 is_stmt 0 view .LVU837
 2357 002a 0B69     		ldr	r3, [r1, #16]
 2358              	.LVL200:
 793:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2359              		.loc 1 793 3 is_stmt 1 view .LVU838
 793:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2360              		.loc 1 793 10 is_stmt 0 view .LVU839
 2361 002c 23F44053 		bic	r3, r3, #12288
 2362              	.LVL201:
 796:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2363              		.loc 1 796 3 is_stmt 1 view .LVU840
 796:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2364              		.loc 1 796 10 is_stmt 0 view .LVU841
 2365 0030 1343     		orrs	r3, r3, r2
 2366              	.LVL202:
 799:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2367              		.loc 1 799 3 is_stmt 1 view .LVU842
 2368 0032 0B61     		str	r3, [r1, #16]
 802:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2369              		.loc 1 802 3 view .LVU843
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2370              		.loc 1 813 46 is_stmt 0 view .LVU844
 2371 0034 8368     		ldr	r3, [r0, #8]
 2372              	.LVL203:
 802:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2373              		.loc 1 802 10 view .LVU845
 2374 0036 CA68     		ldr	r2, [r1, #12]
 2375              	.LVL204:
 805:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
 2376              		.loc 1 805 3 is_stmt 1 view .LVU846
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2377              		.loc 1 813 46 is_stmt 0 view .LVU847
 2378 0038 2B43     		orrs	r3, r3, r5
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2379              		.loc 1 813 67 view .LVU848
 2380 003a 4569     		ldr	r5, [r0, #20]
 805:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
 2381              		.loc 1 805 10 view .LVU849
 2382 003c 22F41642 		bic	r2, r2, #38400
 2383              	.LVL205:
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2384              		.loc 1 813 67 view .LVU850
 2385 0040 2B43     		orrs	r3, r3, r5
 805:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
 2386              		.loc 1 805 10 view .LVU851
 2387 0042 22F00C02 		bic	r2, r2, #12
 2388              	.LVL206:
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2389              		.loc 1 813 3 is_stmt 1 view .LVU852
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2390              		.loc 1 813 86 is_stmt 0 view .LVU853
 2391 0046 2343     		orrs	r3, r3, r4
 813:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2392              		.loc 1 813 10 view .LVU854
 2393 0048 1343     		orrs	r3, r3, r2
 2394              	.LVL207:
 816:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2395              		.loc 1 816 3 is_stmt 1 view .LVU855
 2396 004a CB60     		str	r3, [r1, #12]
 819:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2397              		.loc 1 819 3 view .LVU856
 819:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2398              		.loc 1 819 10 is_stmt 0 view .LVU857
 2399 004c 4B69     		ldr	r3, [r1, #20]
 2400              	.LVL208:
 822:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2401              		.loc 1 822 3 is_stmt 1 view .LVU858
 825:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2402              		.loc 1 825 10 is_stmt 0 view .LVU859
 2403 004e 8269     		ldr	r2, [r0, #24]
 822:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2404              		.loc 1 822 10 view .LVU860
 2405 0050 23F44073 		bic	r3, r3, #768
 2406              	.LVL209:
 825:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2407              		.loc 1 825 3 is_stmt 1 view .LVU861
 825:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2408              		.loc 1 825 10 is_stmt 0 view .LVU862
 2409 0054 1343     		orrs	r3, r3, r2
 2410              	.LVL210:
 828:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2411              		.loc 1 828 3 is_stmt 1 view .LVU863
 831:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2412              		.loc 1 831 5 is_stmt 0 view .LVU864
 2413 0056 B4F5004F 		cmp	r4, #32768
 828:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2414              		.loc 1 828 3 view .LVU865
 2415 005a 4B61     		str	r3, [r1, #20]
 831:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2416              		.loc 1 831 3 is_stmt 1 view .LVU866
 2417 005c 1E4A     		ldr	r2, .L207
 2418 005e 4368     		ldr	r3, [r0, #4]
 2419              	.LVL211:
 831:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2420              		.loc 1 831 3 is_stmt 0 view .LVU867
 2421 0060 4FF06405 		mov	r5, #100
 831:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2422              		.loc 1 831 5 view .LVU868
 2423 0064 28D1     		bne	.L198
 835:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2424              		.loc 1 835 5 is_stmt 1 view .LVU869
 2425 0066 5B00     		lsls	r3, r3, #1
 2426 0068 B2FBF3F2 		udiv	r2, r2, r3
 2427 006c B2FBF5F6 		udiv	r6, r2, r5
 2428 0070 05FB1622 		mls	r2, r5, r6, r2
 2429 0074 D300     		lsls	r3, r2, #3
 2430 0076 3233     		adds	r3, r3, #50
 2431 0078 B3FBF5F3 		udiv	r3, r3, r5
 2432 007c 03F00702 		and	r2, r3, #7
 2433 0080 5B00     		lsls	r3, r3, #1
 2434 0082 02EB0612 		add	r2, r2, r6, lsl #4
 2435 0086 03F4F873 		and	r3, r3, #496
 2436 008a 1344     		add	r3, r3, r2
 2437              	.L206:
 856:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2438              		.loc 1 856 28 is_stmt 0 view .LVU870
 2439 008c 8B60     		str	r3, [r1, #8]
 2440              	.LVL212:
 856:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2441              		.loc 1 856 28 view .LVU871
 2442              	.LBE156:
 2443              	.LBE158:
 919:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 2444              		.loc 1 919 3 is_stmt 1 view .LVU872
 2445 008e 0B69     		ldr	r3, [r1, #16]
 2446 0090 23F49043 		bic	r3, r3, #18432
 2447 0094 0B61     		str	r3, [r1, #16]
 920:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2448              		.loc 1 920 3 view .LVU873
 2449 0096 4B69     		ldr	r3, [r1, #20]
 2450 0098 23F02A03 		bic	r3, r3, #42
 2451 009c 4B61     		str	r3, [r1, #20]
 923:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2452              		.loc 1 923 3 view .LVU874
 2453 009e CB68     		ldr	r3, [r1, #12]
 2454 00a0 43F40053 		orr	r3, r3, #8192
 2455 00a4 CB60     		str	r3, [r1, #12]
 926:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->gState= HAL_UART_STATE_READY;
 2456              		.loc 1 926 3 view .LVU875
 927:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->RxState= HAL_UART_STATE_READY;
 2457              		.loc 1 927 16 is_stmt 0 view .LVU876
 2458 00a6 2022     		movs	r2, #32
 926:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->gState= HAL_UART_STATE_READY;
 2459              		.loc 1 926 20 view .LVU877
 2460 00a8 0023     		movs	r3, #0
 2461 00aa C363     		str	r3, [r0, #60]
 927:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->RxState= HAL_UART_STATE_READY;
 2462              		.loc 1 927 3 is_stmt 1 view .LVU878
 927:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   huart->RxState= HAL_UART_STATE_READY;
 2463              		.loc 1 927 16 is_stmt 0 view .LVU879
 2464 00ac 80F83920 		strb	r2, [r0, #57]
 928:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2465              		.loc 1 928 3 is_stmt 1 view .LVU880
 928:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2466              		.loc 1 928 17 is_stmt 0 view .LVU881
 2467 00b0 80F83A20 		strb	r2, [r0, #58]
 930:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2468              		.loc 1 930 3 is_stmt 1 view .LVU882
 930:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2469              		.loc 1 930 10 is_stmt 0 view .LVU883
 2470 00b4 1846     		mov	r0, r3
 2471              	.LVL213:
 2472              	.L196:
 931:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2473              		.loc 1 931 1 view .LVU884
 2474 00b6 70BD     		pop	{r4, r5, r6, pc}
 2475              	.LVL214:
 2476              	.L198:
 2477              	.LBB159:
 2478              	.LBB157:
 854:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2479              		.loc 1 854 5 is_stmt 1 view .LVU885
 2480 00b8 9B00     		lsls	r3, r3, #2
 2481 00ba B2FBF3F2 		udiv	r2, r2, r3
 2482 00be B2FBF5F6 		udiv	r6, r2, r5
 2483 00c2 05FB1623 		mls	r3, r5, r6, r2
 2484 00c6 1B01     		lsls	r3, r3, #4
 2485 00c8 3233     		adds	r3, r3, #50
 2486 00ca B3FBF5F3 		udiv	r3, r3, r5
 2487 00ce 03EB0613 		add	r3, r3, r6, lsl #4
 2488 00d2 DBE7     		b	.L206
 2489              	.LVL215:
 2490              	.L204:
 854:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2491              		.loc 1 854 5 is_stmt 0 view .LVU886
 2492              	.LBE157:
 2493              	.LBE159:
 883:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2494              		.loc 1 883 12 view .LVU887
 2495 00d4 0120     		movs	r0, #1
 2496              	.LVL216:
 883:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2497              		.loc 1 883 12 view .LVU888
 2498 00d6 EEE7     		b	.L196
 2499              	.L208:
 2500              		.align	2
 2501              	.L207:
 2502 00d8 906EFB0A 		.word	184250000
 2503              		.cfi_endproc
 2504              	.LFE135:
 2506              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2507              		.align	1
 2508              		.global	HAL_UART_Transmit
 2509              		.syntax unified
 2510              		.thumb
 2511              		.thumb_func
 2512              		.fpu softvfp
 2514              	HAL_UART_Transmit:
 2515              	.LVL217:
 2516              	.LFB137:
 950:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint16_t* tmp;
 2517              		.loc 1 950 1 is_stmt 1 view -0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 0
 2520              		@ frame_needed = 0, uses_anonymous_args = 0
 2521              		@ link register save eliminated.
 951:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t tickstart = 0U;
 2522              		.loc 1 951 3 view .LVU890
 955:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2523              		.loc 1 955 3 view .LVU891
 955:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2524              		.loc 1 955 11 is_stmt 0 view .LVU892
 2525 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2526              	.LVL218:
 955:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2527              		.loc 1 955 5 view .LVU893
 2528 0004 202B     		cmp	r3, #32
 2529 0006 3ED1     		bne	.L221
 957:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2530              		.loc 1 957 5 is_stmt 1 view .LVU894
 957:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2531              		.loc 1 957 7 is_stmt 0 view .LVU895
 2532 0008 0029     		cmp	r1, #0
 2533 000a 3AD0     		beq	.L220
 957:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2534              		.loc 1 957 25 discriminator 1 view .LVU896
 2535 000c 002A     		cmp	r2, #0
 2536 000e 38D0     		beq	.L220
 963:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2537              		.loc 1 963 5 is_stmt 1 view .LVU897
 963:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2538              		.loc 1 963 5 view .LVU898
 2539 0010 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2540 0014 012B     		cmp	r3, #1
 2541 0016 36D0     		beq	.L221
 963:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2542              		.loc 1 963 5 discriminator 2 view .LVU899
 2543 0018 0123     		movs	r3, #1
 2544 001a 80F83830 		strb	r3, [r0, #56]
 963:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2545              		.loc 1 963 5 discriminator 2 view .LVU900
 965:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2546              		.loc 1 965 5 discriminator 2 view .LVU901
 965:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2547              		.loc 1 965 22 is_stmt 0 discriminator 2 view .LVU902
 2548 001e 0023     		movs	r3, #0
 2549 0020 C363     		str	r3, [r0, #60]
 966:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2550              		.loc 1 966 5 is_stmt 1 discriminator 2 view .LVU903
 966:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2551              		.loc 1 966 19 is_stmt 0 discriminator 2 view .LVU904
 2552 0022 2123     		movs	r3, #33
 2553 0024 80F83930 		strb	r3, [r0, #57]
 971:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->TxXferCount = Size;
 2554              		.loc 1 971 5 is_stmt 1 discriminator 2 view .LVU905
 2555 0028 0368     		ldr	r3, [r0]
 971:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->TxXferCount = Size;
 2556              		.loc 1 971 23 is_stmt 0 discriminator 2 view .LVU906
 2557 002a 8284     		strh	r2, [r0, #36]	@ movhi
 972:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(huart->TxXferCount > 0U)
 2558              		.loc 1 972 5 is_stmt 1 discriminator 2 view .LVU907
 972:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(huart->TxXferCount > 0U)
 2559              		.loc 1 972 24 is_stmt 0 discriminator 2 view .LVU908
 2560 002c C284     		strh	r2, [r0, #38]	@ movhi
 973:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2561              		.loc 1 973 5 is_stmt 1 discriminator 2 view .LVU909
 2562              	.LVL219:
 2563              	.L211:
 973:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2564              		.loc 1 973 10 view .LVU910
 973:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2565              		.loc 1 973 16 is_stmt 0 view .LVU911
 2566 002e C28C     		ldrh	r2, [r0, #38]
 2567 0030 92B2     		uxth	r2, r2
 973:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2568              		.loc 1 973 10 view .LVU912
 2569 0032 52B9     		cbnz	r2, .L216
 2570              	.L217:
 2571              	.LBB166:
 2572              	.LBB167:
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2573              		.loc 1 936 68 is_stmt 1 view .LVU913
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2574              		.loc 1 936 8 view .LVU914
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2575              		.loc 1 936 10 is_stmt 0 view .LVU915
 2576 0034 1A68     		ldr	r2, [r3]
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2577              		.loc 1 936 8 view .LVU916
 2578 0036 5206     		lsls	r2, r2, #25
 2579 0038 FCD5     		bpl	.L217
 937:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2580              		.loc 1 937 3 is_stmt 1 view .LVU917
 2581              	.LBE167:
 2582              	.LBE166:
1009:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2583              		.loc 1 1009 7 view .LVU918
1009:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2584              		.loc 1 1009 21 is_stmt 0 view .LVU919
 2585 003a 2023     		movs	r3, #32
 2586 003c 80F83930 		strb	r3, [r0, #57]
1012:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2587              		.loc 1 1012 5 is_stmt 1 view .LVU920
1012:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2588              		.loc 1 1012 5 view .LVU921
 2589 0040 0023     		movs	r3, #0
 2590 0042 80F83830 		strb	r3, [r0, #56]
1012:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2591              		.loc 1 1012 5 view .LVU922
1014:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2592              		.loc 1 1014 5 view .LVU923
1014:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2593              		.loc 1 1014 12 is_stmt 0 view .LVU924
 2594 0046 1846     		mov	r0, r3
 2595              	.LVL220:
1014:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2596              		.loc 1 1014 12 view .LVU925
 2597 0048 7047     		bx	lr
 2598              	.LVL221:
 2599              	.L216:
 975:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 2600              		.loc 1 975 7 is_stmt 1 view .LVU926
 975:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 2601              		.loc 1 975 12 is_stmt 0 view .LVU927
 2602 004a C28C     		ldrh	r2, [r0, #38]
 975:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 2603              		.loc 1 975 25 view .LVU928
 2604 004c 013A     		subs	r2, r2, #1
 2605 004e 92B2     		uxth	r2, r2
 2606 0050 C284     		strh	r2, [r0, #38]	@ movhi
 976:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 2607              		.loc 1 976 7 is_stmt 1 view .LVU929
 976:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 2608              		.loc 1 976 9 is_stmt 0 view .LVU930
 2609 0052 8268     		ldr	r2, [r0, #8]
 2610 0054 B2F5805F 		cmp	r2, #4096
 2611 0058 0CD1     		bne	.L212
 2612              	.L213:
 2613              	.LBB168:
 2614              	.LBB169:
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2615              		.loc 1 936 68 is_stmt 1 view .LVU931
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2616              		.loc 1 936 8 view .LVU932
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2617              		.loc 1 936 10 is_stmt 0 view .LVU933
 2618 005a 1A68     		ldr	r2, [r3]
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2619              		.loc 1 936 8 view .LVU934
 2620 005c 1206     		lsls	r2, r2, #24
 2621 005e FCD5     		bpl	.L213
 937:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2622              		.loc 1 937 3 is_stmt 1 view .LVU935
 2623              	.LBE169:
 2624              	.LBE168:
 982:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 2625              		.loc 1 982 9 view .LVU936
 2626              	.LVL222:
 983:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 2627              		.loc 1 983 9 view .LVU937
 983:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 2628              		.loc 1 983 37 is_stmt 0 view .LVU938
 2629 0060 0A88     		ldrh	r2, [r1]
 2630 0062 C2F30802 		ubfx	r2, r2, #0, #9
 983:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 2631              		.loc 1 983 29 view .LVU939
 2632 0066 5A60     		str	r2, [r3, #4]
 984:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2633              		.loc 1 984 9 is_stmt 1 view .LVU940
 984:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2634              		.loc 1 984 11 is_stmt 0 view .LVU941
 2635 0068 0269     		ldr	r2, [r0, #16]
 2636 006a 0AB9     		cbnz	r2, .L214
 986:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2637              		.loc 1 986 11 is_stmt 1 view .LVU942
 986:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2638              		.loc 1 986 17 is_stmt 0 view .LVU943
 2639 006c 0231     		adds	r1, r1, #2
 2640              	.LVL223:
 986:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2641              		.loc 1 986 17 view .LVU944
 2642 006e DEE7     		b	.L211
 2643              	.LVL224:
 2644              	.L214:
 990:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2645              		.loc 1 990 11 is_stmt 1 view .LVU945
 990:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2646              		.loc 1 990 17 is_stmt 0 view .LVU946
 2647 0070 0131     		adds	r1, r1, #1
 2648              	.LVL225:
 990:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2649              		.loc 1 990 17 view .LVU947
 2650 0072 DCE7     		b	.L211
 2651              	.LVL226:
 2652              	.L212:
 2653              	.LBB170:
 2654              	.LBB171:
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2655              		.loc 1 936 68 is_stmt 1 view .LVU948
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2656              		.loc 1 936 8 view .LVU949
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2657              		.loc 1 936 10 is_stmt 0 view .LVU950
 2658 0074 1A68     		ldr	r2, [r3]
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2659              		.loc 1 936 8 view .LVU951
 2660 0076 1206     		lsls	r2, r2, #24
 2661 0078 FCD5     		bpl	.L212
 937:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2662              		.loc 1 937 3 is_stmt 1 view .LVU952
 2663              	.LBE171:
 2664              	.LBE170:
 999:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 2665              		.loc 1 999 9 view .LVU953
 2666              	.LVL227:
 999:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 2667              		.loc 1 999 41 is_stmt 0 view .LVU954
 2668 007a 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 2669              	.LVL228:
 999:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
 2670              		.loc 1 999 29 view .LVU955
 2671 007e 5A60     		str	r2, [r3, #4]
 2672 0080 D5E7     		b	.L211
 2673              	.LVL229:
 2674              	.L220:
 959:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2675              		.loc 1 959 15 view .LVU956
 2676 0082 0120     		movs	r0, #1
 2677              	.LVL230:
 959:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2678              		.loc 1 959 15 view .LVU957
 2679 0084 7047     		bx	lr
 2680              	.LVL231:
 2681              	.L221:
1018:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2682              		.loc 1 1018 12 view .LVU958
 2683 0086 0220     		movs	r0, #2
 2684              	.LVL232:
1020:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2685              		.loc 1 1020 1 view .LVU959
 2686 0088 7047     		bx	lr
 2687              		.cfi_endproc
 2688              	.LFE137:
 2690              		.section	.text.HAL_UART_Receive,"ax",%progbits
 2691              		.align	1
 2692              		.global	HAL_UART_Receive
 2693              		.syntax unified
 2694              		.thumb
 2695              		.thumb_func
 2696              		.fpu softvfp
 2698              	HAL_UART_Receive:
 2699              	.LVL233:
 2700              	.LFB138:
1034:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint16_t* tmp;
 2701              		.loc 1 1034 1 is_stmt 1 view -0
 2702              		.cfi_startproc
 2703              		@ args = 0, pretend = 0, frame = 0
 2704              		@ frame_needed = 0, uses_anonymous_args = 0
1035:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //uint32_t tickstart = 0U;
 2705              		.loc 1 1035 3 view .LVU961
1039:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2706              		.loc 1 1039 3 view .LVU962
1034:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint16_t* tmp;
 2707              		.loc 1 1034 1 is_stmt 0 view .LVU963
 2708 0000 10B5     		push	{r4, lr}
 2709              	.LCFI10:
 2710              		.cfi_def_cfa_offset 8
 2711              		.cfi_offset 4, -8
 2712              		.cfi_offset 14, -4
1039:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2713              		.loc 1 1039 11 view .LVU964
 2714 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2715              	.LVL234:
1039:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
 2716              		.loc 1 1039 5 view .LVU965
 2717 0006 202B     		cmp	r3, #32
 2718 0008 44D1     		bne	.L241
1041:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2719              		.loc 1 1041 5 is_stmt 1 view .LVU966
1041:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2720              		.loc 1 1041 7 is_stmt 0 view .LVU967
 2721 000a 0029     		cmp	r1, #0
 2722 000c 40D0     		beq	.L240
1041:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2723              		.loc 1 1041 25 discriminator 1 view .LVU968
 2724 000e 002A     		cmp	r2, #0
 2725 0010 3ED0     		beq	.L240
1047:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2726              		.loc 1 1047 5 is_stmt 1 view .LVU969
1047:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2727              		.loc 1 1047 5 view .LVU970
 2728 0012 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2729 0016 012B     		cmp	r3, #1
 2730 0018 3CD0     		beq	.L241
1047:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2731              		.loc 1 1047 5 discriminator 2 view .LVU971
 2732 001a 0123     		movs	r3, #1
 2733 001c 80F83830 		strb	r3, [r0, #56]
1047:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2734              		.loc 1 1047 5 discriminator 2 view .LVU972
1049:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2735              		.loc 1 1049 5 discriminator 2 view .LVU973
1049:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2736              		.loc 1 1049 22 is_stmt 0 discriminator 2 view .LVU974
 2737 0020 0023     		movs	r3, #0
 2738 0022 C363     		str	r3, [r0, #60]
1050:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2739              		.loc 1 1050 5 is_stmt 1 discriminator 2 view .LVU975
1050:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2740              		.loc 1 1050 20 is_stmt 0 discriminator 2 view .LVU976
 2741 0024 2223     		movs	r3, #34
 2742 0026 80F83A30 		strb	r3, [r0, #58]
1055:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2743              		.loc 1 1055 5 is_stmt 1 discriminator 2 view .LVU977
1055:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2744              		.loc 1 1055 23 is_stmt 0 discriminator 2 view .LVU978
 2745 002a 8285     		strh	r2, [r0, #44]	@ movhi
1056:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2746              		.loc 1 1056 5 is_stmt 1 discriminator 2 view .LVU979
1056:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2747              		.loc 1 1056 24 is_stmt 0 discriminator 2 view .LVU980
 2748 002c C285     		strh	r2, [r0, #46]	@ movhi
1059:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2749              		.loc 1 1059 5 is_stmt 1 discriminator 2 view .LVU981
 2750              	.LVL235:
 2751              	.L231:
1059:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2752              		.loc 1 1059 10 view .LVU982
1059:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2753              		.loc 1 1059 16 is_stmt 0 view .LVU983
 2754 002e C38D     		ldrh	r3, [r0, #46]
 2755 0030 9BB2     		uxth	r3, r3
1059:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
 2756              		.loc 1 1059 10 view .LVU984
 2757 0032 33B9     		cbnz	r3, .L237
1100:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2758              		.loc 1 1100 5 is_stmt 1 view .LVU985
1100:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2759              		.loc 1 1100 20 is_stmt 0 view .LVU986
 2760 0034 2022     		movs	r2, #32
 2761 0036 80F83A20 		strb	r2, [r0, #58]
1103:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2762              		.loc 1 1103 5 is_stmt 1 view .LVU987
1103:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2763              		.loc 1 1103 5 view .LVU988
 2764 003a 80F83830 		strb	r3, [r0, #56]
1103:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2765              		.loc 1 1103 5 view .LVU989
1105:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2766              		.loc 1 1105 5 view .LVU990
1105:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2767              		.loc 1 1105 12 is_stmt 0 view .LVU991
 2768 003e 1846     		mov	r0, r3
 2769              	.LVL236:
 2770              	.L230:
1111:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
 2771              		.loc 1 1111 1 view .LVU992
 2772 0040 10BD     		pop	{r4, pc}
 2773              	.LVL237:
 2774              	.L237:
1061:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 2775              		.loc 1 1061 7 is_stmt 1 view .LVU993
1061:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 2776              		.loc 1 1061 12 is_stmt 0 view .LVU994
 2777 0042 C38D     		ldrh	r3, [r0, #46]
 2778 0044 0268     		ldr	r2, [r0]
1061:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 2779              		.loc 1 1061 25 view .LVU995
 2780 0046 013B     		subs	r3, r3, #1
 2781 0048 9BB2     		uxth	r3, r3
 2782 004a C385     		strh	r3, [r0, #46]	@ movhi
1062:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 2783              		.loc 1 1062 7 is_stmt 1 view .LVU996
1062:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 2784              		.loc 1 1062 9 is_stmt 0 view .LVU997
 2785 004c 8368     		ldr	r3, [r0, #8]
 2786 004e B3F5805F 		cmp	r3, #4096
 2787 0052 11D1     		bne	.L232
 2788              	.L233:
 2789              	.LBB176:
 2790              	.LBB177:
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2791              		.loc 1 936 68 is_stmt 1 view .LVU998
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2792              		.loc 1 936 8 view .LVU999
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2793              		.loc 1 936 10 is_stmt 0 view .LVU1000
 2794 0054 1368     		ldr	r3, [r2]
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2795              		.loc 1 936 8 view .LVU1001
 2796 0056 9C06     		lsls	r4, r3, #26
 2797 0058 FCD5     		bpl	.L233
 937:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2798              		.loc 1 937 3 is_stmt 1 view .LVU1002
 2799              	.LBE177:
 2800              	.LBE176:
1068:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 2801              		.loc 1 1068 9 view .LVU1003
 2802              	.LVL238:
1069:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2803              		.loc 1 1069 9 view .LVU1004
1069:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2804              		.loc 1 1069 11 is_stmt 0 view .LVU1005
 2805 005a 0369     		ldr	r3, [r0, #16]
1071:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
 2806              		.loc 1 1071 44 view .LVU1006
 2807 005c 5268     		ldr	r2, [r2, #4]
1069:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2808              		.loc 1 1069 11 view .LVU1007
 2809 005e 33B9     		cbnz	r3, .L234
1071:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
 2810              		.loc 1 1071 11 is_stmt 1 view .LVU1008
1071:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
 2811              		.loc 1 1071 16 is_stmt 0 view .LVU1009
 2812 0060 0B46     		mov	r3, r1
1071:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
 2813              		.loc 1 1071 18 view .LVU1010
 2814 0062 C2F30802 		ubfx	r2, r2, #0, #9
1071:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=2U;
 2815              		.loc 1 1071 16 view .LVU1011
 2816 0066 23F8022B 		strh	r2, [r3], #2	@ movhi
1072:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2817              		.loc 1 1072 11 is_stmt 1 view .LVU1012
 2818              	.LVL239:
 2819              	.L235:
1034:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   uint16_t* tmp;
 2820              		.loc 1 1034 1 is_stmt 0 view .LVU1013
 2821 006a 1946     		mov	r1, r3
 2822 006c DFE7     		b	.L231
 2823              	.LVL240:
 2824              	.L234:
1076:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=1U;
 2825              		.loc 1 1076 11 is_stmt 1 view .LVU1014
1076:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=1U;
 2826              		.loc 1 1076 16 is_stmt 0 view .LVU1015
 2827 006e 0B46     		mov	r3, r1
1076:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=1U;
 2828              		.loc 1 1076 18 view .LVU1016
 2829 0070 D2B2     		uxtb	r2, r2
1076:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           pData +=1U;
 2830              		.loc 1 1076 16 view .LVU1017
 2831 0072 23F8012B 		strh	r2, [r3], #1	@ movhi
1077:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2832              		.loc 1 1077 11 is_stmt 1 view .LVU1018
 2833              	.LVL241:
1077:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2834              		.loc 1 1077 11 is_stmt 0 view .LVU1019
 2835 0076 F8E7     		b	.L235
 2836              	.LVL242:
 2837              	.L232:
 2838              	.LBB178:
 2839              	.LBB179:
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2840              		.loc 1 936 68 is_stmt 1 view .LVU1020
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2841              		.loc 1 936 8 view .LVU1021
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2842              		.loc 1 936 10 is_stmt 0 view .LVU1022
 2843 0078 1368     		ldr	r3, [r2]
 936:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2844              		.loc 1 936 8 view .LVU1023
 2845 007a 9B06     		lsls	r3, r3, #26
 2846 007c FCD5     		bpl	.L232
 937:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2847              		.loc 1 937 3 is_stmt 1 view .LVU1024
 2848              	.LBE179:
 2849              	.LBE178:
1087:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2850              		.loc 1 1087 9 view .LVU1025
1087:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2851              		.loc 1 1087 11 is_stmt 0 view .LVU1026
 2852 007e 0469     		ldr	r4, [r0, #16]
1089:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2853              		.loc 1 1089 47 view .LVU1027
 2854 0080 5268     		ldr	r2, [r2, #4]
 2855 0082 4B1C     		adds	r3, r1, #1
1087:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 2856              		.loc 1 1087 11 view .LVU1028
 2857 0084 0CB9     		cbnz	r4, .L236
 2858              	.LVL243:
 2859              	.L247:
1093:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2860              		.loc 1 1093 20 view .LVU1029
 2861 0086 0A70     		strb	r2, [r1]
 2862 0088 EFE7     		b	.L235
 2863              	.LVL244:
 2864              	.L236:
1093:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2865              		.loc 1 1093 11 is_stmt 1 view .LVU1030
1093:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 2866              		.loc 1 1093 22 is_stmt 0 view .LVU1031
 2867 008a 02F07F02 		and	r2, r2, #127
 2868 008e FAE7     		b	.L247
 2869              	.LVL245:
 2870              	.L240:
1043:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2871              		.loc 1 1043 15 view .LVU1032
 2872 0090 0120     		movs	r0, #1
 2873              	.LVL246:
1043:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 2874              		.loc 1 1043 15 view .LVU1033
 2875 0092 D5E7     		b	.L230
 2876              	.LVL247:
 2877              	.L241:
1109:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2878              		.loc 1 1109 12 view .LVU1034
 2879 0094 0220     		movs	r0, #2
 2880              	.LVL248:
1109:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2881              		.loc 1 1109 12 view .LVU1035
 2882 0096 D3E7     		b	.L230
 2883              		.cfi_endproc
 2884              	.LFE138:
 2886              		.section	.text.HAL_CRYP_Init,"ax",%progbits
 2887              		.align	1
 2888              		.global	HAL_CRYP_Init
 2889              		.syntax unified
 2890              		.thumb
 2891              		.thumb_func
 2892              		.fpu softvfp
 2894              	HAL_CRYP_Init:
 2895              	.LVL249:
 2896              	.LFB141:
1636:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1637:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_CRYP_Init(CRYP_HandleTypeDef *hcryp)
1638:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** { 
 2897              		.loc 1 1638 1 is_stmt 1 view -0
 2898              		.cfi_startproc
 2899              		@ args = 0, pretend = 0, frame = 0
 2900              		@ frame_needed = 0, uses_anonymous_args = 0
 2901              		@ link register save eliminated.
1639:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the CRYP handle allocation */
1640:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp == NULL)
 2902              		.loc 1 1640 3 view .LVU1037
 2903              		.loc 1 1640 5 is_stmt 0 view .LVU1038
 2904 0000 C0B1     		cbz	r0, .L251
1641:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1642:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_ERROR;
1643:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1644:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1645:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the parameters */
1646:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_CRYP_KEYSIZE(hcryp->Init.KeySize));
 2905              		.loc 1 1646 3 is_stmt 1 view .LVU1039
1647:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   assert_param(IS_CRYP_DATATYPE(hcryp->Init.DataType));
 2906              		.loc 1 1647 3 view .LVU1040
1648:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1649:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp->State == HAL_CRYP_STATE_RESET)
 2907              		.loc 1 1649 3 view .LVU1041
 2908              		.loc 1 1649 11 is_stmt 0 view .LVU1042
 2909 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2910              		.loc 1 1649 5 view .LVU1043
 2911 0006 03F0FF02 		and	r2, r3, #255
 2912 000a 0BB9     		cbnz	r3, .L250
1650:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1651:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
1652:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Lock = HAL_UNLOCKED;
 2913              		.loc 1 1652 5 is_stmt 1 view .LVU1044
 2914              		.loc 1 1652 17 is_stmt 0 view .LVU1045
 2915 000c 80F83C20 		strb	r2, [r0, #60]
 2916              	.L250:
1653:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Init the low level hardware */
1654:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     //HAL_CRYP_MspInit(hcryp);
1655:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1656:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1657:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1658:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_BUSY;
 2917              		.loc 1 1658 3 is_stmt 1 view .LVU1046
 2918              		.loc 1 1658 16 is_stmt 0 view .LVU1047
 2919 0010 0223     		movs	r3, #2
 2920 0012 80F83D30 		strb	r3, [r0, #61]
1659:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1660:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Set the key size and data type*/
1661:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   CRYP->CR = (uint32_t) (hcryp->Init.KeySize | hcryp->Init.DataType);
 2921              		.loc 1 1661 3 is_stmt 1 view .LVU1048
 2922              		.loc 1 1661 46 is_stmt 0 view .LVU1049
 2923 0016 D0E90123 		ldrd	r2, r3, [r0, #4]
 2924 001a 1343     		orrs	r3, r3, r2
 2925              		.loc 1 1661 12 view .LVU1050
 2926 001c 064A     		ldr	r2, .L252
 2927 001e 1360     		str	r3, [r2]
1662:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1663:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Reset CrypInCount and CrypOutCount */
1664:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypInCount = 0U;
 2928              		.loc 1 1664 3 is_stmt 1 view .LVU1051
 2929              		.loc 1 1664 22 is_stmt 0 view .LVU1052
 2930 0020 0023     		movs	r3, #0
1665:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
1666:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1667:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1668:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_READY;
 2931              		.loc 1 1668 16 view .LVU1053
 2932 0022 0122     		movs	r2, #1
1664:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
 2933              		.loc 1 1664 22 view .LVU1054
 2934 0024 8385     		strh	r3, [r0, #44]	@ movhi
1665:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
 2935              		.loc 1 1665 3 is_stmt 1 view .LVU1055
1669:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1670:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Set the default CRYP phase */
1671:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->Phase = HAL_CRYP_PHASE_READY;
 2936              		.loc 1 1671 16 is_stmt 0 view .LVU1056
 2937 0026 80F83120 		strb	r2, [r0, #49]
1665:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 2938              		.loc 1 1665 23 view .LVU1057
 2939 002a C385     		strh	r3, [r0, #46]	@ movhi
1668:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 2940              		.loc 1 1668 3 is_stmt 1 view .LVU1058
1668:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 2941              		.loc 1 1668 16 is_stmt 0 view .LVU1059
 2942 002c 80F83D20 		strb	r2, [r0, #61]
 2943              		.loc 1 1671 3 is_stmt 1 view .LVU1060
1672:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1673:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1674:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 2944              		.loc 1 1674 3 view .LVU1061
 2945              		.loc 1 1674 10 is_stmt 0 view .LVU1062
 2946 0030 1846     		mov	r0, r3
 2947              	.LVL250:
 2948              		.loc 1 1674 10 view .LVU1063
 2949 0032 7047     		bx	lr
 2950              	.LVL251:
 2951              	.L251:
1642:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
 2952              		.loc 1 1642 12 view .LVU1064
 2953 0034 0120     		movs	r0, #1
 2954              	.LVL252:
1675:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 2955              		.loc 1 1675 1 view .LVU1065
 2956 0036 7047     		bx	lr
 2957              	.L253:
 2958              		.align	2
 2959              	.L252:
 2960 0038 00000650 		.word	1342570496
 2961              		.cfi_endproc
 2962              	.LFE141:
 2964              		.section	.text.HAL_CRYP_DeInit,"ax",%progbits
 2965              		.align	1
 2966              		.global	HAL_CRYP_DeInit
 2967              		.syntax unified
 2968              		.thumb
 2969              		.thumb_func
 2970              		.fpu softvfp
 2972              	HAL_CRYP_DeInit:
 2973              	.LVL253:
 2974              	.LFB142:
1676:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1677:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1678:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  DeInitializes the CRYP peripheral. 
1679:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
1680:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for CRYP module
1681:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
1682:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1683:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_CRYP_DeInit(CRYP_HandleTypeDef *hcryp)
1684:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 2975              		.loc 1 1684 1 is_stmt 1 view -0
 2976              		.cfi_startproc
 2977              		@ args = 0, pretend = 0, frame = 0
 2978              		@ frame_needed = 0, uses_anonymous_args = 0
 2979              		@ link register save eliminated.
1685:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check the CRYP handle allocation */
1686:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp == NULL)
 2980              		.loc 1 1686 3 view .LVU1067
 2981              		.loc 1 1686 5 is_stmt 0 view .LVU1068
 2982 0000 0346     		mov	r3, r0
 2983 0002 0120     		movs	r0, #1
 2984              	.LVL254:
 2985              		.loc 1 1686 5 view .LVU1069
 2986 0004 83B1     		cbz	r3, .L255
1687:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1688:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     return HAL_ERROR;
1689:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1690:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1691:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1692:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_BUSY;
 2987              		.loc 1 1692 3 is_stmt 1 view .LVU1070
1693:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1694:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Set the default CRYP phase */
1695:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->Phase = HAL_CRYP_PHASE_READY;
 2988              		.loc 1 1695 16 is_stmt 0 view .LVU1071
 2989 0006 83F83100 		strb	r0, [r3, #49]
1696:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1697:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Reset CrypInCount and CrypOutCount */
1698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypInCount = 0U;
1699:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
1700:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1701:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Disable the CRYP Peripheral Clock */
1702:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_CRYP_DISABLE(hcryp);
 2990              		.loc 1 1702 3 view .LVU1072
 2991 000a 1968     		ldr	r1, [r3]
1698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
 2992              		.loc 1 1698 22 view .LVU1073
 2993 000c 0020     		movs	r0, #0
1692:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 2994              		.loc 1 1692 16 view .LVU1074
 2995 000e 0222     		movs	r2, #2
 2996 0010 83F83D20 		strb	r2, [r3, #61]
1695:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 2997              		.loc 1 1695 3 is_stmt 1 view .LVU1075
1698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
 2998              		.loc 1 1698 3 view .LVU1076
1698:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->CrypOutCount = 0U;
 2999              		.loc 1 1698 22 is_stmt 0 view .LVU1077
 3000 0014 9885     		strh	r0, [r3, #44]	@ movhi
1699:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 3001              		.loc 1 1699 3 is_stmt 1 view .LVU1078
1699:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 3002              		.loc 1 1699 23 is_stmt 0 view .LVU1079
 3003 0016 D885     		strh	r0, [r3, #46]	@ movhi
 3004              		.loc 1 1702 3 is_stmt 1 view .LVU1080
 3005 0018 0A68     		ldr	r2, [r1]
 3006 001a 22F40042 		bic	r2, r2, #32768
 3007 001e 0A60     		str	r2, [r1]
1703:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1704:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* DeInit the low level hardware: CLOCK, NVIC.*/
1705:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   //HAL_CRYP_MspDeInit(hcryp);
1706:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1707:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1708:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_RESET;
 3008              		.loc 1 1708 3 view .LVU1081
 3009              		.loc 1 1708 16 is_stmt 0 view .LVU1082
 3010 0020 83F83D00 		strb	r0, [r3, #61]
1709:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1710:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Release Lock */
1711:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UNLOCK(hcryp);
 3011              		.loc 1 1711 3 is_stmt 1 view .LVU1083
 3012              		.loc 1 1711 3 view .LVU1084
 3013 0024 83F83C00 		strb	r0, [r3, #60]
 3014              		.loc 1 1711 3 view .LVU1085
1712:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1713:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1714:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 3015              		.loc 1 1714 3 view .LVU1086
 3016              	.L255:
1715:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 3017              		.loc 1 1715 1 is_stmt 0 view .LVU1087
 3018 0028 7047     		bx	lr
 3019              		.cfi_endproc
 3020              	.LFE142:
 3022              		.section	.text.HAL_CRYP_AESECB_Encrypt,"ax",%progbits
 3023              		.align	1
 3024              		.global	HAL_CRYP_AESECB_Encrypt
 3025              		.syntax unified
 3026              		.thumb
 3027              		.thumb_func
 3028              		.fpu softvfp
 3030              	HAL_CRYP_AESECB_Encrypt:
 3031              	.LVL255:
 3032              	.LFB143:
1716:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1717:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_CRYP_AESECB_Encrypt(CRYP_HandleTypeDef *hcryp, uint8_t *pPlainData, uint16_t 
1718:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 3033              		.loc 1 1718 1 is_stmt 1 view -0
 3034              		.cfi_startproc
 3035              		@ args = 4, pretend = 0, frame = 0
 3036              		@ frame_needed = 0, uses_anonymous_args = 0
1719:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Locked */
1720:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_LOCK(hcryp);
 3037              		.loc 1 1720 3 view .LVU1089
 3038              		.loc 1 1720 3 view .LVU1090
1718:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Locked */
 3039              		.loc 1 1718 1 is_stmt 0 view .LVU1091
 3040 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3041              	.LCFI11:
 3042              		.cfi_def_cfa_offset 32
 3043              		.cfi_offset 4, -24
 3044              		.cfi_offset 5, -20
 3045              		.cfi_offset 6, -16
 3046              		.cfi_offset 7, -12
 3047              		.cfi_offset 8, -8
 3048              		.cfi_offset 14, -4
1718:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Locked */
 3049              		.loc 1 1718 1 view .LVU1092
 3050 0004 9846     		mov	r8, r3
 3051              		.loc 1 1720 3 view .LVU1093
 3052 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3053              	.LVL256:
 3054              		.loc 1 1720 3 view .LVU1094
 3055 000a 012B     		cmp	r3, #1
1718:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Locked */
 3056              		.loc 1 1718 1 view .LVU1095
 3057 000c 0446     		mov	r4, r0
 3058 000e 0E46     		mov	r6, r1
 3059 0010 1746     		mov	r7, r2
 3060 0012 4FF00205 		mov	r5, #2
 3061              		.loc 1 1720 3 view .LVU1096
 3062 0016 2CD0     		beq	.L260
 3063              		.loc 1 1720 3 is_stmt 1 discriminator 2 view .LVU1097
 3064 0018 0123     		movs	r3, #1
 3065 001a 80F83C30 		strb	r3, [r0, #60]
 3066              		.loc 1 1720 3 discriminator 2 view .LVU1098
1721:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1722:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1723:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_BUSY;
 3067              		.loc 1 1723 3 discriminator 2 view .LVU1099
1724:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1725:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check if initialization phase has already been performed */
1726:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp->Phase == HAL_CRYP_PHASE_READY)
 3068              		.loc 1 1726 5 is_stmt 0 discriminator 2 view .LVU1100
 3069 001e 90F83130 		ldrb	r3, [r0, #49]	@ zero_extendqisi2
1723:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 3070              		.loc 1 1723 16 discriminator 2 view .LVU1101
 3071 0022 80F83D50 		strb	r5, [r0, #61]
 3072              		.loc 1 1726 3 is_stmt 1 discriminator 2 view .LVU1102
 3073              		.loc 1 1726 5 is_stmt 0 discriminator 2 view .LVU1103
 3074 0026 012B     		cmp	r3, #1
 3075 0028 12D1     		bne	.L259
1727:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1728:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the key */
1729:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     CRYP_SetKey(hcryp, hcryp->Init.pKey, hcryp->Init.KeySize);
 3076              		.loc 1 1729 5 is_stmt 1 view .LVU1104
 3077 002a D0E90221 		ldrd	r2, r1, [r0, #8]
 3078              	.LVL257:
 3079              		.loc 1 1729 5 is_stmt 0 view .LVU1105
 3080 002e FFF7FEFF 		bl	CRYP_SetKey
 3081              	.LVL258:
1730:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1731:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the CRYP peripheral in AES ECB mode */
1732:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_SET_MODE(hcryp, CRYP_CR_ALGOMODE_AES_ECB);
 3082              		.loc 1 1732 5 is_stmt 1 view .LVU1106
 3083 0032 0068     		ldr	r0, [r0]
 3084              	.LVL259:
 3085              		.loc 1 1732 5 is_stmt 0 view .LVU1107
 3086 0034 0368     		ldr	r3, [r0]
 3087 0036 43F02003 		orr	r3, r3, #32
 3088 003a 0360     		str	r3, [r0]
1733:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1734:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Flush FIFO */
1735:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_FIFO_FLUSH(hcryp);
 3089              		.loc 1 1735 5 is_stmt 1 view .LVU1108
 3090 003c 0368     		ldr	r3, [r0]
 3091 003e 43F48043 		orr	r3, r3, #16384
 3092 0042 0360     		str	r3, [r0]
1736:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1737:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable CRYP */
1738:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_ENABLE(hcryp);
 3093              		.loc 1 1738 5 view .LVU1109
 3094 0044 0368     		ldr	r3, [r0]
 3095 0046 43F40043 		orr	r3, r3, #32768
 3096 004a 0360     		str	r3, [r0]
1739:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1740:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the phase */
1741:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Phase = HAL_CRYP_PHASE_PROCESS;
 3097              		.loc 1 1741 5 view .LVU1110
 3098              		.loc 1 1741 18 is_stmt 0 view .LVU1111
 3099 004c 84F83150 		strb	r5, [r4, #49]
 3100              	.L259:
1742:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1743:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1744:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Write Plain Data and Get Cypher Data */
1745:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(CRYP_ProcessData(hcryp, pPlainData, Size, pCypherData, Timeout) != HAL_OK)
 3101              		.loc 1 1745 5 is_stmt 1 view .LVU1112
 3102              		.loc 1 1745 8 is_stmt 0 view .LVU1113
 3103 0050 089B     		ldr	r3, [sp, #32]
 3104 0052 0093     		str	r3, [sp]
 3105 0054 3A46     		mov	r2, r7
 3106 0056 4346     		mov	r3, r8
 3107 0058 3146     		mov	r1, r6
 3108 005a 2046     		mov	r0, r4
 3109 005c FFF7FEFF 		bl	CRYP_ProcessData
 3110              	.LVL260:
 3111              		.loc 1 1745 7 view .LVU1114
 3112 0060 48B9     		cbnz	r0, .L261
1746:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1747:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_TIMEOUT;
1748:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1749:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1750:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1751:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_READY;
 3113              		.loc 1 1751 3 is_stmt 1 view .LVU1115
 3114              		.loc 1 1751 16 is_stmt 0 view .LVU1116
 3115 0062 0123     		movs	r3, #1
 3116 0064 84F83D30 		strb	r3, [r4, #61]
1752:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1753:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Unlocked */
1754:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UNLOCK(hcryp);
 3117              		.loc 1 1754 3 is_stmt 1 view .LVU1117
 3118              		.loc 1 1754 3 view .LVU1118
 3119 0068 84F83C00 		strb	r0, [r4, #60]
 3120              		.loc 1 1754 3 view .LVU1119
1755:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1756:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1757:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 3121              		.loc 1 1757 3 view .LVU1120
 3122              	.L258:
1758:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 3123              		.loc 1 1758 1 is_stmt 0 view .LVU1121
 3124 006c 02B0     		add	sp, sp, #8
 3125              	.LCFI12:
 3126              		.cfi_remember_state
 3127              		.cfi_def_cfa_offset 24
 3128              		@ sp needed
 3129 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3130              	.LVL261:
 3131              	.L260:
 3132              	.LCFI13:
 3133              		.cfi_restore_state
1720:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 3134              		.loc 1 1720 3 view .LVU1122
 3135 0072 2846     		mov	r0, r5
 3136              	.LVL262:
1720:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 3137              		.loc 1 1720 3 view .LVU1123
 3138 0074 FAE7     		b	.L258
 3139              	.LVL263:
 3140              	.L261:
1747:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 3141              		.loc 1 1747 14 view .LVU1124
 3142 0076 0320     		movs	r0, #3
 3143 0078 F8E7     		b	.L258
 3144              		.cfi_endproc
 3145              	.LFE143:
 3147              		.section	.text.HAL_CRYP_AESECB_Decrypt,"ax",%progbits
 3148              		.align	1
 3149              		.global	HAL_CRYP_AESECB_Decrypt
 3150              		.syntax unified
 3151              		.thumb
 3152              		.thumb_func
 3153              		.fpu softvfp
 3155              	HAL_CRYP_AESECB_Decrypt:
 3156              	.LVL264:
 3157              	.LFB144:
1759:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1760:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** /**
1761:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @brief  Initializes the CRYP peripheral in AES ECB decryption mode
1762:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         then decrypted pCypherData. The cypher data are available in pPlainData
1763:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
1764:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   *         the configuration information for CRYP module
1765:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  pCypherData Pointer to the cyphertext buffer
1766:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Size Length of the plaintext buffer, must be a multiple of 16.
1767:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  pPlainData Pointer to the plaintext buffer
1768:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @param  Timeout Specify Timeout value  
1769:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   * @retval HAL status
1770:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   */
1771:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** HAL_StatusTypeDef HAL_CRYP_AESECB_Decrypt(CRYP_HandleTypeDef *hcryp, uint8_t *pCypherData, uint16_t
1772:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** {
 3158              		.loc 1 1772 1 is_stmt 1 view -0
 3159              		.cfi_startproc
 3160              		@ args = 4, pretend = 0, frame = 0
 3161              		@ frame_needed = 0, uses_anonymous_args = 0
1773:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 3162              		.loc 1 1773 4 view .LVU1126
1774:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1775:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Locked */
1776:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_LOCK(hcryp);
 3163              		.loc 1 1776 3 view .LVU1127
 3164              		.loc 1 1776 3 view .LVU1128
1772:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 3165              		.loc 1 1772 1 is_stmt 0 view .LVU1129
 3166 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 3167              	.LCFI14:
 3168              		.cfi_def_cfa_offset 40
 3169              		.cfi_offset 4, -28
 3170              		.cfi_offset 5, -24
 3171              		.cfi_offset 6, -20
 3172              		.cfi_offset 7, -16
 3173              		.cfi_offset 8, -12
 3174              		.cfi_offset 9, -8
 3175              		.cfi_offset 14, -4
1772:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 3176              		.loc 1 1772 1 view .LVU1130
 3177 0004 9946     		mov	r9, r3
 3178              		.loc 1 1776 3 view .LVU1131
 3179 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3180              	.LVL265:
1772:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 3181              		.loc 1 1772 1 view .LVU1132
 3182 000a 0A9E     		ldr	r6, [sp, #40]
 3183              		.loc 1 1776 3 view .LVU1133
 3184 000c 012B     		cmp	r3, #1
1772:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 3185              		.loc 1 1772 1 view .LVU1134
 3186 000e 0446     		mov	r4, r0
 3187 0010 0F46     		mov	r7, r1
 3188 0012 9046     		mov	r8, r2
 3189 0014 4FF00205 		mov	r5, #2
 3190              		.loc 1 1776 3 view .LVU1135
 3191 0018 56D0     		beq	.L270
 3192              		.loc 1 1776 3 is_stmt 1 discriminator 2 view .LVU1136
 3193 001a 0123     		movs	r3, #1
 3194 001c 80F83C30 		strb	r3, [r0, #60]
 3195              		.loc 1 1776 3 discriminator 2 view .LVU1137
1777:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1778:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1779:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_BUSY;
 3196              		.loc 1 1779 3 discriminator 2 view .LVU1138
1780:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1781:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Check if initialization phase has already been performed */
1782:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   if(hcryp->Phase == HAL_CRYP_PHASE_READY)
 3197              		.loc 1 1782 5 is_stmt 0 discriminator 2 view .LVU1139
 3198 0020 90F83130 		ldrb	r3, [r0, #49]	@ zero_extendqisi2
1779:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 3199              		.loc 1 1779 16 discriminator 2 view .LVU1140
 3200 0024 80F83D50 		strb	r5, [r0, #61]
 3201              		.loc 1 1782 3 is_stmt 1 discriminator 2 view .LVU1141
 3202              		.loc 1 1782 5 is_stmt 0 discriminator 2 view .LVU1142
 3203 0028 012B     		cmp	r3, #1
 3204 002a 2DD1     		bne	.L264
1783:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   {
1784:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the key */
1785:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     CRYP_SetKey(hcryp, hcryp->Init.pKey, hcryp->Init.KeySize);
 3205              		.loc 1 1785 5 is_stmt 1 view .LVU1143
 3206 002c D0E90221 		ldrd	r2, r1, [r0, #8]
 3207              	.LVL266:
 3208              		.loc 1 1785 5 is_stmt 0 view .LVU1144
 3209 0030 FFF7FEFF 		bl	CRYP_SetKey
 3210              	.LVL267:
1786:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1787:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the CRYP peripheral in AES Key mode */
1788:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_SET_MODE(hcryp, CRYP_CR_ALGOMODE_AES_KEY | CRYP_CR_ALGODIR);
 3211              		.loc 1 1788 5 is_stmt 1 view .LVU1145
 3212 0034 0368     		ldr	r3, [r0]
 3213 0036 1A68     		ldr	r2, [r3]
 3214 0038 42F03C02 		orr	r2, r2, #60
 3215 003c 1A60     		str	r2, [r3]
1789:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1790:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable CRYP */
1791:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_ENABLE(hcryp);
 3216              		.loc 1 1791 5 view .LVU1146
 3217 003e 1A68     		ldr	r2, [r3]
 3218 0040 42F40042 		orr	r2, r2, #32768
 3219 0044 1A60     		str	r2, [r3]
1792:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1793:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Get tick */ 
1794:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 3220              		.loc 1 1794 5 view .LVU1147
 3221              		.loc 1 1794 17 is_stmt 0 view .LVU1148
 3222 0046 FFF7FEFF 		bl	HAL_GetTick
 3223              	.LVL268:
 3224              		.loc 1 1794 17 view .LVU1149
 3225 004a 0146     		mov	r1, r0
 3226              	.LVL269:
1795:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** 
1796:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     while(HAL_IS_BIT_SET(hcryp->Instance->SR, CRYP_FLAG_BUSY))
 3227              		.loc 1 1796 5 is_stmt 1 view .LVU1150
 3228              	.L265:
 3229              		.loc 1 1796 11 is_stmt 0 view .LVU1151
 3230 004c 2568     		ldr	r5, [r4]
 3231              	.L266:
 3232              		.loc 1 1796 10 is_stmt 1 view .LVU1152
 3233              		.loc 1 1796 11 is_stmt 0 view .LVU1153
 3234 004e 6B68     		ldr	r3, [r5, #4]
 3235              		.loc 1 1796 10 view .LVU1154
 3236 0050 DB06     		lsls	r3, r3, #27
 3237 0052 27D4     		bmi	.L269
1797:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1798:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       /* Check for the Timeout */
1799:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       if(Timeout != HAL_MAX_DELAY)
1800:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
1801:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
1802:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
1803:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           /* Change state */
1804:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           hcryp->State = HAL_CRYP_STATE_TIMEOUT;
1805:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           
1806:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           /* Process Unlocked */          
1807:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           __HAL_UNLOCK(hcryp);
1808:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
1809:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           return HAL_TIMEOUT;
1810:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
1811:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       }
1812:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1813:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1814:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Disable CRYP */
1815:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_DISABLE(hcryp);
 3238              		.loc 1 1815 5 is_stmt 1 view .LVU1155
 3239 0054 2B68     		ldr	r3, [r5]
 3240 0056 23F40043 		bic	r3, r3, #32768
 3241 005a 2B60     		str	r3, [r5]
1816:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1817:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Reset the ALGOMODE bits*/
1818:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     CRYP->CR &= (uint32_t)(~CRYP_CR_ALGOMODE);
 3242              		.loc 1 1818 5 view .LVU1156
 3243              		.loc 1 1818 14 is_stmt 0 view .LVU1157
 3244 005c 1C4B     		ldr	r3, .L274
 3245 005e 1868     		ldr	r0, [r3]
 3246 0060 20F40020 		bic	r0, r0, #524288
 3247 0064 20F03800 		bic	r0, r0, #56
 3248 0068 1860     		str	r0, [r3]
 3249              	.LVL270:
1819:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1820:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the CRYP peripheral in AES ECB decryption mode */
1821:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_SET_MODE(hcryp, CRYP_CR_ALGOMODE_AES_ECB | CRYP_CR_ALGODIR);
 3250              		.loc 1 1821 5 is_stmt 1 view .LVU1158
 3251 006a 2B68     		ldr	r3, [r5]
 3252 006c 43F02403 		orr	r3, r3, #36
 3253 0070 2B60     		str	r3, [r5]
1822:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Flush FIFO */
1823:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_FIFO_FLUSH(hcryp);
 3254              		.loc 1 1823 5 view .LVU1159
 3255 0072 2B68     		ldr	r3, [r5]
 3256 0074 43F48043 		orr	r3, r3, #16384
 3257 0078 2B60     		str	r3, [r5]
1824:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1825:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Enable CRYP */
1826:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     __HAL_CRYP_ENABLE(hcryp);
 3258              		.loc 1 1826 5 view .LVU1160
 3259 007a 2B68     		ldr	r3, [r5]
 3260 007c 43F40043 		orr	r3, r3, #32768
 3261 0080 2B60     		str	r3, [r5]
1827:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1828:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Set the phase */
1829:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     hcryp->Phase = HAL_CRYP_PHASE_PROCESS;
 3262              		.loc 1 1829 5 view .LVU1161
 3263              		.loc 1 1829 18 is_stmt 0 view .LVU1162
 3264 0082 0223     		movs	r3, #2
 3265 0084 84F83130 		strb	r3, [r4, #49]
 3266              	.LVL271:
 3267              	.L264:
1830:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   }
1831:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     
1832:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     /* Write Plain Data and Get Cypher Data */
1833:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     if(CRYP_ProcessData(hcryp, pCypherData, Size, pPlainData, Timeout) != HAL_OK)
 3268              		.loc 1 1833 5 is_stmt 1 view .LVU1163
 3269              		.loc 1 1833 8 is_stmt 0 view .LVU1164
 3270 0088 0096     		str	r6, [sp]
 3271 008a 4B46     		mov	r3, r9
 3272 008c 4246     		mov	r2, r8
 3273 008e 3946     		mov	r1, r7
 3274 0090 2046     		mov	r0, r4
 3275 0092 FFF7FEFF 		bl	CRYP_ProcessData
 3276              	.LVL272:
 3277              		.loc 1 1833 7 view .LVU1165
 3278 0096 C8B9     		cbnz	r0, .L271
1834:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     {
1835:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       return HAL_TIMEOUT;
1836:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
1837:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1838:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Change the CRYP state */
1839:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   hcryp->State = HAL_CRYP_STATE_READY;
 3279              		.loc 1 1839 3 is_stmt 1 view .LVU1166
 3280              		.loc 1 1839 16 is_stmt 0 view .LVU1167
 3281 0098 0123     		movs	r3, #1
 3282 009a 84F83D30 		strb	r3, [r4, #61]
1840:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1841:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Process Unlocked */
1842:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   __HAL_UNLOCK(hcryp);
 3283              		.loc 1 1842 3 is_stmt 1 view .LVU1168
 3284              		.loc 1 1842 3 view .LVU1169
 3285 009e 84F83C00 		strb	r0, [r4, #60]
 3286              		.loc 1 1842 3 view .LVU1170
1843:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
1844:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   /* Return function status */
1845:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   return HAL_OK;
 3287              		.loc 1 1845 3 view .LVU1171
 3288              		.loc 1 1845 10 is_stmt 0 view .LVU1172
 3289 00a2 08E0     		b	.L263
 3290              	.LVL273:
 3291              	.L269:
1799:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 3292              		.loc 1 1799 7 is_stmt 1 view .LVU1173
1799:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****       {
 3293              		.loc 1 1799 9 is_stmt 0 view .LVU1174
 3294 00a4 721C     		adds	r2, r6, #1
 3295 00a6 D2D0     		beq	.L266
1801:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 3296              		.loc 1 1801 9 is_stmt 1 view .LVU1175
1801:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 3297              		.loc 1 1801 11 is_stmt 0 view .LVU1176
 3298 00a8 46B9     		cbnz	r6, .L267
 3299              	.L268:
1804:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           
 3300              		.loc 1 1804 11 is_stmt 1 view .LVU1177
1804:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           
 3301              		.loc 1 1804 24 is_stmt 0 view .LVU1178
 3302 00aa 0320     		movs	r0, #3
1807:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
 3303              		.loc 1 1807 11 view .LVU1179
 3304 00ac 0023     		movs	r3, #0
1804:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****           
 3305              		.loc 1 1804 24 view .LVU1180
 3306 00ae 84F83D00 		strb	r0, [r4, #61]
1807:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
 3307              		.loc 1 1807 11 is_stmt 1 view .LVU1181
1807:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
 3308              		.loc 1 1807 11 view .LVU1182
 3309 00b2 84F83C30 		strb	r3, [r4, #60]
1807:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         
 3310              		.loc 1 1807 11 view .LVU1183
1809:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         }
 3311              		.loc 1 1809 11 view .LVU1184
 3312              	.LVL274:
 3313              	.L263:
1846:.././hal/stm32f4/stm32f4_hal_lowlevel.c **** }
 3314              		.loc 1 1846 1 is_stmt 0 view .LVU1185
 3315 00b6 03B0     		add	sp, sp, #12
 3316              	.LCFI15:
 3317              		.cfi_remember_state
 3318              		.cfi_def_cfa_offset 28
 3319              		@ sp needed
 3320 00b8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3321              	.LVL275:
 3322              	.L267:
 3323              	.LCFI16:
 3324              		.cfi_restore_state
1801:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 3325              		.loc 1 1801 31 discriminator 1 view .LVU1186
 3326 00bc FFF7FEFF 		bl	HAL_GetTick
 3327              	.LVL276:
1801:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 3328              		.loc 1 1801 45 discriminator 1 view .LVU1187
 3329 00c0 401A     		subs	r0, r0, r1
1801:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****         {
 3330              		.loc 1 1801 27 discriminator 1 view .LVU1188
 3331 00c2 B042     		cmp	r0, r6
 3332 00c4 C2D9     		bls	.L265
 3333 00c6 F0E7     		b	.L268
 3334              	.LVL277:
 3335              	.L270:
1776:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 3336              		.loc 1 1776 3 view .LVU1189
 3337 00c8 2846     		mov	r0, r5
 3338              	.LVL278:
1776:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****   
 3339              		.loc 1 1776 3 view .LVU1190
 3340 00ca F4E7     		b	.L263
 3341              	.LVL279:
 3342              	.L271:
1835:.././hal/stm32f4/stm32f4_hal_lowlevel.c ****     }
 3343              		.loc 1 1835 14 view .LVU1191
 3344 00cc 0320     		movs	r0, #3
 3345 00ce F2E7     		b	.L263
 3346              	.L275:
 3347              		.align	2
 3348              	.L274:
 3349 00d0 00000650 		.word	1342570496
 3350              		.cfi_endproc
 3351              	.LFE144:
 3353              		.bss
 3354              		.align	2
 3355              		.set	.LANCHOR0,. + 0
 3358              	tick.7357:
 3359 0000 00000000 		.space	4
 3360              		.text
 3361              	.Letext0:
 3362              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3363              		.file 4 ".././hal/stm32f4/CMSIS/core/core_cm4.h"
 3364              		.file 5 ".././hal/stm32f4/CMSIS/device/system_stm32f4xx.h"
 3365              		.file 6 ".././hal/stm32f4/CMSIS/device/stm32f415xx.h"
 3366              		.file 7 ".././hal/stm32f4/CMSIS/device/stm32f4xx.h"
 3367              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3368              		.file 9 "/usr/include/newlib/sys/_types.h"
 3369              		.file 10 "/usr/include/newlib/sys/reent.h"
 3370              		.file 11 "/usr/include/newlib/sys/lock.h"
 3371              		.file 12 ".././hal/stm32f4/stm32f4xx_hal_def.h"
 3372              		.file 13 ".././hal/stm32f4/stm32f4xx_hal_rcc_ex.h"
 3373              		.file 14 ".././hal/stm32f4/stm32f4xx_hal_rcc.h"
 3374              		.file 15 ".././hal/stm32f4/stm32f4xx_hal_gpio.h"
 3375              		.file 16 ".././hal/stm32f4/stm32f4xx_hal_dma.h"
 3376              		.file 17 ".././hal/stm32f4/stm32f4xx_hal_uart.h"
 3377              		.file 18 ".././hal/stm32f4/stm32f4xx_hal_cryp.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4_hal_lowlevel.c
     /tmp/ccg6P5cr.s:16     .text.CRYP_SetKey:0000000000000000 $t
     /tmp/ccg6P5cr.s:23     .text.CRYP_SetKey:0000000000000000 CRYP_SetKey
     /tmp/ccg6P5cr.s:380    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccg6P5cr.s:387    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccg6P5cr.s:407    .text.HAL_GetTick:000000000000000c $d
     /tmp/ccg6P5cr.s:412    .text.CRYP_ProcessData:0000000000000000 $t
     /tmp/ccg6P5cr.s:418    .text.CRYP_ProcessData:0000000000000000 CRYP_ProcessData
     /tmp/ccg6P5cr.s:587    .text.RCC_AHB2PeriphClockCmd:0000000000000000 $t
     /tmp/ccg6P5cr.s:594    .text.RCC_AHB2PeriphClockCmd:0000000000000000 RCC_AHB2PeriphClockCmd
     /tmp/ccg6P5cr.s:630    .text.RCC_AHB2PeriphClockCmd:0000000000000014 $d
     /tmp/ccg6P5cr.s:635    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccg6P5cr.s:642    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccg6P5cr.s:1246   .text.HAL_RCC_OscConfig:0000000000000268 $d
     /tmp/ccg6P5cr.s:1255   .text.HAL_RCC_OscConfig:000000000000027c $t
     /tmp/ccg6P5cr.s:1458   .text.HAL_RCC_OscConfig:0000000000000334 $d
     /tmp/ccg6P5cr.s:1465   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccg6P5cr.s:1472   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccg6P5cr.s:1763   .text.HAL_RCC_ClockConfig:0000000000000128 $d
     /tmp/ccg6P5cr.s:1769   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccg6P5cr.s:1776   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccg6P5cr.s:1790   .text.HAL_RCC_GetPCLK1Freq:0000000000000004 $d
     /tmp/ccg6P5cr.s:1795   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccg6P5cr.s:1802   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccg6P5cr.s:1813   .text.HAL_RCC_GetPCLK2Freq:0000000000000004 $d
     /tmp/ccg6P5cr.s:1818   .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/ccg6P5cr.s:1825   .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/ccg6P5cr.s:2238   .text.HAL_GPIO_Init:00000000000001c0 $d
     /tmp/ccg6P5cr.s:2246   .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/ccg6P5cr.s:2253   .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/ccg6P5cr.s:2284   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccg6P5cr.s:2291   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccg6P5cr.s:2502   .text.HAL_UART_Init:00000000000000d8 $d
     /tmp/ccg6P5cr.s:2507   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccg6P5cr.s:2514   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccg6P5cr.s:2691   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccg6P5cr.s:2698   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccg6P5cr.s:2887   .text.HAL_CRYP_Init:0000000000000000 $t
     /tmp/ccg6P5cr.s:2894   .text.HAL_CRYP_Init:0000000000000000 HAL_CRYP_Init
     /tmp/ccg6P5cr.s:2960   .text.HAL_CRYP_Init:0000000000000038 $d
     /tmp/ccg6P5cr.s:2965   .text.HAL_CRYP_DeInit:0000000000000000 $t
     /tmp/ccg6P5cr.s:2972   .text.HAL_CRYP_DeInit:0000000000000000 HAL_CRYP_DeInit
     /tmp/ccg6P5cr.s:3023   .text.HAL_CRYP_AESECB_Encrypt:0000000000000000 $t
     /tmp/ccg6P5cr.s:3030   .text.HAL_CRYP_AESECB_Encrypt:0000000000000000 HAL_CRYP_AESECB_Encrypt
     /tmp/ccg6P5cr.s:3148   .text.HAL_CRYP_AESECB_Decrypt:0000000000000000 $t
     /tmp/ccg6P5cr.s:3155   .text.HAL_CRYP_AESECB_Decrypt:0000000000000000 HAL_CRYP_AESECB_Decrypt
     /tmp/ccg6P5cr.s:3349   .text.HAL_CRYP_AESECB_Decrypt:00000000000000d0 $d
     /tmp/ccg6P5cr.s:3354   .bss:0000000000000000 $d
     /tmp/ccg6P5cr.s:3358   .bss:0000000000000000 tick.7357

NO UNDEFINED SYMBOLS
