   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"simpleserial.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.check_version,"ax",%progbits
  16              		.align	1
  17              		.global	check_version
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	check_version:
  25              	.LVL0:
  26              	.LFB1:
  27              		.file 1 ".././simpleserial/simpleserial.c"
   1:.././simpleserial/simpleserial.c **** // simpleserial.c
   2:.././simpleserial/simpleserial.c **** 
   3:.././simpleserial/simpleserial.c **** #include "simpleserial.h"
   4:.././simpleserial/simpleserial.c **** #include <stdint.h>
   5:.././simpleserial/simpleserial.c **** #include "hal.h"
   6:.././simpleserial/simpleserial.c **** 
   7:.././simpleserial/simpleserial.c **** 
   8:.././simpleserial/simpleserial.c **** #define MAX_SS_CMDS 16
   9:.././simpleserial/simpleserial.c **** static int num_commands = 0;
  10:.././simpleserial/simpleserial.c **** 
  11:.././simpleserial/simpleserial.c **** #define MAX_SS_LEN 192
  12:.././simpleserial/simpleserial.c **** 
  13:.././simpleserial/simpleserial.c **** //#define SS_VER_1_0 0
  14:.././simpleserial/simpleserial.c **** //#define SS_VER_1_1 1
  15:.././simpleserial/simpleserial.c **** //#define SS_VER_2_0 2
  16:.././simpleserial/simpleserial.c **** 
  17:.././simpleserial/simpleserial.c **** 
  18:.././simpleserial/simpleserial.c **** // 0xA6 formerly 
  19:.././simpleserial/simpleserial.c **** #define CW_CRC 0x4D 
  20:.././simpleserial/simpleserial.c **** uint8_t ss_crc(uint8_t *buf, uint8_t len)
  21:.././simpleserial/simpleserial.c **** {
  22:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
  23:.././simpleserial/simpleserial.c **** 	uint8_t crc = 0x00;
  24:.././simpleserial/simpleserial.c **** 	while (len--) {
  25:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  26:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  27:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  28:.././simpleserial/simpleserial.c **** 		}
  29:.././simpleserial/simpleserial.c **** 	}
  30:.././simpleserial/simpleserial.c **** 	return crc;
  31:.././simpleserial/simpleserial.c **** 
  32:.././simpleserial/simpleserial.c **** }
  33:.././simpleserial/simpleserial.c **** 
  34:.././simpleserial/simpleserial.c **** // [B_STUFF, CMD, SCMD, LEN, B_STUFF, DATA..., CRC, TERM]
  35:.././simpleserial/simpleserial.c **** 
  36:.././simpleserial/simpleserial.c **** //#define SS_VER SS_VER_2_0
  37:.././simpleserial/simpleserial.c **** #if SS_VER == SS_VER_2_0
  38:.././simpleserial/simpleserial.c **** #error "SS_VER_2_0 is deprecated! Use SS_VER_2_1 instead."
  39:.././simpleserial/simpleserial.c **** #elif SS_VER == SS_VER_2_1
  40:.././simpleserial/simpleserial.c **** 
  41:.././simpleserial/simpleserial.c **** 
  42:.././simpleserial/simpleserial.c **** typedef struct ss_cmd
  43:.././simpleserial/simpleserial.c **** {
  44:.././simpleserial/simpleserial.c **** 	char c;
  45:.././simpleserial/simpleserial.c **** 	unsigned int len;
  46:.././simpleserial/simpleserial.c **** 	uint8_t (*fp)(uint8_t, uint8_t, uint8_t, uint8_t *);
  47:.././simpleserial/simpleserial.c **** } ss_cmd;
  48:.././simpleserial/simpleserial.c **** static ss_cmd commands[MAX_SS_CMDS];
  49:.././simpleserial/simpleserial.c **** 
  50:.././simpleserial/simpleserial.c **** void ss_puts(char *x)
  51:.././simpleserial/simpleserial.c **** {
  52:.././simpleserial/simpleserial.c **** 	do {
  53:.././simpleserial/simpleserial.c **** 		putch(*x);
  54:.././simpleserial/simpleserial.c **** 	} while (*++x);
  55:.././simpleserial/simpleserial.c **** }
  56:.././simpleserial/simpleserial.c **** 
  57:.././simpleserial/simpleserial.c **** #define FRAME_BYTE 0x00
  58:.././simpleserial/simpleserial.c **** 
  59:.././simpleserial/simpleserial.c **** uint8_t check_version(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t *data)
  60:.././simpleserial/simpleserial.c **** {
  61:.././simpleserial/simpleserial.c **** 	uint8_t ver = SS_VER;
  62:.././simpleserial/simpleserial.c **** 	simpleserial_put('r', 1, &ver);
  63:.././simpleserial/simpleserial.c **** 	return SS_ERR_OK;
  64:.././simpleserial/simpleserial.c **** }
  65:.././simpleserial/simpleserial.c **** 
  66:.././simpleserial/simpleserial.c **** uint8_t ss_get_commands(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t *data)
  67:.././simpleserial/simpleserial.c **** {
  68:.././simpleserial/simpleserial.c ****     uint8_t cmd_chars[MAX_SS_CMDS];
  69:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
  70:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
  71:.././simpleserial/simpleserial.c ****     }
  72:.././simpleserial/simpleserial.c **** 
  73:.././simpleserial/simpleserial.c ****     simpleserial_put('r', num_commands & 0xFF, (void *)cmd_chars);
  74:.././simpleserial/simpleserial.c ****     return 0x00;
  75:.././simpleserial/simpleserial.c **** 
  76:.././simpleserial/simpleserial.c **** }
  77:.././simpleserial/simpleserial.c **** 
  78:.././simpleserial/simpleserial.c **** uint8_t stuff_data(uint8_t *buf, uint8_t len)
  79:.././simpleserial/simpleserial.c **** {
  80:.././simpleserial/simpleserial.c **** 	uint8_t i = 1;
  81:.././simpleserial/simpleserial.c **** 	uint8_t last = 0;
  82:.././simpleserial/simpleserial.c **** 	for (; i < len; i++) {
  83:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
  84:.././simpleserial/simpleserial.c **** 			buf[last] = i - last;
  85:.././simpleserial/simpleserial.c **** 			last = i;
  86:.././simpleserial/simpleserial.c **** 		}
  87:.././simpleserial/simpleserial.c **** 	}
  88:.././simpleserial/simpleserial.c **** 	return 0x00;
  89:.././simpleserial/simpleserial.c **** }
  90:.././simpleserial/simpleserial.c **** 
  91:.././simpleserial/simpleserial.c **** uint8_t unstuff_data(uint8_t *buf, uint8_t len)
  92:.././simpleserial/simpleserial.c **** {
  93:.././simpleserial/simpleserial.c **** 	uint8_t next = buf[0];
  94:.././simpleserial/simpleserial.c **** 	buf[0] = 0x00;
  95:.././simpleserial/simpleserial.c **** 	//len -= 1;
  96:.././simpleserial/simpleserial.c **** 	uint8_t tmp = next;
  97:.././simpleserial/simpleserial.c **** 	while ((next < len) && tmp != 0) {
  98:.././simpleserial/simpleserial.c **** 		tmp = buf[next];
  99:.././simpleserial/simpleserial.c **** 		buf[next] = FRAME_BYTE;
 100:.././simpleserial/simpleserial.c **** 		next += tmp;
 101:.././simpleserial/simpleserial.c **** 	}
 102:.././simpleserial/simpleserial.c **** 	return next;
 103:.././simpleserial/simpleserial.c **** }
 104:.././simpleserial/simpleserial.c **** 
 105:.././simpleserial/simpleserial.c **** // Set up the SimpleSerial module by preparing internal commands
 106:.././simpleserial/simpleserial.c **** // This just adds the "v" command for now...
 107:.././simpleserial/simpleserial.c **** void simpleserial_init()
 108:.././simpleserial/simpleserial.c **** {
 109:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 110:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 111:.././simpleserial/simpleserial.c **** }
 112:.././simpleserial/simpleserial.c **** 
 113:.././simpleserial/simpleserial.c **** int simpleserial_addcmd(char c, unsigned int len, uint8_t (*fp)(uint8_t, uint8_t, uint8_t, uint8_t*
 114:.././simpleserial/simpleserial.c **** {
 115:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS) {
 116:.././simpleserial/simpleserial.c **** 		putch('a');
 117:.././simpleserial/simpleserial.c **** 		return 1;
 118:.././simpleserial/simpleserial.c **** 	}
 119:.././simpleserial/simpleserial.c **** 
 120:.././simpleserial/simpleserial.c **** 	if(len >= MAX_SS_LEN) {
 121:.././simpleserial/simpleserial.c **** 		putch('b');
 122:.././simpleserial/simpleserial.c **** 		return 1;
 123:.././simpleserial/simpleserial.c **** 	}
 124:.././simpleserial/simpleserial.c **** 
 125:.././simpleserial/simpleserial.c **** 	commands[num_commands].c   = c;
 126:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 127:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 128:.././simpleserial/simpleserial.c **** 	num_commands++;
 129:.././simpleserial/simpleserial.c **** 
 130:.././simpleserial/simpleserial.c **** 	return 0;
 131:.././simpleserial/simpleserial.c **** }
 132:.././simpleserial/simpleserial.c **** 
 133:.././simpleserial/simpleserial.c **** void simpleserial_get(void)
 134:.././simpleserial/simpleserial.c **** {
 135:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 136:.././simpleserial/simpleserial.c **** 	uint8_t err = 0;
 137:.././simpleserial/simpleserial.c **** 
 138:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < 4; i++) {
 139:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 140:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 141:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 142:.././simpleserial/simpleserial.c **** 			goto ERROR;
 143:.././simpleserial/simpleserial.c **** 		}
 144:.././simpleserial/simpleserial.c **** 	}
 145:.././simpleserial/simpleserial.c **** 	uint8_t next_frame = unstuff_data(data_buf, 4);
 146:.././simpleserial/simpleserial.c **** 
 147:.././simpleserial/simpleserial.c **** 	// check for valid command
 148:.././simpleserial/simpleserial.c **** 	uint8_t c = 0;
 149:.././simpleserial/simpleserial.c **** 	for(c = 0; c < num_commands; c++)
 150:.././simpleserial/simpleserial.c **** 	{
 151:.././simpleserial/simpleserial.c **** 		if(commands[c].c == data_buf[1])
 152:.././simpleserial/simpleserial.c **** 			break;
 153:.././simpleserial/simpleserial.c **** 	}
 154:.././simpleserial/simpleserial.c **** 
 155:.././simpleserial/simpleserial.c **** 	if (c == num_commands) {
 156:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CMD;
 157:.././simpleserial/simpleserial.c **** 		goto ERROR;
 158:.././simpleserial/simpleserial.c **** 	}
 159:.././simpleserial/simpleserial.c **** 
 160:.././simpleserial/simpleserial.c **** 	//check that next frame not beyond end of message
 161:.././simpleserial/simpleserial.c **** 	// account for cmd, scmd, len, data, crc, end of frame
 162:.././simpleserial/simpleserial.c **** 	if ((data_buf[3] + 5) < next_frame) {
 163:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 164:.././simpleserial/simpleserial.c **** 		goto ERROR;
 165:.././simpleserial/simpleserial.c **** 	}
 166:.././simpleserial/simpleserial.c **** 
 167:.././simpleserial/simpleserial.c **** 	// read in data
 168:.././simpleserial/simpleserial.c **** 	// eq to len + crc + frame end
 169:.././simpleserial/simpleserial.c **** 	int i = 4;
 170:.././simpleserial/simpleserial.c **** 	for (; i < data_buf[3] + 5; i++) {
 171:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 172:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 173:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 174:.././simpleserial/simpleserial.c **** 			goto ERROR;
 175:.././simpleserial/simpleserial.c **** 		}
 176:.././simpleserial/simpleserial.c **** 	}
 177:.././simpleserial/simpleserial.c **** 
 178:.././simpleserial/simpleserial.c **** 	//check that final byte is the FRAME_BYTE
 179:.././simpleserial/simpleserial.c **** 	data_buf[i] = getch();
 180:.././simpleserial/simpleserial.c **** 	if (data_buf[i] != FRAME_BYTE) {
 181:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 182:.././simpleserial/simpleserial.c **** 		goto ERROR;
 183:.././simpleserial/simpleserial.c **** 	}
 184:.././simpleserial/simpleserial.c **** 
 185:.././simpleserial/simpleserial.c **** 	//fully unstuff data now
 186:.././simpleserial/simpleserial.c **** 	unstuff_data(data_buf + next_frame, i - next_frame + 1);
 187:.././simpleserial/simpleserial.c **** 
 188:.././simpleserial/simpleserial.c **** 	//calc crc excluding original frame offset and frame end and crc
 189:.././simpleserial/simpleserial.c **** 	uint8_t crc = ss_crc(data_buf+1, i-2);
 190:.././simpleserial/simpleserial.c **** 	if (crc != data_buf[i-1]) {
 191:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CRC;
 192:.././simpleserial/simpleserial.c **** 		goto ERROR;
 193:.././simpleserial/simpleserial.c **** 	}
 194:.././simpleserial/simpleserial.c **** 
 195:.././simpleserial/simpleserial.c **** 	err = commands[c].fp(data_buf[1], data_buf[2], data_buf[3], data_buf+4);
 196:.././simpleserial/simpleserial.c **** 
 197:.././simpleserial/simpleserial.c **** ERROR:
 198:.././simpleserial/simpleserial.c **** 	simpleserial_put('e', 0x01, &err);
 199:.././simpleserial/simpleserial.c **** 	return;
 200:.././simpleserial/simpleserial.c **** }
 201:.././simpleserial/simpleserial.c **** 
 202:.././simpleserial/simpleserial.c **** void simpleserial_put(char c, uint8_t size, uint8_t* output)
 203:.././simpleserial/simpleserial.c **** {
 204:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 205:.././simpleserial/simpleserial.c **** 	data_buf[0] = 0x00;
 206:.././simpleserial/simpleserial.c **** 	data_buf[1] = c;
 207:.././simpleserial/simpleserial.c **** 	data_buf[2] = size;
 208:.././simpleserial/simpleserial.c **** 	int i = 0;
 209:.././simpleserial/simpleserial.c **** 	for (; i < size; i++) {
 210:.././simpleserial/simpleserial.c **** 		data_buf[i + 3] = output[i];
 211:.././simpleserial/simpleserial.c **** 	}
 212:.././simpleserial/simpleserial.c **** 	data_buf[i + 3] = ss_crc(data_buf+1, size+2);
 213:.././simpleserial/simpleserial.c **** 	data_buf[i + 4] = 0x00;
 214:.././simpleserial/simpleserial.c **** 	stuff_data(data_buf, i + 5);
 215:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < size + 5; i++) {
 216:.././simpleserial/simpleserial.c **** 		putch(data_buf[i]);
 217:.././simpleserial/simpleserial.c **** 	}
 218:.././simpleserial/simpleserial.c **** }
 219:.././simpleserial/simpleserial.c **** 
 220:.././simpleserial/simpleserial.c **** 
 221:.././simpleserial/simpleserial.c **** #else
 222:.././simpleserial/simpleserial.c **** 
 223:.././simpleserial/simpleserial.c **** typedef struct ss_cmd
 224:.././simpleserial/simpleserial.c **** {
 225:.././simpleserial/simpleserial.c **** 	char c;
 226:.././simpleserial/simpleserial.c **** 	unsigned int len;
 227:.././simpleserial/simpleserial.c **** 	uint8_t (*fp)(uint8_t*, uint8_t);
 228:.././simpleserial/simpleserial.c **** 	uint8_t flags;
 229:.././simpleserial/simpleserial.c **** } ss_cmd;
 230:.././simpleserial/simpleserial.c **** static ss_cmd commands[MAX_SS_CMDS];
 231:.././simpleserial/simpleserial.c **** // Callback function for "v" command.
 232:.././simpleserial/simpleserial.c **** // This can exist in v1.0 as long as we don't actually send back an ack ("z")
 233:.././simpleserial/simpleserial.c **** uint8_t check_version(uint8_t *v, uint8_t len)
 234:.././simpleserial/simpleserial.c **** {
  28              		.loc 1 234 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 235:.././simpleserial/simpleserial.c **** 	return SS_VER;
  33              		.loc 1 235 2 view .LVU1
 236:.././simpleserial/simpleserial.c **** }
  34              		.loc 1 236 1 is_stmt 0 view .LVU2
  35 0000 0120     		movs	r0, #1
  36              	.LVL1:
  37              		.loc 1 236 1 view .LVU3
  38 0002 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE1:
  42              		.section	.text.ss_crc,"ax",%progbits
  43              		.align	1
  44              		.global	ss_crc
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu softvfp
  50              	ss_crc:
  51              	.LVL2:
  52              	.LFB0:
  21:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
  53              		.loc 1 21 1 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  21:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
  58              		.loc 1 21 1 is_stmt 0 view .LVU5
  59 0000 0346     		mov	r3, r0
  22:.././simpleserial/simpleserial.c **** 	uint8_t crc = 0x00;
  60              		.loc 1 22 2 is_stmt 1 view .LVU6
  61              	.LVL3:
  23:.././simpleserial/simpleserial.c **** 	while (len--) {
  62              		.loc 1 23 2 view .LVU7
  24:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  63              		.loc 1 24 2 view .LVU8
  64 0002 0144     		add	r1, r1, r0
  65              	.LVL4:
  23:.././simpleserial/simpleserial.c **** 	while (len--) {
  66              		.loc 1 23 10 is_stmt 0 view .LVU9
  67 0004 0020     		movs	r0, #0
  68              	.LVL5:
  69              	.L3:
  24:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  70              		.loc 1 24 8 is_stmt 1 view .LVU10
  24:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  71              		.loc 1 24 8 is_stmt 0 view .LVU11
  72 0006 8B42     		cmp	r3, r1
  73 0008 00D1     		bne	.L7
  32:.././simpleserial/simpleserial.c **** 
  74              		.loc 1 32 1 view .LVU12
  75 000a 7047     		bx	lr
  76              	.L7:
  25:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  77              		.loc 1 25 3 is_stmt 1 view .LVU13
  78              	.LVL6:
  25:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  79              		.loc 1 25 7 is_stmt 0 view .LVU14
  80 000c 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  81              	.LVL7:
  25:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  82              		.loc 1 25 7 view .LVU15
  83 0010 5040     		eors	r0, r0, r2
  84              	.LVL8:
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  85              		.loc 1 26 3 is_stmt 1 view .LVU16
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  86              		.loc 1 26 15 view .LVU17
  25:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  87              		.loc 1 25 7 is_stmt 0 view .LVU18
  88 0012 0822     		movs	r2, #8
  89              	.LVL9:
  90              	.L6:
  27:.././simpleserial/simpleserial.c **** 		}
  91              		.loc 1 27 4 is_stmt 1 view .LVU19
  27:.././simpleserial/simpleserial.c **** 		}
  92              		.loc 1 27 8 is_stmt 0 view .LVU20
  93 0014 10F0800F 		tst	r0, #128
  94 0018 4FEA4000 		lsl	r0, r0, #1
  95              	.LVL10:
  27:.././simpleserial/simpleserial.c **** 		}
  96              		.loc 1 27 34 view .LVU21
  97 001c 18BF     		it	ne
  98 001e 80F04D00 		eorne	r0, r0, #77
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  99              		.loc 1 26 3 view .LVU22
 100 0022 013A     		subs	r2, r2, #1
 101              	.LVL11:
  27:.././simpleserial/simpleserial.c **** 		}
 102              		.loc 1 27 8 view .LVU23
 103 0024 C0B2     		uxtb	r0, r0
 104              	.LVL12:
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 105              		.loc 1 26 22 is_stmt 1 view .LVU24
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 106              		.loc 1 26 15 view .LVU25
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 107              		.loc 1 26 3 is_stmt 0 view .LVU26
 108 0026 F5D1     		bne	.L6
 109 0028 EDE7     		b	.L3
 110              		.cfi_endproc
 111              	.LFE0:
 113              		.section	.text.hex_decode,"ax",%progbits
 114              		.align	1
 115              		.global	hex_decode
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu softvfp
 121              	hex_decode:
 122              	.LVL13:
 123              	.LFB4:
 237:.././simpleserial/simpleserial.c **** 
 238:.././simpleserial/simpleserial.c **** uint8_t ss_num_commands(uint8_t *x, uint8_t len)
 239:.././simpleserial/simpleserial.c **** {
 240:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 241:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 242:.././simpleserial/simpleserial.c ****     return 0x00;
 243:.././simpleserial/simpleserial.c **** }
 244:.././simpleserial/simpleserial.c **** 
 245:.././simpleserial/simpleserial.c **** typedef struct ss_cmd_repr {
 246:.././simpleserial/simpleserial.c ****     uint8_t c;
 247:.././simpleserial/simpleserial.c ****     uint8_t len;
 248:.././simpleserial/simpleserial.c ****     uint8_t flags;
 249:.././simpleserial/simpleserial.c **** } ss_cmd_repr;
 250:.././simpleserial/simpleserial.c **** 
 251:.././simpleserial/simpleserial.c **** uint8_t ss_get_commands(uint8_t *x, uint8_t len)
 252:.././simpleserial/simpleserial.c **** {
 253:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 254:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 257:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 258:.././simpleserial/simpleserial.c ****     }
 259:.././simpleserial/simpleserial.c **** 
 260:.././simpleserial/simpleserial.c ****     simpleserial_put('r', num_commands * 0x03, (void *) repr_cmd_buf);
 261:.././simpleserial/simpleserial.c ****     return 0x00;
 262:.././simpleserial/simpleserial.c **** }
 263:.././simpleserial/simpleserial.c **** 
 264:.././simpleserial/simpleserial.c **** static char hex_lookup[16] =
 265:.././simpleserial/simpleserial.c **** {
 266:.././simpleserial/simpleserial.c **** 	'0', '1', '2', '3', '4', '5', '6', '7',
 267:.././simpleserial/simpleserial.c **** 	'8', '9', 'A', 'B', 'C', 'D', 'E', 'F'
 268:.././simpleserial/simpleserial.c **** };
 269:.././simpleserial/simpleserial.c **** 
 270:.././simpleserial/simpleserial.c **** int hex_decode(int len, char* ascii_buf, uint8_t* data_buf)
 271:.././simpleserial/simpleserial.c **** {
 124              		.loc 1 271 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 272:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 128              		.loc 1 272 2 view .LVU28
 129              	.LBB2:
 130              		.loc 1 272 6 view .LVU29
 131              		.loc 1 272 6 is_stmt 0 view .LVU30
 132              	.LBE2:
 271:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 133              		.loc 1 271 1 view .LVU31
 134 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 135              	.LCFI0:
 136              		.cfi_def_cfa_offset 20
 137              		.cfi_offset 4, -20
 138              		.cfi_offset 5, -16
 139              		.cfi_offset 6, -12
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142              	.LBB7:
 143              		.loc 1 272 10 view .LVU32
 144 0002 0023     		movs	r3, #0
 145              	.LBB3:
 273:.././simpleserial/simpleserial.c **** 	{
 274:.././simpleserial/simpleserial.c **** 		char n_hi = ascii_buf[2*i];
 275:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 146              		.loc 1 275 8 view .LVU33
 147 0004 4F1C     		adds	r7, r1, #1
 148              	.LVL14:
 149              	.L10:
 150              		.loc 1 275 8 view .LVU34
 151              	.LBE3:
 272:.././simpleserial/simpleserial.c **** 	{
 152              		.loc 1 272 17 is_stmt 1 discriminator 1 view .LVU35
 272:.././simpleserial/simpleserial.c **** 	{
 153              		.loc 1 272 2 is_stmt 0 discriminator 1 view .LVU36
 154 0006 8342     		cmp	r3, r0
 155 0008 01DB     		blt	.L20
 156              	.LBE7:
 276:.././simpleserial/simpleserial.c **** 
 277:.././simpleserial/simpleserial.c **** 		if(n_lo >= '0' && n_lo <= '9')
 278:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 279:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 280:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 281:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 282:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 283:.././simpleserial/simpleserial.c **** 		else
 284:.././simpleserial/simpleserial.c **** 			return 1;
 285:.././simpleserial/simpleserial.c **** 
 286:.././simpleserial/simpleserial.c **** 		if(n_hi >= '0' && n_hi <= '9')
 287:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 288:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
 289:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 290:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 291:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 292:.././simpleserial/simpleserial.c **** 		else
 293:.././simpleserial/simpleserial.c **** 			return 1;
 294:.././simpleserial/simpleserial.c **** 	}
 295:.././simpleserial/simpleserial.c **** 
 296:.././simpleserial/simpleserial.c **** 	return 0;
 157              		.loc 1 296 9 view .LVU37
 158 000a 0020     		movs	r0, #0
 159              	.LVL15:
 160              		.loc 1 296 9 view .LVU38
 161 000c 20E0     		b	.L9
 162              	.LVL16:
 163              	.L20:
 164              	.LBB8:
 165              	.LBB4:
 274:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 166              		.loc 1 274 3 is_stmt 1 view .LVU39
 275:.././simpleserial/simpleserial.c **** 
 167              		.loc 1 275 8 is_stmt 0 view .LVU40
 168 000e 17F81350 		ldrb	r5, [r7, r3, lsl #1]	@ zero_extendqisi2
 274:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 169              		.loc 1 274 8 view .LVU41
 170 0012 11F81340 		ldrb	r4, [r1, r3, lsl #1]	@ zero_extendqisi2
 171              	.LVL17:
 275:.././simpleserial/simpleserial.c **** 
 172              		.loc 1 275 3 is_stmt 1 view .LVU42
 277:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 173              		.loc 1 277 3 view .LVU43
 277:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 174              		.loc 1 277 18 is_stmt 0 view .LVU44
 175 0016 A5F13006 		sub	r6, r5, #48
 176 001a F6B2     		uxtb	r6, r6
 277:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 177              		.loc 1 277 5 view .LVU45
 178 001c 092E     		cmp	r6, #9
 179 001e 0BD8     		bhi	.L11
 278:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 180              		.loc 1 278 4 is_stmt 1 view .LVU46
 278:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 181              		.loc 1 278 16 is_stmt 0 view .LVU47
 182 0020 D654     		strb	r6, [r2, r3]
 183              	.LVL18:
 184              	.L12:
 286:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 185              		.loc 1 286 3 is_stmt 1 view .LVU48
 286:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 186              		.loc 1 286 18 is_stmt 0 view .LVU49
 187 0022 A4F13005 		sub	r5, r4, #48
 286:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 188              		.loc 1 286 5 view .LVU50
 189 0026 EEB2     		uxtb	r6, r5
 190 0028 092E     		cmp	r6, #9
 191 002a 14D8     		bhi	.L16
 192              	.L23:
 289:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 193              		.loc 1 289 16 view .LVU51
 194 002c D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 195              	.LVL19:
 289:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 196              		.loc 1 289 16 view .LVU52
 197 002e 44EA0514 		orr	r4, r4, r5, lsl #4
 198              	.L22:
 291:.././simpleserial/simpleserial.c **** 		else
 199              		.loc 1 291 16 view .LVU53
 200 0032 D454     		strb	r4, [r2, r3]
 201              	.LBE4:
 272:.././simpleserial/simpleserial.c **** 	{
 202              		.loc 1 272 26 is_stmt 1 view .LVU54
 272:.././simpleserial/simpleserial.c **** 	{
 203              		.loc 1 272 27 is_stmt 0 view .LVU55
 204 0034 0133     		adds	r3, r3, #1
 205              	.LVL20:
 272:.././simpleserial/simpleserial.c **** 	{
 206              		.loc 1 272 27 view .LVU56
 207 0036 E6E7     		b	.L10
 208              	.LVL21:
 209              	.L11:
 210              	.LBB5:
 279:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 211              		.loc 1 279 8 is_stmt 1 view .LVU57
 279:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 212              		.loc 1 279 10 is_stmt 0 view .LVU58
 213 0038 A5F14106 		sub	r6, r5, #65
 214 003c 052E     		cmp	r6, #5
 215 003e 02D8     		bhi	.L13
 280:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 216              		.loc 1 280 4 is_stmt 1 view .LVU59
 280:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 217              		.loc 1 280 29 is_stmt 0 view .LVU60
 218 0040 373D     		subs	r5, r5, #55
 219              	.LVL22:
 220              	.L21:
 282:.././simpleserial/simpleserial.c **** 		else
 221              		.loc 1 282 16 view .LVU61
 222 0042 D554     		strb	r5, [r2, r3]
 223              	.LVL23:
 282:.././simpleserial/simpleserial.c **** 		else
 224              		.loc 1 282 16 view .LVU62
 225 0044 EDE7     		b	.L12
 226              	.LVL24:
 227              	.L13:
 281:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 228              		.loc 1 281 8 is_stmt 1 view .LVU63
 281:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 229              		.loc 1 281 10 is_stmt 0 view .LVU64
 230 0046 A5F16106 		sub	r6, r5, #97
 231 004a 052E     		cmp	r6, #5
 232 004c 01D9     		bls	.L14
 233              	.LVL25:
 234              	.L19:
 284:.././simpleserial/simpleserial.c **** 
 235              		.loc 1 284 11 view .LVU65
 236 004e 0120     		movs	r0, #1
 237              	.LVL26:
 238              	.L9:
 284:.././simpleserial/simpleserial.c **** 
 239              		.loc 1 284 11 view .LVU66
 240              	.LBE5:
 241              	.LBE8:
 297:.././simpleserial/simpleserial.c **** }
 242              		.loc 1 297 1 view .LVU67
 243 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 244              	.LVL27:
 245              	.L14:
 246              	.LBB9:
 247              	.LBB6:
 282:.././simpleserial/simpleserial.c **** 		else
 248              		.loc 1 282 4 is_stmt 1 view .LVU68
 282:.././simpleserial/simpleserial.c **** 		else
 249              		.loc 1 282 29 is_stmt 0 view .LVU69
 250 0052 573D     		subs	r5, r5, #87
 251              	.LVL28:
 282:.././simpleserial/simpleserial.c **** 		else
 252              		.loc 1 282 29 view .LVU70
 253 0054 F5E7     		b	.L21
 254              	.LVL29:
 255              	.L16:
 288:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 256              		.loc 1 288 8 is_stmt 1 view .LVU71
 288:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 257              		.loc 1 288 10 is_stmt 0 view .LVU72
 258 0056 A4F14105 		sub	r5, r4, #65
 259 005a 052D     		cmp	r5, #5
 260 005c 02D8     		bhi	.L18
 289:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 261              		.loc 1 289 4 is_stmt 1 view .LVU73
 289:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 262              		.loc 1 289 31 is_stmt 0 view .LVU74
 263 005e A4F13705 		sub	r5, r4, #55
 264 0062 E3E7     		b	.L23
 265              	.L18:
 290:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 266              		.loc 1 290 8 is_stmt 1 view .LVU75
 290:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 267              		.loc 1 290 10 is_stmt 0 view .LVU76
 268 0064 A4F16105 		sub	r5, r4, #97
 269 0068 052D     		cmp	r5, #5
 270 006a F0D8     		bhi	.L19
 291:.././simpleserial/simpleserial.c **** 		else
 271              		.loc 1 291 4 is_stmt 1 view .LVU77
 291:.././simpleserial/simpleserial.c **** 		else
 272              		.loc 1 291 16 is_stmt 0 view .LVU78
 273 006c D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 291:.././simpleserial/simpleserial.c **** 		else
 274              		.loc 1 291 31 view .LVU79
 275 006e 573C     		subs	r4, r4, #87
 276              	.LVL30:
 291:.././simpleserial/simpleserial.c **** 		else
 277              		.loc 1 291 16 view .LVU80
 278 0070 45EA0414 		orr	r4, r5, r4, lsl #4
 279              	.LVL31:
 291:.././simpleserial/simpleserial.c **** 		else
 280              		.loc 1 291 16 view .LVU81
 281 0074 DDE7     		b	.L22
 282              	.LBE6:
 283              	.LBE9:
 284              		.cfi_endproc
 285              	.LFE4:
 287              		.section	.text.simpleserial_addcmd_flags,"ax",%progbits
 288              		.align	1
 289              		.global	simpleserial_addcmd_flags
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu softvfp
 295              	simpleserial_addcmd_flags:
 296              	.LVL32:
 297              	.LFB7:
 298:.././simpleserial/simpleserial.c **** 
 299:.././simpleserial/simpleserial.c **** 
 300:.././simpleserial/simpleserial.c **** 
 301:.././simpleserial/simpleserial.c **** // Set up the SimpleSerial module by preparing internal commands
 302:.././simpleserial/simpleserial.c **** // This just adds the "v" command for now...
 303:.././simpleserial/simpleserial.c **** void simpleserial_init()
 304:.././simpleserial/simpleserial.c **** {
 305:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 306:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 307:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('y', 0, ss_num_commands);
 308:.././simpleserial/simpleserial.c **** }
 309:.././simpleserial/simpleserial.c **** 
 310:.././simpleserial/simpleserial.c **** int simpleserial_addcmd(char c, unsigned int len, uint8_t (*fp)(uint8_t*, uint8_t))
 311:.././simpleserial/simpleserial.c **** {
 312:.././simpleserial/simpleserial.c **** 	return simpleserial_addcmd_flags(c, len, fp, CMD_FLAG_NONE);
 313:.././simpleserial/simpleserial.c **** }
 314:.././simpleserial/simpleserial.c **** 
 315:.././simpleserial/simpleserial.c **** int simpleserial_addcmd_flags(char c, unsigned int len, uint8_t (*fp)(uint8_t*, uint8_t), uint8_t f
 316:.././simpleserial/simpleserial.c **** {
 298              		.loc 1 316 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 317:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 302              		.loc 1 317 2 view .LVU83
 316:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 303              		.loc 1 316 1 is_stmt 0 view .LVU84
 304 0000 70B5     		push	{r4, r5, r6, lr}
 305              	.LCFI1:
 306              		.cfi_def_cfa_offset 16
 307              		.cfi_offset 4, -16
 308              		.cfi_offset 5, -12
 309              		.cfi_offset 6, -8
 310              		.cfi_offset 14, -4
 311              		.loc 1 317 18 view .LVU85
 312 0002 094E     		ldr	r6, .L28
 313 0004 3468     		ldr	r4, [r6]
 314              		.loc 1 317 4 view .LVU86
 315 0006 0F2C     		cmp	r4, #15
 316 0008 0BDC     		bgt	.L27
 318:.././simpleserial/simpleserial.c **** 		return 1;
 319:.././simpleserial/simpleserial.c **** 
 320:.././simpleserial/simpleserial.c **** 	if(len >= MAX_SS_LEN)
 317              		.loc 1 320 2 is_stmt 1 view .LVU87
 318              		.loc 1 320 4 is_stmt 0 view .LVU88
 319 000a BF29     		cmp	r1, #191
 320 000c 09D8     		bhi	.L27
 321:.././simpleserial/simpleserial.c **** 		return 1;
 322:.././simpleserial/simpleserial.c **** 
 323:.././simpleserial/simpleserial.c **** 	commands[num_commands].c   = c;
 321              		.loc 1 323 2 is_stmt 1 view .LVU89
 322              		.loc 1 323 29 is_stmt 0 view .LVU90
 323 000e 06EB0415 		add	r5, r6, r4, lsl #4
 324:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 325:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 324              		.loc 1 325 29 view .LVU91
 325 0012 C5E90212 		strd	r1, r2, [r5, #8]
 326:.././simpleserial/simpleserial.c **** 	commands[num_commands].flags = fl;
 327:.././simpleserial/simpleserial.c **** 	num_commands++;
 326              		.loc 1 327 14 view .LVU92
 327 0016 0134     		adds	r4, r4, #1
 323:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 328              		.loc 1 323 29 view .LVU93
 329 0018 2871     		strb	r0, [r5, #4]
 324:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 330              		.loc 1 324 2 is_stmt 1 view .LVU94
 326:.././simpleserial/simpleserial.c **** 	commands[num_commands].flags = fl;
 331              		.loc 1 326 2 view .LVU95
 326:.././simpleserial/simpleserial.c **** 	commands[num_commands].flags = fl;
 332              		.loc 1 326 31 is_stmt 0 view .LVU96
 333 001a 2B74     		strb	r3, [r5, #16]
 334              		.loc 1 327 2 is_stmt 1 view .LVU97
 335              		.loc 1 327 14 is_stmt 0 view .LVU98
 336 001c 3460     		str	r4, [r6]
 328:.././simpleserial/simpleserial.c **** 
 329:.././simpleserial/simpleserial.c **** 	return 0;
 337              		.loc 1 329 2 is_stmt 1 view .LVU99
 338              		.loc 1 329 9 is_stmt 0 view .LVU100
 339 001e 0020     		movs	r0, #0
 340              	.LVL33:
 341              	.L24:
 330:.././simpleserial/simpleserial.c **** }
 342              		.loc 1 330 1 view .LVU101
 343 0020 70BD     		pop	{r4, r5, r6, pc}
 344              	.LVL34:
 345              	.L27:
 318:.././simpleserial/simpleserial.c **** 
 346              		.loc 1 318 10 view .LVU102
 347 0022 0120     		movs	r0, #1
 348              	.LVL35:
 318:.././simpleserial/simpleserial.c **** 
 349              		.loc 1 318 10 view .LVU103
 350 0024 FCE7     		b	.L24
 351              	.L29:
 352 0026 00BF     		.align	2
 353              	.L28:
 354 0028 00000000 		.word	.LANCHOR0
 355              		.cfi_endproc
 356              	.LFE7:
 358              		.section	.text.simpleserial_addcmd,"ax",%progbits
 359              		.align	1
 360              		.global	simpleserial_addcmd
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu softvfp
 366              	simpleserial_addcmd:
 367              	.LVL36:
 368              	.LFB6:
 311:.././simpleserial/simpleserial.c **** 	return simpleserial_addcmd_flags(c, len, fp, CMD_FLAG_NONE);
 369              		.loc 1 311 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 312:.././simpleserial/simpleserial.c **** }
 374              		.loc 1 312 2 view .LVU105
 312:.././simpleserial/simpleserial.c **** }
 375              		.loc 1 312 9 is_stmt 0 view .LVU106
 376 0000 0023     		movs	r3, #0
 377 0002 FFF7FEBF 		b	simpleserial_addcmd_flags
 378              	.LVL37:
 312:.././simpleserial/simpleserial.c **** }
 379              		.loc 1 312 9 view .LVU107
 380              		.cfi_endproc
 381              	.LFE6:
 383              		.section	.text.simpleserial_init,"ax",%progbits
 384              		.align	1
 385              		.global	simpleserial_init
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu softvfp
 391              	simpleserial_init:
 392              	.LFB5:
 304:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 393              		.loc 1 304 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 305:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 397              		.loc 1 305 2 view .LVU109
 304:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 398              		.loc 1 304 1 is_stmt 0 view .LVU110
 399 0000 08B5     		push	{r3, lr}
 400              	.LCFI2:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
 305:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 404              		.loc 1 305 2 view .LVU111
 405 0002 084A     		ldr	r2, .L32
 406 0004 0021     		movs	r1, #0
 407 0006 7620     		movs	r0, #118
 408 0008 FFF7FEFF 		bl	simpleserial_addcmd
 409              	.LVL38:
 306:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('y', 0, ss_num_commands);
 410              		.loc 1 306 5 is_stmt 1 view .LVU112
 411 000c 064A     		ldr	r2, .L32+4
 412 000e 0021     		movs	r1, #0
 413 0010 7720     		movs	r0, #119
 414 0012 FFF7FEFF 		bl	simpleserial_addcmd
 415              	.LVL39:
 307:.././simpleserial/simpleserial.c **** }
 416              		.loc 1 307 5 view .LVU113
 308:.././simpleserial/simpleserial.c **** 
 417              		.loc 1 308 1 is_stmt 0 view .LVU114
 418 0016 BDE80840 		pop	{r3, lr}
 419              	.LCFI3:
 420              		.cfi_restore 14
 421              		.cfi_restore 3
 422              		.cfi_def_cfa_offset 0
 307:.././simpleserial/simpleserial.c **** }
 423              		.loc 1 307 5 view .LVU115
 424 001a 044A     		ldr	r2, .L32+8
 425 001c 0021     		movs	r1, #0
 426 001e 7920     		movs	r0, #121
 427 0020 FFF7FEBF 		b	simpleserial_addcmd
 428              	.LVL40:
 429              	.L33:
 430              		.align	2
 431              	.L32:
 432 0024 00000000 		.word	check_version
 433 0028 00000000 		.word	ss_get_commands
 434 002c 00000000 		.word	ss_num_commands
 435              		.cfi_endproc
 436              	.LFE5:
 438              		.section	.text.simpleserial_put,"ax",%progbits
 439              		.align	1
 440              		.global	simpleserial_put
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu softvfp
 446              	simpleserial_put:
 447              	.LVL41:
 448              	.LFB9:
 331:.././simpleserial/simpleserial.c **** 
 332:.././simpleserial/simpleserial.c **** void simpleserial_get(void)
 333:.././simpleserial/simpleserial.c **** {
 334:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 335:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 336:.././simpleserial/simpleserial.c **** 	char c;
 337:.././simpleserial/simpleserial.c **** 
 338:.././simpleserial/simpleserial.c **** 	// Find which command we're receiving
 339:.././simpleserial/simpleserial.c **** 	c = getch();
 340:.././simpleserial/simpleserial.c **** 
 341:.././simpleserial/simpleserial.c **** 	int cmd;
 342:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 343:.././simpleserial/simpleserial.c **** 	{
 344:.././simpleserial/simpleserial.c **** 		if(commands[cmd].c == c)
 345:.././simpleserial/simpleserial.c **** 			break;
 346:.././simpleserial/simpleserial.c **** 	}
 347:.././simpleserial/simpleserial.c **** 
 348:.././simpleserial/simpleserial.c **** 	// If we didn't find a match, give up right away
 349:.././simpleserial/simpleserial.c **** 	if(cmd == num_commands)
 350:.././simpleserial/simpleserial.c **** 		return;
 351:.././simpleserial/simpleserial.c **** 
 352:.././simpleserial/simpleserial.c **** 	// If flag CMD_FLAG_LEN is set, the next byte indicates the sent length
 353:.././simpleserial/simpleserial.c **** 	if ((commands[cmd].flags & CMD_FLAG_LEN) != 0)
 354:.././simpleserial/simpleserial.c **** 	{
 355:.././simpleserial/simpleserial.c **** 		uint8_t l = 0;
 356:.././simpleserial/simpleserial.c **** 		char buff[2];
 357:.././simpleserial/simpleserial.c **** 		buff[0] = getch();
 358:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 359:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 360:.././simpleserial/simpleserial.c **** 			return;
 361:.././simpleserial/simpleserial.c **** 		commands[cmd].len = l;
 362:.././simpleserial/simpleserial.c **** 	}
 363:.././simpleserial/simpleserial.c **** 
 364:.././simpleserial/simpleserial.c **** 	// Receive characters until we fill the ASCII buffer
 365:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < 2*commands[cmd].len; i++)
 366:.././simpleserial/simpleserial.c **** 	{
 367:.././simpleserial/simpleserial.c **** 		c = getch();
 368:.././simpleserial/simpleserial.c **** 
 369:.././simpleserial/simpleserial.c **** 		// Check for early \n
 370:.././simpleserial/simpleserial.c **** 		if(c == '\n' || c == '\r')
 371:.././simpleserial/simpleserial.c **** 			return;
 372:.././simpleserial/simpleserial.c **** 
 373:.././simpleserial/simpleserial.c **** 		ascii_buf[i] = c;
 374:.././simpleserial/simpleserial.c **** 	}
 375:.././simpleserial/simpleserial.c **** 
 376:.././simpleserial/simpleserial.c **** 	// Assert that last character is \n or \r
 377:.././simpleserial/simpleserial.c **** 	c = getch();
 378:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 379:.././simpleserial/simpleserial.c **** 		return;
 380:.././simpleserial/simpleserial.c **** 
 381:.././simpleserial/simpleserial.c **** 	// ASCII buffer is full: convert to bytes
 382:.././simpleserial/simpleserial.c **** 	// Check for illegal characters here
 383:.././simpleserial/simpleserial.c **** 	if(hex_decode(commands[cmd].len, ascii_buf, data_buf))
 384:.././simpleserial/simpleserial.c **** 		return;
 385:.././simpleserial/simpleserial.c **** 
 386:.././simpleserial/simpleserial.c **** 	// Callback
 387:.././simpleserial/simpleserial.c **** 	uint8_t ret[1];
 388:.././simpleserial/simpleserial.c **** 	ret[0] = commands[cmd].fp(data_buf, commands[cmd].len);
 389:.././simpleserial/simpleserial.c **** 
 390:.././simpleserial/simpleserial.c **** 	// Acknowledge (if version is 1.1)
 391:.././simpleserial/simpleserial.c **** #if SS_VER == SS_VER_1_1
 392:.././simpleserial/simpleserial.c **** 	simpleserial_put('z', 1, ret);
 393:.././simpleserial/simpleserial.c **** #endif
 394:.././simpleserial/simpleserial.c **** }
 395:.././simpleserial/simpleserial.c **** 
 396:.././simpleserial/simpleserial.c **** void simpleserial_put(char c, uint8_t size, uint8_t* output)
 397:.././simpleserial/simpleserial.c **** {
 449              		.loc 1 397 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 398:.././simpleserial/simpleserial.c **** 	// Write first character
 399:.././simpleserial/simpleserial.c **** 	putch(c);
 453              		.loc 1 399 2 view .LVU117
 397:.././simpleserial/simpleserial.c **** 	// Write first character
 454              		.loc 1 397 1 is_stmt 0 view .LVU118
 455 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 456              	.LCFI4:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 3, -24
 459              		.cfi_offset 4, -20
 460              		.cfi_offset 5, -16
 461              		.cfi_offset 6, -12
 462              		.cfi_offset 7, -8
 463              		.cfi_offset 14, -4
 397:.././simpleserial/simpleserial.c **** 	// Write first character
 464              		.loc 1 397 1 view .LVU119
 465 0002 1446     		mov	r4, r2
 466 0004 0E46     		mov	r6, r1
 467              		.loc 1 399 2 view .LVU120
 468 0006 FFF7FEFF 		bl	putch
 469              	.LVL42:
 400:.././simpleserial/simpleserial.c **** 
 401:.././simpleserial/simpleserial.c **** 	// Write each byte as two nibbles
 402:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < size; i++)
 470              		.loc 1 402 2 is_stmt 1 view .LVU121
 471              	.LBB10:
 472              		.loc 1 402 6 view .LVU122
 403:.././simpleserial/simpleserial.c **** 	{
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] >> 4 ]);
 473              		.loc 1 404 3 is_stmt 0 view .LVU123
 474 000a 0C4F     		ldr	r7, .L37
 475 000c 651E     		subs	r5, r4, #1
 402:.././simpleserial/simpleserial.c **** 	{
 476              		.loc 1 402 2 view .LVU124
 477 000e C4F10104 		rsb	r4, r4, #1
 478              	.LVL43:
 479              	.L35:
 402:.././simpleserial/simpleserial.c **** 	{
 480              		.loc 1 402 17 is_stmt 1 discriminator 1 view .LVU125
 402:.././simpleserial/simpleserial.c **** 	{
 481              		.loc 1 402 2 is_stmt 0 discriminator 1 view .LVU126
 482 0012 6319     		adds	r3, r4, r5
 483 0014 9E42     		cmp	r6, r3
 484 0016 04DC     		bgt	.L36
 485              	.LBE10:
 405:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 406:.././simpleserial/simpleserial.c **** 	}
 407:.././simpleserial/simpleserial.c **** 
 408:.././simpleserial/simpleserial.c **** 	// Write trailing '\n'
 409:.././simpleserial/simpleserial.c **** 	putch('\n');
 486              		.loc 1 409 2 is_stmt 1 view .LVU127
 410:.././simpleserial/simpleserial.c **** }
 487              		.loc 1 410 1 is_stmt 0 view .LVU128
 488 0018 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 489              	.LCFI5:
 490              		.cfi_remember_state
 491              		.cfi_restore 14
 492              		.cfi_restore 7
 493              		.cfi_restore 6
 494              		.cfi_restore 5
 495              		.cfi_restore 4
 496              		.cfi_restore 3
 497              		.cfi_def_cfa_offset 0
 409:.././simpleserial/simpleserial.c **** }
 498              		.loc 1 409 2 view .LVU129
 499 001c 0A20     		movs	r0, #10
 500 001e FFF7FEBF 		b	putch
 501              	.LVL44:
 502              	.L36:
 503              	.LCFI6:
 504              		.cfi_restore_state
 505              	.LBB11:
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 506              		.loc 1 404 3 is_stmt 1 discriminator 3 view .LVU130
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 507              		.loc 1 404 30 is_stmt 0 discriminator 3 view .LVU131
 508 0022 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 509 0026 1B09     		lsrs	r3, r3, #4
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 510              		.loc 1 404 3 discriminator 3 view .LVU132
 511 0028 F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 512 002a FFF7FEFF 		bl	putch
 513              	.LVL45:
 405:.././simpleserial/simpleserial.c **** 	}
 514              		.loc 1 405 3 is_stmt 1 discriminator 3 view .LVU133
 405:.././simpleserial/simpleserial.c **** 	}
 515              		.loc 1 405 30 is_stmt 0 discriminator 3 view .LVU134
 516 002e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 517 0030 03F00F03 		and	r3, r3, #15
 405:.././simpleserial/simpleserial.c **** 	}
 518              		.loc 1 405 3 discriminator 3 view .LVU135
 519 0034 F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 520 0036 FFF7FEFF 		bl	putch
 521              	.LVL46:
 402:.././simpleserial/simpleserial.c **** 	{
 522              		.loc 1 402 27 is_stmt 1 discriminator 3 view .LVU136
 523 003a EAE7     		b	.L35
 524              	.L38:
 525              		.align	2
 526              	.L37:
 527 003c 00000000 		.word	.LANCHOR1
 528              	.LBE11:
 529              		.cfi_endproc
 530              	.LFE9:
 532              		.section	.text.ss_num_commands,"ax",%progbits
 533              		.align	1
 534              		.global	ss_num_commands
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 538              		.fpu softvfp
 540              	ss_num_commands:
 541              	.LVL47:
 542              	.LFB2:
 239:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 543              		.loc 1 239 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 8
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 240:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 547              		.loc 1 240 5 view .LVU138
 239:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 548              		.loc 1 239 1 is_stmt 0 view .LVU139
 549 0000 07B5     		push	{r0, r1, r2, lr}
 550              	.LCFI7:
 551              		.cfi_def_cfa_offset 16
 552              		.cfi_offset 14, -4
 240:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 553              		.loc 1 240 13 view .LVU140
 554 0002 074B     		ldr	r3, .L40
 241:.././simpleserial/simpleserial.c ****     return 0x00;
 555              		.loc 1 241 5 view .LVU141
 556 0004 0DF10702 		add	r2, sp, #7
 240:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 557              		.loc 1 240 13 view .LVU142
 558 0008 1B68     		ldr	r3, [r3]
 559 000a 8DF80730 		strb	r3, [sp, #7]
 241:.././simpleserial/simpleserial.c ****     return 0x00;
 560              		.loc 1 241 5 is_stmt 1 view .LVU143
 561 000e 0121     		movs	r1, #1
 562              	.LVL48:
 241:.././simpleserial/simpleserial.c ****     return 0x00;
 563              		.loc 1 241 5 is_stmt 0 view .LVU144
 564 0010 7220     		movs	r0, #114
 565              	.LVL49:
 241:.././simpleserial/simpleserial.c ****     return 0x00;
 566              		.loc 1 241 5 view .LVU145
 567 0012 FFF7FEFF 		bl	simpleserial_put
 568              	.LVL50:
 242:.././simpleserial/simpleserial.c **** }
 569              		.loc 1 242 5 is_stmt 1 view .LVU146
 243:.././simpleserial/simpleserial.c **** 
 570              		.loc 1 243 1 is_stmt 0 view .LVU147
 571 0016 0020     		movs	r0, #0
 572 0018 03B0     		add	sp, sp, #12
 573              	.LCFI8:
 574              		.cfi_def_cfa_offset 4
 575              		@ sp needed
 576 001a 5DF804FB 		ldr	pc, [sp], #4
 577              	.L41:
 578 001e 00BF     		.align	2
 579              	.L40:
 580 0020 00000000 		.word	.LANCHOR0
 581              		.cfi_endproc
 582              	.LFE2:
 584              		.section	.text.ss_get_commands,"ax",%progbits
 585              		.align	1
 586              		.global	ss_get_commands
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu softvfp
 592              	ss_get_commands:
 593              	.LVL51:
 594              	.LFB3:
 252:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 595              		.loc 1 252 1 is_stmt 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 48
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 253:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
 599              		.loc 1 253 5 view .LVU149
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 600              		.loc 1 254 5 view .LVU150
 601              	.LBB12:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 602              		.loc 1 254 10 view .LVU151
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 603              		.loc 1 254 10 is_stmt 0 view .LVU152
 604              	.LBE12:
 252:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 605              		.loc 1 252 1 view .LVU153
 606 0000 70B5     		push	{r4, r5, r6, lr}
 607              	.LCFI9:
 608              		.cfi_def_cfa_offset 16
 609              		.cfi_offset 4, -16
 610              		.cfi_offset 5, -12
 611              		.cfi_offset 6, -8
 612              		.cfi_offset 14, -4
 613              	.LBB13:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 614              		.loc 1 254 43 view .LVU154
 615 0002 1248     		ldr	r0, .L45
 616              	.LVL52:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 617              		.loc 1 254 43 view .LVU155
 618 0004 0168     		ldr	r1, [r0]
 619              	.LVL53:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 620              		.loc 1 254 43 view .LVU156
 621              	.LBE13:
 252:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 622              		.loc 1 252 1 view .LVU157
 623 0006 8CB0     		sub	sp, sp, #48
 624              	.LCFI10:
 625              		.cfi_def_cfa_offset 64
 626              	.LBB14:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 627              		.loc 1 254 43 view .LVU158
 628 0008 CDB2     		uxtb	r5, r1
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 629              		.loc 1 254 5 view .LVU159
 630 000a 0024     		movs	r4, #0
 631              	.LVL54:
 632              	.L43:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 633              		.loc 1 254 25 is_stmt 1 discriminator 1 view .LVU160
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 634              		.loc 1 254 27 is_stmt 0 discriminator 1 view .LVU161
 635 000c E3B2     		uxtb	r3, r4
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 636              		.loc 1 254 5 discriminator 1 view .LVU162
 637 000e AB42     		cmp	r3, r5
 638 0010 04F10104 		add	r4, r4, #1
 639              	.LVL55:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 640              		.loc 1 254 5 discriminator 1 view .LVU163
 641 0014 09DB     		blt	.L44
 642              	.LBE14:
 260:.././simpleserial/simpleserial.c ****     return 0x00;
 643              		.loc 1 260 5 is_stmt 1 view .LVU164
 644 0016 01EB4101 		add	r1, r1, r1, lsl #1
 645 001a 6A46     		mov	r2, sp
 646 001c C9B2     		uxtb	r1, r1
 647 001e 7220     		movs	r0, #114
 648 0020 FFF7FEFF 		bl	simpleserial_put
 649              	.LVL56:
 261:.././simpleserial/simpleserial.c **** }
 650              		.loc 1 261 5 view .LVU165
 262:.././simpleserial/simpleserial.c **** 
 651              		.loc 1 262 1 is_stmt 0 view .LVU166
 652 0024 0020     		movs	r0, #0
 653 0026 0CB0     		add	sp, sp, #48
 654              	.LCFI11:
 655              		.cfi_remember_state
 656              		.cfi_def_cfa_offset 16
 657              		@ sp needed
 658 0028 70BD     		pop	{r4, r5, r6, pc}
 659              	.LVL57:
 660              	.L44:
 661              	.LCFI12:
 662              		.cfi_restore_state
 663              	.LBB15:
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 664              		.loc 1 255 9 is_stmt 1 discriminator 3 view .LVU167
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 665              		.loc 1 255 27 is_stmt 0 discriminator 3 view .LVU168
 666 002a 03EB4302 		add	r2, r3, r3, lsl #1
 667 002e 0CAE     		add	r6, sp, #48
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 668              		.loc 1 255 40 discriminator 3 view .LVU169
 669 0030 00EB0313 		add	r3, r0, r3, lsl #4
 670              	.LVL58:
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 671              		.loc 1 255 27 discriminator 3 view .LVU170
 672 0034 3244     		add	r2, r2, r6
 673 0036 1E79     		ldrb	r6, [r3, #4]	@ zero_extendqisi2
 674 0038 02F8306C 		strb	r6, [r2, #-48]
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 675              		.loc 1 256 9 is_stmt 1 discriminator 3 view .LVU171
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 676              		.loc 1 256 29 is_stmt 0 discriminator 3 view .LVU172
 677 003c 9E68     		ldr	r6, [r3, #8]
 257:.././simpleserial/simpleserial.c ****     }
 678              		.loc 1 257 31 discriminator 3 view .LVU173
 679 003e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 680              		.loc 1 256 29 discriminator 3 view .LVU174
 681 0040 02F82F6C 		strb	r6, [r2, #-47]
 257:.././simpleserial/simpleserial.c ****     }
 682              		.loc 1 257 9 is_stmt 1 discriminator 3 view .LVU175
 257:.././simpleserial/simpleserial.c ****     }
 683              		.loc 1 257 31 is_stmt 0 discriminator 3 view .LVU176
 684 0044 02F82E3C 		strb	r3, [r2, #-46]
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 685              		.loc 1 254 52 is_stmt 1 discriminator 3 view .LVU177
 686              	.LVL59:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 687              		.loc 1 254 52 is_stmt 0 discriminator 3 view .LVU178
 688 0048 E0E7     		b	.L43
 689              	.L46:
 690 004a 00BF     		.align	2
 691              	.L45:
 692 004c 00000000 		.word	.LANCHOR0
 693              	.LBE15:
 694              		.cfi_endproc
 695              	.LFE3:
 697              		.section	.text.simpleserial_get,"ax",%progbits
 698              		.align	1
 699              		.global	simpleserial_get
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu softvfp
 705              	simpleserial_get:
 706              	.LFB8:
 333:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 707              		.loc 1 333 1 is_stmt 1 view -0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 584
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 334:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 711              		.loc 1 334 2 view .LVU180
 335:.././simpleserial/simpleserial.c **** 	char c;
 712              		.loc 1 335 2 view .LVU181
 336:.././simpleserial/simpleserial.c **** 
 713              		.loc 1 336 2 view .LVU182
 339:.././simpleserial/simpleserial.c **** 
 714              		.loc 1 339 2 view .LVU183
 333:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 715              		.loc 1 333 1 is_stmt 0 view .LVU184
 716 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 717              	.LCFI13:
 718              		.cfi_def_cfa_offset 24
 719              		.cfi_offset 4, -24
 720              		.cfi_offset 5, -20
 721              		.cfi_offset 6, -16
 722              		.cfi_offset 7, -12
 723              		.cfi_offset 8, -8
 724              		.cfi_offset 14, -4
 342:.././simpleserial/simpleserial.c **** 	{
 725              		.loc 1 342 19 view .LVU185
 726 0004 2E4C     		ldr	r4, .L70
 333:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 727              		.loc 1 333 1 view .LVU186
 728 0006 ADF5127D 		sub	sp, sp, #584
 729              	.LCFI14:
 730              		.cfi_def_cfa_offset 608
 339:.././simpleserial/simpleserial.c **** 
 731              		.loc 1 339 6 view .LVU187
 732 000a FFF7FEFF 		bl	getch
 733              	.LVL60:
 341:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 734              		.loc 1 341 2 is_stmt 1 view .LVU188
 342:.././simpleserial/simpleserial.c **** 	{
 735              		.loc 1 342 2 view .LVU189
 342:.././simpleserial/simpleserial.c **** 	{
 736              		.loc 1 342 19 is_stmt 0 view .LVU190
 737 000e 2268     		ldr	r2, [r4]
 342:.././simpleserial/simpleserial.c **** 	{
 738              		.loc 1 342 10 view .LVU191
 739 0010 0023     		movs	r3, #0
 344:.././simpleserial/simpleserial.c **** 			break;
 740              		.loc 1 344 19 view .LVU192
 741 0012 211D     		adds	r1, r4, #4
 742              	.LVL61:
 743              	.L48:
 342:.././simpleserial/simpleserial.c **** 	{
 744              		.loc 1 342 15 is_stmt 1 discriminator 1 view .LVU193
 342:.././simpleserial/simpleserial.c **** 	{
 745              		.loc 1 342 2 is_stmt 0 discriminator 1 view .LVU194
 746 0014 9A42     		cmp	r2, r3
 747 0016 04DC     		bgt	.L52
 349:.././simpleserial/simpleserial.c **** 		return;
 748              		.loc 1 349 2 is_stmt 1 view .LVU195
 349:.././simpleserial/simpleserial.c **** 		return;
 749              		.loc 1 349 4 is_stmt 0 view .LVU196
 750 0018 07D1     		bne	.L54
 751              	.LVL62:
 752              	.L47:
 394:.././simpleserial/simpleserial.c **** 
 753              		.loc 1 394 1 view .LVU197
 754 001a 0DF5127D 		add	sp, sp, #584
 755              	.LCFI15:
 756              		.cfi_remember_state
 757              		.cfi_def_cfa_offset 24
 758              		@ sp needed
 759 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 760              	.LVL63:
 761              	.L52:
 762              	.LCFI16:
 763              		.cfi_restore_state
 344:.././simpleserial/simpleserial.c **** 			break;
 764              		.loc 1 344 3 is_stmt 1 view .LVU198
 344:.././simpleserial/simpleserial.c **** 			break;
 765              		.loc 1 344 19 is_stmt 0 view .LVU199
 766 0022 1D01     		lsls	r5, r3, #4
 344:.././simpleserial/simpleserial.c **** 			break;
 767              		.loc 1 344 5 view .LVU200
 768 0024 6D5C     		ldrb	r5, [r5, r1]	@ zero_extendqisi2
 769 0026 8542     		cmp	r5, r0
 770 0028 3DD1     		bne	.L49
 771              	.L54:
 353:.././simpleserial/simpleserial.c **** 	{
 772              		.loc 1 353 2 is_stmt 1 view .LVU201
 353:.././simpleserial/simpleserial.c **** 	{
 773              		.loc 1 353 20 is_stmt 0 view .LVU202
 774 002a 04EB0315 		add	r5, r4, r3, lsl #4
 775 002e 1E01     		lsls	r6, r3, #4
 353:.././simpleserial/simpleserial.c **** 	{
 776              		.loc 1 353 5 view .LVU203
 777 0030 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 778              	.LVL64:
 353:.././simpleserial/simpleserial.c **** 	{
 779              		.loc 1 353 5 view .LVU204
 780 0032 DB07     		lsls	r3, r3, #31
 781 0034 14D5     		bpl	.L51
 782              	.LBB16:
 355:.././simpleserial/simpleserial.c **** 		char buff[2];
 783              		.loc 1 355 3 is_stmt 1 view .LVU205
 355:.././simpleserial/simpleserial.c **** 		char buff[2];
 784              		.loc 1 355 11 is_stmt 0 view .LVU206
 785 0036 0023     		movs	r3, #0
 786 0038 8DF80830 		strb	r3, [sp, #8]
 356:.././simpleserial/simpleserial.c **** 		buff[0] = getch();
 787              		.loc 1 356 3 is_stmt 1 view .LVU207
 357:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 788              		.loc 1 357 3 view .LVU208
 357:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 789              		.loc 1 357 13 is_stmt 0 view .LVU209
 790 003c FFF7FEFF 		bl	getch
 791              	.LVL65:
 357:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 792              		.loc 1 357 11 view .LVU210
 793 0040 8DF8C800 		strb	r0, [sp, #200]
 358:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 794              		.loc 1 358 3 is_stmt 1 view .LVU211
 358:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 795              		.loc 1 358 13 is_stmt 0 view .LVU212
 796 0044 FFF7FEFF 		bl	getch
 797              	.LVL66:
 359:.././simpleserial/simpleserial.c **** 			return;
 798              		.loc 1 359 7 view .LVU213
 799 0048 02AA     		add	r2, sp, #8
 358:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 800              		.loc 1 358 11 view .LVU214
 801 004a 8DF8C900 		strb	r0, [sp, #201]
 359:.././simpleserial/simpleserial.c **** 			return;
 802              		.loc 1 359 3 is_stmt 1 view .LVU215
 359:.././simpleserial/simpleserial.c **** 			return;
 803              		.loc 1 359 7 is_stmt 0 view .LVU216
 804 004e 32A9     		add	r1, sp, #200
 805 0050 0120     		movs	r0, #1
 806 0052 FFF7FEFF 		bl	hex_decode
 807              	.LVL67:
 359:.././simpleserial/simpleserial.c **** 			return;
 808              		.loc 1 359 6 view .LVU217
 809 0056 0028     		cmp	r0, #0
 810 0058 DFD1     		bne	.L47
 361:.././simpleserial/simpleserial.c **** 	}
 811              		.loc 1 361 3 is_stmt 1 view .LVU218
 361:.././simpleserial/simpleserial.c **** 	}
 812              		.loc 1 361 21 is_stmt 0 view .LVU219
 813 005a 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 814 005e AB60     		str	r3, [r5, #8]
 815              	.L51:
 816              	.LBE16:
 342:.././simpleserial/simpleserial.c **** 	{
 817              		.loc 1 342 10 discriminator 1 view .LVU220
 818 0060 0025     		movs	r5, #0
 819              	.LBB17:
 365:.././simpleserial/simpleserial.c **** 	{
 820              		.loc 1 365 36 discriminator 1 view .LVU221
 821 0062 A719     		adds	r7, r4, r6
 373:.././simpleserial/simpleserial.c **** 	}
 822              		.loc 1 373 16 discriminator 1 view .LVU222
 823 0064 0DF1C808 		add	r8, sp, #200
 824              	.L57:
 825              	.LVL68:
 365:.././simpleserial/simpleserial.c **** 	{
 826              		.loc 1 365 17 is_stmt 1 discriminator 1 view .LVU223
 365:.././simpleserial/simpleserial.c **** 	{
 827              		.loc 1 365 22 is_stmt 0 discriminator 1 view .LVU224
 828 0068 BB68     		ldr	r3, [r7, #8]
 365:.././simpleserial/simpleserial.c **** 	{
 829              		.loc 1 365 2 discriminator 1 view .LVU225
 830 006a B5EB430F 		cmp	r5, r3, lsl #1
 831 006e 1CD3     		bcc	.L58
 832              	.LBE17:
 377:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 833              		.loc 1 377 2 is_stmt 1 view .LVU226
 377:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 834              		.loc 1 377 6 is_stmt 0 view .LVU227
 835 0070 FFF7FEFF 		bl	getch
 836              	.LVL69:
 378:.././simpleserial/simpleserial.c **** 		return;
 837              		.loc 1 378 2 is_stmt 1 view .LVU228
 378:.././simpleserial/simpleserial.c **** 		return;
 838              		.loc 1 378 4 is_stmt 0 view .LVU229
 839 0074 0A28     		cmp	r0, #10
 840 0076 01D0     		beq	.L59
 378:.././simpleserial/simpleserial.c **** 		return;
 841              		.loc 1 378 15 discriminator 1 view .LVU230
 842 0078 0D28     		cmp	r0, #13
 843 007a CED1     		bne	.L47
 844              	.L59:
 383:.././simpleserial/simpleserial.c **** 		return;
 845              		.loc 1 383 2 is_stmt 1 view .LVU231
 383:.././simpleserial/simpleserial.c **** 		return;
 846              		.loc 1 383 29 is_stmt 0 view .LVU232
 847 007c 3444     		add	r4, r4, r6
 383:.././simpleserial/simpleserial.c **** 		return;
 848              		.loc 1 383 5 view .LVU233
 849 007e 02AA     		add	r2, sp, #8
 383:.././simpleserial/simpleserial.c **** 		return;
 850              		.loc 1 383 29 view .LVU234
 851 0080 A568     		ldr	r5, [r4, #8]
 852              	.LVL70:
 383:.././simpleserial/simpleserial.c **** 		return;
 853              		.loc 1 383 5 view .LVU235
 854 0082 32A9     		add	r1, sp, #200
 855 0084 2846     		mov	r0, r5
 856              	.LVL71:
 383:.././simpleserial/simpleserial.c **** 		return;
 857              		.loc 1 383 5 view .LVU236
 858 0086 FFF7FEFF 		bl	hex_decode
 859              	.LVL72:
 383:.././simpleserial/simpleserial.c **** 		return;
 860              		.loc 1 383 4 view .LVU237
 861 008a 0028     		cmp	r0, #0
 862 008c C5D1     		bne	.L47
 387:.././simpleserial/simpleserial.c **** 	ret[0] = commands[cmd].fp(data_buf, commands[cmd].len);
 863              		.loc 1 387 2 is_stmt 1 view .LVU238
 388:.././simpleserial/simpleserial.c **** 
 864              		.loc 1 388 2 view .LVU239
 388:.././simpleserial/simpleserial.c **** 
 865              		.loc 1 388 11 is_stmt 0 view .LVU240
 866 008e E9B2     		uxtb	r1, r5
 867 0090 E368     		ldr	r3, [r4, #12]
 868 0092 02A8     		add	r0, sp, #8
 869 0094 9847     		blx	r3
 870              	.LVL73:
 392:.././simpleserial/simpleserial.c **** #endif
 871              		.loc 1 392 2 view .LVU241
 872 0096 01AA     		add	r2, sp, #4
 388:.././simpleserial/simpleserial.c **** 
 873              		.loc 1 388 9 view .LVU242
 874 0098 8DF80400 		strb	r0, [sp, #4]
 392:.././simpleserial/simpleserial.c **** #endif
 875              		.loc 1 392 2 is_stmt 1 view .LVU243
 876 009c 0121     		movs	r1, #1
 877 009e 7A20     		movs	r0, #122
 878 00a0 FFF7FEFF 		bl	simpleserial_put
 879              	.LVL74:
 880 00a4 B9E7     		b	.L47
 881              	.LVL75:
 882              	.L49:
 342:.././simpleserial/simpleserial.c **** 	{
 883              		.loc 1 342 35 discriminator 2 view .LVU244
 342:.././simpleserial/simpleserial.c **** 	{
 884              		.loc 1 342 38 is_stmt 0 discriminator 2 view .LVU245
 885 00a6 0133     		adds	r3, r3, #1
 886              	.LVL76:
 342:.././simpleserial/simpleserial.c **** 	{
 887              		.loc 1 342 38 discriminator 2 view .LVU246
 888 00a8 B4E7     		b	.L48
 889              	.LVL77:
 890              	.L58:
 891              	.LBB18:
 367:.././simpleserial/simpleserial.c **** 
 892              		.loc 1 367 3 is_stmt 1 view .LVU247
 367:.././simpleserial/simpleserial.c **** 
 893              		.loc 1 367 7 is_stmt 0 view .LVU248
 894 00aa FFF7FEFF 		bl	getch
 895              	.LVL78:
 370:.././simpleserial/simpleserial.c **** 			return;
 896              		.loc 1 370 3 is_stmt 1 view .LVU249
 370:.././simpleserial/simpleserial.c **** 			return;
 897              		.loc 1 370 5 is_stmt 0 view .LVU250
 898 00ae 0A28     		cmp	r0, #10
 899 00b0 B3D0     		beq	.L47
 370:.././simpleserial/simpleserial.c **** 			return;
 900              		.loc 1 370 16 discriminator 1 view .LVU251
 901 00b2 0D28     		cmp	r0, #13
 902 00b4 B1D0     		beq	.L47
 373:.././simpleserial/simpleserial.c **** 	}
 903              		.loc 1 373 3 is_stmt 1 discriminator 2 view .LVU252
 373:.././simpleserial/simpleserial.c **** 	}
 904              		.loc 1 373 16 is_stmt 0 discriminator 2 view .LVU253
 905 00b6 05F80800 		strb	r0, [r5, r8]
 365:.././simpleserial/simpleserial.c **** 	{
 906              		.loc 1 365 42 is_stmt 1 discriminator 2 view .LVU254
 365:.././simpleserial/simpleserial.c **** 	{
 907              		.loc 1 365 43 is_stmt 0 discriminator 2 view .LVU255
 908 00ba 0135     		adds	r5, r5, #1
 909              	.LVL79:
 365:.././simpleserial/simpleserial.c **** 	{
 910              		.loc 1 365 43 discriminator 2 view .LVU256
 911 00bc D4E7     		b	.L57
 912              	.L71:
 913 00be 00BF     		.align	2
 914              	.L70:
 915 00c0 00000000 		.word	.LANCHOR0
 916              	.LBE18:
 917              		.cfi_endproc
 918              	.LFE8:
 920              		.section	.rodata
 921              		.set	.LANCHOR1,. + 0
 924              	hex_lookup:
 925 0000 30313233 		.ascii	"0123456789ABCDEF"
 925      34353637 
 925      38394142 
 925      43444546 
 926              		.bss
 927              		.align	2
 928              		.set	.LANCHOR0,. + 0
 931              	num_commands:
 932 0000 00000000 		.space	4
 935              	commands:
 936 0004 00000000 		.space	256
 936      00000000 
 936      00000000 
 936      00000000 
 936      00000000 
 937              		.text
 938              	.Letext0:
 939              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 940              		.file 3 ".././hal/stm32f4/stm32f4_hal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 simpleserial.c
     /tmp/cc7Aj2Xv.s:16     .text.check_version:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:24     .text.check_version:0000000000000000 check_version
     /tmp/cc7Aj2Xv.s:43     .text.ss_crc:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:50     .text.ss_crc:0000000000000000 ss_crc
     /tmp/cc7Aj2Xv.s:114    .text.hex_decode:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:121    .text.hex_decode:0000000000000000 hex_decode
     /tmp/cc7Aj2Xv.s:288    .text.simpleserial_addcmd_flags:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:295    .text.simpleserial_addcmd_flags:0000000000000000 simpleserial_addcmd_flags
     /tmp/cc7Aj2Xv.s:354    .text.simpleserial_addcmd_flags:0000000000000028 $d
     /tmp/cc7Aj2Xv.s:359    .text.simpleserial_addcmd:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:366    .text.simpleserial_addcmd:0000000000000000 simpleserial_addcmd
     /tmp/cc7Aj2Xv.s:384    .text.simpleserial_init:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:391    .text.simpleserial_init:0000000000000000 simpleserial_init
     /tmp/cc7Aj2Xv.s:432    .text.simpleserial_init:0000000000000024 $d
     /tmp/cc7Aj2Xv.s:592    .text.ss_get_commands:0000000000000000 ss_get_commands
     /tmp/cc7Aj2Xv.s:540    .text.ss_num_commands:0000000000000000 ss_num_commands
     /tmp/cc7Aj2Xv.s:439    .text.simpleserial_put:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:446    .text.simpleserial_put:0000000000000000 simpleserial_put
     /tmp/cc7Aj2Xv.s:527    .text.simpleserial_put:000000000000003c $d
     /tmp/cc7Aj2Xv.s:533    .text.ss_num_commands:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:580    .text.ss_num_commands:0000000000000020 $d
     /tmp/cc7Aj2Xv.s:585    .text.ss_get_commands:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:692    .text.ss_get_commands:000000000000004c $d
     /tmp/cc7Aj2Xv.s:698    .text.simpleserial_get:0000000000000000 $t
     /tmp/cc7Aj2Xv.s:705    .text.simpleserial_get:0000000000000000 simpleserial_get
     /tmp/cc7Aj2Xv.s:915    .text.simpleserial_get:00000000000000c0 $d
     /tmp/cc7Aj2Xv.s:924    .rodata:0000000000000000 hex_lookup
     /tmp/cc7Aj2Xv.s:927    .bss:0000000000000000 $d
     /tmp/cc7Aj2Xv.s:931    .bss:0000000000000000 num_commands
     /tmp/cc7Aj2Xv.s:935    .bss:0000000000000004 commands

UNDEFINED SYMBOLS
putch
getch
