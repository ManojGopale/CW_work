   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"aes-independant.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.aes_indep_init,"ax",%progbits
  16              		.align	1
  17              		.global	aes_indep_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	aes_indep_init:
  25              	.LFB2:
  26              		.file 1 ".././crypto/aes-independant.c"
   1:.././crypto/aes-independant.c **** /*
   2:.././crypto/aes-independant.c ****     This file is part of the AESExplorer Example Targets
   3:.././crypto/aes-independant.c ****     Copyright (C) 2012 Colin O'Flynn <coflynn@newae.com>
   4:.././crypto/aes-independant.c **** 
   5:.././crypto/aes-independant.c ****     This program is free software: you can redistribute it and/or modify
   6:.././crypto/aes-independant.c ****     it under the terms of the GNU General Public License as published by
   7:.././crypto/aes-independant.c ****     the Free Software Foundation, either version 3 of the License, or
   8:.././crypto/aes-independant.c ****     (at your option) any later version.
   9:.././crypto/aes-independant.c **** 
  10:.././crypto/aes-independant.c ****     This program is distributed in the hope that it will be useful,
  11:.././crypto/aes-independant.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:.././crypto/aes-independant.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:.././crypto/aes-independant.c ****     GNU General Public License for more details.
  14:.././crypto/aes-independant.c **** 
  15:.././crypto/aes-independant.c ****     You should have received a copy of the GNU General Public License
  16:.././crypto/aes-independant.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:.././crypto/aes-independant.c **** */
  18:.././crypto/aes-independant.c **** 
  19:.././crypto/aes-independant.c **** #include "aes-independant.h"
  20:.././crypto/aes-independant.c **** #include "hal.h"
  21:.././crypto/aes-independant.c **** 
  22:.././crypto/aes-independant.c **** #if HWCRYPTO
  23:.././crypto/aes-independant.c **** 
  24:.././crypto/aes-independant.c **** void aes_indep_init(void)
  25:.././crypto/aes-independant.c **** {
  26:.././crypto/aes-independant.c ****     HW_AES128_Init();
  27:.././crypto/aes-independant.c **** }
  28:.././crypto/aes-independant.c **** 
  29:.././crypto/aes-independant.c **** void aes_indep_key(uint8_t * key)
  30:.././crypto/aes-independant.c **** {
  31:.././crypto/aes-independant.c ****     HW_AES128_LoadKey(key);
  32:.././crypto/aes-independant.c **** }
  33:.././crypto/aes-independant.c **** 
  34:.././crypto/aes-independant.c **** void aes_indep_enc_pretrigger(uint8_t * pt)
  35:.././crypto/aes-independant.c **** {
  36:.././crypto/aes-independant.c ****     HW_AES128_Enc_pretrigger(pt);
  37:.././crypto/aes-independant.c **** }
  38:.././crypto/aes-independant.c **** 
  39:.././crypto/aes-independant.c **** void aes_indep_enc_posttrigger(uint8_t * pt)
  40:.././crypto/aes-independant.c **** {
  41:.././crypto/aes-independant.c ****     HW_AES128_Enc_posttrigger(pt);
  42:.././crypto/aes-independant.c **** }
  43:.././crypto/aes-independant.c **** 
  44:.././crypto/aes-independant.c **** void aes_indep_enc(uint8_t * pt)
  45:.././crypto/aes-independant.c **** {
  46:.././crypto/aes-independant.c ****     HW_AES128_Enc(pt);
  47:.././crypto/aes-independant.c **** }
  48:.././crypto/aes-independant.c **** 
  49:.././crypto/aes-independant.c **** void aes_indep_mask(uint8_t * m, uint8_t len)
  50:.././crypto/aes-independant.c **** {
  51:.././crypto/aes-independant.c **** }
  52:.././crypto/aes-independant.c **** 
  53:.././crypto/aes-independant.c **** #elif defined(AVRCRYPTOLIB)
  54:.././crypto/aes-independant.c **** #include "aes128_enc.h"
  55:.././crypto/aes-independant.c **** #include "aes_keyschedule.h"
  56:.././crypto/aes-independant.c **** 
  57:.././crypto/aes-independant.c **** aes128_ctx_t ctx;
  58:.././crypto/aes-independant.c **** 
  59:.././crypto/aes-independant.c **** void aes_indep_init(void)
  60:.././crypto/aes-independant.c **** {
  61:.././crypto/aes-independant.c **** 	;
  62:.././crypto/aes-independant.c **** }
  63:.././crypto/aes-independant.c **** 
  64:.././crypto/aes-independant.c **** void aes_indep_key(uint8_t * key)
  65:.././crypto/aes-independant.c **** {
  66:.././crypto/aes-independant.c **** 	aes128_init(key, &ctx);
  67:.././crypto/aes-independant.c **** }
  68:.././crypto/aes-independant.c **** 
  69:.././crypto/aes-independant.c **** void aes_indep_enc(uint8_t * pt)
  70:.././crypto/aes-independant.c **** {
  71:.././crypto/aes-independant.c **** 	aes128_enc(pt, &ctx); /* encrypting the data block */
  72:.././crypto/aes-independant.c **** }
  73:.././crypto/aes-independant.c **** 
  74:.././crypto/aes-independant.c **** void aes_indep_enc_pretrigger(uint8_t * pt)
  75:.././crypto/aes-independant.c **** {
  76:.././crypto/aes-independant.c ****     ;
  77:.././crypto/aes-independant.c **** }
  78:.././crypto/aes-independant.c **** 
  79:.././crypto/aes-independant.c **** void aes_indep_enc_posttrigger(uint8_t * pt)
  80:.././crypto/aes-independant.c **** {
  81:.././crypto/aes-independant.c ****     ;
  82:.././crypto/aes-independant.c **** }
  83:.././crypto/aes-independant.c **** 
  84:.././crypto/aes-independant.c **** void aes_indep_mask(uint8_t * m, uint8_t len)
  85:.././crypto/aes-independant.c **** {
  86:.././crypto/aes-independant.c **** }
  87:.././crypto/aes-independant.c **** 
  88:.././crypto/aes-independant.c **** #elif defined(SIMPLEAES)
  89:.././crypto/aes-independant.c **** 
  90:.././crypto/aes-independant.c **** uint8_t enckey[16];
  91:.././crypto/aes-independant.c **** 
  92:.././crypto/aes-independant.c **** void aes_indep_init(void)
  93:.././crypto/aes-independant.c **** {
  94:.././crypto/aes-independant.c **** 	;
  95:.././crypto/aes-independant.c **** }
  96:.././crypto/aes-independant.c **** 
  97:.././crypto/aes-independant.c **** void aes_indep_key(uint8_t * key)
  98:.././crypto/aes-independant.c **** {
  99:.././crypto/aes-independant.c **** 	for(uint8_t i=0; i < 16; i++){
 100:.././crypto/aes-independant.c **** 		enckey[i] = key[i];
 101:.././crypto/aes-independant.c **** 	}
 102:.././crypto/aes-independant.c **** }
 103:.././crypto/aes-independant.c **** 
 104:.././crypto/aes-independant.c **** void aes_indep_enc(uint8_t * pt)
 105:.././crypto/aes-independant.c **** {
 106:.././crypto/aes-independant.c **** 	uint8_t * result = aes(pt, enckey);
 107:.././crypto/aes-independant.c **** 	for(uint8_t i=0; i < 16; i++){
 108:.././crypto/aes-independant.c **** 		pt[i] = result[i];
 109:.././crypto/aes-independant.c **** 	}
 110:.././crypto/aes-independant.c **** }
 111:.././crypto/aes-independant.c **** 
 112:.././crypto/aes-independant.c **** void aes_indep_enc_pretrigger(uint8_t * pt)
 113:.././crypto/aes-independant.c **** {
 114:.././crypto/aes-independant.c ****     ;
 115:.././crypto/aes-independant.c **** }
 116:.././crypto/aes-independant.c **** 
 117:.././crypto/aes-independant.c **** void aes_indep_enc_posttrigger(uint8_t * pt)
 118:.././crypto/aes-independant.c **** {
 119:.././crypto/aes-independant.c ****     ;
 120:.././crypto/aes-independant.c **** }
 121:.././crypto/aes-independant.c **** 
 122:.././crypto/aes-independant.c **** void aes_indep_mask(uint8_t * m, uint8_t len)
 123:.././crypto/aes-independant.c **** {
 124:.././crypto/aes-independant.c **** }
 125:.././crypto/aes-independant.c **** 
 126:.././crypto/aes-independant.c **** #elif defined(DPAV4)
 127:.././crypto/aes-independant.c **** 
 128:.././crypto/aes-independant.c **** #include "aes.h"
 129:.././crypto/aes-independant.c **** #include "aes_enc.h"
 130:.././crypto/aes-independant.c **** 
 131:.././crypto/aes-independant.c **** /*  This is the AES RSM 256 encryption function that call the generic AES RSM encryption core*/
 132:.././crypto/aes-independant.c **** void aes256_enc(uint8_t* j, void* buffer, aes256_ctx_t* ctx,uint8_t rng){
 133:.././crypto/aes-independant.c **** 	aes_encrypt_core(j,buffer, (aes_genctx_t*)ctx, 14,(uint8_t)rng);
 134:.././crypto/aes-independant.c **** }
 135:.././crypto/aes-independant.c **** 
 136:.././crypto/aes-independant.c **** aes256_ctx_t ctx;
 137:.././crypto/aes-independant.c **** 
 138:.././crypto/aes-independant.c **** void aes_indep_init(void)
 139:.././crypto/aes-independant.c **** {
 140:.././crypto/aes-independant.c ****     ;
 141:.././crypto/aes-independant.c **** }
 142:.././crypto/aes-independant.c **** 
 143:.././crypto/aes-independant.c **** void aes_indep_key(uint8_t * key)
 144:.././crypto/aes-independant.c **** {
 145:.././crypto/aes-independant.c **** 	aes256_init(key, &ctx);
 146:.././crypto/aes-independant.c **** }
 147:.././crypto/aes-independant.c **** 
 148:.././crypto/aes-independant.c **** void aes_indep_enc(uint8_t * pt)
 149:.././crypto/aes-independant.c **** {
 150:.././crypto/aes-independant.c **** 	static uint8_t j[0];
 151:.././crypto/aes-independant.c **** 
 152:.././crypto/aes-independant.c **** 	//Encryption with trigger enabled
 153:.././crypto/aes-independant.c **** 	aes256_enc(j, pt, &ctx, 1);
 154:.././crypto/aes-independant.c **** }
 155:.././crypto/aes-independant.c **** 
 156:.././crypto/aes-independant.c **** void aes_indep_enc_pretrigger(uint8_t * pt)
 157:.././crypto/aes-independant.c **** {
 158:.././crypto/aes-independant.c ****     ;
 159:.././crypto/aes-independant.c **** }
 160:.././crypto/aes-independant.c **** 
 161:.././crypto/aes-independant.c **** void aes_indep_enc_posttrigger(uint8_t * pt)
 162:.././crypto/aes-independant.c **** {
 163:.././crypto/aes-independant.c ****     ;
 164:.././crypto/aes-independant.c **** }
 165:.././crypto/aes-independant.c **** 
 166:.././crypto/aes-independant.c **** void aes_indep_mask(uint8_t * m, uint8_t len)
 167:.././crypto/aes-independant.c **** {
 168:.././crypto/aes-independant.c **** }
 169:.././crypto/aes-independant.c **** 
 170:.././crypto/aes-independant.c **** #elif defined(TINYAES128C)
 171:.././crypto/aes-independant.c **** 
 172:.././crypto/aes-independant.c **** #include "aes.h"
 173:.././crypto/aes-independant.c **** 
 174:.././crypto/aes-independant.c **** uint8_t enckey[16];
 175:.././crypto/aes-independant.c **** 
 176:.././crypto/aes-independant.c **** void aes_indep_init(void)
 177:.././crypto/aes-independant.c **** {
 178:.././crypto/aes-independant.c **** 	;
 179:.././crypto/aes-independant.c **** }
 180:.././crypto/aes-independant.c **** 
 181:.././crypto/aes-independant.c **** void aes_indep_key(uint8_t * key)
 182:.././crypto/aes-independant.c **** {
 183:.././crypto/aes-independant.c ****     AES128_ECB_indp_setkey(key);
 184:.././crypto/aes-independant.c **** }
 185:.././crypto/aes-independant.c **** 
 186:.././crypto/aes-independant.c **** void aes_indep_enc(uint8_t * pt)
 187:.././crypto/aes-independant.c **** {
 188:.././crypto/aes-independant.c **** 	AES128_ECB_indp_crypto(pt);
 189:.././crypto/aes-independant.c **** }
 190:.././crypto/aes-independant.c **** 
 191:.././crypto/aes-independant.c **** void aes_indep_enc_pretrigger(uint8_t * pt)
 192:.././crypto/aes-independant.c **** {
 193:.././crypto/aes-independant.c ****     ;
 194:.././crypto/aes-independant.c **** }
 195:.././crypto/aes-independant.c **** 
 196:.././crypto/aes-independant.c **** void aes_indep_enc_posttrigger(uint8_t * pt)
 197:.././crypto/aes-independant.c **** {
 198:.././crypto/aes-independant.c ****     ;
 199:.././crypto/aes-independant.c **** }
 200:.././crypto/aes-independant.c **** 
 201:.././crypto/aes-independant.c **** void aes_indep_mask(uint8_t * m, uint8_t len)
 202:.././crypto/aes-independant.c **** {
 203:.././crypto/aes-independant.c **** }
 204:.././crypto/aes-independant.c **** 
 205:.././crypto/aes-independant.c **** #elif defined(MBEDTLS)
 206:.././crypto/aes-independant.c **** #include "mbedtls/aes.h"
 207:.././crypto/aes-independant.c **** 
 208:.././crypto/aes-independant.c **** mbedtls_aes_context ctx;
 209:.././crypto/aes-independant.c **** 
 210:.././crypto/aes-independant.c **** void aes_indep_init(void)
 211:.././crypto/aes-independant.c **** {
  27              		.loc 1 211 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 212:.././crypto/aes-independant.c **** 	mbedtls_aes_init(&ctx);
  32              		.loc 1 212 2 view .LVU1
  33 0000 0148     		ldr	r0, .L2
  34 0002 FFF7FEBF 		b	mbedtls_aes_init
  35              	.LVL0:
  36              	.L3:
  37 0006 00BF     		.align	2
  38              	.L2:
  39 0008 00000000 		.word	ctx
  40              		.cfi_endproc
  41              	.LFE2:
  43              		.section	.text.aes_indep_enc_pretrigger,"ax",%progbits
  44              		.align	1
  45              		.global	aes_indep_enc_pretrigger
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	aes_indep_enc_pretrigger:
  52              	.LVL1:
  53              	.LFB3:
 213:.././crypto/aes-independant.c **** }
 214:.././crypto/aes-independant.c **** 
 215:.././crypto/aes-independant.c **** void aes_indep_enc_pretrigger(uint8_t * pt)
 216:.././crypto/aes-independant.c **** {
  54              		.loc 1 216 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 217:.././crypto/aes-independant.c ****     ;
  59              		.loc 1 217 5 view .LVU3
 218:.././crypto/aes-independant.c **** }
  60              		.loc 1 218 1 is_stmt 0 view .LVU4
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE3:
  65              		.section	.text.aes_indep_enc_posttrigger,"ax",%progbits
  66              		.align	1
  67              		.global	aes_indep_enc_posttrigger
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu softvfp
  73              	aes_indep_enc_posttrigger:
  74              	.LFB9:
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE9:
  83              		.section	.text.aes_indep_key,"ax",%progbits
  84              		.align	1
  85              		.global	aes_indep_key
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	aes_indep_key:
  92              	.LVL2:
  93              	.LFB5:
 219:.././crypto/aes-independant.c **** 
 220:.././crypto/aes-independant.c **** void aes_indep_enc_posttrigger(uint8_t * pt)
 221:.././crypto/aes-independant.c **** {
 222:.././crypto/aes-independant.c ****     ;
 223:.././crypto/aes-independant.c **** }
 224:.././crypto/aes-independant.c **** 
 225:.././crypto/aes-independant.c **** void aes_indep_key(uint8_t * key)
 226:.././crypto/aes-independant.c **** {
  94              		.loc 1 226 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
 227:.././crypto/aes-independant.c **** 	mbedtls_aes_setkey_enc(&ctx, key, 128);
  99              		.loc 1 227 2 view .LVU6
 226:.././crypto/aes-independant.c **** 	mbedtls_aes_setkey_enc(&ctx, key, 128);
 100              		.loc 1 226 1 is_stmt 0 view .LVU7
 101 0000 0146     		mov	r1, r0
 102              		.loc 1 227 2 view .LVU8
 103 0002 8022     		movs	r2, #128
 104 0004 0148     		ldr	r0, .L7
 105              	.LVL3:
 106              		.loc 1 227 2 view .LVU9
 107 0006 FFF7FEBF 		b	mbedtls_aes_setkey_enc
 108              	.LVL4:
 109              	.L8:
 110              		.loc 1 227 2 view .LVU10
 111 000a 00BF     		.align	2
 112              	.L7:
 113 000c 00000000 		.word	ctx
 114              		.cfi_endproc
 115              	.LFE5:
 117              		.section	.text.aes_indep_enc,"ax",%progbits
 118              		.align	1
 119              		.global	aes_indep_enc
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu softvfp
 125              	aes_indep_enc:
 126              	.LVL5:
 127              	.LFB6:
 228:.././crypto/aes-independant.c **** }
 229:.././crypto/aes-independant.c **** 
 230:.././crypto/aes-independant.c **** void aes_indep_enc(uint8_t * pt)
 231:.././crypto/aes-independant.c **** {
 128              		.loc 1 231 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 232:.././crypto/aes-independant.c **** 	mbedtls_aes_crypt_ecb(&ctx, MBEDTLS_AES_ENCRYPT, pt, pt); /* encrypting the data block */
 133              		.loc 1 232 2 view .LVU12
 231:.././crypto/aes-independant.c **** 	mbedtls_aes_crypt_ecb(&ctx, MBEDTLS_AES_ENCRYPT, pt, pt); /* encrypting the data block */
 134              		.loc 1 231 1 is_stmt 0 view .LVU13
 135 0000 0346     		mov	r3, r0
 136              		.loc 1 232 2 view .LVU14
 137 0002 0246     		mov	r2, r0
 138 0004 0121     		movs	r1, #1
 139 0006 0148     		ldr	r0, .L10
 140              	.LVL6:
 141              		.loc 1 232 2 view .LVU15
 142 0008 FFF7FEBF 		b	mbedtls_aes_crypt_ecb
 143              	.LVL7:
 144              	.L11:
 145              		.loc 1 232 2 view .LVU16
 146              		.align	2
 147              	.L10:
 148 000c 00000000 		.word	ctx
 149              		.cfi_endproc
 150              	.LFE6:
 152              		.section	.text.aes_indep_mask,"ax",%progbits
 153              		.align	1
 154              		.global	aes_indep_mask
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu softvfp
 160              	aes_indep_mask:
 161              	.LVL8:
 162              	.LFB7:
 233:.././crypto/aes-independant.c **** }
 234:.././crypto/aes-independant.c **** 
 235:.././crypto/aes-independant.c **** void aes_indep_mask(uint8_t * m, uint8_t len)
 236:.././crypto/aes-independant.c **** {
 163              		.loc 1 236 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 237:.././crypto/aes-independant.c **** }
 168              		.loc 1 237 1 view .LVU18
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE7:
 173              		.comm	ctx,280,4
 174              		.text
 175              	.Letext0:
 176              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 177              		.file 3 ".././crypto/mbedtls//include/mbedtls/aes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes-independant.c
     /tmp/ccz7PPUF.s:16     .text.aes_indep_init:0000000000000000 $t
     /tmp/ccz7PPUF.s:24     .text.aes_indep_init:0000000000000000 aes_indep_init
     /tmp/ccz7PPUF.s:39     .text.aes_indep_init:0000000000000008 $d
                            *COM*:0000000000000118 ctx
     /tmp/ccz7PPUF.s:44     .text.aes_indep_enc_pretrigger:0000000000000000 $t
     /tmp/ccz7PPUF.s:51     .text.aes_indep_enc_pretrigger:0000000000000000 aes_indep_enc_pretrigger
     /tmp/ccz7PPUF.s:66     .text.aes_indep_enc_posttrigger:0000000000000000 $t
     /tmp/ccz7PPUF.s:73     .text.aes_indep_enc_posttrigger:0000000000000000 aes_indep_enc_posttrigger
     /tmp/ccz7PPUF.s:84     .text.aes_indep_key:0000000000000000 $t
     /tmp/ccz7PPUF.s:91     .text.aes_indep_key:0000000000000000 aes_indep_key
     /tmp/ccz7PPUF.s:113    .text.aes_indep_key:000000000000000c $d
     /tmp/ccz7PPUF.s:118    .text.aes_indep_enc:0000000000000000 $t
     /tmp/ccz7PPUF.s:125    .text.aes_indep_enc:0000000000000000 aes_indep_enc
     /tmp/ccz7PPUF.s:148    .text.aes_indep_enc:000000000000000c $d
     /tmp/ccz7PPUF.s:153    .text.aes_indep_mask:0000000000000000 $t
     /tmp/ccz7PPUF.s:160    .text.aes_indep_mask:0000000000000000 aes_indep_mask

UNDEFINED SYMBOLS
mbedtls_aes_init
mbedtls_aes_setkey_enc
mbedtls_aes_crypt_ecb
